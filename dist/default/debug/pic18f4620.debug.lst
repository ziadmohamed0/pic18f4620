

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Oct 24 19:53:56 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 17/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000FE0                     bsr             equ	4064
    70   000FE9                     fsr0            equ	4073
    71   000FEA                     fsr0h           equ	4074
    72   000FE9                     fsr0l           equ	4073
    73   000FE1                     fsr1            equ	4065
    74   000FE2                     fsr1h           equ	4066
    75   000FE1                     fsr1l           equ	4065
    76   000FD9                     fsr2            equ	4057
    77   000FDA                     fsr2h           equ	4058
    78   000FD9                     fsr2l           equ	4057
    79   000FEF                     indf0           equ	4079
    80   000FE7                     indf1           equ	4071
    81   000FDF                     indf2           equ	4063
    82   000FF2                     intcon          equ	4082
    83   000000                     nvmcon          equ	0
    84   000FF9                     pcl             equ	4089
    85   000FFA                     pclath          equ	4090
    86   000FFB                     pclatu          equ	4091
    87   000FEB                     plusw0          equ	4075
    88   000FE3                     plusw1          equ	4067
    89   000FDB                     plusw2          equ	4059
    90   000FED                     postdec0        equ	4077
    91   000FE5                     postdec1        equ	4069
    92   000FDD                     postdec2        equ	4061
    93   000FEE                     postinc0        equ	4078
    94   000FE6                     postinc1        equ	4070
    95   000FDE                     postinc2        equ	4062
    96   000FEC                     preinc0         equ	4076
    97   000FE4                     preinc1         equ	4068
    98   000FDC                     preinc2         equ	4060
    99   000FF3                     prod            equ	4083
   100   000FF4                     prodh           equ	4084
   101   000FF3                     prodl           equ	4083
   102   000FD8                     status          equ	4056
   103   000FF5                     tablat          equ	4085
   104   000FF6                     tblptr          equ	4086
   105   000FF7                     tblptrh         equ	4087
   106   000FF6                     tblptrl         equ	4086
   107   000FF8                     tblptru         equ	4088
   108   000FFD                     tosl            equ	4093
   109   000FE8                     wreg            equ	4072
   110   000F80                     PORTA           equ	3968	;# 
   111   000F81                     PORTB           equ	3969	;# 
   112   000F82                     PORTC           equ	3970	;# 
   113   000F83                     PORTD           equ	3971	;# 
   114   000F84                     PORTE           equ	3972	;# 
   115   000F89                     LATA            equ	3977	;# 
   116   000F8A                     LATB            equ	3978	;# 
   117   000F8B                     LATC            equ	3979	;# 
   118   000F8C                     LATD            equ	3980	;# 
   119   000F8D                     LATE            equ	3981	;# 
   120   000F92                     TRISA           equ	3986	;# 
   121   000F92                     DDRA            equ	3986	;# 
   122   000F93                     TRISB           equ	3987	;# 
   123   000F93                     DDRB            equ	3987	;# 
   124   000F94                     TRISC           equ	3988	;# 
   125   000F94                     DDRC            equ	3988	;# 
   126   000F95                     TRISD           equ	3989	;# 
   127   000F95                     DDRD            equ	3989	;# 
   128   000F96                     TRISE           equ	3990	;# 
   129   000F96                     DDRE            equ	3990	;# 
   130   000F9B                     OSCTUNE         equ	3995	;# 
   131   000F9D                     PIE1            equ	3997	;# 
   132   000F9E                     PIR1            equ	3998	;# 
   133   000F9F                     IPR1            equ	3999	;# 
   134   000FA0                     PIE2            equ	4000	;# 
   135   000FA1                     PIR2            equ	4001	;# 
   136   000FA2                     IPR2            equ	4002	;# 
   137   000FA6                     EECON1          equ	4006	;# 
   138   000FA7                     EECON2          equ	4007	;# 
   139   000FA8                     EEDATA          equ	4008	;# 
   140   000FA9                     EEADR           equ	4009	;# 
   141   000FAA                     EEADRH          equ	4010	;# 
   142   000FAB                     RCSTA           equ	4011	;# 
   143   000FAB                     RCSTA1          equ	4011	;# 
   144   000FAC                     TXSTA           equ	4012	;# 
   145   000FAC                     TXSTA1          equ	4012	;# 
   146   000FAD                     TXREG           equ	4013	;# 
   147   000FAD                     TXREG1          equ	4013	;# 
   148   000FAE                     RCREG           equ	4014	;# 
   149   000FAE                     RCREG1          equ	4014	;# 
   150   000FAF                     SPBRG           equ	4015	;# 
   151   000FAF                     SPBRG1          equ	4015	;# 
   152   000FB0                     SPBRGH          equ	4016	;# 
   153   000FB1                     T3CON           equ	4017	;# 
   154   000FB2                     TMR3            equ	4018	;# 
   155   000FB2                     TMR3L           equ	4018	;# 
   156   000FB3                     TMR3H           equ	4019	;# 
   157   000FB4                     CMCON           equ	4020	;# 
   158   000FB5                     CVRCON          equ	4021	;# 
   159   000FB6                     ECCP1AS         equ	4022	;# 
   160   000FB7                     PWM1CON         equ	4023	;# 
   161   000FB8                     BAUDCON         equ	4024	;# 
   162   000FB8                     BAUDCTL         equ	4024	;# 
   163   000FBA                     CCP2CON         equ	4026	;# 
   164   000FBB                     CCPR2           equ	4027	;# 
   165   000FBB                     CCPR2L          equ	4027	;# 
   166   000FBC                     CCPR2H          equ	4028	;# 
   167   000FBD                     CCP1CON         equ	4029	;# 
   168   000FBE                     CCPR1           equ	4030	;# 
   169   000FBE                     CCPR1L          equ	4030	;# 
   170   000FBF                     CCPR1H          equ	4031	;# 
   171   000FC0                     ADCON2          equ	4032	;# 
   172   000FC1                     ADCON1          equ	4033	;# 
   173   000FC2                     ADCON0          equ	4034	;# 
   174   000FC3                     ADRES           equ	4035	;# 
   175   000FC3                     ADRESL          equ	4035	;# 
   176   000FC4                     ADRESH          equ	4036	;# 
   177   000FC5                     SSPCON2         equ	4037	;# 
   178   000FC6                     SSPCON1         equ	4038	;# 
   179   000FC7                     SSPSTAT         equ	4039	;# 
   180   000FC8                     SSPADD          equ	4040	;# 
   181   000FC9                     SSPBUF          equ	4041	;# 
   182   000FCA                     T2CON           equ	4042	;# 
   183   000FCB                     PR2             equ	4043	;# 
   184   000FCB                     MEMCON          equ	4043	;# 
   185   000FCC                     TMR2            equ	4044	;# 
   186   000FCD                     T1CON           equ	4045	;# 
   187   000FCE                     TMR1            equ	4046	;# 
   188   000FCE                     TMR1L           equ	4046	;# 
   189   000FCF                     TMR1H           equ	4047	;# 
   190   000FD0                     RCON            equ	4048	;# 
   191   000FD1                     WDTCON          equ	4049	;# 
   192   000FD2                     HLVDCON         equ	4050	;# 
   193   000FD2                     LVDCON          equ	4050	;# 
   194   000FD3                     OSCCON          equ	4051	;# 
   195   000FD5                     T0CON           equ	4053	;# 
   196   000FD6                     TMR0            equ	4054	;# 
   197   000FD6                     TMR0L           equ	4054	;# 
   198   000FD7                     TMR0H           equ	4055	;# 
   199   000FD8                     STATUS          equ	4056	;# 
   200   000FD9                     FSR2            equ	4057	;# 
   201   000FD9                     FSR2L           equ	4057	;# 
   202   000FDA                     FSR2H           equ	4058	;# 
   203   000FDB                     PLUSW2          equ	4059	;# 
   204   000FDC                     PREINC2         equ	4060	;# 
   205   000FDD                     POSTDEC2        equ	4061	;# 
   206   000FDE                     POSTINC2        equ	4062	;# 
   207   000FDF                     INDF2           equ	4063	;# 
   208   000FE0                     BSR             equ	4064	;# 
   209   000FE1                     FSR1            equ	4065	;# 
   210   000FE1                     FSR1L           equ	4065	;# 
   211   000FE2                     FSR1H           equ	4066	;# 
   212   000FE3                     PLUSW1          equ	4067	;# 
   213   000FE4                     PREINC1         equ	4068	;# 
   214   000FE5                     POSTDEC1        equ	4069	;# 
   215   000FE6                     POSTINC1        equ	4070	;# 
   216   000FE7                     INDF1           equ	4071	;# 
   217   000FE8                     WREG            equ	4072	;# 
   218   000FE9                     FSR0            equ	4073	;# 
   219   000FE9                     FSR0L           equ	4073	;# 
   220   000FEA                     FSR0H           equ	4074	;# 
   221   000FEB                     PLUSW0          equ	4075	;# 
   222   000FEC                     PREINC0         equ	4076	;# 
   223   000FED                     POSTDEC0        equ	4077	;# 
   224   000FEE                     POSTINC0        equ	4078	;# 
   225   000FEF                     INDF0           equ	4079	;# 
   226   000FF0                     INTCON3         equ	4080	;# 
   227   000FF1                     INTCON2         equ	4081	;# 
   228   000FF2                     INTCON          equ	4082	;# 
   229   000FF3                     PROD            equ	4083	;# 
   230   000FF3                     PRODL           equ	4083	;# 
   231   000FF4                     PRODH           equ	4084	;# 
   232   000FF5                     TABLAT          equ	4085	;# 
   233   000FF6                     TBLPTR          equ	4086	;# 
   234   000FF6                     TBLPTRL         equ	4086	;# 
   235   000FF7                     TBLPTRH         equ	4087	;# 
   236   000FF8                     TBLPTRU         equ	4088	;# 
   237   000FF9                     PCLAT           equ	4089	;# 
   238   000FF9                     PC              equ	4089	;# 
   239   000FF9                     PCL             equ	4089	;# 
   240   000FFA                     PCLATH          equ	4090	;# 
   241   000FFB                     PCLATU          equ	4091	;# 
   242   000FFC                     STKPTR          equ	4092	;# 
   243   000FFD                     TOS             equ	4093	;# 
   244   000FFD                     TOSL            equ	4093	;# 
   245   000FFE                     TOSH            equ	4094	;# 
   246   000FFF                     TOSU            equ	4095	;# 
   247   000F80                     PORTA           equ	3968	;# 
   248   000F81                     PORTB           equ	3969	;# 
   249   000F82                     PORTC           equ	3970	;# 
   250   000F83                     PORTD           equ	3971	;# 
   251   000F84                     PORTE           equ	3972	;# 
   252   000F89                     LATA            equ	3977	;# 
   253   000F8A                     LATB            equ	3978	;# 
   254   000F8B                     LATC            equ	3979	;# 
   255   000F8C                     LATD            equ	3980	;# 
   256   000F8D                     LATE            equ	3981	;# 
   257   000F92                     TRISA           equ	3986	;# 
   258   000F92                     DDRA            equ	3986	;# 
   259   000F93                     TRISB           equ	3987	;# 
   260   000F93                     DDRB            equ	3987	;# 
   261   000F94                     TRISC           equ	3988	;# 
   262   000F94                     DDRC            equ	3988	;# 
   263   000F95                     TRISD           equ	3989	;# 
   264   000F95                     DDRD            equ	3989	;# 
   265   000F96                     TRISE           equ	3990	;# 
   266   000F96                     DDRE            equ	3990	;# 
   267   000F9B                     OSCTUNE         equ	3995	;# 
   268   000F9D                     PIE1            equ	3997	;# 
   269   000F9E                     PIR1            equ	3998	;# 
   270   000F9F                     IPR1            equ	3999	;# 
   271   000FA0                     PIE2            equ	4000	;# 
   272   000FA1                     PIR2            equ	4001	;# 
   273   000FA2                     IPR2            equ	4002	;# 
   274   000FA6                     EECON1          equ	4006	;# 
   275   000FA7                     EECON2          equ	4007	;# 
   276   000FA8                     EEDATA          equ	4008	;# 
   277   000FA9                     EEADR           equ	4009	;# 
   278   000FAA                     EEADRH          equ	4010	;# 
   279   000FAB                     RCSTA           equ	4011	;# 
   280   000FAB                     RCSTA1          equ	4011	;# 
   281   000FAC                     TXSTA           equ	4012	;# 
   282   000FAC                     TXSTA1          equ	4012	;# 
   283   000FAD                     TXREG           equ	4013	;# 
   284   000FAD                     TXREG1          equ	4013	;# 
   285   000FAE                     RCREG           equ	4014	;# 
   286   000FAE                     RCREG1          equ	4014	;# 
   287   000FAF                     SPBRG           equ	4015	;# 
   288   000FAF                     SPBRG1          equ	4015	;# 
   289   000FB0                     SPBRGH          equ	4016	;# 
   290   000FB1                     T3CON           equ	4017	;# 
   291   000FB2                     TMR3            equ	4018	;# 
   292   000FB2                     TMR3L           equ	4018	;# 
   293   000FB3                     TMR3H           equ	4019	;# 
   294   000FB4                     CMCON           equ	4020	;# 
   295   000FB5                     CVRCON          equ	4021	;# 
   296   000FB6                     ECCP1AS         equ	4022	;# 
   297   000FB7                     PWM1CON         equ	4023	;# 
   298   000FB8                     BAUDCON         equ	4024	;# 
   299   000FB8                     BAUDCTL         equ	4024	;# 
   300   000FBA                     CCP2CON         equ	4026	;# 
   301   000FBB                     CCPR2           equ	4027	;# 
   302   000FBB                     CCPR2L          equ	4027	;# 
   303   000FBC                     CCPR2H          equ	4028	;# 
   304   000FBD                     CCP1CON         equ	4029	;# 
   305   000FBE                     CCPR1           equ	4030	;# 
   306   000FBE                     CCPR1L          equ	4030	;# 
   307   000FBF                     CCPR1H          equ	4031	;# 
   308   000FC0                     ADCON2          equ	4032	;# 
   309   000FC1                     ADCON1          equ	4033	;# 
   310   000FC2                     ADCON0          equ	4034	;# 
   311   000FC3                     ADRES           equ	4035	;# 
   312   000FC3                     ADRESL          equ	4035	;# 
   313   000FC4                     ADRESH          equ	4036	;# 
   314   000FC5                     SSPCON2         equ	4037	;# 
   315   000FC6                     SSPCON1         equ	4038	;# 
   316   000FC7                     SSPSTAT         equ	4039	;# 
   317   000FC8                     SSPADD          equ	4040	;# 
   318   000FC9                     SSPBUF          equ	4041	;# 
   319   000FCA                     T2CON           equ	4042	;# 
   320   000FCB                     PR2             equ	4043	;# 
   321   000FCB                     MEMCON          equ	4043	;# 
   322   000FCC                     TMR2            equ	4044	;# 
   323   000FCD                     T1CON           equ	4045	;# 
   324   000FCE                     TMR1            equ	4046	;# 
   325   000FCE                     TMR1L           equ	4046	;# 
   326   000FCF                     TMR1H           equ	4047	;# 
   327   000FD0                     RCON            equ	4048	;# 
   328   000FD1                     WDTCON          equ	4049	;# 
   329   000FD2                     HLVDCON         equ	4050	;# 
   330   000FD2                     LVDCON          equ	4050	;# 
   331   000FD3                     OSCCON          equ	4051	;# 
   332   000FD5                     T0CON           equ	4053	;# 
   333   000FD6                     TMR0            equ	4054	;# 
   334   000FD6                     TMR0L           equ	4054	;# 
   335   000FD7                     TMR0H           equ	4055	;# 
   336   000FD8                     STATUS          equ	4056	;# 
   337   000FD9                     FSR2            equ	4057	;# 
   338   000FD9                     FSR2L           equ	4057	;# 
   339   000FDA                     FSR2H           equ	4058	;# 
   340   000FDB                     PLUSW2          equ	4059	;# 
   341   000FDC                     PREINC2         equ	4060	;# 
   342   000FDD                     POSTDEC2        equ	4061	;# 
   343   000FDE                     POSTINC2        equ	4062	;# 
   344   000FDF                     INDF2           equ	4063	;# 
   345   000FE0                     BSR             equ	4064	;# 
   346   000FE1                     FSR1            equ	4065	;# 
   347   000FE1                     FSR1L           equ	4065	;# 
   348   000FE2                     FSR1H           equ	4066	;# 
   349   000FE3                     PLUSW1          equ	4067	;# 
   350   000FE4                     PREINC1         equ	4068	;# 
   351   000FE5                     POSTDEC1        equ	4069	;# 
   352   000FE6                     POSTINC1        equ	4070	;# 
   353   000FE7                     INDF1           equ	4071	;# 
   354   000FE8                     WREG            equ	4072	;# 
   355   000FE9                     FSR0            equ	4073	;# 
   356   000FE9                     FSR0L           equ	4073	;# 
   357   000FEA                     FSR0H           equ	4074	;# 
   358   000FEB                     PLUSW0          equ	4075	;# 
   359   000FEC                     PREINC0         equ	4076	;# 
   360   000FED                     POSTDEC0        equ	4077	;# 
   361   000FEE                     POSTINC0        equ	4078	;# 
   362   000FEF                     INDF0           equ	4079	;# 
   363   000FF0                     INTCON3         equ	4080	;# 
   364   000FF1                     INTCON2         equ	4081	;# 
   365   000FF2                     INTCON          equ	4082	;# 
   366   000FF3                     PROD            equ	4083	;# 
   367   000FF3                     PRODL           equ	4083	;# 
   368   000FF4                     PRODH           equ	4084	;# 
   369   000FF5                     TABLAT          equ	4085	;# 
   370   000FF6                     TBLPTR          equ	4086	;# 
   371   000FF6                     TBLPTRL         equ	4086	;# 
   372   000FF7                     TBLPTRH         equ	4087	;# 
   373   000FF8                     TBLPTRU         equ	4088	;# 
   374   000FF9                     PCLAT           equ	4089	;# 
   375   000FF9                     PC              equ	4089	;# 
   376   000FF9                     PCL             equ	4089	;# 
   377   000FFA                     PCLATH          equ	4090	;# 
   378   000FFB                     PCLATU          equ	4091	;# 
   379   000FFC                     STKPTR          equ	4092	;# 
   380   000FFD                     TOS             equ	4093	;# 
   381   000FFD                     TOSL            equ	4093	;# 
   382   000FFE                     TOSH            equ	4094	;# 
   383   000FFF                     TOSU            equ	4095	;# 
   384   000F80                     PORTA           equ	3968	;# 
   385   000F81                     PORTB           equ	3969	;# 
   386   000F82                     PORTC           equ	3970	;# 
   387   000F83                     PORTD           equ	3971	;# 
   388   000F84                     PORTE           equ	3972	;# 
   389   000F89                     LATA            equ	3977	;# 
   390   000F8A                     LATB            equ	3978	;# 
   391   000F8B                     LATC            equ	3979	;# 
   392   000F8C                     LATD            equ	3980	;# 
   393   000F8D                     LATE            equ	3981	;# 
   394   000F92                     TRISA           equ	3986	;# 
   395   000F92                     DDRA            equ	3986	;# 
   396   000F93                     TRISB           equ	3987	;# 
   397   000F93                     DDRB            equ	3987	;# 
   398   000F94                     TRISC           equ	3988	;# 
   399   000F94                     DDRC            equ	3988	;# 
   400   000F95                     TRISD           equ	3989	;# 
   401   000F95                     DDRD            equ	3989	;# 
   402   000F96                     TRISE           equ	3990	;# 
   403   000F96                     DDRE            equ	3990	;# 
   404   000F9B                     OSCTUNE         equ	3995	;# 
   405   000F9D                     PIE1            equ	3997	;# 
   406   000F9E                     PIR1            equ	3998	;# 
   407   000F9F                     IPR1            equ	3999	;# 
   408   000FA0                     PIE2            equ	4000	;# 
   409   000FA1                     PIR2            equ	4001	;# 
   410   000FA2                     IPR2            equ	4002	;# 
   411   000FA6                     EECON1          equ	4006	;# 
   412   000FA7                     EECON2          equ	4007	;# 
   413   000FA8                     EEDATA          equ	4008	;# 
   414   000FA9                     EEADR           equ	4009	;# 
   415   000FAA                     EEADRH          equ	4010	;# 
   416   000FAB                     RCSTA           equ	4011	;# 
   417   000FAB                     RCSTA1          equ	4011	;# 
   418   000FAC                     TXSTA           equ	4012	;# 
   419   000FAC                     TXSTA1          equ	4012	;# 
   420   000FAD                     TXREG           equ	4013	;# 
   421   000FAD                     TXREG1          equ	4013	;# 
   422   000FAE                     RCREG           equ	4014	;# 
   423   000FAE                     RCREG1          equ	4014	;# 
   424   000FAF                     SPBRG           equ	4015	;# 
   425   000FAF                     SPBRG1          equ	4015	;# 
   426   000FB0                     SPBRGH          equ	4016	;# 
   427   000FB1                     T3CON           equ	4017	;# 
   428   000FB2                     TMR3            equ	4018	;# 
   429   000FB2                     TMR3L           equ	4018	;# 
   430   000FB3                     TMR3H           equ	4019	;# 
   431   000FB4                     CMCON           equ	4020	;# 
   432   000FB5                     CVRCON          equ	4021	;# 
   433   000FB6                     ECCP1AS         equ	4022	;# 
   434   000FB7                     PWM1CON         equ	4023	;# 
   435   000FB8                     BAUDCON         equ	4024	;# 
   436   000FB8                     BAUDCTL         equ	4024	;# 
   437   000FBA                     CCP2CON         equ	4026	;# 
   438   000FBB                     CCPR2           equ	4027	;# 
   439   000FBB                     CCPR2L          equ	4027	;# 
   440   000FBC                     CCPR2H          equ	4028	;# 
   441   000FBD                     CCP1CON         equ	4029	;# 
   442   000FBE                     CCPR1           equ	4030	;# 
   443   000FBE                     CCPR1L          equ	4030	;# 
   444   000FBF                     CCPR1H          equ	4031	;# 
   445   000FC0                     ADCON2          equ	4032	;# 
   446   000FC1                     ADCON1          equ	4033	;# 
   447   000FC2                     ADCON0          equ	4034	;# 
   448   000FC3                     ADRES           equ	4035	;# 
   449   000FC3                     ADRESL          equ	4035	;# 
   450   000FC4                     ADRESH          equ	4036	;# 
   451   000FC5                     SSPCON2         equ	4037	;# 
   452   000FC6                     SSPCON1         equ	4038	;# 
   453   000FC7                     SSPSTAT         equ	4039	;# 
   454   000FC8                     SSPADD          equ	4040	;# 
   455   000FC9                     SSPBUF          equ	4041	;# 
   456   000FCA                     T2CON           equ	4042	;# 
   457   000FCB                     PR2             equ	4043	;# 
   458   000FCB                     MEMCON          equ	4043	;# 
   459   000FCC                     TMR2            equ	4044	;# 
   460   000FCD                     T1CON           equ	4045	;# 
   461   000FCE                     TMR1            equ	4046	;# 
   462   000FCE                     TMR1L           equ	4046	;# 
   463   000FCF                     TMR1H           equ	4047	;# 
   464   000FD0                     RCON            equ	4048	;# 
   465   000FD1                     WDTCON          equ	4049	;# 
   466   000FD2                     HLVDCON         equ	4050	;# 
   467   000FD2                     LVDCON          equ	4050	;# 
   468   000FD3                     OSCCON          equ	4051	;# 
   469   000FD5                     T0CON           equ	4053	;# 
   470   000FD6                     TMR0            equ	4054	;# 
   471   000FD6                     TMR0L           equ	4054	;# 
   472   000FD7                     TMR0H           equ	4055	;# 
   473   000FD8                     STATUS          equ	4056	;# 
   474   000FD9                     FSR2            equ	4057	;# 
   475   000FD9                     FSR2L           equ	4057	;# 
   476   000FDA                     FSR2H           equ	4058	;# 
   477   000FDB                     PLUSW2          equ	4059	;# 
   478   000FDC                     PREINC2         equ	4060	;# 
   479   000FDD                     POSTDEC2        equ	4061	;# 
   480   000FDE                     POSTINC2        equ	4062	;# 
   481   000FDF                     INDF2           equ	4063	;# 
   482   000FE0                     BSR             equ	4064	;# 
   483   000FE1                     FSR1            equ	4065	;# 
   484   000FE1                     FSR1L           equ	4065	;# 
   485   000FE2                     FSR1H           equ	4066	;# 
   486   000FE3                     PLUSW1          equ	4067	;# 
   487   000FE4                     PREINC1         equ	4068	;# 
   488   000FE5                     POSTDEC1        equ	4069	;# 
   489   000FE6                     POSTINC1        equ	4070	;# 
   490   000FE7                     INDF1           equ	4071	;# 
   491   000FE8                     WREG            equ	4072	;# 
   492   000FE9                     FSR0            equ	4073	;# 
   493   000FE9                     FSR0L           equ	4073	;# 
   494   000FEA                     FSR0H           equ	4074	;# 
   495   000FEB                     PLUSW0          equ	4075	;# 
   496   000FEC                     PREINC0         equ	4076	;# 
   497   000FED                     POSTDEC0        equ	4077	;# 
   498   000FEE                     POSTINC0        equ	4078	;# 
   499   000FEF                     INDF0           equ	4079	;# 
   500   000FF0                     INTCON3         equ	4080	;# 
   501   000FF1                     INTCON2         equ	4081	;# 
   502   000FF2                     INTCON          equ	4082	;# 
   503   000FF3                     PROD            equ	4083	;# 
   504   000FF3                     PRODL           equ	4083	;# 
   505   000FF4                     PRODH           equ	4084	;# 
   506   000FF5                     TABLAT          equ	4085	;# 
   507   000FF6                     TBLPTR          equ	4086	;# 
   508   000FF6                     TBLPTRL         equ	4086	;# 
   509   000FF7                     TBLPTRH         equ	4087	;# 
   510   000FF8                     TBLPTRU         equ	4088	;# 
   511   000FF9                     PCLAT           equ	4089	;# 
   512   000FF9                     PC              equ	4089	;# 
   513   000FF9                     PCL             equ	4089	;# 
   514   000FFA                     PCLATH          equ	4090	;# 
   515   000FFB                     PCLATU          equ	4091	;# 
   516   000FFC                     STKPTR          equ	4092	;# 
   517   000FFD                     TOS             equ	4093	;# 
   518   000FFD                     TOSL            equ	4093	;# 
   519   000FFE                     TOSH            equ	4094	;# 
   520   000FFF                     TOSU            equ	4095	;# 
   521   000F80                     PORTA           equ	3968	;# 
   522   000F81                     PORTB           equ	3969	;# 
   523   000F82                     PORTC           equ	3970	;# 
   524   000F83                     PORTD           equ	3971	;# 
   525   000F84                     PORTE           equ	3972	;# 
   526   000F89                     LATA            equ	3977	;# 
   527   000F8A                     LATB            equ	3978	;# 
   528   000F8B                     LATC            equ	3979	;# 
   529   000F8C                     LATD            equ	3980	;# 
   530   000F8D                     LATE            equ	3981	;# 
   531   000F92                     TRISA           equ	3986	;# 
   532   000F92                     DDRA            equ	3986	;# 
   533   000F93                     TRISB           equ	3987	;# 
   534   000F93                     DDRB            equ	3987	;# 
   535   000F94                     TRISC           equ	3988	;# 
   536   000F94                     DDRC            equ	3988	;# 
   537   000F95                     TRISD           equ	3989	;# 
   538   000F95                     DDRD            equ	3989	;# 
   539   000F96                     TRISE           equ	3990	;# 
   540   000F96                     DDRE            equ	3990	;# 
   541   000F9B                     OSCTUNE         equ	3995	;# 
   542   000F9D                     PIE1            equ	3997	;# 
   543   000F9E                     PIR1            equ	3998	;# 
   544   000F9F                     IPR1            equ	3999	;# 
   545   000FA0                     PIE2            equ	4000	;# 
   546   000FA1                     PIR2            equ	4001	;# 
   547   000FA2                     IPR2            equ	4002	;# 
   548   000FA6                     EECON1          equ	4006	;# 
   549   000FA7                     EECON2          equ	4007	;# 
   550   000FA8                     EEDATA          equ	4008	;# 
   551   000FA9                     EEADR           equ	4009	;# 
   552   000FAA                     EEADRH          equ	4010	;# 
   553   000FAB                     RCSTA           equ	4011	;# 
   554   000FAB                     RCSTA1          equ	4011	;# 
   555   000FAC                     TXSTA           equ	4012	;# 
   556   000FAC                     TXSTA1          equ	4012	;# 
   557   000FAD                     TXREG           equ	4013	;# 
   558   000FAD                     TXREG1          equ	4013	;# 
   559   000FAE                     RCREG           equ	4014	;# 
   560   000FAE                     RCREG1          equ	4014	;# 
   561   000FAF                     SPBRG           equ	4015	;# 
   562   000FAF                     SPBRG1          equ	4015	;# 
   563   000FB0                     SPBRGH          equ	4016	;# 
   564   000FB1                     T3CON           equ	4017	;# 
   565   000FB2                     TMR3            equ	4018	;# 
   566   000FB2                     TMR3L           equ	4018	;# 
   567   000FB3                     TMR3H           equ	4019	;# 
   568   000FB4                     CMCON           equ	4020	;# 
   569   000FB5                     CVRCON          equ	4021	;# 
   570   000FB6                     ECCP1AS         equ	4022	;# 
   571   000FB7                     PWM1CON         equ	4023	;# 
   572   000FB8                     BAUDCON         equ	4024	;# 
   573   000FB8                     BAUDCTL         equ	4024	;# 
   574   000FBA                     CCP2CON         equ	4026	;# 
   575   000FBB                     CCPR2           equ	4027	;# 
   576   000FBB                     CCPR2L          equ	4027	;# 
   577   000FBC                     CCPR2H          equ	4028	;# 
   578   000FBD                     CCP1CON         equ	4029	;# 
   579   000FBE                     CCPR1           equ	4030	;# 
   580   000FBE                     CCPR1L          equ	4030	;# 
   581   000FBF                     CCPR1H          equ	4031	;# 
   582   000FC0                     ADCON2          equ	4032	;# 
   583   000FC1                     ADCON1          equ	4033	;# 
   584   000FC2                     ADCON0          equ	4034	;# 
   585   000FC3                     ADRES           equ	4035	;# 
   586   000FC3                     ADRESL          equ	4035	;# 
   587   000FC4                     ADRESH          equ	4036	;# 
   588   000FC5                     SSPCON2         equ	4037	;# 
   589   000FC6                     SSPCON1         equ	4038	;# 
   590   000FC7                     SSPSTAT         equ	4039	;# 
   591   000FC8                     SSPADD          equ	4040	;# 
   592   000FC9                     SSPBUF          equ	4041	;# 
   593   000FCA                     T2CON           equ	4042	;# 
   594   000FCB                     PR2             equ	4043	;# 
   595   000FCB                     MEMCON          equ	4043	;# 
   596   000FCC                     TMR2            equ	4044	;# 
   597   000FCD                     T1CON           equ	4045	;# 
   598   000FCE                     TMR1            equ	4046	;# 
   599   000FCE                     TMR1L           equ	4046	;# 
   600   000FCF                     TMR1H           equ	4047	;# 
   601   000FD0                     RCON            equ	4048	;# 
   602   000FD1                     WDTCON          equ	4049	;# 
   603   000FD2                     HLVDCON         equ	4050	;# 
   604   000FD2                     LVDCON          equ	4050	;# 
   605   000FD3                     OSCCON          equ	4051	;# 
   606   000FD5                     T0CON           equ	4053	;# 
   607   000FD6                     TMR0            equ	4054	;# 
   608   000FD6                     TMR0L           equ	4054	;# 
   609   000FD7                     TMR0H           equ	4055	;# 
   610   000FD8                     STATUS          equ	4056	;# 
   611   000FD9                     FSR2            equ	4057	;# 
   612   000FD9                     FSR2L           equ	4057	;# 
   613   000FDA                     FSR2H           equ	4058	;# 
   614   000FDB                     PLUSW2          equ	4059	;# 
   615   000FDC                     PREINC2         equ	4060	;# 
   616   000FDD                     POSTDEC2        equ	4061	;# 
   617   000FDE                     POSTINC2        equ	4062	;# 
   618   000FDF                     INDF2           equ	4063	;# 
   619   000FE0                     BSR             equ	4064	;# 
   620   000FE1                     FSR1            equ	4065	;# 
   621   000FE1                     FSR1L           equ	4065	;# 
   622   000FE2                     FSR1H           equ	4066	;# 
   623   000FE3                     PLUSW1          equ	4067	;# 
   624   000FE4                     PREINC1         equ	4068	;# 
   625   000FE5                     POSTDEC1        equ	4069	;# 
   626   000FE6                     POSTINC1        equ	4070	;# 
   627   000FE7                     INDF1           equ	4071	;# 
   628   000FE8                     WREG            equ	4072	;# 
   629   000FE9                     FSR0            equ	4073	;# 
   630   000FE9                     FSR0L           equ	4073	;# 
   631   000FEA                     FSR0H           equ	4074	;# 
   632   000FEB                     PLUSW0          equ	4075	;# 
   633   000FEC                     PREINC0         equ	4076	;# 
   634   000FED                     POSTDEC0        equ	4077	;# 
   635   000FEE                     POSTINC0        equ	4078	;# 
   636   000FEF                     INDF0           equ	4079	;# 
   637   000FF0                     INTCON3         equ	4080	;# 
   638   000FF1                     INTCON2         equ	4081	;# 
   639   000FF2                     INTCON          equ	4082	;# 
   640   000FF3                     PROD            equ	4083	;# 
   641   000FF3                     PRODL           equ	4083	;# 
   642   000FF4                     PRODH           equ	4084	;# 
   643   000FF5                     TABLAT          equ	4085	;# 
   644   000FF6                     TBLPTR          equ	4086	;# 
   645   000FF6                     TBLPTRL         equ	4086	;# 
   646   000FF7                     TBLPTRH         equ	4087	;# 
   647   000FF8                     TBLPTRU         equ	4088	;# 
   648   000FF9                     PCLAT           equ	4089	;# 
   649   000FF9                     PC              equ	4089	;# 
   650   000FF9                     PCL             equ	4089	;# 
   651   000FFA                     PCLATH          equ	4090	;# 
   652   000FFB                     PCLATU          equ	4091	;# 
   653   000FFC                     STKPTR          equ	4092	;# 
   654   000FFD                     TOS             equ	4093	;# 
   655   000FFD                     TOSL            equ	4093	;# 
   656   000FFE                     TOSH            equ	4094	;# 
   657   000FFF                     TOSU            equ	4095	;# 
   658   000F80                     PORTA           equ	3968	;# 
   659   000F81                     PORTB           equ	3969	;# 
   660   000F82                     PORTC           equ	3970	;# 
   661   000F83                     PORTD           equ	3971	;# 
   662   000F84                     PORTE           equ	3972	;# 
   663   000F89                     LATA            equ	3977	;# 
   664   000F8A                     LATB            equ	3978	;# 
   665   000F8B                     LATC            equ	3979	;# 
   666   000F8C                     LATD            equ	3980	;# 
   667   000F8D                     LATE            equ	3981	;# 
   668   000F92                     TRISA           equ	3986	;# 
   669   000F92                     DDRA            equ	3986	;# 
   670   000F93                     TRISB           equ	3987	;# 
   671   000F93                     DDRB            equ	3987	;# 
   672   000F94                     TRISC           equ	3988	;# 
   673   000F94                     DDRC            equ	3988	;# 
   674   000F95                     TRISD           equ	3989	;# 
   675   000F95                     DDRD            equ	3989	;# 
   676   000F96                     TRISE           equ	3990	;# 
   677   000F96                     DDRE            equ	3990	;# 
   678   000F9B                     OSCTUNE         equ	3995	;# 
   679   000F9D                     PIE1            equ	3997	;# 
   680   000F9E                     PIR1            equ	3998	;# 
   681   000F9F                     IPR1            equ	3999	;# 
   682   000FA0                     PIE2            equ	4000	;# 
   683   000FA1                     PIR2            equ	4001	;# 
   684   000FA2                     IPR2            equ	4002	;# 
   685   000FA6                     EECON1          equ	4006	;# 
   686   000FA7                     EECON2          equ	4007	;# 
   687   000FA8                     EEDATA          equ	4008	;# 
   688   000FA9                     EEADR           equ	4009	;# 
   689   000FAA                     EEADRH          equ	4010	;# 
   690   000FAB                     RCSTA           equ	4011	;# 
   691   000FAB                     RCSTA1          equ	4011	;# 
   692   000FAC                     TXSTA           equ	4012	;# 
   693   000FAC                     TXSTA1          equ	4012	;# 
   694   000FAD                     TXREG           equ	4013	;# 
   695   000FAD                     TXREG1          equ	4013	;# 
   696   000FAE                     RCREG           equ	4014	;# 
   697   000FAE                     RCREG1          equ	4014	;# 
   698   000FAF                     SPBRG           equ	4015	;# 
   699   000FAF                     SPBRG1          equ	4015	;# 
   700   000FB0                     SPBRGH          equ	4016	;# 
   701   000FB1                     T3CON           equ	4017	;# 
   702   000FB2                     TMR3            equ	4018	;# 
   703   000FB2                     TMR3L           equ	4018	;# 
   704   000FB3                     TMR3H           equ	4019	;# 
   705   000FB4                     CMCON           equ	4020	;# 
   706   000FB5                     CVRCON          equ	4021	;# 
   707   000FB6                     ECCP1AS         equ	4022	;# 
   708   000FB7                     PWM1CON         equ	4023	;# 
   709   000FB8                     BAUDCON         equ	4024	;# 
   710   000FB8                     BAUDCTL         equ	4024	;# 
   711   000FBA                     CCP2CON         equ	4026	;# 
   712   000FBB                     CCPR2           equ	4027	;# 
   713   000FBB                     CCPR2L          equ	4027	;# 
   714   000FBC                     CCPR2H          equ	4028	;# 
   715   000FBD                     CCP1CON         equ	4029	;# 
   716   000FBE                     CCPR1           equ	4030	;# 
   717   000FBE                     CCPR1L          equ	4030	;# 
   718   000FBF                     CCPR1H          equ	4031	;# 
   719   000FC0                     ADCON2          equ	4032	;# 
   720   000FC1                     ADCON1          equ	4033	;# 
   721   000FC2                     ADCON0          equ	4034	;# 
   722   000FC3                     ADRES           equ	4035	;# 
   723   000FC3                     ADRESL          equ	4035	;# 
   724   000FC4                     ADRESH          equ	4036	;# 
   725   000FC5                     SSPCON2         equ	4037	;# 
   726   000FC6                     SSPCON1         equ	4038	;# 
   727   000FC7                     SSPSTAT         equ	4039	;# 
   728   000FC8                     SSPADD          equ	4040	;# 
   729   000FC9                     SSPBUF          equ	4041	;# 
   730   000FCA                     T2CON           equ	4042	;# 
   731   000FCB                     PR2             equ	4043	;# 
   732   000FCB                     MEMCON          equ	4043	;# 
   733   000FCC                     TMR2            equ	4044	;# 
   734   000FCD                     T1CON           equ	4045	;# 
   735   000FCE                     TMR1            equ	4046	;# 
   736   000FCE                     TMR1L           equ	4046	;# 
   737   000FCF                     TMR1H           equ	4047	;# 
   738   000FD0                     RCON            equ	4048	;# 
   739   000FD1                     WDTCON          equ	4049	;# 
   740   000FD2                     HLVDCON         equ	4050	;# 
   741   000FD2                     LVDCON          equ	4050	;# 
   742   000FD3                     OSCCON          equ	4051	;# 
   743   000FD5                     T0CON           equ	4053	;# 
   744   000FD6                     TMR0            equ	4054	;# 
   745   000FD6                     TMR0L           equ	4054	;# 
   746   000FD7                     TMR0H           equ	4055	;# 
   747   000FD8                     STATUS          equ	4056	;# 
   748   000FD9                     FSR2            equ	4057	;# 
   749   000FD9                     FSR2L           equ	4057	;# 
   750   000FDA                     FSR2H           equ	4058	;# 
   751   000FDB                     PLUSW2          equ	4059	;# 
   752   000FDC                     PREINC2         equ	4060	;# 
   753   000FDD                     POSTDEC2        equ	4061	;# 
   754   000FDE                     POSTINC2        equ	4062	;# 
   755   000FDF                     INDF2           equ	4063	;# 
   756   000FE0                     BSR             equ	4064	;# 
   757   000FE1                     FSR1            equ	4065	;# 
   758   000FE1                     FSR1L           equ	4065	;# 
   759   000FE2                     FSR1H           equ	4066	;# 
   760   000FE3                     PLUSW1          equ	4067	;# 
   761   000FE4                     PREINC1         equ	4068	;# 
   762   000FE5                     POSTDEC1        equ	4069	;# 
   763   000FE6                     POSTINC1        equ	4070	;# 
   764   000FE7                     INDF1           equ	4071	;# 
   765   000FE8                     WREG            equ	4072	;# 
   766   000FE9                     FSR0            equ	4073	;# 
   767   000FE9                     FSR0L           equ	4073	;# 
   768   000FEA                     FSR0H           equ	4074	;# 
   769   000FEB                     PLUSW0          equ	4075	;# 
   770   000FEC                     PREINC0         equ	4076	;# 
   771   000FED                     POSTDEC0        equ	4077	;# 
   772   000FEE                     POSTINC0        equ	4078	;# 
   773   000FEF                     INDF0           equ	4079	;# 
   774   000FF0                     INTCON3         equ	4080	;# 
   775   000FF1                     INTCON2         equ	4081	;# 
   776   000FF2                     INTCON          equ	4082	;# 
   777   000FF3                     PROD            equ	4083	;# 
   778   000FF3                     PRODL           equ	4083	;# 
   779   000FF4                     PRODH           equ	4084	;# 
   780   000FF5                     TABLAT          equ	4085	;# 
   781   000FF6                     TBLPTR          equ	4086	;# 
   782   000FF6                     TBLPTRL         equ	4086	;# 
   783   000FF7                     TBLPTRH         equ	4087	;# 
   784   000FF8                     TBLPTRU         equ	4088	;# 
   785   000FF9                     PCLAT           equ	4089	;# 
   786   000FF9                     PC              equ	4089	;# 
   787   000FF9                     PCL             equ	4089	;# 
   788   000FFA                     PCLATH          equ	4090	;# 
   789   000FFB                     PCLATU          equ	4091	;# 
   790   000FFC                     STKPTR          equ	4092	;# 
   791   000FFD                     TOS             equ	4093	;# 
   792   000FFD                     TOSL            equ	4093	;# 
   793   000FFE                     TOSH            equ	4094	;# 
   794   000FFF                     TOSU            equ	4095	;# 
   795   000F80                     PORTA           equ	3968	;# 
   796   000F81                     PORTB           equ	3969	;# 
   797   000F82                     PORTC           equ	3970	;# 
   798   000F83                     PORTD           equ	3971	;# 
   799   000F84                     PORTE           equ	3972	;# 
   800   000F89                     LATA            equ	3977	;# 
   801   000F8A                     LATB            equ	3978	;# 
   802   000F8B                     LATC            equ	3979	;# 
   803   000F8C                     LATD            equ	3980	;# 
   804   000F8D                     LATE            equ	3981	;# 
   805   000F92                     TRISA           equ	3986	;# 
   806   000F92                     DDRA            equ	3986	;# 
   807   000F93                     TRISB           equ	3987	;# 
   808   000F93                     DDRB            equ	3987	;# 
   809   000F94                     TRISC           equ	3988	;# 
   810   000F94                     DDRC            equ	3988	;# 
   811   000F95                     TRISD           equ	3989	;# 
   812   000F95                     DDRD            equ	3989	;# 
   813   000F96                     TRISE           equ	3990	;# 
   814   000F96                     DDRE            equ	3990	;# 
   815   000F9B                     OSCTUNE         equ	3995	;# 
   816   000F9D                     PIE1            equ	3997	;# 
   817   000F9E                     PIR1            equ	3998	;# 
   818   000F9F                     IPR1            equ	3999	;# 
   819   000FA0                     PIE2            equ	4000	;# 
   820   000FA1                     PIR2            equ	4001	;# 
   821   000FA2                     IPR2            equ	4002	;# 
   822   000FA6                     EECON1          equ	4006	;# 
   823   000FA7                     EECON2          equ	4007	;# 
   824   000FA8                     EEDATA          equ	4008	;# 
   825   000FA9                     EEADR           equ	4009	;# 
   826   000FAA                     EEADRH          equ	4010	;# 
   827   000FAB                     RCSTA           equ	4011	;# 
   828   000FAB                     RCSTA1          equ	4011	;# 
   829   000FAC                     TXSTA           equ	4012	;# 
   830   000FAC                     TXSTA1          equ	4012	;# 
   831   000FAD                     TXREG           equ	4013	;# 
   832   000FAD                     TXREG1          equ	4013	;# 
   833   000FAE                     RCREG           equ	4014	;# 
   834   000FAE                     RCREG1          equ	4014	;# 
   835   000FAF                     SPBRG           equ	4015	;# 
   836   000FAF                     SPBRG1          equ	4015	;# 
   837   000FB0                     SPBRGH          equ	4016	;# 
   838   000FB1                     T3CON           equ	4017	;# 
   839   000FB2                     TMR3            equ	4018	;# 
   840   000FB2                     TMR3L           equ	4018	;# 
   841   000FB3                     TMR3H           equ	4019	;# 
   842   000FB4                     CMCON           equ	4020	;# 
   843   000FB5                     CVRCON          equ	4021	;# 
   844   000FB6                     ECCP1AS         equ	4022	;# 
   845   000FB7                     PWM1CON         equ	4023	;# 
   846   000FB8                     BAUDCON         equ	4024	;# 
   847   000FB8                     BAUDCTL         equ	4024	;# 
   848   000FBA                     CCP2CON         equ	4026	;# 
   849   000FBB                     CCPR2           equ	4027	;# 
   850   000FBB                     CCPR2L          equ	4027	;# 
   851   000FBC                     CCPR2H          equ	4028	;# 
   852   000FBD                     CCP1CON         equ	4029	;# 
   853   000FBE                     CCPR1           equ	4030	;# 
   854   000FBE                     CCPR1L          equ	4030	;# 
   855   000FBF                     CCPR1H          equ	4031	;# 
   856   000FC0                     ADCON2          equ	4032	;# 
   857   000FC1                     ADCON1          equ	4033	;# 
   858   000FC2                     ADCON0          equ	4034	;# 
   859   000FC3                     ADRES           equ	4035	;# 
   860   000FC3                     ADRESL          equ	4035	;# 
   861   000FC4                     ADRESH          equ	4036	;# 
   862   000FC5                     SSPCON2         equ	4037	;# 
   863   000FC6                     SSPCON1         equ	4038	;# 
   864   000FC7                     SSPSTAT         equ	4039	;# 
   865   000FC8                     SSPADD          equ	4040	;# 
   866   000FC9                     SSPBUF          equ	4041	;# 
   867   000FCA                     T2CON           equ	4042	;# 
   868   000FCB                     PR2             equ	4043	;# 
   869   000FCB                     MEMCON          equ	4043	;# 
   870   000FCC                     TMR2            equ	4044	;# 
   871   000FCD                     T1CON           equ	4045	;# 
   872   000FCE                     TMR1            equ	4046	;# 
   873   000FCE                     TMR1L           equ	4046	;# 
   874   000FCF                     TMR1H           equ	4047	;# 
   875   000FD0                     RCON            equ	4048	;# 
   876   000FD1                     WDTCON          equ	4049	;# 
   877   000FD2                     HLVDCON         equ	4050	;# 
   878   000FD2                     LVDCON          equ	4050	;# 
   879   000FD3                     OSCCON          equ	4051	;# 
   880   000FD5                     T0CON           equ	4053	;# 
   881   000FD6                     TMR0            equ	4054	;# 
   882   000FD6                     TMR0L           equ	4054	;# 
   883   000FD7                     TMR0H           equ	4055	;# 
   884   000FD8                     STATUS          equ	4056	;# 
   885   000FD9                     FSR2            equ	4057	;# 
   886   000FD9                     FSR2L           equ	4057	;# 
   887   000FDA                     FSR2H           equ	4058	;# 
   888   000FDB                     PLUSW2          equ	4059	;# 
   889   000FDC                     PREINC2         equ	4060	;# 
   890   000FDD                     POSTDEC2        equ	4061	;# 
   891   000FDE                     POSTINC2        equ	4062	;# 
   892   000FDF                     INDF2           equ	4063	;# 
   893   000FE0                     BSR             equ	4064	;# 
   894   000FE1                     FSR1            equ	4065	;# 
   895   000FE1                     FSR1L           equ	4065	;# 
   896   000FE2                     FSR1H           equ	4066	;# 
   897   000FE3                     PLUSW1          equ	4067	;# 
   898   000FE4                     PREINC1         equ	4068	;# 
   899   000FE5                     POSTDEC1        equ	4069	;# 
   900   000FE6                     POSTINC1        equ	4070	;# 
   901   000FE7                     INDF1           equ	4071	;# 
   902   000FE8                     WREG            equ	4072	;# 
   903   000FE9                     FSR0            equ	4073	;# 
   904   000FE9                     FSR0L           equ	4073	;# 
   905   000FEA                     FSR0H           equ	4074	;# 
   906   000FEB                     PLUSW0          equ	4075	;# 
   907   000FEC                     PREINC0         equ	4076	;# 
   908   000FED                     POSTDEC0        equ	4077	;# 
   909   000FEE                     POSTINC0        equ	4078	;# 
   910   000FEF                     INDF0           equ	4079	;# 
   911   000FF0                     INTCON3         equ	4080	;# 
   912   000FF1                     INTCON2         equ	4081	;# 
   913   000FF2                     INTCON          equ	4082	;# 
   914   000FF3                     PROD            equ	4083	;# 
   915   000FF3                     PRODL           equ	4083	;# 
   916   000FF4                     PRODH           equ	4084	;# 
   917   000FF5                     TABLAT          equ	4085	;# 
   918   000FF6                     TBLPTR          equ	4086	;# 
   919   000FF6                     TBLPTRL         equ	4086	;# 
   920   000FF7                     TBLPTRH         equ	4087	;# 
   921   000FF8                     TBLPTRU         equ	4088	;# 
   922   000FF9                     PCLAT           equ	4089	;# 
   923   000FF9                     PC              equ	4089	;# 
   924   000FF9                     PCL             equ	4089	;# 
   925   000FFA                     PCLATH          equ	4090	;# 
   926   000FFB                     PCLATU          equ	4091	;# 
   927   000FFC                     STKPTR          equ	4092	;# 
   928   000FFD                     TOS             equ	4093	;# 
   929   000FFD                     TOSL            equ	4093	;# 
   930   000FFE                     TOSH            equ	4094	;# 
   931   000FFF                     TOSU            equ	4095	;# 
   932   000F80                     PORTA           equ	3968	;# 
   933   000F81                     PORTB           equ	3969	;# 
   934   000F82                     PORTC           equ	3970	;# 
   935   000F83                     PORTD           equ	3971	;# 
   936   000F84                     PORTE           equ	3972	;# 
   937   000F89                     LATA            equ	3977	;# 
   938   000F8A                     LATB            equ	3978	;# 
   939   000F8B                     LATC            equ	3979	;# 
   940   000F8C                     LATD            equ	3980	;# 
   941   000F8D                     LATE            equ	3981	;# 
   942   000F92                     TRISA           equ	3986	;# 
   943   000F92                     DDRA            equ	3986	;# 
   944   000F93                     TRISB           equ	3987	;# 
   945   000F93                     DDRB            equ	3987	;# 
   946   000F94                     TRISC           equ	3988	;# 
   947   000F94                     DDRC            equ	3988	;# 
   948   000F95                     TRISD           equ	3989	;# 
   949   000F95                     DDRD            equ	3989	;# 
   950   000F96                     TRISE           equ	3990	;# 
   951   000F96                     DDRE            equ	3990	;# 
   952   000F9B                     OSCTUNE         equ	3995	;# 
   953   000F9D                     PIE1            equ	3997	;# 
   954   000F9E                     PIR1            equ	3998	;# 
   955   000F9F                     IPR1            equ	3999	;# 
   956   000FA0                     PIE2            equ	4000	;# 
   957   000FA1                     PIR2            equ	4001	;# 
   958   000FA2                     IPR2            equ	4002	;# 
   959   000FA6                     EECON1          equ	4006	;# 
   960   000FA7                     EECON2          equ	4007	;# 
   961   000FA8                     EEDATA          equ	4008	;# 
   962   000FA9                     EEADR           equ	4009	;# 
   963   000FAA                     EEADRH          equ	4010	;# 
   964   000FAB                     RCSTA           equ	4011	;# 
   965   000FAB                     RCSTA1          equ	4011	;# 
   966   000FAC                     TXSTA           equ	4012	;# 
   967   000FAC                     TXSTA1          equ	4012	;# 
   968   000FAD                     TXREG           equ	4013	;# 
   969   000FAD                     TXREG1          equ	4013	;# 
   970   000FAE                     RCREG           equ	4014	;# 
   971   000FAE                     RCREG1          equ	4014	;# 
   972   000FAF                     SPBRG           equ	4015	;# 
   973   000FAF                     SPBRG1          equ	4015	;# 
   974   000FB0                     SPBRGH          equ	4016	;# 
   975   000FB1                     T3CON           equ	4017	;# 
   976   000FB2                     TMR3            equ	4018	;# 
   977   000FB2                     TMR3L           equ	4018	;# 
   978   000FB3                     TMR3H           equ	4019	;# 
   979   000FB4                     CMCON           equ	4020	;# 
   980   000FB5                     CVRCON          equ	4021	;# 
   981   000FB6                     ECCP1AS         equ	4022	;# 
   982   000FB7                     PWM1CON         equ	4023	;# 
   983   000FB8                     BAUDCON         equ	4024	;# 
   984   000FB8                     BAUDCTL         equ	4024	;# 
   985   000FBA                     CCP2CON         equ	4026	;# 
   986   000FBB                     CCPR2           equ	4027	;# 
   987   000FBB                     CCPR2L          equ	4027	;# 
   988   000FBC                     CCPR2H          equ	4028	;# 
   989   000FBD                     CCP1CON         equ	4029	;# 
   990   000FBE                     CCPR1           equ	4030	;# 
   991   000FBE                     CCPR1L          equ	4030	;# 
   992   000FBF                     CCPR1H          equ	4031	;# 
   993   000FC0                     ADCON2          equ	4032	;# 
   994   000FC1                     ADCON1          equ	4033	;# 
   995   000FC2                     ADCON0          equ	4034	;# 
   996   000FC3                     ADRES           equ	4035	;# 
   997   000FC3                     ADRESL          equ	4035	;# 
   998   000FC4                     ADRESH          equ	4036	;# 
   999   000FC5                     SSPCON2         equ	4037	;# 
  1000   000FC6                     SSPCON1         equ	4038	;# 
  1001   000FC7                     SSPSTAT         equ	4039	;# 
  1002   000FC8                     SSPADD          equ	4040	;# 
  1003   000FC9                     SSPBUF          equ	4041	;# 
  1004   000FCA                     T2CON           equ	4042	;# 
  1005   000FCB                     PR2             equ	4043	;# 
  1006   000FCB                     MEMCON          equ	4043	;# 
  1007   000FCC                     TMR2            equ	4044	;# 
  1008   000FCD                     T1CON           equ	4045	;# 
  1009   000FCE                     TMR1            equ	4046	;# 
  1010   000FCE                     TMR1L           equ	4046	;# 
  1011   000FCF                     TMR1H           equ	4047	;# 
  1012   000FD0                     RCON            equ	4048	;# 
  1013   000FD1                     WDTCON          equ	4049	;# 
  1014   000FD2                     HLVDCON         equ	4050	;# 
  1015   000FD2                     LVDCON          equ	4050	;# 
  1016   000FD3                     OSCCON          equ	4051	;# 
  1017   000FD5                     T0CON           equ	4053	;# 
  1018   000FD6                     TMR0            equ	4054	;# 
  1019   000FD6                     TMR0L           equ	4054	;# 
  1020   000FD7                     TMR0H           equ	4055	;# 
  1021   000FD8                     STATUS          equ	4056	;# 
  1022   000FD9                     FSR2            equ	4057	;# 
  1023   000FD9                     FSR2L           equ	4057	;# 
  1024   000FDA                     FSR2H           equ	4058	;# 
  1025   000FDB                     PLUSW2          equ	4059	;# 
  1026   000FDC                     PREINC2         equ	4060	;# 
  1027   000FDD                     POSTDEC2        equ	4061	;# 
  1028   000FDE                     POSTINC2        equ	4062	;# 
  1029   000FDF                     INDF2           equ	4063	;# 
  1030   000FE0                     BSR             equ	4064	;# 
  1031   000FE1                     FSR1            equ	4065	;# 
  1032   000FE1                     FSR1L           equ	4065	;# 
  1033   000FE2                     FSR1H           equ	4066	;# 
  1034   000FE3                     PLUSW1          equ	4067	;# 
  1035   000FE4                     PREINC1         equ	4068	;# 
  1036   000FE5                     POSTDEC1        equ	4069	;# 
  1037   000FE6                     POSTINC1        equ	4070	;# 
  1038   000FE7                     INDF1           equ	4071	;# 
  1039   000FE8                     WREG            equ	4072	;# 
  1040   000FE9                     FSR0            equ	4073	;# 
  1041   000FE9                     FSR0L           equ	4073	;# 
  1042   000FEA                     FSR0H           equ	4074	;# 
  1043   000FEB                     PLUSW0          equ	4075	;# 
  1044   000FEC                     PREINC0         equ	4076	;# 
  1045   000FED                     POSTDEC0        equ	4077	;# 
  1046   000FEE                     POSTINC0        equ	4078	;# 
  1047   000FEF                     INDF0           equ	4079	;# 
  1048   000FF0                     INTCON3         equ	4080	;# 
  1049   000FF1                     INTCON2         equ	4081	;# 
  1050   000FF2                     INTCON          equ	4082	;# 
  1051   000FF3                     PROD            equ	4083	;# 
  1052   000FF3                     PRODL           equ	4083	;# 
  1053   000FF4                     PRODH           equ	4084	;# 
  1054   000FF5                     TABLAT          equ	4085	;# 
  1055   000FF6                     TBLPTR          equ	4086	;# 
  1056   000FF6                     TBLPTRL         equ	4086	;# 
  1057   000FF7                     TBLPTRH         equ	4087	;# 
  1058   000FF8                     TBLPTRU         equ	4088	;# 
  1059   000FF9                     PCLAT           equ	4089	;# 
  1060   000FF9                     PC              equ	4089	;# 
  1061   000FF9                     PCL             equ	4089	;# 
  1062   000FFA                     PCLATH          equ	4090	;# 
  1063   000FFB                     PCLATU          equ	4091	;# 
  1064   000FFC                     STKPTR          equ	4092	;# 
  1065   000FFD                     TOS             equ	4093	;# 
  1066   000FFD                     TOSL            equ	4093	;# 
  1067   000FFE                     TOSH            equ	4094	;# 
  1068   000FFF                     TOSU            equ	4095	;# 
  1069   000F80                     PORTA           equ	3968	;# 
  1070   000F81                     PORTB           equ	3969	;# 
  1071   000F82                     PORTC           equ	3970	;# 
  1072   000F83                     PORTD           equ	3971	;# 
  1073   000F84                     PORTE           equ	3972	;# 
  1074   000F89                     LATA            equ	3977	;# 
  1075   000F8A                     LATB            equ	3978	;# 
  1076   000F8B                     LATC            equ	3979	;# 
  1077   000F8C                     LATD            equ	3980	;# 
  1078   000F8D                     LATE            equ	3981	;# 
  1079   000F92                     TRISA           equ	3986	;# 
  1080   000F92                     DDRA            equ	3986	;# 
  1081   000F93                     TRISB           equ	3987	;# 
  1082   000F93                     DDRB            equ	3987	;# 
  1083   000F94                     TRISC           equ	3988	;# 
  1084   000F94                     DDRC            equ	3988	;# 
  1085   000F95                     TRISD           equ	3989	;# 
  1086   000F95                     DDRD            equ	3989	;# 
  1087   000F96                     TRISE           equ	3990	;# 
  1088   000F96                     DDRE            equ	3990	;# 
  1089   000F9B                     OSCTUNE         equ	3995	;# 
  1090   000F9D                     PIE1            equ	3997	;# 
  1091   000F9E                     PIR1            equ	3998	;# 
  1092   000F9F                     IPR1            equ	3999	;# 
  1093   000FA0                     PIE2            equ	4000	;# 
  1094   000FA1                     PIR2            equ	4001	;# 
  1095   000FA2                     IPR2            equ	4002	;# 
  1096   000FA6                     EECON1          equ	4006	;# 
  1097   000FA7                     EECON2          equ	4007	;# 
  1098   000FA8                     EEDATA          equ	4008	;# 
  1099   000FA9                     EEADR           equ	4009	;# 
  1100   000FAA                     EEADRH          equ	4010	;# 
  1101   000FAB                     RCSTA           equ	4011	;# 
  1102   000FAB                     RCSTA1          equ	4011	;# 
  1103   000FAC                     TXSTA           equ	4012	;# 
  1104   000FAC                     TXSTA1          equ	4012	;# 
  1105   000FAD                     TXREG           equ	4013	;# 
  1106   000FAD                     TXREG1          equ	4013	;# 
  1107   000FAE                     RCREG           equ	4014	;# 
  1108   000FAE                     RCREG1          equ	4014	;# 
  1109   000FAF                     SPBRG           equ	4015	;# 
  1110   000FAF                     SPBRG1          equ	4015	;# 
  1111   000FB0                     SPBRGH          equ	4016	;# 
  1112   000FB1                     T3CON           equ	4017	;# 
  1113   000FB2                     TMR3            equ	4018	;# 
  1114   000FB2                     TMR3L           equ	4018	;# 
  1115   000FB3                     TMR3H           equ	4019	;# 
  1116   000FB4                     CMCON           equ	4020	;# 
  1117   000FB5                     CVRCON          equ	4021	;# 
  1118   000FB6                     ECCP1AS         equ	4022	;# 
  1119   000FB7                     PWM1CON         equ	4023	;# 
  1120   000FB8                     BAUDCON         equ	4024	;# 
  1121   000FB8                     BAUDCTL         equ	4024	;# 
  1122   000FBA                     CCP2CON         equ	4026	;# 
  1123   000FBB                     CCPR2           equ	4027	;# 
  1124   000FBB                     CCPR2L          equ	4027	;# 
  1125   000FBC                     CCPR2H          equ	4028	;# 
  1126   000FBD                     CCP1CON         equ	4029	;# 
  1127   000FBE                     CCPR1           equ	4030	;# 
  1128   000FBE                     CCPR1L          equ	4030	;# 
  1129   000FBF                     CCPR1H          equ	4031	;# 
  1130   000FC0                     ADCON2          equ	4032	;# 
  1131   000FC1                     ADCON1          equ	4033	;# 
  1132   000FC2                     ADCON0          equ	4034	;# 
  1133   000FC3                     ADRES           equ	4035	;# 
  1134   000FC3                     ADRESL          equ	4035	;# 
  1135   000FC4                     ADRESH          equ	4036	;# 
  1136   000FC5                     SSPCON2         equ	4037	;# 
  1137   000FC6                     SSPCON1         equ	4038	;# 
  1138   000FC7                     SSPSTAT         equ	4039	;# 
  1139   000FC8                     SSPADD          equ	4040	;# 
  1140   000FC9                     SSPBUF          equ	4041	;# 
  1141   000FCA                     T2CON           equ	4042	;# 
  1142   000FCB                     PR2             equ	4043	;# 
  1143   000FCB                     MEMCON          equ	4043	;# 
  1144   000FCC                     TMR2            equ	4044	;# 
  1145   000FCD                     T1CON           equ	4045	;# 
  1146   000FCE                     TMR1            equ	4046	;# 
  1147   000FCE                     TMR1L           equ	4046	;# 
  1148   000FCF                     TMR1H           equ	4047	;# 
  1149   000FD0                     RCON            equ	4048	;# 
  1150   000FD1                     WDTCON          equ	4049	;# 
  1151   000FD2                     HLVDCON         equ	4050	;# 
  1152   000FD2                     LVDCON          equ	4050	;# 
  1153   000FD3                     OSCCON          equ	4051	;# 
  1154   000FD5                     T0CON           equ	4053	;# 
  1155   000FD6                     TMR0            equ	4054	;# 
  1156   000FD6                     TMR0L           equ	4054	;# 
  1157   000FD7                     TMR0H           equ	4055	;# 
  1158   000FD8                     STATUS          equ	4056	;# 
  1159   000FD9                     FSR2            equ	4057	;# 
  1160   000FD9                     FSR2L           equ	4057	;# 
  1161   000FDA                     FSR2H           equ	4058	;# 
  1162   000FDB                     PLUSW2          equ	4059	;# 
  1163   000FDC                     PREINC2         equ	4060	;# 
  1164   000FDD                     POSTDEC2        equ	4061	;# 
  1165   000FDE                     POSTINC2        equ	4062	;# 
  1166   000FDF                     INDF2           equ	4063	;# 
  1167   000FE0                     BSR             equ	4064	;# 
  1168   000FE1                     FSR1            equ	4065	;# 
  1169   000FE1                     FSR1L           equ	4065	;# 
  1170   000FE2                     FSR1H           equ	4066	;# 
  1171   000FE3                     PLUSW1          equ	4067	;# 
  1172   000FE4                     PREINC1         equ	4068	;# 
  1173   000FE5                     POSTDEC1        equ	4069	;# 
  1174   000FE6                     POSTINC1        equ	4070	;# 
  1175   000FE7                     INDF1           equ	4071	;# 
  1176   000FE8                     WREG            equ	4072	;# 
  1177   000FE9                     FSR0            equ	4073	;# 
  1178   000FE9                     FSR0L           equ	4073	;# 
  1179   000FEA                     FSR0H           equ	4074	;# 
  1180   000FEB                     PLUSW0          equ	4075	;# 
  1181   000FEC                     PREINC0         equ	4076	;# 
  1182   000FED                     POSTDEC0        equ	4077	;# 
  1183   000FEE                     POSTINC0        equ	4078	;# 
  1184   000FEF                     INDF0           equ	4079	;# 
  1185   000FF0                     INTCON3         equ	4080	;# 
  1186   000FF1                     INTCON2         equ	4081	;# 
  1187   000FF2                     INTCON          equ	4082	;# 
  1188   000FF3                     PROD            equ	4083	;# 
  1189   000FF3                     PRODL           equ	4083	;# 
  1190   000FF4                     PRODH           equ	4084	;# 
  1191   000FF5                     TABLAT          equ	4085	;# 
  1192   000FF6                     TBLPTR          equ	4086	;# 
  1193   000FF6                     TBLPTRL         equ	4086	;# 
  1194   000FF7                     TBLPTRH         equ	4087	;# 
  1195   000FF8                     TBLPTRU         equ	4088	;# 
  1196   000FF9                     PCLAT           equ	4089	;# 
  1197   000FF9                     PC              equ	4089	;# 
  1198   000FF9                     PCL             equ	4089	;# 
  1199   000FFA                     PCLATH          equ	4090	;# 
  1200   000FFB                     PCLATU          equ	4091	;# 
  1201   000FFC                     STKPTR          equ	4092	;# 
  1202   000FFD                     TOS             equ	4093	;# 
  1203   000FFD                     TOSL            equ	4093	;# 
  1204   000FFE                     TOSH            equ	4094	;# 
  1205   000FFF                     TOSU            equ	4095	;# 
  1206   000F80                     PORTA           equ	3968	;# 
  1207   000F81                     PORTB           equ	3969	;# 
  1208   000F82                     PORTC           equ	3970	;# 
  1209   000F83                     PORTD           equ	3971	;# 
  1210   000F84                     PORTE           equ	3972	;# 
  1211   000F89                     LATA            equ	3977	;# 
  1212   000F8A                     LATB            equ	3978	;# 
  1213   000F8B                     LATC            equ	3979	;# 
  1214   000F8C                     LATD            equ	3980	;# 
  1215   000F8D                     LATE            equ	3981	;# 
  1216   000F92                     TRISA           equ	3986	;# 
  1217   000F92                     DDRA            equ	3986	;# 
  1218   000F93                     TRISB           equ	3987	;# 
  1219   000F93                     DDRB            equ	3987	;# 
  1220   000F94                     TRISC           equ	3988	;# 
  1221   000F94                     DDRC            equ	3988	;# 
  1222   000F95                     TRISD           equ	3989	;# 
  1223   000F95                     DDRD            equ	3989	;# 
  1224   000F96                     TRISE           equ	3990	;# 
  1225   000F96                     DDRE            equ	3990	;# 
  1226   000F9B                     OSCTUNE         equ	3995	;# 
  1227   000F9D                     PIE1            equ	3997	;# 
  1228   000F9E                     PIR1            equ	3998	;# 
  1229   000F9F                     IPR1            equ	3999	;# 
  1230   000FA0                     PIE2            equ	4000	;# 
  1231   000FA1                     PIR2            equ	4001	;# 
  1232   000FA2                     IPR2            equ	4002	;# 
  1233   000FA6                     EECON1          equ	4006	;# 
  1234   000FA7                     EECON2          equ	4007	;# 
  1235   000FA8                     EEDATA          equ	4008	;# 
  1236   000FA9                     EEADR           equ	4009	;# 
  1237   000FAA                     EEADRH          equ	4010	;# 
  1238   000FAB                     RCSTA           equ	4011	;# 
  1239   000FAB                     RCSTA1          equ	4011	;# 
  1240   000FAC                     TXSTA           equ	4012	;# 
  1241   000FAC                     TXSTA1          equ	4012	;# 
  1242   000FAD                     TXREG           equ	4013	;# 
  1243   000FAD                     TXREG1          equ	4013	;# 
  1244   000FAE                     RCREG           equ	4014	;# 
  1245   000FAE                     RCREG1          equ	4014	;# 
  1246   000FAF                     SPBRG           equ	4015	;# 
  1247   000FAF                     SPBRG1          equ	4015	;# 
  1248   000FB0                     SPBRGH          equ	4016	;# 
  1249   000FB1                     T3CON           equ	4017	;# 
  1250   000FB2                     TMR3            equ	4018	;# 
  1251   000FB2                     TMR3L           equ	4018	;# 
  1252   000FB3                     TMR3H           equ	4019	;# 
  1253   000FB4                     CMCON           equ	4020	;# 
  1254   000FB5                     CVRCON          equ	4021	;# 
  1255   000FB6                     ECCP1AS         equ	4022	;# 
  1256   000FB7                     PWM1CON         equ	4023	;# 
  1257   000FB8                     BAUDCON         equ	4024	;# 
  1258   000FB8                     BAUDCTL         equ	4024	;# 
  1259   000FBA                     CCP2CON         equ	4026	;# 
  1260   000FBB                     CCPR2           equ	4027	;# 
  1261   000FBB                     CCPR2L          equ	4027	;# 
  1262   000FBC                     CCPR2H          equ	4028	;# 
  1263   000FBD                     CCP1CON         equ	4029	;# 
  1264   000FBE                     CCPR1           equ	4030	;# 
  1265   000FBE                     CCPR1L          equ	4030	;# 
  1266   000FBF                     CCPR1H          equ	4031	;# 
  1267   000FC0                     ADCON2          equ	4032	;# 
  1268   000FC1                     ADCON1          equ	4033	;# 
  1269   000FC2                     ADCON0          equ	4034	;# 
  1270   000FC3                     ADRES           equ	4035	;# 
  1271   000FC3                     ADRESL          equ	4035	;# 
  1272   000FC4                     ADRESH          equ	4036	;# 
  1273   000FC5                     SSPCON2         equ	4037	;# 
  1274   000FC6                     SSPCON1         equ	4038	;# 
  1275   000FC7                     SSPSTAT         equ	4039	;# 
  1276   000FC8                     SSPADD          equ	4040	;# 
  1277   000FC9                     SSPBUF          equ	4041	;# 
  1278   000FCA                     T2CON           equ	4042	;# 
  1279   000FCB                     PR2             equ	4043	;# 
  1280   000FCB                     MEMCON          equ	4043	;# 
  1281   000FCC                     TMR2            equ	4044	;# 
  1282   000FCD                     T1CON           equ	4045	;# 
  1283   000FCE                     TMR1            equ	4046	;# 
  1284   000FCE                     TMR1L           equ	4046	;# 
  1285   000FCF                     TMR1H           equ	4047	;# 
  1286   000FD0                     RCON            equ	4048	;# 
  1287   000FD1                     WDTCON          equ	4049	;# 
  1288   000FD2                     HLVDCON         equ	4050	;# 
  1289   000FD2                     LVDCON          equ	4050	;# 
  1290   000FD3                     OSCCON          equ	4051	;# 
  1291   000FD5                     T0CON           equ	4053	;# 
  1292   000FD6                     TMR0            equ	4054	;# 
  1293   000FD6                     TMR0L           equ	4054	;# 
  1294   000FD7                     TMR0H           equ	4055	;# 
  1295   000FD8                     STATUS          equ	4056	;# 
  1296   000FD9                     FSR2            equ	4057	;# 
  1297   000FD9                     FSR2L           equ	4057	;# 
  1298   000FDA                     FSR2H           equ	4058	;# 
  1299   000FDB                     PLUSW2          equ	4059	;# 
  1300   000FDC                     PREINC2         equ	4060	;# 
  1301   000FDD                     POSTDEC2        equ	4061	;# 
  1302   000FDE                     POSTINC2        equ	4062	;# 
  1303   000FDF                     INDF2           equ	4063	;# 
  1304   000FE0                     BSR             equ	4064	;# 
  1305   000FE1                     FSR1            equ	4065	;# 
  1306   000FE1                     FSR1L           equ	4065	;# 
  1307   000FE2                     FSR1H           equ	4066	;# 
  1308   000FE3                     PLUSW1          equ	4067	;# 
  1309   000FE4                     PREINC1         equ	4068	;# 
  1310   000FE5                     POSTDEC1        equ	4069	;# 
  1311   000FE6                     POSTINC1        equ	4070	;# 
  1312   000FE7                     INDF1           equ	4071	;# 
  1313   000FE8                     WREG            equ	4072	;# 
  1314   000FE9                     FSR0            equ	4073	;# 
  1315   000FE9                     FSR0L           equ	4073	;# 
  1316   000FEA                     FSR0H           equ	4074	;# 
  1317   000FEB                     PLUSW0          equ	4075	;# 
  1318   000FEC                     PREINC0         equ	4076	;# 
  1319   000FED                     POSTDEC0        equ	4077	;# 
  1320   000FEE                     POSTINC0        equ	4078	;# 
  1321   000FEF                     INDF0           equ	4079	;# 
  1322   000FF0                     INTCON3         equ	4080	;# 
  1323   000FF1                     INTCON2         equ	4081	;# 
  1324   000FF2                     INTCON          equ	4082	;# 
  1325   000FF3                     PROD            equ	4083	;# 
  1326   000FF3                     PRODL           equ	4083	;# 
  1327   000FF4                     PRODH           equ	4084	;# 
  1328   000FF5                     TABLAT          equ	4085	;# 
  1329   000FF6                     TBLPTR          equ	4086	;# 
  1330   000FF6                     TBLPTRL         equ	4086	;# 
  1331   000FF7                     TBLPTRH         equ	4087	;# 
  1332   000FF8                     TBLPTRU         equ	4088	;# 
  1333   000FF9                     PCLAT           equ	4089	;# 
  1334   000FF9                     PC              equ	4089	;# 
  1335   000FF9                     PCL             equ	4089	;# 
  1336   000FFA                     PCLATH          equ	4090	;# 
  1337   000FFB                     PCLATU          equ	4091	;# 
  1338   000FFC                     STKPTR          equ	4092	;# 
  1339   000FFD                     TOS             equ	4093	;# 
  1340   000FFD                     TOSL            equ	4093	;# 
  1341   000FFE                     TOSH            equ	4094	;# 
  1342   000FFF                     TOSU            equ	4095	;# 
  1343   000F80                     PORTA           equ	3968	;# 
  1344   000F81                     PORTB           equ	3969	;# 
  1345   000F82                     PORTC           equ	3970	;# 
  1346   000F83                     PORTD           equ	3971	;# 
  1347   000F84                     PORTE           equ	3972	;# 
  1348   000F89                     LATA            equ	3977	;# 
  1349   000F8A                     LATB            equ	3978	;# 
  1350   000F8B                     LATC            equ	3979	;# 
  1351   000F8C                     LATD            equ	3980	;# 
  1352   000F8D                     LATE            equ	3981	;# 
  1353   000F92                     TRISA           equ	3986	;# 
  1354   000F92                     DDRA            equ	3986	;# 
  1355   000F93                     TRISB           equ	3987	;# 
  1356   000F93                     DDRB            equ	3987	;# 
  1357   000F94                     TRISC           equ	3988	;# 
  1358   000F94                     DDRC            equ	3988	;# 
  1359   000F95                     TRISD           equ	3989	;# 
  1360   000F95                     DDRD            equ	3989	;# 
  1361   000F96                     TRISE           equ	3990	;# 
  1362   000F96                     DDRE            equ	3990	;# 
  1363   000F9B                     OSCTUNE         equ	3995	;# 
  1364   000F9D                     PIE1            equ	3997	;# 
  1365   000F9E                     PIR1            equ	3998	;# 
  1366   000F9F                     IPR1            equ	3999	;# 
  1367   000FA0                     PIE2            equ	4000	;# 
  1368   000FA1                     PIR2            equ	4001	;# 
  1369   000FA2                     IPR2            equ	4002	;# 
  1370   000FA6                     EECON1          equ	4006	;# 
  1371   000FA7                     EECON2          equ	4007	;# 
  1372   000FA8                     EEDATA          equ	4008	;# 
  1373   000FA9                     EEADR           equ	4009	;# 
  1374   000FAA                     EEADRH          equ	4010	;# 
  1375   000FAB                     RCSTA           equ	4011	;# 
  1376   000FAB                     RCSTA1          equ	4011	;# 
  1377   000FAC                     TXSTA           equ	4012	;# 
  1378   000FAC                     TXSTA1          equ	4012	;# 
  1379   000FAD                     TXREG           equ	4013	;# 
  1380   000FAD                     TXREG1          equ	4013	;# 
  1381   000FAE                     RCREG           equ	4014	;# 
  1382   000FAE                     RCREG1          equ	4014	;# 
  1383   000FAF                     SPBRG           equ	4015	;# 
  1384   000FAF                     SPBRG1          equ	4015	;# 
  1385   000FB0                     SPBRGH          equ	4016	;# 
  1386   000FB1                     T3CON           equ	4017	;# 
  1387   000FB2                     TMR3            equ	4018	;# 
  1388   000FB2                     TMR3L           equ	4018	;# 
  1389   000FB3                     TMR3H           equ	4019	;# 
  1390   000FB4                     CMCON           equ	4020	;# 
  1391   000FB5                     CVRCON          equ	4021	;# 
  1392   000FB6                     ECCP1AS         equ	4022	;# 
  1393   000FB7                     PWM1CON         equ	4023	;# 
  1394   000FB8                     BAUDCON         equ	4024	;# 
  1395   000FB8                     BAUDCTL         equ	4024	;# 
  1396   000FBA                     CCP2CON         equ	4026	;# 
  1397   000FBB                     CCPR2           equ	4027	;# 
  1398   000FBB                     CCPR2L          equ	4027	;# 
  1399   000FBC                     CCPR2H          equ	4028	;# 
  1400   000FBD                     CCP1CON         equ	4029	;# 
  1401   000FBE                     CCPR1           equ	4030	;# 
  1402   000FBE                     CCPR1L          equ	4030	;# 
  1403   000FBF                     CCPR1H          equ	4031	;# 
  1404   000FC0                     ADCON2          equ	4032	;# 
  1405   000FC1                     ADCON1          equ	4033	;# 
  1406   000FC2                     ADCON0          equ	4034	;# 
  1407   000FC3                     ADRES           equ	4035	;# 
  1408   000FC3                     ADRESL          equ	4035	;# 
  1409   000FC4                     ADRESH          equ	4036	;# 
  1410   000FC5                     SSPCON2         equ	4037	;# 
  1411   000FC6                     SSPCON1         equ	4038	;# 
  1412   000FC7                     SSPSTAT         equ	4039	;# 
  1413   000FC8                     SSPADD          equ	4040	;# 
  1414   000FC9                     SSPBUF          equ	4041	;# 
  1415   000FCA                     T2CON           equ	4042	;# 
  1416   000FCB                     PR2             equ	4043	;# 
  1417   000FCB                     MEMCON          equ	4043	;# 
  1418   000FCC                     TMR2            equ	4044	;# 
  1419   000FCD                     T1CON           equ	4045	;# 
  1420   000FCE                     TMR1            equ	4046	;# 
  1421   000FCE                     TMR1L           equ	4046	;# 
  1422   000FCF                     TMR1H           equ	4047	;# 
  1423   000FD0                     RCON            equ	4048	;# 
  1424   000FD1                     WDTCON          equ	4049	;# 
  1425   000FD2                     HLVDCON         equ	4050	;# 
  1426   000FD2                     LVDCON          equ	4050	;# 
  1427   000FD3                     OSCCON          equ	4051	;# 
  1428   000FD5                     T0CON           equ	4053	;# 
  1429   000FD6                     TMR0            equ	4054	;# 
  1430   000FD6                     TMR0L           equ	4054	;# 
  1431   000FD7                     TMR0H           equ	4055	;# 
  1432   000FD8                     STATUS          equ	4056	;# 
  1433   000FD9                     FSR2            equ	4057	;# 
  1434   000FD9                     FSR2L           equ	4057	;# 
  1435   000FDA                     FSR2H           equ	4058	;# 
  1436   000FDB                     PLUSW2          equ	4059	;# 
  1437   000FDC                     PREINC2         equ	4060	;# 
  1438   000FDD                     POSTDEC2        equ	4061	;# 
  1439   000FDE                     POSTINC2        equ	4062	;# 
  1440   000FDF                     INDF2           equ	4063	;# 
  1441   000FE0                     BSR             equ	4064	;# 
  1442   000FE1                     FSR1            equ	4065	;# 
  1443   000FE1                     FSR1L           equ	4065	;# 
  1444   000FE2                     FSR1H           equ	4066	;# 
  1445   000FE3                     PLUSW1          equ	4067	;# 
  1446   000FE4                     PREINC1         equ	4068	;# 
  1447   000FE5                     POSTDEC1        equ	4069	;# 
  1448   000FE6                     POSTINC1        equ	4070	;# 
  1449   000FE7                     INDF1           equ	4071	;# 
  1450   000FE8                     WREG            equ	4072	;# 
  1451   000FE9                     FSR0            equ	4073	;# 
  1452   000FE9                     FSR0L           equ	4073	;# 
  1453   000FEA                     FSR0H           equ	4074	;# 
  1454   000FEB                     PLUSW0          equ	4075	;# 
  1455   000FEC                     PREINC0         equ	4076	;# 
  1456   000FED                     POSTDEC0        equ	4077	;# 
  1457   000FEE                     POSTINC0        equ	4078	;# 
  1458   000FEF                     INDF0           equ	4079	;# 
  1459   000FF0                     INTCON3         equ	4080	;# 
  1460   000FF1                     INTCON2         equ	4081	;# 
  1461   000FF2                     INTCON          equ	4082	;# 
  1462   000FF3                     PROD            equ	4083	;# 
  1463   000FF3                     PRODL           equ	4083	;# 
  1464   000FF4                     PRODH           equ	4084	;# 
  1465   000FF5                     TABLAT          equ	4085	;# 
  1466   000FF6                     TBLPTR          equ	4086	;# 
  1467   000FF6                     TBLPTRL         equ	4086	;# 
  1468   000FF7                     TBLPTRH         equ	4087	;# 
  1469   000FF8                     TBLPTRU         equ	4088	;# 
  1470   000FF9                     PCLAT           equ	4089	;# 
  1471   000FF9                     PC              equ	4089	;# 
  1472   000FF9                     PCL             equ	4089	;# 
  1473   000FFA                     PCLATH          equ	4090	;# 
  1474   000FFB                     PCLATU          equ	4091	;# 
  1475   000FFC                     STKPTR          equ	4092	;# 
  1476   000FFD                     TOS             equ	4093	;# 
  1477   000FFD                     TOSL            equ	4093	;# 
  1478   000FFE                     TOSH            equ	4094	;# 
  1479   000FFF                     TOSU            equ	4095	;# 
  1480   000F80                     PORTA           equ	3968	;# 
  1481   000F81                     PORTB           equ	3969	;# 
  1482   000F82                     PORTC           equ	3970	;# 
  1483   000F83                     PORTD           equ	3971	;# 
  1484   000F84                     PORTE           equ	3972	;# 
  1485   000F89                     LATA            equ	3977	;# 
  1486   000F8A                     LATB            equ	3978	;# 
  1487   000F8B                     LATC            equ	3979	;# 
  1488   000F8C                     LATD            equ	3980	;# 
  1489   000F8D                     LATE            equ	3981	;# 
  1490   000F92                     TRISA           equ	3986	;# 
  1491   000F92                     DDRA            equ	3986	;# 
  1492   000F93                     TRISB           equ	3987	;# 
  1493   000F93                     DDRB            equ	3987	;# 
  1494   000F94                     TRISC           equ	3988	;# 
  1495   000F94                     DDRC            equ	3988	;# 
  1496   000F95                     TRISD           equ	3989	;# 
  1497   000F95                     DDRD            equ	3989	;# 
  1498   000F96                     TRISE           equ	3990	;# 
  1499   000F96                     DDRE            equ	3990	;# 
  1500   000F9B                     OSCTUNE         equ	3995	;# 
  1501   000F9D                     PIE1            equ	3997	;# 
  1502   000F9E                     PIR1            equ	3998	;# 
  1503   000F9F                     IPR1            equ	3999	;# 
  1504   000FA0                     PIE2            equ	4000	;# 
  1505   000FA1                     PIR2            equ	4001	;# 
  1506   000FA2                     IPR2            equ	4002	;# 
  1507   000FA6                     EECON1          equ	4006	;# 
  1508   000FA7                     EECON2          equ	4007	;# 
  1509   000FA8                     EEDATA          equ	4008	;# 
  1510   000FA9                     EEADR           equ	4009	;# 
  1511   000FAA                     EEADRH          equ	4010	;# 
  1512   000FAB                     RCSTA           equ	4011	;# 
  1513   000FAB                     RCSTA1          equ	4011	;# 
  1514   000FAC                     TXSTA           equ	4012	;# 
  1515   000FAC                     TXSTA1          equ	4012	;# 
  1516   000FAD                     TXREG           equ	4013	;# 
  1517   000FAD                     TXREG1          equ	4013	;# 
  1518   000FAE                     RCREG           equ	4014	;# 
  1519   000FAE                     RCREG1          equ	4014	;# 
  1520   000FAF                     SPBRG           equ	4015	;# 
  1521   000FAF                     SPBRG1          equ	4015	;# 
  1522   000FB0                     SPBRGH          equ	4016	;# 
  1523   000FB1                     T3CON           equ	4017	;# 
  1524   000FB2                     TMR3            equ	4018	;# 
  1525   000FB2                     TMR3L           equ	4018	;# 
  1526   000FB3                     TMR3H           equ	4019	;# 
  1527   000FB4                     CMCON           equ	4020	;# 
  1528   000FB5                     CVRCON          equ	4021	;# 
  1529   000FB6                     ECCP1AS         equ	4022	;# 
  1530   000FB7                     PWM1CON         equ	4023	;# 
  1531   000FB8                     BAUDCON         equ	4024	;# 
  1532   000FB8                     BAUDCTL         equ	4024	;# 
  1533   000FBA                     CCP2CON         equ	4026	;# 
  1534   000FBB                     CCPR2           equ	4027	;# 
  1535   000FBB                     CCPR2L          equ	4027	;# 
  1536   000FBC                     CCPR2H          equ	4028	;# 
  1537   000FBD                     CCP1CON         equ	4029	;# 
  1538   000FBE                     CCPR1           equ	4030	;# 
  1539   000FBE                     CCPR1L          equ	4030	;# 
  1540   000FBF                     CCPR1H          equ	4031	;# 
  1541   000FC0                     ADCON2          equ	4032	;# 
  1542   000FC1                     ADCON1          equ	4033	;# 
  1543   000FC2                     ADCON0          equ	4034	;# 
  1544   000FC3                     ADRES           equ	4035	;# 
  1545   000FC3                     ADRESL          equ	4035	;# 
  1546   000FC4                     ADRESH          equ	4036	;# 
  1547   000FC5                     SSPCON2         equ	4037	;# 
  1548   000FC6                     SSPCON1         equ	4038	;# 
  1549   000FC7                     SSPSTAT         equ	4039	;# 
  1550   000FC8                     SSPADD          equ	4040	;# 
  1551   000FC9                     SSPBUF          equ	4041	;# 
  1552   000FCA                     T2CON           equ	4042	;# 
  1553   000FCB                     PR2             equ	4043	;# 
  1554   000FCB                     MEMCON          equ	4043	;# 
  1555   000FCC                     TMR2            equ	4044	;# 
  1556   000FCD                     T1CON           equ	4045	;# 
  1557   000FCE                     TMR1            equ	4046	;# 
  1558   000FCE                     TMR1L           equ	4046	;# 
  1559   000FCF                     TMR1H           equ	4047	;# 
  1560   000FD0                     RCON            equ	4048	;# 
  1561   000FD1                     WDTCON          equ	4049	;# 
  1562   000FD2                     HLVDCON         equ	4050	;# 
  1563   000FD2                     LVDCON          equ	4050	;# 
  1564   000FD3                     OSCCON          equ	4051	;# 
  1565   000FD5                     T0CON           equ	4053	;# 
  1566   000FD6                     TMR0            equ	4054	;# 
  1567   000FD6                     TMR0L           equ	4054	;# 
  1568   000FD7                     TMR0H           equ	4055	;# 
  1569   000FD8                     STATUS          equ	4056	;# 
  1570   000FD9                     FSR2            equ	4057	;# 
  1571   000FD9                     FSR2L           equ	4057	;# 
  1572   000FDA                     FSR2H           equ	4058	;# 
  1573   000FDB                     PLUSW2          equ	4059	;# 
  1574   000FDC                     PREINC2         equ	4060	;# 
  1575   000FDD                     POSTDEC2        equ	4061	;# 
  1576   000FDE                     POSTINC2        equ	4062	;# 
  1577   000FDF                     INDF2           equ	4063	;# 
  1578   000FE0                     BSR             equ	4064	;# 
  1579   000FE1                     FSR1            equ	4065	;# 
  1580   000FE1                     FSR1L           equ	4065	;# 
  1581   000FE2                     FSR1H           equ	4066	;# 
  1582   000FE3                     PLUSW1          equ	4067	;# 
  1583   000FE4                     PREINC1         equ	4068	;# 
  1584   000FE5                     POSTDEC1        equ	4069	;# 
  1585   000FE6                     POSTINC1        equ	4070	;# 
  1586   000FE7                     INDF1           equ	4071	;# 
  1587   000FE8                     WREG            equ	4072	;# 
  1588   000FE9                     FSR0            equ	4073	;# 
  1589   000FE9                     FSR0L           equ	4073	;# 
  1590   000FEA                     FSR0H           equ	4074	;# 
  1591   000FEB                     PLUSW0          equ	4075	;# 
  1592   000FEC                     PREINC0         equ	4076	;# 
  1593   000FED                     POSTDEC0        equ	4077	;# 
  1594   000FEE                     POSTINC0        equ	4078	;# 
  1595   000FEF                     INDF0           equ	4079	;# 
  1596   000FF0                     INTCON3         equ	4080	;# 
  1597   000FF1                     INTCON2         equ	4081	;# 
  1598   000FF2                     INTCON          equ	4082	;# 
  1599   000FF3                     PROD            equ	4083	;# 
  1600   000FF3                     PRODL           equ	4083	;# 
  1601   000FF4                     PRODH           equ	4084	;# 
  1602   000FF5                     TABLAT          equ	4085	;# 
  1603   000FF6                     TBLPTR          equ	4086	;# 
  1604   000FF6                     TBLPTRL         equ	4086	;# 
  1605   000FF7                     TBLPTRH         equ	4087	;# 
  1606   000FF8                     TBLPTRU         equ	4088	;# 
  1607   000FF9                     PCLAT           equ	4089	;# 
  1608   000FF9                     PC              equ	4089	;# 
  1609   000FF9                     PCL             equ	4089	;# 
  1610   000FFA                     PCLATH          equ	4090	;# 
  1611   000FFB                     PCLATU          equ	4091	;# 
  1612   000FFC                     STKPTR          equ	4092	;# 
  1613   000FFD                     TOS             equ	4093	;# 
  1614   000FFD                     TOSL            equ	4093	;# 
  1615   000FFE                     TOSH            equ	4094	;# 
  1616   000FFF                     TOSU            equ	4095	;# 
  1617   000F80                     PORTA           equ	3968	;# 
  1618   000F81                     PORTB           equ	3969	;# 
  1619   000F82                     PORTC           equ	3970	;# 
  1620   000F83                     PORTD           equ	3971	;# 
  1621   000F84                     PORTE           equ	3972	;# 
  1622   000F89                     LATA            equ	3977	;# 
  1623   000F8A                     LATB            equ	3978	;# 
  1624   000F8B                     LATC            equ	3979	;# 
  1625   000F8C                     LATD            equ	3980	;# 
  1626   000F8D                     LATE            equ	3981	;# 
  1627   000F92                     TRISA           equ	3986	;# 
  1628   000F92                     DDRA            equ	3986	;# 
  1629   000F93                     TRISB           equ	3987	;# 
  1630   000F93                     DDRB            equ	3987	;# 
  1631   000F94                     TRISC           equ	3988	;# 
  1632   000F94                     DDRC            equ	3988	;# 
  1633   000F95                     TRISD           equ	3989	;# 
  1634   000F95                     DDRD            equ	3989	;# 
  1635   000F96                     TRISE           equ	3990	;# 
  1636   000F96                     DDRE            equ	3990	;# 
  1637   000F9B                     OSCTUNE         equ	3995	;# 
  1638   000F9D                     PIE1            equ	3997	;# 
  1639   000F9E                     PIR1            equ	3998	;# 
  1640   000F9F                     IPR1            equ	3999	;# 
  1641   000FA0                     PIE2            equ	4000	;# 
  1642   000FA1                     PIR2            equ	4001	;# 
  1643   000FA2                     IPR2            equ	4002	;# 
  1644   000FA6                     EECON1          equ	4006	;# 
  1645   000FA7                     EECON2          equ	4007	;# 
  1646   000FA8                     EEDATA          equ	4008	;# 
  1647   000FA9                     EEADR           equ	4009	;# 
  1648   000FAA                     EEADRH          equ	4010	;# 
  1649   000FAB                     RCSTA           equ	4011	;# 
  1650   000FAB                     RCSTA1          equ	4011	;# 
  1651   000FAC                     TXSTA           equ	4012	;# 
  1652   000FAC                     TXSTA1          equ	4012	;# 
  1653   000FAD                     TXREG           equ	4013	;# 
  1654   000FAD                     TXREG1          equ	4013	;# 
  1655   000FAE                     RCREG           equ	4014	;# 
  1656   000FAE                     RCREG1          equ	4014	;# 
  1657   000FAF                     SPBRG           equ	4015	;# 
  1658   000FAF                     SPBRG1          equ	4015	;# 
  1659   000FB0                     SPBRGH          equ	4016	;# 
  1660   000FB1                     T3CON           equ	4017	;# 
  1661   000FB2                     TMR3            equ	4018	;# 
  1662   000FB2                     TMR3L           equ	4018	;# 
  1663   000FB3                     TMR3H           equ	4019	;# 
  1664   000FB4                     CMCON           equ	4020	;# 
  1665   000FB5                     CVRCON          equ	4021	;# 
  1666   000FB6                     ECCP1AS         equ	4022	;# 
  1667   000FB7                     PWM1CON         equ	4023	;# 
  1668   000FB8                     BAUDCON         equ	4024	;# 
  1669   000FB8                     BAUDCTL         equ	4024	;# 
  1670   000FBA                     CCP2CON         equ	4026	;# 
  1671   000FBB                     CCPR2           equ	4027	;# 
  1672   000FBB                     CCPR2L          equ	4027	;# 
  1673   000FBC                     CCPR2H          equ	4028	;# 
  1674   000FBD                     CCP1CON         equ	4029	;# 
  1675   000FBE                     CCPR1           equ	4030	;# 
  1676   000FBE                     CCPR1L          equ	4030	;# 
  1677   000FBF                     CCPR1H          equ	4031	;# 
  1678   000FC0                     ADCON2          equ	4032	;# 
  1679   000FC1                     ADCON1          equ	4033	;# 
  1680   000FC2                     ADCON0          equ	4034	;# 
  1681   000FC3                     ADRES           equ	4035	;# 
  1682   000FC3                     ADRESL          equ	4035	;# 
  1683   000FC4                     ADRESH          equ	4036	;# 
  1684   000FC5                     SSPCON2         equ	4037	;# 
  1685   000FC6                     SSPCON1         equ	4038	;# 
  1686   000FC7                     SSPSTAT         equ	4039	;# 
  1687   000FC8                     SSPADD          equ	4040	;# 
  1688   000FC9                     SSPBUF          equ	4041	;# 
  1689   000FCA                     T2CON           equ	4042	;# 
  1690   000FCB                     PR2             equ	4043	;# 
  1691   000FCB                     MEMCON          equ	4043	;# 
  1692   000FCC                     TMR2            equ	4044	;# 
  1693   000FCD                     T1CON           equ	4045	;# 
  1694   000FCE                     TMR1            equ	4046	;# 
  1695   000FCE                     TMR1L           equ	4046	;# 
  1696   000FCF                     TMR1H           equ	4047	;# 
  1697   000FD0                     RCON            equ	4048	;# 
  1698   000FD1                     WDTCON          equ	4049	;# 
  1699   000FD2                     HLVDCON         equ	4050	;# 
  1700   000FD2                     LVDCON          equ	4050	;# 
  1701   000FD3                     OSCCON          equ	4051	;# 
  1702   000FD5                     T0CON           equ	4053	;# 
  1703   000FD6                     TMR0            equ	4054	;# 
  1704   000FD6                     TMR0L           equ	4054	;# 
  1705   000FD7                     TMR0H           equ	4055	;# 
  1706   000FD8                     STATUS          equ	4056	;# 
  1707   000FD9                     FSR2            equ	4057	;# 
  1708   000FD9                     FSR2L           equ	4057	;# 
  1709   000FDA                     FSR2H           equ	4058	;# 
  1710   000FDB                     PLUSW2          equ	4059	;# 
  1711   000FDC                     PREINC2         equ	4060	;# 
  1712   000FDD                     POSTDEC2        equ	4061	;# 
  1713   000FDE                     POSTINC2        equ	4062	;# 
  1714   000FDF                     INDF2           equ	4063	;# 
  1715   000FE0                     BSR             equ	4064	;# 
  1716   000FE1                     FSR1            equ	4065	;# 
  1717   000FE1                     FSR1L           equ	4065	;# 
  1718   000FE2                     FSR1H           equ	4066	;# 
  1719   000FE3                     PLUSW1          equ	4067	;# 
  1720   000FE4                     PREINC1         equ	4068	;# 
  1721   000FE5                     POSTDEC1        equ	4069	;# 
  1722   000FE6                     POSTINC1        equ	4070	;# 
  1723   000FE7                     INDF1           equ	4071	;# 
  1724   000FE8                     WREG            equ	4072	;# 
  1725   000FE9                     FSR0            equ	4073	;# 
  1726   000FE9                     FSR0L           equ	4073	;# 
  1727   000FEA                     FSR0H           equ	4074	;# 
  1728   000FEB                     PLUSW0          equ	4075	;# 
  1729   000FEC                     PREINC0         equ	4076	;# 
  1730   000FED                     POSTDEC0        equ	4077	;# 
  1731   000FEE                     POSTINC0        equ	4078	;# 
  1732   000FEF                     INDF0           equ	4079	;# 
  1733   000FF0                     INTCON3         equ	4080	;# 
  1734   000FF1                     INTCON2         equ	4081	;# 
  1735   000FF2                     INTCON          equ	4082	;# 
  1736   000FF3                     PROD            equ	4083	;# 
  1737   000FF3                     PRODL           equ	4083	;# 
  1738   000FF4                     PRODH           equ	4084	;# 
  1739   000FF5                     TABLAT          equ	4085	;# 
  1740   000FF6                     TBLPTR          equ	4086	;# 
  1741   000FF6                     TBLPTRL         equ	4086	;# 
  1742   000FF7                     TBLPTRH         equ	4087	;# 
  1743   000FF8                     TBLPTRU         equ	4088	;# 
  1744   000FF9                     PCLAT           equ	4089	;# 
  1745   000FF9                     PC              equ	4089	;# 
  1746   000FF9                     PCL             equ	4089	;# 
  1747   000FFA                     PCLATH          equ	4090	;# 
  1748   000FFB                     PCLATU          equ	4091	;# 
  1749   000FFC                     STKPTR          equ	4092	;# 
  1750   000FFD                     TOS             equ	4093	;# 
  1751   000FFD                     TOSL            equ	4093	;# 
  1752   000FFE                     TOSH            equ	4094	;# 
  1753   000FFF                     TOSU            equ	4095	;# 
  1754   000F80                     PORTA           equ	3968	;# 
  1755   000F81                     PORTB           equ	3969	;# 
  1756   000F82                     PORTC           equ	3970	;# 
  1757   000F83                     PORTD           equ	3971	;# 
  1758   000F84                     PORTE           equ	3972	;# 
  1759   000F89                     LATA            equ	3977	;# 
  1760   000F8A                     LATB            equ	3978	;# 
  1761   000F8B                     LATC            equ	3979	;# 
  1762   000F8C                     LATD            equ	3980	;# 
  1763   000F8D                     LATE            equ	3981	;# 
  1764   000F92                     TRISA           equ	3986	;# 
  1765   000F92                     DDRA            equ	3986	;# 
  1766   000F93                     TRISB           equ	3987	;# 
  1767   000F93                     DDRB            equ	3987	;# 
  1768   000F94                     TRISC           equ	3988	;# 
  1769   000F94                     DDRC            equ	3988	;# 
  1770   000F95                     TRISD           equ	3989	;# 
  1771   000F95                     DDRD            equ	3989	;# 
  1772   000F96                     TRISE           equ	3990	;# 
  1773   000F96                     DDRE            equ	3990	;# 
  1774   000F9B                     OSCTUNE         equ	3995	;# 
  1775   000F9D                     PIE1            equ	3997	;# 
  1776   000F9E                     PIR1            equ	3998	;# 
  1777   000F9F                     IPR1            equ	3999	;# 
  1778   000FA0                     PIE2            equ	4000	;# 
  1779   000FA1                     PIR2            equ	4001	;# 
  1780   000FA2                     IPR2            equ	4002	;# 
  1781   000FA6                     EECON1          equ	4006	;# 
  1782   000FA7                     EECON2          equ	4007	;# 
  1783   000FA8                     EEDATA          equ	4008	;# 
  1784   000FA9                     EEADR           equ	4009	;# 
  1785   000FAA                     EEADRH          equ	4010	;# 
  1786   000FAB                     RCSTA           equ	4011	;# 
  1787   000FAB                     RCSTA1          equ	4011	;# 
  1788   000FAC                     TXSTA           equ	4012	;# 
  1789   000FAC                     TXSTA1          equ	4012	;# 
  1790   000FAD                     TXREG           equ	4013	;# 
  1791   000FAD                     TXREG1          equ	4013	;# 
  1792   000FAE                     RCREG           equ	4014	;# 
  1793   000FAE                     RCREG1          equ	4014	;# 
  1794   000FAF                     SPBRG           equ	4015	;# 
  1795   000FAF                     SPBRG1          equ	4015	;# 
  1796   000FB0                     SPBRGH          equ	4016	;# 
  1797   000FB1                     T3CON           equ	4017	;# 
  1798   000FB2                     TMR3            equ	4018	;# 
  1799   000FB2                     TMR3L           equ	4018	;# 
  1800   000FB3                     TMR3H           equ	4019	;# 
  1801   000FB4                     CMCON           equ	4020	;# 
  1802   000FB5                     CVRCON          equ	4021	;# 
  1803   000FB6                     ECCP1AS         equ	4022	;# 
  1804   000FB7                     PWM1CON         equ	4023	;# 
  1805   000FB8                     BAUDCON         equ	4024	;# 
  1806   000FB8                     BAUDCTL         equ	4024	;# 
  1807   000FBA                     CCP2CON         equ	4026	;# 
  1808   000FBB                     CCPR2           equ	4027	;# 
  1809   000FBB                     CCPR2L          equ	4027	;# 
  1810   000FBC                     CCPR2H          equ	4028	;# 
  1811   000FBD                     CCP1CON         equ	4029	;# 
  1812   000FBE                     CCPR1           equ	4030	;# 
  1813   000FBE                     CCPR1L          equ	4030	;# 
  1814   000FBF                     CCPR1H          equ	4031	;# 
  1815   000FC0                     ADCON2          equ	4032	;# 
  1816   000FC1                     ADCON1          equ	4033	;# 
  1817   000FC2                     ADCON0          equ	4034	;# 
  1818   000FC3                     ADRES           equ	4035	;# 
  1819   000FC3                     ADRESL          equ	4035	;# 
  1820   000FC4                     ADRESH          equ	4036	;# 
  1821   000FC5                     SSPCON2         equ	4037	;# 
  1822   000FC6                     SSPCON1         equ	4038	;# 
  1823   000FC7                     SSPSTAT         equ	4039	;# 
  1824   000FC8                     SSPADD          equ	4040	;# 
  1825   000FC9                     SSPBUF          equ	4041	;# 
  1826   000FCA                     T2CON           equ	4042	;# 
  1827   000FCB                     PR2             equ	4043	;# 
  1828   000FCB                     MEMCON          equ	4043	;# 
  1829   000FCC                     TMR2            equ	4044	;# 
  1830   000FCD                     T1CON           equ	4045	;# 
  1831   000FCE                     TMR1            equ	4046	;# 
  1832   000FCE                     TMR1L           equ	4046	;# 
  1833   000FCF                     TMR1H           equ	4047	;# 
  1834   000FD0                     RCON            equ	4048	;# 
  1835   000FD1                     WDTCON          equ	4049	;# 
  1836   000FD2                     HLVDCON         equ	4050	;# 
  1837   000FD2                     LVDCON          equ	4050	;# 
  1838   000FD3                     OSCCON          equ	4051	;# 
  1839   000FD5                     T0CON           equ	4053	;# 
  1840   000FD6                     TMR0            equ	4054	;# 
  1841   000FD6                     TMR0L           equ	4054	;# 
  1842   000FD7                     TMR0H           equ	4055	;# 
  1843   000FD8                     STATUS          equ	4056	;# 
  1844   000FD9                     FSR2            equ	4057	;# 
  1845   000FD9                     FSR2L           equ	4057	;# 
  1846   000FDA                     FSR2H           equ	4058	;# 
  1847   000FDB                     PLUSW2          equ	4059	;# 
  1848   000FDC                     PREINC2         equ	4060	;# 
  1849   000FDD                     POSTDEC2        equ	4061	;# 
  1850   000FDE                     POSTINC2        equ	4062	;# 
  1851   000FDF                     INDF2           equ	4063	;# 
  1852   000FE0                     BSR             equ	4064	;# 
  1853   000FE1                     FSR1            equ	4065	;# 
  1854   000FE1                     FSR1L           equ	4065	;# 
  1855   000FE2                     FSR1H           equ	4066	;# 
  1856   000FE3                     PLUSW1          equ	4067	;# 
  1857   000FE4                     PREINC1         equ	4068	;# 
  1858   000FE5                     POSTDEC1        equ	4069	;# 
  1859   000FE6                     POSTINC1        equ	4070	;# 
  1860   000FE7                     INDF1           equ	4071	;# 
  1861   000FE8                     WREG            equ	4072	;# 
  1862   000FE9                     FSR0            equ	4073	;# 
  1863   000FE9                     FSR0L           equ	4073	;# 
  1864   000FEA                     FSR0H           equ	4074	;# 
  1865   000FEB                     PLUSW0          equ	4075	;# 
  1866   000FEC                     PREINC0         equ	4076	;# 
  1867   000FED                     POSTDEC0        equ	4077	;# 
  1868   000FEE                     POSTINC0        equ	4078	;# 
  1869   000FEF                     INDF0           equ	4079	;# 
  1870   000FF0                     INTCON3         equ	4080	;# 
  1871   000FF1                     INTCON2         equ	4081	;# 
  1872   000FF2                     INTCON          equ	4082	;# 
  1873   000FF3                     PROD            equ	4083	;# 
  1874   000FF3                     PRODL           equ	4083	;# 
  1875   000FF4                     PRODH           equ	4084	;# 
  1876   000FF5                     TABLAT          equ	4085	;# 
  1877   000FF6                     TBLPTR          equ	4086	;# 
  1878   000FF6                     TBLPTRL         equ	4086	;# 
  1879   000FF7                     TBLPTRH         equ	4087	;# 
  1880   000FF8                     TBLPTRU         equ	4088	;# 
  1881   000FF9                     PCLAT           equ	4089	;# 
  1882   000FF9                     PC              equ	4089	;# 
  1883   000FF9                     PCL             equ	4089	;# 
  1884   000FFA                     PCLATH          equ	4090	;# 
  1885   000FFB                     PCLATU          equ	4091	;# 
  1886   000FFC                     STKPTR          equ	4092	;# 
  1887   000FFD                     TOS             equ	4093	;# 
  1888   000FFD                     TOSL            equ	4093	;# 
  1889   000FFE                     TOSH            equ	4094	;# 
  1890   000FFF                     TOSU            equ	4095	;# 
  1891                           
  1892                           	psect	idataCOMRAM
  1893   001D62                     __pidataCOMRAM:
  1894                           	callstack 0
  1895                           
  1896                           ;initializer for _KeyPad1
  1897   001D62  42                 	db	66
  1898   001D63  4A                 	db	74
  1899   001D64  52                 	db	82
  1900   001D65  5A                 	db	90
  1901   001D66  22                 	db	34
  1902   001D67  2A                 	db	42
  1903   001D68  32                 	db	50
  1904   001D69  3A                 	db	58
  1905                           
  1906                           ;initializer for _LCD1_4Bit
  1907   001D6A  41                 	db	65
  1908   001D6B  49                 	db	73
  1909   001D6C  51                 	db	81
  1910   001D6D  59                 	db	89
  1911   001D6E  61                 	db	97
  1912   001D6F  69                 	db	105
  1913                           
  1914                           ;initializer for _Seg1
  1915   001D70  41                 	db	65
  1916   001D71  49                 	db	73
  1917   001D72  51                 	db	81
  1918   001D73  59                 	db	89
  1919   001D74  00                 	db	0
  1920                           
  1921                           ;initializer for _BTN1
  1922   001D75  01                 	db	1
  1923   001D76  01                 	db	1
  1924   001D77  00                 	db	0
  1925                           
  1926                           ;initializer for _Motor2
  1927   001D78  21                 	db	33
  1928   001D79  31                 	db	49
  1929                           
  1930                           ;initializer for _Motor1
  1931   001D7A  01                 	db	1
  1932   001D7B  11                 	db	17
  1933                           
  1934                           ;initializer for _Num
  1935   001D7C  14                 	db	20
  1936                           
  1937                           ;initializer for _LCD1_8Bit
  1938   001D7D  42                 	db	66
  1939   001D7E  4A                 	db	74
  1940   001D7F  43                 	db	67
  1941   001D80  4B                 	db	75
  1942   001D81  53                 	db	83
  1943   001D82  5B                 	db	91
  1944   001D83  63                 	db	99
  1945   001D84  6B                 	db	107
  1946   001D85  73                 	db	115
  1947   001D86  7B                 	db	123
  1948                           
  1949                           	psect	smallconst
  1950   001000                     __psmallconst:
  1951                           	callstack 0
  1952   001000  00                 	db	0
  1953   001001                     _btn_Value:
  1954                           	callstack 0
  1955   001001  07                 	db	7
  1956   001002  08                 	db	8
  1957   001003  09                 	db	9
  1958   001004  2F                 	db	47
  1959   001005  04                 	db	4
  1960   001006  05                 	db	5
  1961   001007  06                 	db	6
  1962   001008  2A                 	db	42
  1963   001009  01                 	db	1
  1964   00100A  02                 	db	2
  1965   00100B  03                 	db	3
  1966   00100C  2D                 	db	45
  1967   00100D  23                 	db	35
  1968   00100E  00                 	db	0
  1969   00100F  3D                 	db	61
  1970   001010  2B                 	db	43
  1971   001011                     __end_of_btn_Value:
  1972                           	callstack 0
  1973   000F84                     _PORTE          set	3972
  1974   000F83                     _PORTD          set	3971
  1975   000F82                     _PORTC          set	3970
  1976   000F81                     _PORTB          set	3969
  1977   000F80                     _PORTA          set	3968
  1978   000F8D                     _LATE           set	3981
  1979   000F8C                     _LATD           set	3980
  1980   000F8B                     _LATC           set	3979
  1981   000F8A                     _LATB           set	3978
  1982   000F89                     _LATA           set	3977
  1983   000F96                     _TRISE          set	3990
  1984   000F95                     _TRISD          set	3989
  1985   000F94                     _TRISC          set	3988
  1986   000F93                     _TRISB          set	3987
  1987   000F92                     _TRISA          set	3986
  1988   001011                     STR_1:
  1989   001011  25                 	db	37
  1990   001012  69                 	db	105	;'i'
  1991   001013  00                 	db	0
  1992   001011                     STR_2           equ	STR_1
  1993   001011                     STR_3           equ	STR_1
  1994   001014  00                 	db	0	; dummy byte at the end
  1995   000002                     __activetblptr  equ	2
  1996                           
  1997                           ; #config settings
  1998                           
  1999                           	psect	cinit
  2000   001B6A                     __pcinit:
  2001                           	callstack 0
  2002   001B6A                     start_initialization:
  2003                           	callstack 0
  2004   001B6A                     __initialization:
  2005                           	callstack 0
  2006                           
  2007                           ; Initialize objects allocated to COMRAM (37 bytes)
  2008                           ; load TBLPTR registers with __pidataCOMRAM
  2009   001B6A  0E62               	movlw	low __pidataCOMRAM
  2010   001B6C  6EF6               	movwf	tblptrl,c
  2011   001B6E  0E1D               	movlw	high __pidataCOMRAM
  2012   001B70  6EF7               	movwf	tblptrh,c
  2013   001B72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2014   001B74  6EF8               	movwf	tblptru,c
  2015   001B76  EE00  F02E         	lfsr	0,__pdataCOMRAM
  2016   001B7A  EE10 F025          	lfsr	1,37
  2017   001B7E                     copy_data0:
  2018   001B7E  0009               	tblrd		*+
  2019   001B80  CFF5 FFEE          	movff	tablat,postinc0
  2020   001B84  50E5               	movf	postdec1,w,c
  2021   001B86  50E1               	movf	fsr1l,w,c
  2022   001B88  E1FA               	bnz	copy_data0
  2023                           
  2024                           ; Clear objects allocated to BANK0 (32 bytes)
  2025   001B8A  EE00  F080         	lfsr	0,__pbssBANK0
  2026   001B8E  0E20               	movlw	32
  2027   001B90                     clear_0:
  2028   001B90  6AEE               	clrf	postinc0,c
  2029   001B92  06E8               	decf	wreg,f,c
  2030   001B94  E1FD               	bnz	clear_0
  2031                           
  2032                           ; Clear objects allocated to COMRAM (22 bytes)
  2033   001B96  EE00  F053         	lfsr	0,__pbssCOMRAM
  2034   001B9A  0E16               	movlw	22
  2035   001B9C                     clear_1:
  2036   001B9C  6AEE               	clrf	postinc0,c
  2037   001B9E  06E8               	decf	wreg,f,c
  2038   001BA0  E1FD               	bnz	clear_1
  2039   001BA2                     end_of_initialization:
  2040                           	callstack 0
  2041   001BA2                     __end_of__initialization:
  2042                           	callstack 0
  2043   001BA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2044   001BA4  6EF8               	movwf	tblptru,c
  2045   001BA6  0100               	movlb	0
  2046   001BA8  EF9E  F00E         	goto	_main	;jump to C main() function
  2047                           
  2048                           	psect	bssCOMRAM
  2049   000053                     __pbssCOMRAM:
  2050                           	callstack 0
  2051   000053                     _width:
  2052                           	callstack 0
  2053   000053                     	ds	2
  2054   000055                     _prec:
  2055                           	callstack 0
  2056   000055                     	ds	2
  2057   000057                     _RetValue_BTN:
  2058                           	callstack 0
  2059   000057                     	ds	2
  2060   000059                     _RetValue_KeyPad:
  2061                           	callstack 0
  2062   000059                     	ds	2
  2063   00005B                     _flags:
  2064                           	callstack 0
  2065   00005B                     	ds	1
  2066   00005C                     HALL_Relay_turnOFF@F3064:
  2067                           	callstack 0
  2068   00005C                     	ds	1
  2069   00005D                     HALL_Relay_turnON@F3059:
  2070                           	callstack 0
  2071   00005D                     	ds	1
  2072   00005E                     HALL_Relay_init@F3054:
  2073                           	callstack 0
  2074   00005E                     	ds	1
  2075   00005F                     HALL_Led_trunToggle@F3075:
  2076                           	callstack 0
  2077   00005F                     	ds	1
  2078   000060                     HALL_Led_trunOFF@F3070:
  2079                           	callstack 0
  2080   000060                     	ds	1
  2081   000061                     HALL_Led_trunON@F3065:
  2082                           	callstack 0
  2083   000061                     	ds	1
  2084   000062                     HALL_Led_init@F3060:
  2085                           	callstack 0
  2086   000062                     	ds	1
  2087   000063                     _NumArr:
  2088                           	callstack 0
  2089   000063                     	ds	4
  2090   000067                     _objPin_motor_2:
  2091                           	callstack 0
  2092   000067                     	ds	1
  2093   000068                     _objPin_motor_1:
  2094                           	callstack 0
  2095   000068                     	ds	1
  2096                           
  2097                           	psect	dataCOMRAM
  2098   00002E                     __pdataCOMRAM:
  2099                           	callstack 0
  2100   00002E                     _KeyPad1:
  2101                           	callstack 0
  2102   00002E                     	ds	8
  2103   000036                     _LCD1_4Bit:
  2104                           	callstack 0
  2105   000036                     	ds	6
  2106   00003C                     _Seg1:
  2107                           	callstack 0
  2108   00003C                     	ds	5
  2109   000041                     _BTN1:
  2110                           	callstack 0
  2111   000041                     	ds	3
  2112   000044                     _Motor2:
  2113                           	callstack 0
  2114   000044                     	ds	2
  2115   000046                     _Motor1:
  2116                           	callstack 0
  2117   000046                     	ds	2
  2118   000048                     _Num:
  2119                           	callstack 0
  2120   000048                     	ds	1
  2121   000049                     _LCD1_8Bit:
  2122                           	callstack 0
  2123   000049                     	ds	10
  2124                           
  2125                           	psect	bssBANK0
  2126   000080                     __pbssBANK0:
  2127                           	callstack 0
  2128   000080                     _dbuf:
  2129                           	callstack 0
  2130   000080                     	ds	32
  2131                           
  2132                           	psect	cstackCOMRAM
  2133   000001                     __pcstackCOMRAM:
  2134                           	callstack 0
  2135   000001                     ?___awdiv:
  2136                           	callstack 0
  2137   000001                     ?___awmod:
  2138                           	callstack 0
  2139   000001                     Mcal_GPIO_initPinDirection@copyPinCFG:
  2140                           	callstack 0
  2141   000001                     MCAL_GPIO_writePinStatus@copyPinCFG:
  2142                           	callstack 0
  2143   000001                     memset@dest:
  2144                           	callstack 0
  2145   000001                     ___awdiv@dividend:
  2146                           	callstack 0
  2147   000001                     ___awmod@dividend:
  2148                           	callstack 0
  2149   000001                     fputc@c:
  2150                           	callstack 0
  2151   000001                     
  2152                           ; 1 bytes @ 0x0
  2153   000001                     	ds	1
  2154   000002                     MCAL_GPIO_writePinStatus@copyStatusPin:
  2155                           	callstack 0
  2156   000002                     memset@c:
  2157                           	callstack 0
  2158   000002                     ??_Mcal_GPIO_initPinDirection:
  2159                           
  2160                           ; 1 bytes @ 0x1
  2161   000002                     	ds	1
  2162   000003                     fputc@fp:
  2163                           	callstack 0
  2164   000003                     ___awdiv@divisor:
  2165                           	callstack 0
  2166   000003                     ___awmod@divisor:
  2167                           	callstack 0
  2168   000003                     ??_MCAL_GPIO_writePinStatus:
  2169                           
  2170                           ; 1 bytes @ 0x2
  2171   000003                     	ds	1
  2172   000004                     Mcal_GPIO_initPinDirection@retVal:
  2173                           	callstack 0
  2174   000004                     memset@n:
  2175                           	callstack 0
  2176   000004                     ??_fputc:
  2177                           
  2178                           ; 1 bytes @ 0x3
  2179   000004                     	ds	1
  2180   000005                     MCAL_GPIO_writePinStatus@retVal:
  2181                           	callstack 0
  2182   000005                     ___awdiv@counter:
  2183                           	callstack 0
  2184   000005                     ___awmod@counter:
  2185                           	callstack 0
  2186   000005                     
  2187                           ; 1 bytes @ 0x4
  2188   000005                     	ds	1
  2189   000006                     LCD_sendEnableSignal8Bits@copyLCD:
  2190                           	callstack 0
  2191   000006                     MCAL_GPIO_init@copyPinCFG:
  2192                           	callstack 0
  2193   000006                     ___awdiv@sign:
  2194                           	callstack 0
  2195   000006                     ___awmod@sign:
  2196                           	callstack 0
  2197   000006                     memset@p:
  2198                           	callstack 0
  2199   000006                     
  2200                           ; 1 bytes @ 0x5
  2201   000006                     	ds	1
  2202   000007                     ?_abs:
  2203                           	callstack 0
  2204   000007                     HALL_LCD_8bit_sendCMD@copyLCD:
  2205                           	callstack 0
  2206   000007                     HALL_LCD_8bit_sendChar@copyLCD:
  2207                           	callstack 0
  2208   000007                     MCAL_GPIO_init@retVal:
  2209                           	callstack 0
  2210   000007                     ___awdiv@quotient:
  2211                           	callstack 0
  2212   000007                     abs@a:
  2213                           	callstack 0
  2214   000007                     
  2215                           ; 1 bytes @ 0x6
  2216   000007                     	ds	1
  2217   000008                     HALL_LCD_8bit_sendCMD@copyCMD:
  2218                           	callstack 0
  2219   000008                     HALL_LCD_8bit_sendChar@copyData:
  2220                           	callstack 0
  2221                           
  2222                           ; 1 bytes @ 0x7
  2223   000008                     	ds	1
  2224   000009                     ??_HALL_LCD_8bit_sendCMD:
  2225   000009                     ??_abs:
  2226   000009                     ??_HALL_LCD_8bit_sendChar:
  2227                           
  2228                           ; 1 bytes @ 0x8
  2229   000009                     	ds	2
  2230   00000B                     HALL_LCD_8bit_sendCMD@Counter:
  2231                           	callstack 0
  2232   00000B                     HALL_LCD_8bit_sendChar@Counter:
  2233                           	callstack 0
  2234   00000B                     vfpfcnvrt@fp:
  2235                           	callstack 0
  2236                           
  2237                           ; 1 bytes @ 0xA
  2238   00000B                     	ds	1
  2239   00000C                     HALL_LCD_8bit_init@copyLCD:
  2240                           	callstack 0
  2241   00000C                     HALL_LCD_8bit_sendSTR@copyLCD:
  2242                           	callstack 0
  2243   00000C                     vfpfcnvrt@fmt:
  2244                           	callstack 0
  2245                           
  2246                           ; 1 bytes @ 0xB
  2247   00000C                     	ds	1
  2248   00000D                     HALL_LCD_8bit_sendSTR@copyData:
  2249                           	callstack 0
  2250   00000D                     vfpfcnvrt@ap:
  2251                           	callstack 0
  2252   00000D                     ??_HALL_LCD_8bit_init:
  2253                           
  2254                           ; 1 bytes @ 0xC
  2255   00000D                     	ds	1
  2256   00000E                     HALL_LCD_8bit_init@Counter:
  2257                           	callstack 0
  2258   00000E                     ??_vfpfcnvrt:
  2259                           
  2260                           ; 1 bytes @ 0xD
  2261   00000E                     	ds	1
  2262   00000F                     vfpfcnvrt@done:
  2263                           	callstack 0
  2264                           
  2265                           ; 1 bytes @ 0xE
  2266   00000F                     	ds	1
  2267   000010                     vfpfcnvrt@cp:
  2268                           	callstack 0
  2269                           
  2270                           ; 1 bytes @ 0xF
  2271   000010                     	ds	1
  2272   000011                     vfpfcnvrt@convarg:
  2273                           	callstack 0
  2274                           
  2275                           ; 4 bytes @ 0x10
  2276   000011                     	ds	4
  2277   000015                     vfpfcnvrt@c:
  2278                           	callstack 0
  2279                           
  2280                           ; 1 bytes @ 0x14
  2281   000015                     	ds	1
  2282   000016                     ?_vfprintf:
  2283                           	callstack 0
  2284   000016                     vfprintf@fp:
  2285                           	callstack 0
  2286                           
  2287                           ; 1 bytes @ 0x15
  2288   000016                     	ds	1
  2289   000017                     vfprintf@fmt:
  2290                           	callstack 0
  2291                           
  2292                           ; 1 bytes @ 0x16
  2293   000017                     	ds	1
  2294   000018                     vfprintf@ap:
  2295                           	callstack 0
  2296                           
  2297                           ; 1 bytes @ 0x17
  2298   000018                     	ds	1
  2299   000019                     vfprintf@cfmt:
  2300                           	callstack 0
  2301   000019                     
  2302                           ; 1 bytes @ 0x18
  2303   000019                     	ds	1
  2304   00001A                     ?_sprintf:
  2305                           	callstack 0
  2306   00001A                     sprintf@s:
  2307                           	callstack 0
  2308                           
  2309                           ; 1 bytes @ 0x19
  2310   00001A                     	ds	1
  2311   00001B                     sprintf@fmt:
  2312                           	callstack 0
  2313                           
  2314                           ; 1 bytes @ 0x1A
  2315   00001B                     	ds	5
  2316   000020                     sprintf@ap:
  2317                           	callstack 0
  2318   000020                     
  2319                           ; 1 bytes @ 0x1F
  2320   000020                     	ds	1
  2321   000021                     sprintf@f:
  2322                           	callstack 0
  2323                           
  2324                           ; 11 bytes @ 0x20
  2325   000021                     	ds	11
  2326   00002C                     HALL_LCD_convertU8toSTR@copySTR:
  2327                           	callstack 0
  2328                           
  2329                           ; 1 bytes @ 0x2B
  2330   00002C                     	ds	1
  2331   00002D                     HALL_LCD_convertU8toSTR@copyValue:
  2332                           	callstack 0
  2333   00002D                     
  2334                           ; 1 bytes @ 0x2C
  2335   00002D                     	ds	1
  2336   00002E                     
  2337                           ; 1 bytes @ 0x2D
  2338 ;;
  2339 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2340 ;;
  2341 ;; *************** function _main *****************
  2342 ;; Defined at:
  2343 ;;		line 12 in file "App/Main.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels required when called: 6
  2363 ;; This function calls:
  2364 ;;		_HALL_LCD_8bit_init
  2365 ;;		_HALL_LCD_8bit_sendSTR
  2366 ;;		_HALL_LCD_convertU8toSTR
  2367 ;; This function is called by:
  2368 ;;		Startup code after reset
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text0
  2373   001D3C                     __ptext0:
  2374                           	callstack 0
  2375   001D3C                     _main:
  2376                           	callstack 25
  2377   001D3C                     
  2378                           ;App/Main.c: 13:     HALL_LCD_8bit_init(&LCD1_8Bit);
  2379   001D3C  0E49               	movlw	low _LCD1_8Bit
  2380   001D3E  6E0C               	movwf	HALL_LCD_8bit_init@copyLCD^0,c
  2381   001D40  ECD4  F00B         	call	_HALL_LCD_8bit_init	;wreg free
  2382   001D44                     
  2383                           ;App/Main.c: 14:     HALL_LCD_convertU8toSTR(Num, NumArr);
  2384   001D44  0E63               	movlw	low _NumArr
  2385   001D46  6E2C               	movwf	HALL_LCD_convertU8toSTR@copySTR^0,c
  2386   001D48  0E14               	movlw	20
  2387   001D4A  ECD6  F00D         	call	_HALL_LCD_convertU8toSTR
  2388   001D4E                     
  2389                           ;App/Main.c: 15:     HALL_LCD_8bit_sendSTR(&LCD1_8Bit, NumArr);
  2390   001D4E  0E49               	movlw	low _LCD1_8Bit
  2391   001D50  6E0C               	movwf	HALL_LCD_8bit_sendSTR@copyLCD^0,c
  2392   001D52  0E63               	movlw	low _NumArr
  2393   001D54  6E0D               	movwf	HALL_LCD_8bit_sendSTR@copyData^0,c
  2394   001D56  ECF7  F00D         	call	_HALL_LCD_8bit_sendSTR	;wreg free
  2395   001D5A                     l33:
  2396   001D5A  EFAD  F00E         	goto	l33
  2397   001D5E  EF00  F000         	goto	start
  2398   001D62                     __end_of_main:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _HALL_LCD_convertU8toSTR *****************
  2402 ;; Defined at:
  2403 ;;		line 246 in file "Hall/LCD/Hall_lcd_prog.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  copyValue       1    wreg     unsigned char 
  2406 ;;  copySTR         1   43[COMRAM] PTR unsigned char 
  2407 ;;		 -> NumArr(4), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  copyValue       1   44[COMRAM] unsigned char 
  2410 ;;  RetValue        1    0        unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      unsigned char 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 5
  2427 ;; This function calls:
  2428 ;;		_memset
  2429 ;;		_sprintf
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text1
  2436   001BAC                     __ptext1:
  2437                           	callstack 0
  2438   001BAC                     _HALL_LCD_convertU8toSTR:
  2439                           	callstack 25
  2440                           
  2441                           ;incstack = 0
  2442                           ;HALL_LCD_convertU8toSTR@copyValue stored from wreg
  2443   001BAC  6E2D               	movwf	HALL_LCD_convertU8toSTR@copyValue^0,c
  2444   001BAE                     
  2445                           ;Hall/LCD/Hall_lcd_prog.c: 248:     if(copySTR == ((void*)0)) {
  2446   001BAE  502C               	movf	HALL_LCD_convertU8toSTR@copySTR^0,w,c
  2447   001BB0  A4D8               	btfss	status,2,c
  2448   001BB2  EFDD  F00D         	goto	u2341
  2449   001BB6  EFDF  F00D         	goto	u2340
  2450   001BBA                     u2341:
  2451   001BBA  EFE1  F00D         	goto	l3028
  2452   001BBE                     u2340:
  2453   001BBE                     
  2454                           ;Hall/LCD/Hall_lcd_prog.c: 250:     }
  2455   001BBE  EFF6  F00D         	goto	l252
  2456   001BC2                     l3028:
  2457                           
  2458                           ;Hall/LCD/Hall_lcd_prog.c: 252:         memset(copySTR, '\0', 4);
  2459   001BC2  C02C  F001         	movff	HALL_LCD_convertU8toSTR@copySTR,memset@dest
  2460   001BC6  0E00               	movlw	0
  2461   001BC8  6E03               	movwf	(memset@c+1)^0,c
  2462   001BCA  0E00               	movlw	0
  2463   001BCC  6E02               	movwf	memset@c^0,c
  2464   001BCE  0E00               	movlw	0
  2465   001BD0  6E05               	movwf	(memset@n+1)^0,c
  2466   001BD2  0E04               	movlw	4
  2467   001BD4  6E04               	movwf	memset@n^0,c
  2468   001BD6  EC86  F00E         	call	_memset	;wreg free
  2469   001BDA                     
  2470                           ;Hall/LCD/Hall_lcd_prog.c: 253:         sprintf(copySTR, "%i", copyValue);
  2471   001BDA  C02C  F01A         	movff	HALL_LCD_convertU8toSTR@copySTR,sprintf@s
  2472   001BDE  0E11               	movlw	low STR_1
  2473   001BE0  6E1B               	movwf	sprintf@fmt^0,c
  2474   001BE2  C02D  F01C         	movff	HALL_LCD_convertU8toSTR@copyValue,?_sprintf+2
  2475   001BE6  6A1D               	clrf	(?_sprintf+3)^0,c
  2476   001BE8  EC52  F00E         	call	_sprintf	;wreg free
  2477   001BEC                     l252:
  2478   001BEC  0012               	return		;funcret
  2479   001BEE                     __end_of_HALL_LCD_convertU8toSTR:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _sprintf *****************
  2483 ;; Defined at:
  2484 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  s               1   25[COMRAM] PTR unsigned char 
  2487 ;;		 -> NumArr(4), 
  2488 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  2489 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  f              11   32[COMRAM] struct _IO_FILE
  2492 ;;  ret             2    0        int 
  2493 ;;  ap              1   31[COMRAM] PTR void [1]
  2494 ;;		 -> ?_sprintf(2), 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  2   25[COMRAM] int 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2504 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;Total ram usage:       18 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 4
  2511 ;; This function calls:
  2512 ;;		_vfprintf
  2513 ;; This function is called by:
  2514 ;;		_HALL_LCD_convertU8toSTR
  2515 ;;		_HALL_LCD_convertU16toSTR
  2516 ;;		_HALL_LCD_convertU32toSTR
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text2
  2521   001CA4                     __ptext2:
  2522                           	callstack 0
  2523   001CA4                     _sprintf:
  2524                           	callstack 25
  2525   001CA4  0E1C               	movlw	low (?_sprintf+2)
  2526   001CA6  6E20               	movwf	sprintf@ap^0,c
  2527   001CA8  C01A  F021         	movff	sprintf@s,sprintf@f
  2528   001CAC  0E00               	movlw	0
  2529   001CAE  6E24               	movwf	(sprintf@f+3)^0,c
  2530   001CB0  0E00               	movlw	0
  2531   001CB2  6E23               	movwf	(sprintf@f+2)^0,c
  2532   001CB4  0E00               	movlw	0
  2533   001CB6  6E2B               	movwf	(sprintf@f+10)^0,c
  2534   001CB8  0E00               	movlw	0
  2535   001CBA  6E2A               	movwf	(sprintf@f+9)^0,c
  2536   001CBC  0E21               	movlw	low sprintf@f
  2537   001CBE  6E16               	movwf	vfprintf@fp^0,c
  2538   001CC0  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  2539   001CC4  0E20               	movlw	low sprintf@ap
  2540   001CC6  6E18               	movwf	vfprintf@ap^0,c
  2541   001CC8  EC17  F00E         	call	_vfprintf	;wreg free
  2542   001CCC  501A               	movf	sprintf@s^0,w,c
  2543   001CCE  2423               	addwf	(sprintf@f+2)^0,w,c
  2544   001CD0  6ED9               	movwf	fsr2l,c
  2545   001CD2  6ADA               	clrf	fsr2h,c
  2546   001CD4  6ADF               	clrf	indf2,c
  2547   001CD6  0012               	return		;funcret
  2548   001CD8                     __end_of_sprintf:
  2549                           	callstack 0
  2550                           
  2551 ;; *************** function _vfprintf *****************
  2552 ;; Defined at:
  2553 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  2556 ;;		 -> sprintf@f(11), 
  2557 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  2558 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2559 ;;  ap              1   23[COMRAM] PTR PTR void 
  2560 ;;		 -> sprintf@ap(1), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  2563 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2   21[COMRAM] int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2573 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;Total ram usage:        4 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 3
  2580 ;; This function calls:
  2581 ;;		_vfpfcnvrt
  2582 ;; This function is called by:
  2583 ;;		_sprintf
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text3
  2588   001C2E                     __ptext3:
  2589                           	callstack 0
  2590   001C2E                     _vfprintf:
  2591                           	callstack 25
  2592   001C2E                     
  2593                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2594   001C2E  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2597   001C32  EF23  F00E         	goto	l2890
  2598   001C36                     l2888:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2601   001C36  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2602   001C3A  0E19               	movlw	low vfprintf@cfmt
  2603   001C3C  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2604   001C3E  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2605   001C42  ECF8  F00A         	call	_vfpfcnvrt	;wreg free
  2606   001C46                     l2890:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2609   001C46  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  2610   001C4A                     	if	1	;There is more than 1 active tblptr byte
  2611   001C4A  0E10               	movlw	high __smallconst
  2612   001C4C  6EF7               	movwf	tblptrh,c
  2613   001C4E                     	endif
  2614   001C4E                     	if	0	;tblptru may be non-zero
  2615   001C4E                     	endif
  2616   001C4E                     	if	0	;tblptru may be non-zero
  2617   001C4E                     	endif
  2618   001C4E  0008               	tblrd		*
  2619   001C50  50F5               	movf	tablat,w,c
  2620   001C52  0900               	iorlw	0
  2621   001C54  A4D8               	btfss	status,2,c
  2622   001C56  EF2F  F00E         	goto	u2231
  2623   001C5A  EF31  F00E         	goto	u2230
  2624   001C5E                     u2231:
  2625   001C5E  EF1B  F00E         	goto	l2888
  2626   001C62                     u2230:
  2627   001C62                     
  2628                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2629   001C62  0E00               	movlw	0
  2630   001C64  6E17               	movwf	(?_vfprintf+1)^0,c
  2631   001C66  0E00               	movlw	0
  2632   001C68  6E16               	movwf	?_vfprintf^0,c
  2633   001C6A  0012               	return		;funcret
  2634   001C6C                     __end_of_vfprintf:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _vfpfcnvrt *****************
  2638 ;; Defined at:
  2639 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2642 ;;		 -> sprintf@f(11), 
  2643 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2644 ;;		 -> vfprintf@cfmt(1), 
  2645 ;;  ap              1   12[COMRAM] PTR PTR void 
  2646 ;;		 -> sprintf@ap(1), 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  convarg         4   16[COMRAM] struct .
  2649 ;;  c               1   20[COMRAM] unsigned char 
  2650 ;;  cp              1   15[COMRAM] PTR unsigned char 
  2651 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2652 ;;  done            1   14[COMRAM] _Bool 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:       11 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		___awdiv
  2671 ;;		___awmod
  2672 ;;		_abs
  2673 ;;		_fputc
  2674 ;; This function is called by:
  2675 ;;		_vfprintf
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text4
  2680   0015F0                     __ptext4:
  2681                           	callstack 0
  2682   0015F0                     _vfpfcnvrt:
  2683                           	callstack 25
  2684   0015F0                     
  2685                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2686   0015F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2687   0015F2  6ED9               	movwf	fsr2l,c
  2688   0015F4  6ADA               	clrf	fsr2h,c
  2689   0015F6  CFDF FFF6          	movff	indf2,tblptrl
  2690   0015FA                     	if	1	;There is more than 1 active tblptr byte
  2691   0015FA  0E10               	movlw	high __smallconst
  2692   0015FC  6EF7               	movwf	tblptrh,c
  2693   0015FE                     	endif
  2694   0015FE                     	if	0	;tblptru may be non-zero
  2695   0015FE                     	endif
  2696   0015FE                     	if	0	;tblptru may be non-zero
  2697   0015FE                     	endif
  2698   0015FE  0008               	tblrd		*
  2699   001600  50F5               	movf	tablat,w,c
  2700   001602  0A25               	xorlw	37
  2701   001604  A4D8               	btfss	status,2,c
  2702   001606  EF07  F00B         	goto	u1971
  2703   00160A  EF09  F00B         	goto	u1970
  2704   00160E                     u1971:
  2705   00160E  EFC2  F00B         	goto	l2818
  2706   001612                     u1970:
  2707   001612                     
  2708                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2709   001612  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2710   001614  6ED9               	movwf	fsr2l,c
  2711   001616  6ADA               	clrf	fsr2h,c
  2712   001618  2ADF               	incf	indf2,f,c
  2713   00161A                     
  2714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2715   00161A  0E00               	movlw	0
  2716   00161C  6E54               	movwf	(_width+1)^0,c
  2717   00161E  0E00               	movlw	0
  2718   001620  6E53               	movwf	_width^0,c
  2719   001622  C053  F05B         	movff	_width,_flags
  2720   001626                     
  2721                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2722   001626  6855               	setf	_prec^0,c
  2723   001628  6856               	setf	(_prec+1)^0,c
  2724   00162A                     
  2725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2726   00162A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2727   00162C  6ED9               	movwf	fsr2l,c
  2728   00162E  6ADA               	clrf	fsr2h,c
  2729   001630  50DF               	movf	indf2,w,c
  2730   001632  6E10               	movwf	vfpfcnvrt@cp^0,c
  2731   001634                     
  2732                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2733   001634  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2734   001638                     	if	1	;There is more than 1 active tblptr byte
  2735   001638  0E10               	movlw	high __smallconst
  2736   00163A  6EF7               	movwf	tblptrh,c
  2737   00163C                     	endif
  2738   00163C                     	if	0	;tblptru may be non-zero
  2739   00163C                     	endif
  2740   00163C                     	if	0	;tblptru may be non-zero
  2741   00163C                     	endif
  2742   00163C  0008               	tblrd		*
  2743   00163E  50F5               	movf	tablat,w,c
  2744   001640  0A64               	xorlw	100
  2745   001642  B4D8               	btfsc	status,2,c
  2746   001644  EF26  F00B         	goto	u1981
  2747   001648  EF28  F00B         	goto	u1980
  2748   00164C                     u1981:
  2749   00164C  EF36  F00B         	goto	l2788
  2750   001650                     u1980:
  2751   001650  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2752   001654                     	if	1	;There is more than 1 active tblptr byte
  2753   001654  0E10               	movlw	high __smallconst
  2754   001656  6EF7               	movwf	tblptrh,c
  2755   001658                     	endif
  2756   001658                     	if	0	;tblptru may be non-zero
  2757   001658                     	endif
  2758   001658                     	if	0	;tblptru may be non-zero
  2759   001658                     	endif
  2760   001658  0008               	tblrd		*
  2761   00165A  50F5               	movf	tablat,w,c
  2762   00165C  0A69               	xorlw	105
  2763   00165E  A4D8               	btfss	status,2,c
  2764   001660  EF34  F00B         	goto	u1991
  2765   001664  EF36  F00B         	goto	u1990
  2766   001668                     u1991:
  2767   001668  EFBC  F00B         	goto	l2814
  2768   00166C                     u1990:
  2769   00166C                     l2788:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2772   00166C  500D               	movf	vfpfcnvrt@ap^0,w,c
  2773   00166E  6ED9               	movwf	fsr2l,c
  2774   001670  6ADA               	clrf	fsr2h,c
  2775   001672  0E02               	movlw	2
  2776   001674  26DF               	addwf	indf2,f,c
  2777   001676  5CDF               	subwf	indf2,w,c
  2778   001678  6ED9               	movwf	fsr2l,c
  2779   00167A  6ADA               	clrf	fsr2h,c
  2780   00167C  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  2781   001680  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  2782   001684                     
  2783                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2784   001684  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2785   001686  6ED9               	movwf	fsr2l,c
  2786   001688  6ADA               	clrf	fsr2h,c
  2787   00168A  2810               	incf	vfpfcnvrt@cp^0,w,c
  2788   00168C  6EDF               	movwf	indf2,c
  2789   00168E                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2791   00168E  0E20               	movlw	32
  2792   001690  6E15               	movwf	vfpfcnvrt@c^0,c
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2795   001692  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2796   001694  EF4E  F00B         	goto	u2001
  2797   001698  EF51  F00B         	goto	u2000
  2798   00169C                     u2001:
  2799   00169C  0E01               	movlw	1
  2800   00169E  EF52  F00B         	goto	u2010
  2801   0016A2                     u2000:
  2802   0016A2  0E00               	movlw	0
  2803   0016A4                     u2010:
  2804   0016A4  6E0F               	movwf	vfpfcnvrt@done^0,c
  2805   0016A6                     l2794:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2808   0016A6  0615               	decf	vfpfcnvrt@c^0,f,c
  2809   0016A8  5015               	movf	vfpfcnvrt@c^0,w,c
  2810   0016AA  0F80               	addlw	low _dbuf
  2811   0016AC  6ED9               	movwf	fsr2l,c
  2812   0016AE  6ADA               	clrf	fsr2h,c
  2813   0016B0  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2814   0016B4  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2815   0016B8  0E00               	movlw	0
  2816   0016BA  6E04               	movwf	(___awmod@divisor+1)^0,c
  2817   0016BC  0E0A               	movlw	10
  2818   0016BE  6E03               	movwf	___awmod@divisor^0,c
  2819   0016C0  ECA1  F00C         	call	___awmod	;wreg free
  2820   0016C4  C001  F007         	movff	?___awmod,abs@a
  2821   0016C8  C002  F008         	movff	?___awmod+1,abs@a+1
  2822   0016CC  EC6C  F00E         	call	_abs	;wreg free
  2823   0016D0  5007               	movf	?_abs^0,w,c
  2824   0016D2  0F30               	addlw	48
  2825   0016D4  6EDF               	movwf	indf2,c
  2826   0016D6                     
  2827                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2828   0016D6  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2829   0016DA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2830   0016DE  0E00               	movlw	0
  2831   0016E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2832   0016E2  0E0A               	movlw	10
  2833   0016E4  6E03               	movwf	___awdiv@divisor^0,c
  2834   0016E6  EC40  F00C         	call	___awdiv	;wreg free
  2835   0016EA  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  2836   0016EE  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2837   0016F2                     
  2838                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2839   0016F2  5011               	movf	vfpfcnvrt@convarg^0,w,c
  2840   0016F4  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2841   0016F6  B4D8               	btfsc	status,2,c
  2842   0016F8  EF80  F00B         	goto	u2021
  2843   0016FC  EF82  F00B         	goto	u2020
  2844   001700                     u2021:
  2845   001700  EF8A  F00B         	goto	l2802
  2846   001704                     u2020:
  2847   001704  5015               	movf	vfpfcnvrt@c^0,w,c
  2848   001706  A4D8               	btfss	status,2,c
  2849   001708  EF88  F00B         	goto	u2031
  2850   00170C  EF8A  F00B         	goto	u2030
  2851   001710                     u2031:
  2852   001710  EF53  F00B         	goto	l2794
  2853   001714                     u2030:
  2854   001714                     l2802:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2857   001714  5015               	movf	vfpfcnvrt@c^0,w,c
  2858   001716  B4D8               	btfsc	status,2,c
  2859   001718  EF90  F00B         	goto	u2041
  2860   00171C  EF92  F00B         	goto	u2040
  2861   001720                     u2041:
  2862   001720  EFB1  F00B         	goto	l2812
  2863   001724                     u2040:
  2864   001724  500F               	movf	vfpfcnvrt@done^0,w,c
  2865   001726  B4D8               	btfsc	status,2,c
  2866   001728  EF98  F00B         	goto	u2051
  2867   00172C  EF9A  F00B         	goto	u2050
  2868   001730                     u2051:
  2869   001730  EFB1  F00B         	goto	l2812
  2870   001734                     u2050:
  2871   001734                     
  2872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2873   001734  0615               	decf	vfpfcnvrt@c^0,f,c
  2874   001736  5015               	movf	vfpfcnvrt@c^0,w,c
  2875   001738  0F80               	addlw	low _dbuf
  2876   00173A  6ED9               	movwf	fsr2l,c
  2877   00173C  6ADA               	clrf	fsr2h,c
  2878   00173E  0E2D               	movlw	45
  2879   001740  6EDF               	movwf	indf2,c
  2880   001742  EFB1  F00B         	goto	l2812
  2881   001746                     l2808:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2884   001746  5015               	movf	vfpfcnvrt@c^0,w,c
  2885   001748  0F80               	addlw	low _dbuf
  2886   00174A  6ED9               	movwf	fsr2l,c
  2887   00174C  6ADA               	clrf	fsr2h,c
  2888   00174E  50DF               	movf	indf2,w,c
  2889   001750  6E0E               	movwf	??_vfpfcnvrt^0,c
  2890   001752  500E               	movf	??_vfpfcnvrt^0,w,c
  2891   001754  6E01               	movwf	fputc@c^0,c
  2892   001756  6A02               	clrf	(fputc@c+1)^0,c
  2893   001758  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2894   00175C  ECF8  F00C         	call	_fputc	;wreg free
  2895   001760  2A15               	incf	vfpfcnvrt@c^0,f,c
  2896   001762                     l2812:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2899   001762  0E20               	movlw	32
  2900   001764  1815               	xorwf	vfpfcnvrt@c^0,w,c
  2901   001766  A4D8               	btfss	status,2,c
  2902   001768  EFB8  F00B         	goto	u2061
  2903   00176C  EFBA  F00B         	goto	u2060
  2904   001770                     u2061:
  2905   001770  EFA3  F00B         	goto	l2808
  2906   001774                     u2060:
  2907   001774  EFD3  F00B         	goto	l1304
  2908   001778                     l2814:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2911   001778  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2912   00177A  6ED9               	movwf	fsr2l,c
  2913   00177C  6ADA               	clrf	fsr2h,c
  2914   00177E  2ADF               	incf	indf2,f,c
  2915   001780  EFD3  F00B         	goto	l1304
  2916   001784                     l2818:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2919   001784  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2920   001786  6ED9               	movwf	fsr2l,c
  2921   001788  6ADA               	clrf	fsr2h,c
  2922   00178A  CFDF FFF6          	movff	indf2,tblptrl
  2923   00178E                     	if	1	;There is more than 1 active tblptr byte
  2924   00178E  0E10               	movlw	high __smallconst
  2925   001790  6EF7               	movwf	tblptrh,c
  2926   001792                     	endif
  2927   001792                     	if	0	;tblptru may be non-zero
  2928   001792                     	endif
  2929   001792                     	if	0	;tblptru may be non-zero
  2930   001792                     	endif
  2931   001792  0008               	tblrd		*
  2932   001794  50F5               	movf	tablat,w,c
  2933   001796  6E01               	movwf	fputc@c^0,c
  2934   001798  6A02               	clrf	(fputc@c+1)^0,c
  2935   00179A  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2936   00179E  ECF8  F00C         	call	_fputc	;wreg free
  2937   0017A2  EFBC  F00B         	goto	l2814
  2938   0017A6                     l1304:
  2939   0017A6  0012               	return		;funcret
  2940   0017A8                     __end_of_vfpfcnvrt:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _fputc *****************
  2944 ;; Defined at:
  2945 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  c               2    0[COMRAM] int 
  2948 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2949 ;;		 -> sprintf@f(11), 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2    0[COMRAM] int 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2961 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;Total ram usage:        8 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 1
  2968 ;; This function calls:
  2969 ;;		_putch
  2970 ;; This function is called by:
  2971 ;;		_vfpfcnvrt
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text5
  2976   0019F0                     __ptext5:
  2977                           	callstack 0
  2978   0019F0                     _fputc:
  2979                           	callstack 25
  2980   0019F0  5003               	movf	fputc@fp^0,w,c
  2981   0019F2  B4D8               	btfsc	status,2,c
  2982   0019F4  EFFE  F00C         	goto	u1811
  2983   0019F8  EF00  F00D         	goto	u1810
  2984   0019FC                     u1811:
  2985   0019FC  EF08  F00D         	goto	l2688
  2986   001A00                     u1810:
  2987   001A00  5003               	movf	fputc@fp^0,w,c
  2988   001A02  A4D8               	btfss	status,2,c
  2989   001A04  EF06  F00D         	goto	u1821
  2990   001A08  EF08  F00D         	goto	u1820
  2991   001A0C                     u1821:
  2992   001A0C  EF0D  F00D         	goto	l2690
  2993   001A10                     u1820:
  2994   001A10                     l2688:
  2995   001A10  5001               	movf	fputc@c^0,w,c
  2996   001A12  ECD4  F00E         	call	_putch
  2997   001A16  EF4C  F00D         	goto	l1329
  2998   001A1A                     l2690:
  2999   001A1A  5003               	movf	fputc@fp^0,w,c
  3000   001A1C  6ED9               	movwf	fsr2l,c
  3001   001A1E  6ADA               	clrf	fsr2h,c
  3002   001A20  0E09               	movlw	9
  3003   001A22  26D9               	addwf	fsr2l,f,c
  3004   001A24  50DE               	movf	postinc2,w,c
  3005   001A26  10DE               	iorwf	postinc2,w,c
  3006   001A28  B4D8               	btfsc	status,2,c
  3007   001A2A  EF19  F00D         	goto	u1831
  3008   001A2E  EF1B  F00D         	goto	u1830
  3009   001A32                     u1831:
  3010   001A32  EF34  F00D         	goto	l2694
  3011   001A36                     u1830:
  3012   001A36  5003               	movf	fputc@fp^0,w,c
  3013   001A38  6ED9               	movwf	fsr2l,c
  3014   001A3A  6ADA               	clrf	fsr2h,c
  3015   001A3C  0E09               	movlw	9
  3016   001A3E  26D9               	addwf	fsr2l,f,c
  3017   001A40  5003               	movf	fputc@fp^0,w,c
  3018   001A42  6EE1               	movwf	fsr1l,c
  3019   001A44  6AE2               	clrf	fsr1h,c
  3020   001A46  0E02               	movlw	2
  3021   001A48  26E1               	addwf	fsr1l,f,c
  3022   001A4A  50DE               	movf	postinc2,w,c
  3023   001A4C  5CE6               	subwf	postinc1,w,c
  3024   001A4E  50E6               	movf	postinc1,w,c
  3025   001A50  0A80               	xorlw	128
  3026   001A52  6E08               	movwf	(??_fputc+4)^0,c
  3027   001A54  50DE               	movf	postinc2,w,c
  3028   001A56  0A80               	xorlw	128
  3029   001A58  5808               	subwfb	(??_fputc+4)^0,w,c
  3030   001A5A  B0D8               	btfsc	status,0,c
  3031   001A5C  EF32  F00D         	goto	u1841
  3032   001A60  EF34  F00D         	goto	u1840
  3033   001A64                     u1841:
  3034   001A64  EF4C  F00D         	goto	l1329
  3035   001A68                     u1840:
  3036   001A68                     l2694:
  3037   001A68  5003               	movf	fputc@fp^0,w,c
  3038   001A6A  6ED9               	movwf	fsr2l,c
  3039   001A6C  6ADA               	clrf	fsr2h,c
  3040   001A6E  0E02               	movlw	2
  3041   001A70  26D9               	addwf	fsr2l,f,c
  3042   001A72  50DF               	movf	indf2,w,c
  3043   001A74  6E04               	movwf	??_fputc^0,c
  3044   001A76  5003               	movf	fputc@fp^0,w,c
  3045   001A78  6ED9               	movwf	fsr2l,c
  3046   001A7A  6ADA               	clrf	fsr2h,c
  3047   001A7C  50DF               	movf	indf2,w,c
  3048   001A7E  2404               	addwf	??_fputc^0,w,c
  3049   001A80  6ED9               	movwf	fsr2l,c
  3050   001A82  6ADA               	clrf	fsr2h,c
  3051   001A84  C001  FFDF         	movff	fputc@c,indf2
  3052   001A88  5003               	movf	fputc@fp^0,w,c
  3053   001A8A  6ED9               	movwf	fsr2l,c
  3054   001A8C  6ADA               	clrf	fsr2h,c
  3055   001A8E  0E02               	movlw	2
  3056   001A90  26D9               	addwf	fsr2l,f,c
  3057   001A92  2ADE               	incf	postinc2,f,c
  3058   001A94  0E00               	movlw	0
  3059   001A96  22DD               	addwfc	postdec2,f,c
  3060   001A98                     l1329:
  3061   001A98  0012               	return		;funcret
  3062   001A9A                     __end_of_fputc:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _putch *****************
  3066 ;; Defined at:
  3067 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  c               1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  c               1    0[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_fputc
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text6
  3095   001DA8                     __ptext6:
  3096                           	callstack 0
  3097   001DA8                     _putch:
  3098                           	callstack 25
  3099   001DA8  0012               	return		;funcret
  3100   001DAA                     __end_of_putch:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _abs *****************
  3104 ;; Defined at:
  3105 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  a               2    6[COMRAM] int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    6[COMRAM] int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;Total ram usage:        4 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_vfpfcnvrt
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text7
  3133   001CD8                     __ptext7:
  3134                           	callstack 0
  3135   001CD8                     _abs:
  3136                           	callstack 26
  3137   001CD8  BE08               	btfsc	(abs@a+1)^0,7,c
  3138   001CDA  EF71  F00E         	goto	u1851
  3139   001CDE  EF73  F00E         	goto	u1850
  3140   001CE2                     u1851:
  3141   001CE2  EF79  F00E         	goto	l1314
  3142   001CE6                     u1850:
  3143   001CE6  C007  F007         	movff	abs@a,?_abs
  3144   001CEA  C008  F008         	movff	abs@a+1,?_abs+1
  3145   001CEE  EF85  F00E         	goto	l1317
  3146   001CF2                     l1314:
  3147   001CF2  C007  F009         	movff	abs@a,??_abs
  3148   001CF6  C008  F00A         	movff	abs@a+1,??_abs+1
  3149   001CFA  1E09               	comf	??_abs^0,f,c
  3150   001CFC  1E0A               	comf	(??_abs+1)^0,f,c
  3151   001CFE  4A09               	infsnz	??_abs^0,f,c
  3152   001D00  2A0A               	incf	(??_abs+1)^0,f,c
  3153   001D02  C009  F007         	movff	??_abs,?_abs
  3154   001D06  C00A  F008         	movff	??_abs+1,?_abs+1
  3155   001D0A                     l1317:
  3156   001D0A  0012               	return		;funcret
  3157   001D0C                     __end_of_abs:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function ___awmod *****************
  3161 ;; Defined at:
  3162 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  dividend        2    0[COMRAM] int 
  3165 ;;  divisor         2    2[COMRAM] int 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  sign            1    5[COMRAM] unsigned char 
  3168 ;;  counter         1    4[COMRAM] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2    0[COMRAM] int 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;Total ram usage:        6 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_vfpfcnvrt
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text8
  3192   001942                     __ptext8:
  3193                           	callstack 0
  3194   001942                     ___awmod:
  3195                           	callstack 26
  3196   001942  6A06               	clrf	___awmod@sign^0,c
  3197   001944  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3198   001946  EFA9  F00C         	goto	u1750
  3199   00194A  EFA7  F00C         	goto	u1751
  3200   00194E                     u1751:
  3201   00194E  EFAF  F00C         	goto	l2656
  3202   001952                     u1750:
  3203   001952  6C01               	negf	___awmod@dividend^0,c
  3204   001954  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3205   001956  B0D8               	btfsc	status,0,c
  3206   001958  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3207   00195A  0E01               	movlw	1
  3208   00195C  6E06               	movwf	___awmod@sign^0,c
  3209   00195E                     l2656:
  3210   00195E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3211   001960  EFB6  F00C         	goto	u1760
  3212   001964  EFB4  F00C         	goto	u1761
  3213   001968                     u1761:
  3214   001968  EFBA  F00C         	goto	l2660
  3215   00196C                     u1760:
  3216   00196C  6C03               	negf	___awmod@divisor^0,c
  3217   00196E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3218   001970  B0D8               	btfsc	status,0,c
  3219   001972  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3220   001974                     l2660:
  3221   001974  5003               	movf	___awmod@divisor^0,w,c
  3222   001976  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3223   001978  B4D8               	btfsc	status,2,c
  3224   00197A  EFC1  F00C         	goto	u1771
  3225   00197E  EFC3  F00C         	goto	u1770
  3226   001982                     u1771:
  3227   001982  EFE7  F00C         	goto	l2676
  3228   001986                     u1770:
  3229   001986  0E01               	movlw	1
  3230   001988  6E05               	movwf	___awmod@counter^0,c
  3231   00198A  EFCB  F00C         	goto	l2666
  3232   00198E                     l2664:
  3233   00198E  90D8               	bcf	status,0,c
  3234   001990  3603               	rlcf	___awmod@divisor^0,f,c
  3235   001992  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3236   001994  2A05               	incf	___awmod@counter^0,f,c
  3237   001996                     l2666:
  3238   001996  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3239   001998  EFD0  F00C         	goto	u1781
  3240   00199C  EFD2  F00C         	goto	u1780
  3241   0019A0                     u1781:
  3242   0019A0  EFC7  F00C         	goto	l2664
  3243   0019A4                     u1780:
  3244   0019A4                     l2668:
  3245   0019A4  5003               	movf	___awmod@divisor^0,w,c
  3246   0019A6  5C01               	subwf	___awmod@dividend^0,w,c
  3247   0019A8  5004               	movf	(___awmod@divisor+1)^0,w,c
  3248   0019AA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3249   0019AC  A0D8               	btfss	status,0,c
  3250   0019AE  EFDB  F00C         	goto	u1791
  3251   0019B2  EFDD  F00C         	goto	u1790
  3252   0019B6                     u1791:
  3253   0019B6  EFE1  F00C         	goto	l2672
  3254   0019BA                     u1790:
  3255   0019BA  5003               	movf	___awmod@divisor^0,w,c
  3256   0019BC  5E01               	subwf	___awmod@dividend^0,f,c
  3257   0019BE  5004               	movf	(___awmod@divisor+1)^0,w,c
  3258   0019C0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3259   0019C2                     l2672:
  3260   0019C2  90D8               	bcf	status,0,c
  3261   0019C4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3262   0019C6  3203               	rrcf	___awmod@divisor^0,f,c
  3263   0019C8  2E05               	decfsz	___awmod@counter^0,f,c
  3264   0019CA  EFD2  F00C         	goto	l2668
  3265   0019CE                     l2676:
  3266   0019CE  5006               	movf	___awmod@sign^0,w,c
  3267   0019D0  B4D8               	btfsc	status,2,c
  3268   0019D2  EFED  F00C         	goto	u1801
  3269   0019D6  EFEF  F00C         	goto	u1800
  3270   0019DA                     u1801:
  3271   0019DA  EFF3  F00C         	goto	l2680
  3272   0019DE                     u1800:
  3273   0019DE  6C01               	negf	___awmod@dividend^0,c
  3274   0019E0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3275   0019E2  B0D8               	btfsc	status,0,c
  3276   0019E4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3277   0019E6                     l2680:
  3278   0019E6  C001  F001         	movff	___awmod@dividend,?___awmod
  3279   0019EA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3280   0019EE  0012               	return		;funcret
  3281   0019F0                     __end_of___awmod:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function ___awdiv *****************
  3285 ;; Defined at:
  3286 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  dividend        2    0[COMRAM] int 
  3289 ;;  divisor         2    2[COMRAM] int 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  quotient        2    6[COMRAM] int 
  3292 ;;  sign            1    5[COMRAM] unsigned char 
  3293 ;;  counter         1    4[COMRAM] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  2    0[COMRAM] int 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;Total ram usage:        8 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_vfpfcnvrt
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text9
  3317   001880                     __ptext9:
  3318                           	callstack 0
  3319   001880                     ___awdiv:
  3320                           	callstack 26
  3321   001880  6A06               	clrf	___awdiv@sign^0,c
  3322   001882  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3323   001884  EF48  F00C         	goto	u1690
  3324   001888  EF46  F00C         	goto	u1691
  3325   00188C                     u1691:
  3326   00188C  EF4E  F00C         	goto	l2612
  3327   001890                     u1690:
  3328   001890  6C03               	negf	___awdiv@divisor^0,c
  3329   001892  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3330   001894  B0D8               	btfsc	status,0,c
  3331   001896  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3332   001898  0E01               	movlw	1
  3333   00189A  6E06               	movwf	___awdiv@sign^0,c
  3334   00189C                     l2612:
  3335   00189C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3336   00189E  EF55  F00C         	goto	u1700
  3337   0018A2  EF53  F00C         	goto	u1701
  3338   0018A6                     u1701:
  3339   0018A6  EF5B  F00C         	goto	l2618
  3340   0018AA                     u1700:
  3341   0018AA  6C01               	negf	___awdiv@dividend^0,c
  3342   0018AC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3343   0018AE  B0D8               	btfsc	status,0,c
  3344   0018B0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3345   0018B2  0E01               	movlw	1
  3346   0018B4  1A06               	xorwf	___awdiv@sign^0,f,c
  3347   0018B6                     l2618:
  3348   0018B6  0E00               	movlw	0
  3349   0018B8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3350   0018BA  0E00               	movlw	0
  3351   0018BC  6E07               	movwf	___awdiv@quotient^0,c
  3352   0018BE  5003               	movf	___awdiv@divisor^0,w,c
  3353   0018C0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3354   0018C2  B4D8               	btfsc	status,2,c
  3355   0018C4  EF66  F00C         	goto	u1711
  3356   0018C8  EF68  F00C         	goto	u1710
  3357   0018CC                     u1711:
  3358   0018CC  EF90  F00C         	goto	l2640
  3359   0018D0                     u1710:
  3360   0018D0  0E01               	movlw	1
  3361   0018D2  6E05               	movwf	___awdiv@counter^0,c
  3362   0018D4  EF70  F00C         	goto	l2626
  3363   0018D8                     l2624:
  3364   0018D8  90D8               	bcf	status,0,c
  3365   0018DA  3603               	rlcf	___awdiv@divisor^0,f,c
  3366   0018DC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3367   0018DE  2A05               	incf	___awdiv@counter^0,f,c
  3368   0018E0                     l2626:
  3369   0018E0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3370   0018E2  EF75  F00C         	goto	u1721
  3371   0018E6  EF77  F00C         	goto	u1720
  3372   0018EA                     u1721:
  3373   0018EA  EF6C  F00C         	goto	l2624
  3374   0018EE                     u1720:
  3375   0018EE                     l2628:
  3376   0018EE  90D8               	bcf	status,0,c
  3377   0018F0  3607               	rlcf	___awdiv@quotient^0,f,c
  3378   0018F2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3379   0018F4  5003               	movf	___awdiv@divisor^0,w,c
  3380   0018F6  5C01               	subwf	___awdiv@dividend^0,w,c
  3381   0018F8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3382   0018FA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3383   0018FC  A0D8               	btfss	status,0,c
  3384   0018FE  EF83  F00C         	goto	u1731
  3385   001902  EF85  F00C         	goto	u1730
  3386   001906                     u1731:
  3387   001906  EF8A  F00C         	goto	l2636
  3388   00190A                     u1730:
  3389   00190A  5003               	movf	___awdiv@divisor^0,w,c
  3390   00190C  5E01               	subwf	___awdiv@dividend^0,f,c
  3391   00190E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3392   001910  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3393   001912  8007               	bsf	___awdiv@quotient^0,0,c
  3394   001914                     l2636:
  3395   001914  90D8               	bcf	status,0,c
  3396   001916  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3397   001918  3203               	rrcf	___awdiv@divisor^0,f,c
  3398   00191A  2E05               	decfsz	___awdiv@counter^0,f,c
  3399   00191C  EF77  F00C         	goto	l2628
  3400   001920                     l2640:
  3401   001920  5006               	movf	___awdiv@sign^0,w,c
  3402   001922  B4D8               	btfsc	status,2,c
  3403   001924  EF96  F00C         	goto	u1741
  3404   001928  EF98  F00C         	goto	u1740
  3405   00192C                     u1741:
  3406   00192C  EF9C  F00C         	goto	l2644
  3407   001930                     u1740:
  3408   001930  6C07               	negf	___awdiv@quotient^0,c
  3409   001932  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3410   001934  B0D8               	btfsc	status,0,c
  3411   001936  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3412   001938                     l2644:
  3413   001938  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3414   00193C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3415   001940  0012               	return		;funcret
  3416   001942                     __end_of___awdiv:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function _memset *****************
  3420 ;; Defined at:
  3421 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  dest            1    0[COMRAM] PTR void 
  3424 ;;		 -> NumArr(4), 
  3425 ;;  c               2    1[COMRAM] int 
  3426 ;;  n               2    3[COMRAM] unsigned int 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  p               1    5[COMRAM] PTR unsigned char 
  3429 ;;		 -> NumArr(4), 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    0[COMRAM] PTR void 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3439 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;Total ram usage:        6 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_HALL_LCD_convertU8toSTR
  3449 ;;		_HALL_LCD_convertU16toSTR
  3450 ;;		_HALL_LCD_convertU32toSTR
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text10
  3455   001D0C                     __ptext10:
  3456                           	callstack 0
  3457   001D0C                     _memset:
  3458                           	callstack 29
  3459   001D0C  C001  F006         	movff	memset@dest,memset@p
  3460   001D10  EF90  F00E         	goto	l2962
  3461   001D14                     l2958:
  3462   001D14  5006               	movf	memset@p^0,w,c
  3463   001D16  6ED9               	movwf	fsr2l,c
  3464   001D18  6ADA               	clrf	fsr2h,c
  3465   001D1A  C002  FFDF         	movff	memset@c,indf2
  3466   001D1E  2A06               	incf	memset@p^0,f,c
  3467   001D20                     l2962:
  3468   001D20  0604               	decf	memset@n^0,f,c
  3469   001D22  A0D8               	btfss	status,0,c
  3470   001D24  0605               	decf	(memset@n+1)^0,f,c
  3471   001D26  2804               	incf	memset@n^0,w,c
  3472   001D28  E106               	bnz	u2311
  3473   001D2A  2805               	incf	(memset@n+1)^0,w,c
  3474   001D2C  A4D8               	btfss	status,2,c
  3475   001D2E  EF9B  F00E         	goto	u2311
  3476   001D32  EF9D  F00E         	goto	u2310
  3477   001D36                     u2311:
  3478   001D36  EF8A  F00E         	goto	l2958
  3479   001D3A                     u2310:
  3480   001D3A  0012               	return		;funcret
  3481   001D3C                     __end_of_memset:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _HALL_LCD_8bit_sendSTR *****************
  3485 ;; Defined at:
  3486 ;;		line 200 in file "Hall/LCD/Hall_lcd_prog.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  copyLCD         1   11[COMRAM] PTR const struct .
  3489 ;;		 -> LCD1_8Bit(10), 
  3490 ;;  copyData        1   12[COMRAM] PTR unsigned char 
  3491 ;;		 -> NumArr(4), 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  RetValue        1    0        unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      unsigned char 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 3
  3510 ;; This function calls:
  3511 ;;		_HALL_LCD_8bit_sendChar
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text11
  3518   001BEE                     __ptext11:
  3519                           	callstack 0
  3520   001BEE                     _HALL_LCD_8bit_sendSTR:
  3521                           	callstack 27
  3522   001BEE                     
  3523                           ;Hall/LCD/Hall_lcd_prog.c: 202:     if(copyLCD == ((void*)0)) {
  3524   001BEE  500C               	movf	HALL_LCD_8bit_sendSTR@copyLCD^0,w,c
  3525   001BF0  A4D8               	btfss	status,2,c
  3526   001BF2  EFFD  F00D         	goto	u2351
  3527   001BF6  EFFF  F00D         	goto	u2350
  3528   001BFA                     u2351:
  3529   001BFA  EF0B  F00E         	goto	l3046
  3530   001BFE                     u2350:
  3531   001BFE                     
  3532                           ;Hall/LCD/Hall_lcd_prog.c: 204:     }
  3533   001BFE  EF16  F00E         	goto	l227
  3534   001C02                     l3042:
  3535                           
  3536                           ;Hall/LCD/Hall_lcd_prog.c: 207:             HALL_LCD_8bit_sendChar(copyLCD, *copyData++)
      +                          ;
  3537   001C02  C00C  F007         	movff	HALL_LCD_8bit_sendSTR@copyLCD,HALL_LCD_8bit_sendChar@copyLCD
  3538   001C06  500D               	movf	HALL_LCD_8bit_sendSTR@copyData^0,w,c
  3539   001C08  6ED9               	movwf	fsr2l,c
  3540   001C0A  6ADA               	clrf	fsr2h,c
  3541   001C0C  50DF               	movf	indf2,w,c
  3542   001C0E  6E08               	movwf	HALL_LCD_8bit_sendChar@copyData^0,c
  3543   001C10  EC4D  F00D         	call	_HALL_LCD_8bit_sendChar	;wreg free
  3544   001C14  2A0D               	incf	HALL_LCD_8bit_sendSTR@copyData^0,f,c
  3545   001C16                     l3046:
  3546                           
  3547                           ;Hall/LCD/Hall_lcd_prog.c: 206:         while(*copyData) {
  3548   001C16  500D               	movf	HALL_LCD_8bit_sendSTR@copyData^0,w,c
  3549   001C18  6ED9               	movwf	fsr2l,c
  3550   001C1A  6ADA               	clrf	fsr2h,c
  3551   001C1C  50DF               	movf	indf2,w,c
  3552   001C1E  A4D8               	btfss	status,2,c
  3553   001C20  EF14  F00E         	goto	u2361
  3554   001C24  EF16  F00E         	goto	u2360
  3555   001C28                     u2361:
  3556   001C28  EF01  F00E         	goto	l3042
  3557   001C2C                     u2360:
  3558   001C2C                     l227:
  3559   001C2C  0012               	return		;funcret
  3560   001C2E                     __end_of_HALL_LCD_8bit_sendSTR:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function _HALL_LCD_8bit_sendChar *****************
  3564 ;; Defined at:
  3565 ;;		line 173 in file "Hall/LCD/Hall_lcd_prog.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  copyLCD         1    6[COMRAM] PTR const struct .
  3568 ;;		 -> LCD1_8Bit(10), 
  3569 ;;  copyData        1    7[COMRAM] unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  Counter         1   10[COMRAM] unsigned char 
  3572 ;;  RetValue        1    0        unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      unsigned char 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;Total ram usage:        5 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 2
  3589 ;; This function calls:
  3590 ;;		_LCD_sendEnableSignal8Bits
  3591 ;;		_MCAL_GPIO_writePinStatus
  3592 ;; This function is called by:
  3593 ;;		_HALL_LCD_8bit_sendSTR
  3594 ;;		_HALL_LCD_8bit_sendCharPos
  3595 ;;		_HALL_LCD_8bit_sendSTRPos
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text12
  3600   001A9A                     __ptext12:
  3601                           	callstack 0
  3602   001A9A                     _HALL_LCD_8bit_sendChar:
  3603                           	callstack 27
  3604   001A9A                     
  3605                           ;Hall/LCD/Hall_lcd_prog.c: 175:     if(copyLCD == ((void*)0)) {
  3606   001A9A  5007               	movf	HALL_LCD_8bit_sendChar@copyLCD^0,w,c
  3607   001A9C  A4D8               	btfss	status,2,c
  3608   001A9E  EF53  F00D         	goto	u2281
  3609   001AA2  EF55  F00D         	goto	u2280
  3610   001AA6                     u2281:
  3611   001AA6  EF57  F00D         	goto	l2936
  3612   001AAA                     u2280:
  3613   001AAA                     
  3614                           ;Hall/LCD/Hall_lcd_prog.c: 177:     }
  3615   001AAA  EF80  F00D         	goto	l214
  3616   001AAE                     l2936:
  3617                           
  3618                           ;Hall/LCD/Hall_lcd_prog.c: 179:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO
      +                          _Status_High);
  3619   001AAE  C007  F001         	movff	HALL_LCD_8bit_sendChar@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  3620   001AB2  0E01               	movlw	1
  3621   001AB4  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3622   001AB6  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3623   001ABA                     
  3624                           ;Hall/LCD/Hall_lcd_prog.c: 180:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  3625   001ABA  6A0B               	clrf	HALL_LCD_8bit_sendChar@Counter^0,c
  3626   001ABC                     l2944:
  3627                           
  3628                           ;Hall/LCD/Hall_lcd_prog.c: 181:             MCAL_GPIO_writePinStatus(&(copyLCD->LCD_D[Co
      +                          unter]),(copyData >> Counter) & (uint8_t)0x01);
  3629   001ABC  5007               	movf	HALL_LCD_8bit_sendChar@copyLCD^0,w,c
  3630   001ABE  240B               	addwf	HALL_LCD_8bit_sendChar@Counter^0,w,c
  3631   001AC0  0F02               	addlw	2
  3632   001AC2  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  3633   001AC4  C00B  F009         	movff	HALL_LCD_8bit_sendChar@Counter,??_HALL_LCD_8bit_sendChar
  3634   001AC8  C008  F00A         	movff	HALL_LCD_8bit_sendChar@copyData,??_HALL_LCD_8bit_sendChar+1
  3635   001ACC  2A09               	incf	??_HALL_LCD_8bit_sendChar^0,f,c
  3636   001ACE  EF6B  F00D         	goto	u2294
  3637   001AD2                     u2295:
  3638   001AD2  90D8               	bcf	status,0,c
  3639   001AD4  320A               	rrcf	(??_HALL_LCD_8bit_sendChar+1)^0,f,c
  3640   001AD6                     u2294:
  3641   001AD6  2E09               	decfsz	??_HALL_LCD_8bit_sendChar^0,f,c
  3642   001AD8  EF69  F00D         	goto	u2295
  3643   001ADC  500A               	movf	(??_HALL_LCD_8bit_sendChar+1)^0,w,c
  3644   001ADE  0B01               	andlw	1
  3645   001AE0  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3646   001AE2  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3647   001AE6                     
  3648                           ;Hall/LCD/Hall_lcd_prog.c: 182:         }
  3649   001AE6  2A0B               	incf	HALL_LCD_8bit_sendChar@Counter^0,f,c
  3650   001AE8  0E07               	movlw	7
  3651   001AEA  640B               	cpfsgt	HALL_LCD_8bit_sendChar@Counter^0,c
  3652   001AEC  EF7A  F00D         	goto	u2301
  3653   001AF0  EF7C  F00D         	goto	u2300
  3654   001AF4                     u2301:
  3655   001AF4  EF5E  F00D         	goto	l2944
  3656   001AF8                     u2300:
  3657   001AF8                     
  3658                           ;Hall/LCD/Hall_lcd_prog.c: 183:         LCD_sendEnableSignal8Bits(copyLCD);
  3659   001AF8  C007  F006         	movff	HALL_LCD_8bit_sendChar@copyLCD,LCD_sendEnableSignal8Bits@copyLCD
  3660   001AFC  ECC4  F00E         	call	_LCD_sendEnableSignal8Bits	;wreg free
  3661   001B00                     l214:
  3662   001B00  0012               	return		;funcret
  3663   001B02                     __end_of_HALL_LCD_8bit_sendChar:
  3664                           	callstack 0
  3665                           
  3666 ;; *************** function _HALL_LCD_8bit_init *****************
  3667 ;; Defined at:
  3668 ;;		line 130 in file "Hall/LCD/Hall_lcd_prog.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  copyLCD         1   11[COMRAM] PTR const struct .
  3671 ;;		 -> LCD1_8Bit(10), 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  Counter         1   13[COMRAM] unsigned char 
  3674 ;;  RetValue        1    0        unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      unsigned char 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;Total ram usage:        3 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 3
  3691 ;; This function calls:
  3692 ;;		_HALL_LCD_8bit_sendCMD
  3693 ;;		_MCAL_GPIO_init
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text13
  3700   0017A8                     __ptext13:
  3701                           	callstack 0
  3702   0017A8                     _HALL_LCD_8bit_init:
  3703                           	callstack 27
  3704   0017A8                     
  3705                           ;Hall/LCD/Hall_lcd_prog.c: 132:     if(copyLCD == ((void*)0)) {
  3706   0017A8  500C               	movf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3707   0017AA  A4D8               	btfss	status,2,c
  3708   0017AC  EFDA  F00B         	goto	u2321
  3709   0017B0  EFDC  F00B         	goto	u2320
  3710   0017B4                     u2321:
  3711   0017B4  EFDE  F00B         	goto	l2982
  3712   0017B8                     u2320:
  3713   0017B8                     
  3714                           ;Hall/LCD/Hall_lcd_prog.c: 134:     }
  3715   0017B8  EF3F  F00C         	goto	l200
  3716   0017BC                     l2982:
  3717                           
  3718                           ;Hall/LCD/Hall_lcd_prog.c: 136:         MCAL_GPIO_init(&(copyLCD->LCD_rs));
  3719   0017BC  C00C  F006         	movff	HALL_LCD_8bit_init@copyLCD,MCAL_GPIO_init@copyPinCFG
  3720   0017C0  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3721                           
  3722                           ;Hall/LCD/Hall_lcd_prog.c: 137:         MCAL_GPIO_init(&(copyLCD->LCD_en));
  3723   0017C4  280C               	incf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3724   0017C6  6E06               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  3725   0017C8  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3726   0017CC                     
  3727                           ;Hall/LCD/Hall_lcd_prog.c: 138:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  3728   0017CC  6A0E               	clrf	HALL_LCD_8bit_init@Counter^0,c
  3729   0017CE                     l2990:
  3730                           
  3731                           ;Hall/LCD/Hall_lcd_prog.c: 139:             MCAL_GPIO_init(&(copyLCD->LCD_D[Counter]));
  3732   0017CE  500C               	movf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3733   0017D0  240E               	addwf	HALL_LCD_8bit_init@Counter^0,w,c
  3734   0017D2  0F02               	addlw	2
  3735   0017D4  6E06               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  3736   0017D6  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3737   0017DA                     
  3738                           ;Hall/LCD/Hall_lcd_prog.c: 140:         }
  3739   0017DA  2A0E               	incf	HALL_LCD_8bit_init@Counter^0,f,c
  3740   0017DC  0E07               	movlw	7
  3741   0017DE  640E               	cpfsgt	HALL_LCD_8bit_init@Counter^0,c
  3742   0017E0  EFF4  F00B         	goto	u2331
  3743   0017E4  EFF6  F00B         	goto	u2330
  3744   0017E8                     u2331:
  3745   0017E8  EFE7  F00B         	goto	l2990
  3746   0017EC                     u2330:
  3747   0017EC                     
  3748                           ;Hall/LCD/Hall_lcd_prog.c: 141:         _delay((unsigned long)((20)*(4000000U/4000.0)));
  3749   0017EC  0E1A               	movlw	26
  3750   0017EE  6E0D               	movwf	??_HALL_LCD_8bit_init^0,c
  3751   0017F0  0EF8               	movlw	248
  3752   0017F2                     u2887:
  3753   0017F2  2EE8               	decfsz	wreg,f,c
  3754   0017F4  D7FE               	bra	u2887
  3755   0017F6  2E0D               	decfsz	??_HALL_LCD_8bit_init^0,f,c
  3756   0017F8  D7FC               	bra	u2887
  3757   0017FA  D000               	nop2	
  3758   0017FC                     
  3759                           ;Hall/LCD/Hall_lcd_prog.c: 142:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3760   0017FC  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3761   001800  0E38               	movlw	56
  3762   001802  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3763   001804  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3764   001808                     
  3765                           ;Hall/LCD/Hall_lcd_prog.c: 143:         _delay((unsigned long)((5)*(4000000U/4000.0)));
  3766   001808  0E07               	movlw	7
  3767   00180A  6E0D               	movwf	??_HALL_LCD_8bit_init^0,c
  3768   00180C  0E7D               	movlw	125
  3769   00180E                     u2897:
  3770   00180E  2EE8               	decfsz	wreg,f,c
  3771   001810  D7FE               	bra	u2897
  3772   001812  2E0D               	decfsz	??_HALL_LCD_8bit_init^0,f,c
  3773   001814  D7FC               	bra	u2897
  3774   001816  0000               	nop	
  3775                           
  3776                           ;Hall/LCD/Hall_lcd_prog.c: 144:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3777   001818  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3778   00181C  0E38               	movlw	56
  3779   00181E  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3780   001820  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3781   001824                     
  3782                           ;Hall/LCD/Hall_lcd_prog.c: 145:         _delay((unsigned long)((150)*(4000000U/4000000.0
      +                          )));
  3783   001824  0E32               	movlw	50
  3784   001826                     u2907:
  3785   001826  2EE8               	decfsz	wreg,f,c
  3786   001828  D7FE               	bra	u2907
  3787   00182A                     
  3788                           ;Hall/LCD/Hall_lcd_prog.c: 146:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3789   00182A  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3790   00182E  0E38               	movlw	56
  3791   001830  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3792   001832  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3793   001836                     
  3794                           ;Hall/LCD/Hall_lcd_prog.c: 147:         HALL_LCD_8bit_sendCMD(copyLCD, 0x01);
  3795   001836  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3796   00183A  0E01               	movlw	1
  3797   00183C  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3798   00183E  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3799   001842                     
  3800                           ;Hall/LCD/Hall_lcd_prog.c: 148:         HALL_LCD_8bit_sendCMD(copyLCD, 0x02);
  3801   001842  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3802   001846  0E02               	movlw	2
  3803   001848  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3804   00184A  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3805   00184E                     
  3806                           ;Hall/LCD/Hall_lcd_prog.c: 149:         HALL_LCD_8bit_sendCMD(copyLCD, 0x06);
  3807   00184E  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3808   001852  0E06               	movlw	6
  3809   001854  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3810   001856  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3811   00185A                     
  3812                           ;Hall/LCD/Hall_lcd_prog.c: 150:         HALL_LCD_8bit_sendCMD(copyLCD, 0x0C);
  3813   00185A  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3814   00185E  0E0C               	movlw	12
  3815   001860  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3816   001862  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3817   001866                     
  3818                           ;Hall/LCD/Hall_lcd_prog.c: 151:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3819   001866  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3820   00186A  0E38               	movlw	56
  3821   00186C  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3822   00186E  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3823   001872                     
  3824                           ;Hall/LCD/Hall_lcd_prog.c: 152:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3825   001872  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3826   001876  0E38               	movlw	56
  3827   001878  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3828   00187A  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3829   00187E                     l200:
  3830   00187E  0012               	return		;funcret
  3831   001880                     __end_of_HALL_LCD_8bit_init:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _MCAL_GPIO_init *****************
  3835 ;; Defined at:
  3836 ;;		line 274 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  copyPinCFG      1    5[COMRAM] PTR const struct .
  3839 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  3840 ;;		 -> objPin_motor_1(1), LCD1_8Bit(10), 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  retVal          1    6[COMRAM] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      unsigned char 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;Total ram usage:        2 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 1
  3859 ;; This function calls:
  3860 ;;		_MCAL_GPIO_writePinStatus
  3861 ;;		_Mcal_GPIO_initPinDirection
  3862 ;; This function is called by:
  3863 ;;		_HALL_LCD_8bit_init
  3864 ;;		_HALL_DC_MOTOR_init
  3865 ;;		_HALL_KeyPad_init
  3866 ;;		_HALL_LCD_4bit_init
  3867 ;;		_HALL_Led_init
  3868 ;;		_HALL_Relay_init
  3869 ;;		_HALL_SEVEN_SEGEMENT_init
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text14
  3874   001C6C                     __ptext14:
  3875                           	callstack 0
  3876   001C6C                     _MCAL_GPIO_init:
  3877                           	callstack 28
  3878   001C6C                     
  3879                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 276:     if(copyPinCFG == ((void*)0)) {
  3880   001C6C  5006               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  3881   001C6E  A4D8               	btfss	status,2,c
  3882   001C70  EF3C  F00E         	goto	u2241
  3883   001C74  EF3E  F00E         	goto	u2240
  3884   001C78                     u2241:
  3885   001C78  EF40  F00E         	goto	l2900
  3886   001C7C                     u2240:
  3887   001C7C                     
  3888                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 278:     }
  3889   001C7C  EF51  F00E         	goto	l523
  3890   001C80                     l2900:
  3891                           
  3892                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 280:         retVal = Mcal_GPIO_initPinDirection(copyP
      +                          inCFG);
  3893   001C80  C006  F001         	movff	MCAL_GPIO_init@copyPinCFG,Mcal_GPIO_initPinDirection@copyPinCFG
  3894   001C84  EC0B  F008         	call	_Mcal_GPIO_initPinDirection	;wreg free
  3895   001C88  6E07               	movwf	MCAL_GPIO_init@retVal^0,c
  3896                           
  3897                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 281:         retVal = MCAL_GPIO_writePinStatus(copyPin
      +                          CFG,copyPinCFG->Status);
  3898   001C8A  C006  F001         	movff	MCAL_GPIO_init@copyPinCFG,MCAL_GPIO_writePinStatus@copyPinCFG
  3899   001C8E  5006               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  3900   001C90  6ED9               	movwf	fsr2l,c
  3901   001C92  6ADA               	clrf	fsr2h,c
  3902   001C94  0E00               	movlw	0
  3903   001C96  BEDF               	btfsc	indf2,7,c
  3904   001C98  0E01               	movlw	1
  3905   001C9A  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3906   001C9C  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3907   001CA0  6E07               	movwf	MCAL_GPIO_init@retVal^0,c
  3908   001CA2                     l523:
  3909   001CA2  0012               	return		;funcret
  3910   001CA4                     __end_of_MCAL_GPIO_init:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _Mcal_GPIO_initPinDirection *****************
  3914 ;; Defined at:
  3915 ;;		line 11 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  copyPinCFG      1    0[COMRAM] PTR const struct .
  3918 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  3919 ;;		 -> objPin_motor_1(1), HALL_BTN_init@copyBTN(2), LCD1_8Bit(10), 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  retVal          1    3[COMRAM] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      unsigned char 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3931 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;Total ram usage:        4 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_MCAL_GPIO_init
  3941 ;;		_HALL_BTN_init
  3942 ;;		_HALL_KeyPad_init
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text15
  3947   001016                     __ptext15:
  3948                           	callstack 0
  3949   001016                     _Mcal_GPIO_initPinDirection:
  3950                           	callstack 28
  3951   001016                     
  3952                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 13:     uint8_t retVal = (Std_Return)1;
  3953   001016  0E01               	movlw	1
  3954   001018  6E04               	movwf	Mcal_GPIO_initPinDirection@retVal^0,c
  3955                           
  3956                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 14:     if(copyPinCFG == ((void*)0)) {
  3957   00101A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3958   00101C  A4D8               	btfss	status,2,c
  3959   00101E  EF13  F008         	goto	u2071
  3960   001022  EF15  F008         	goto	u2070
  3961   001026                     u2071:
  3962   001026  EF67  F009         	goto	l2870
  3963   00102A                     u2070:
  3964   00102A                     l2826:
  3965                           
  3966                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 15:         retVal = (Std_Return)0;
  3967   00102A  6A04               	clrf	Mcal_GPIO_initPinDirection@retVal^0,c
  3968                           
  3969                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 16:     }
  3970   00102C  EF82  F009         	goto	l2872
  3971   001030                     l2828:
  3972                           
  3973                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 22:                         TRISA &= ~ (1 << copyPinCF
      +                          G->Pin);
  3974   001030  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3975   001032  6ED9               	movwf	fsr2l,c
  3976   001034  6ADA               	clrf	fsr2h,c
  3977   001036  30DF               	rrcf	223,w,c
  3978   001038  32E8               	rrcf	wreg,f,c
  3979   00103A  32E8               	rrcf	wreg,f,c
  3980   00103C  0B07               	andlw	7
  3981   00103E  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3982   001040  0E01               	movlw	1
  3983   001042  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3984   001044  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3985   001046  EF27  F008         	goto	u2084
  3986   00104A                     u2085:
  3987   00104A  90D8               	bcf	status,0,c
  3988   00104C  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3989   00104E                     u2084:
  3990   00104E  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3991   001050  EF25  F008         	goto	u2085
  3992   001054  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3993   001056  0AFF               	xorlw	255
  3994   001058  1692               	andwf	146,f,c	;volatile
  3995                           
  3996                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 23:                         break;
  3997   00105A  EF82  F009         	goto	l2872
  3998   00105E                     l2830:
  3999                           
  4000                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 25:                         TRISA |= (1 << copyPinCFG-
      +                          >Pin);
  4001   00105E  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4002   001060  6ED9               	movwf	fsr2l,c
  4003   001062  6ADA               	clrf	fsr2h,c
  4004   001064  30DF               	rrcf	223,w,c
  4005   001066  32E8               	rrcf	wreg,f,c
  4006   001068  32E8               	rrcf	wreg,f,c
  4007   00106A  0B07               	andlw	7
  4008   00106C  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4009   00106E  0E01               	movlw	1
  4010   001070  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4011   001072  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4012   001074  EF3E  F008         	goto	u2094
  4013   001078                     u2095:
  4014   001078  90D8               	bcf	status,0,c
  4015   00107A  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4016   00107C                     u2094:
  4017   00107C  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4018   00107E  EF3C  F008         	goto	u2095
  4019   001082  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4020   001084  1292               	iorwf	146,f,c	;volatile
  4021                           
  4022                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 26:                         break;
  4023   001086  EF82  F009         	goto	l2872
  4024   00108A                     l2834:
  4025   00108A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4026   00108C  6ED9               	movwf	fsr2l,c
  4027   00108E  6ADA               	clrf	fsr2h,c
  4028   001090  BCDF               	btfsc	indf2,6,c
  4029   001092  EF4D  F008         	goto	u2101
  4030   001096  EF50  F008         	goto	u2100
  4031   00109A                     u2101:
  4032   00109A  0E01               	movlw	1
  4033   00109C  EF51  F008         	goto	u2106
  4034   0010A0                     u2100:
  4035   0010A0  0E00               	movlw	0
  4036   0010A2                     u2106:
  4037                           
  4038                           ; Switch size 1, requested type "simple"
  4039                           ; Number of cases is 2, Range of values is 0 to 1
  4040                           ; switch strategies available:
  4041                           ; Name         Instructions Cycles
  4042                           ; simple_byte            7     4 (average)
  4043                           ;	Chosen strategy is simple_byte
  4044   0010A2  0A00               	xorlw	0	; case 0
  4045   0010A4  B4D8               	btfsc	status,2,c
  4046   0010A6  EF2F  F008         	goto	l2830
  4047   0010AA  0A01               	xorlw	1	; case 1
  4048   0010AC  B4D8               	btfsc	status,2,c
  4049   0010AE  EF18  F008         	goto	l2828
  4050   0010B2  EF82  F009         	goto	l2872
  4051   0010B6                     l2836:
  4052                           
  4053                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 33:                         TRISB &= ~ (1 << copyPinCF
      +                          G->Pin);
  4054   0010B6  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4055   0010B8  6ED9               	movwf	fsr2l,c
  4056   0010BA  6ADA               	clrf	fsr2h,c
  4057   0010BC  30DF               	rrcf	223,w,c
  4058   0010BE  32E8               	rrcf	wreg,f,c
  4059   0010C0  32E8               	rrcf	wreg,f,c
  4060   0010C2  0B07               	andlw	7
  4061   0010C4  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4062   0010C6  0E01               	movlw	1
  4063   0010C8  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4064   0010CA  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4065   0010CC  EF6A  F008         	goto	u2114
  4066   0010D0                     u2115:
  4067   0010D0  90D8               	bcf	status,0,c
  4068   0010D2  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4069   0010D4                     u2114:
  4070   0010D4  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4071   0010D6  EF68  F008         	goto	u2115
  4072   0010DA  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4073   0010DC  0AFF               	xorlw	255
  4074   0010DE  1693               	andwf	147,f,c	;volatile
  4075                           
  4076                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 34:                         break;
  4077   0010E0  EF82  F009         	goto	l2872
  4078   0010E4                     l2838:
  4079                           
  4080                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 36:                         TRISB |= (1 << copyPinCFG-
      +                          >Pin);
  4081   0010E4  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4082   0010E6  6ED9               	movwf	fsr2l,c
  4083   0010E8  6ADA               	clrf	fsr2h,c
  4084   0010EA  30DF               	rrcf	223,w,c
  4085   0010EC  32E8               	rrcf	wreg,f,c
  4086   0010EE  32E8               	rrcf	wreg,f,c
  4087   0010F0  0B07               	andlw	7
  4088   0010F2  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4089   0010F4  0E01               	movlw	1
  4090   0010F6  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4091   0010F8  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4092   0010FA  EF81  F008         	goto	u2124
  4093   0010FE                     u2125:
  4094   0010FE  90D8               	bcf	status,0,c
  4095   001100  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4096   001102                     u2124:
  4097   001102  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4098   001104  EF7F  F008         	goto	u2125
  4099   001108  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4100   00110A  1293               	iorwf	147,f,c	;volatile
  4101                           
  4102                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 37:                         break;
  4103   00110C  EF82  F009         	goto	l2872
  4104   001110                     l2842:
  4105   001110  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4106   001112  6ED9               	movwf	fsr2l,c
  4107   001114  6ADA               	clrf	fsr2h,c
  4108   001116  BCDF               	btfsc	indf2,6,c
  4109   001118  EF90  F008         	goto	u2131
  4110   00111C  EF93  F008         	goto	u2130
  4111   001120                     u2131:
  4112   001120  0E01               	movlw	1
  4113   001122  EF94  F008         	goto	u2136
  4114   001126                     u2130:
  4115   001126  0E00               	movlw	0
  4116   001128                     u2136:
  4117                           
  4118                           ; Switch size 1, requested type "simple"
  4119                           ; Number of cases is 2, Range of values is 0 to 1
  4120                           ; switch strategies available:
  4121                           ; Name         Instructions Cycles
  4122                           ; simple_byte            7     4 (average)
  4123                           ;	Chosen strategy is simple_byte
  4124   001128  0A00               	xorlw	0	; case 0
  4125   00112A  B4D8               	btfsc	status,2,c
  4126   00112C  EF72  F008         	goto	l2838
  4127   001130  0A01               	xorlw	1	; case 1
  4128   001132  B4D8               	btfsc	status,2,c
  4129   001134  EF5B  F008         	goto	l2836
  4130   001138  EF82  F009         	goto	l2872
  4131   00113C                     l2844:
  4132                           
  4133                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 44:                         TRISC &= ~ (1 << copyPinCF
      +                          G->Pin);
  4134   00113C  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4135   00113E  6ED9               	movwf	fsr2l,c
  4136   001140  6ADA               	clrf	fsr2h,c
  4137   001142  30DF               	rrcf	223,w,c
  4138   001144  32E8               	rrcf	wreg,f,c
  4139   001146  32E8               	rrcf	wreg,f,c
  4140   001148  0B07               	andlw	7
  4141   00114A  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4142   00114C  0E01               	movlw	1
  4143   00114E  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4144   001150  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4145   001152  EFAD  F008         	goto	u2144
  4146   001156                     u2145:
  4147   001156  90D8               	bcf	status,0,c
  4148   001158  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4149   00115A                     u2144:
  4150   00115A  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4151   00115C  EFAB  F008         	goto	u2145
  4152   001160  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4153   001162  0AFF               	xorlw	255
  4154   001164  1694               	andwf	148,f,c	;volatile
  4155                           
  4156                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 45:                         break;
  4157   001166  EF82  F009         	goto	l2872
  4158   00116A                     l2846:
  4159                           
  4160                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 47:                         TRISC |= (1 << copyPinCFG-
      +                          >Pin);
  4161   00116A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4162   00116C  6ED9               	movwf	fsr2l,c
  4163   00116E  6ADA               	clrf	fsr2h,c
  4164   001170  30DF               	rrcf	223,w,c
  4165   001172  32E8               	rrcf	wreg,f,c
  4166   001174  32E8               	rrcf	wreg,f,c
  4167   001176  0B07               	andlw	7
  4168   001178  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4169   00117A  0E01               	movlw	1
  4170   00117C  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4171   00117E  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4172   001180  EFC4  F008         	goto	u2154
  4173   001184                     u2155:
  4174   001184  90D8               	bcf	status,0,c
  4175   001186  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4176   001188                     u2154:
  4177   001188  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4178   00118A  EFC2  F008         	goto	u2155
  4179   00118E  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4180   001190  1294               	iorwf	148,f,c	;volatile
  4181                           
  4182                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 48:                         break;
  4183   001192  EF82  F009         	goto	l2872
  4184   001196                     l2850:
  4185   001196  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4186   001198  6ED9               	movwf	fsr2l,c
  4187   00119A  6ADA               	clrf	fsr2h,c
  4188   00119C  BCDF               	btfsc	indf2,6,c
  4189   00119E  EFD3  F008         	goto	u2161
  4190   0011A2  EFD6  F008         	goto	u2160
  4191   0011A6                     u2161:
  4192   0011A6  0E01               	movlw	1
  4193   0011A8  EFD7  F008         	goto	u2166
  4194   0011AC                     u2160:
  4195   0011AC  0E00               	movlw	0
  4196   0011AE                     u2166:
  4197                           
  4198                           ; Switch size 1, requested type "simple"
  4199                           ; Number of cases is 2, Range of values is 0 to 1
  4200                           ; switch strategies available:
  4201                           ; Name         Instructions Cycles
  4202                           ; simple_byte            7     4 (average)
  4203                           ;	Chosen strategy is simple_byte
  4204   0011AE  0A00               	xorlw	0	; case 0
  4205   0011B0  B4D8               	btfsc	status,2,c
  4206   0011B2  EFB5  F008         	goto	l2846
  4207   0011B6  0A01               	xorlw	1	; case 1
  4208   0011B8  B4D8               	btfsc	status,2,c
  4209   0011BA  EF9E  F008         	goto	l2844
  4210   0011BE  EF82  F009         	goto	l2872
  4211   0011C2                     l2852:
  4212                           
  4213                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 55:                         TRISD &= ~ (1 << copyPinCF
      +                          G->Pin);
  4214   0011C2  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4215   0011C4  6ED9               	movwf	fsr2l,c
  4216   0011C6  6ADA               	clrf	fsr2h,c
  4217   0011C8  30DF               	rrcf	223,w,c
  4218   0011CA  32E8               	rrcf	wreg,f,c
  4219   0011CC  32E8               	rrcf	wreg,f,c
  4220   0011CE  0B07               	andlw	7
  4221   0011D0  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4222   0011D2  0E01               	movlw	1
  4223   0011D4  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4224   0011D6  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4225   0011D8  EFF0  F008         	goto	u2174
  4226   0011DC                     u2175:
  4227   0011DC  90D8               	bcf	status,0,c
  4228   0011DE  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4229   0011E0                     u2174:
  4230   0011E0  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4231   0011E2  EFEE  F008         	goto	u2175
  4232   0011E6  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4233   0011E8  0AFF               	xorlw	255
  4234   0011EA  1695               	andwf	149,f,c	;volatile
  4235                           
  4236                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 56:                         break;
  4237   0011EC  EF82  F009         	goto	l2872
  4238   0011F0                     l2854:
  4239                           
  4240                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 58:                         TRISD |= (1 << copyPinCFG-
      +                          >Pin);
  4241   0011F0  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4242   0011F2  6ED9               	movwf	fsr2l,c
  4243   0011F4  6ADA               	clrf	fsr2h,c
  4244   0011F6  30DF               	rrcf	223,w,c
  4245   0011F8  32E8               	rrcf	wreg,f,c
  4246   0011FA  32E8               	rrcf	wreg,f,c
  4247   0011FC  0B07               	andlw	7
  4248   0011FE  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4249   001200  0E01               	movlw	1
  4250   001202  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4251   001204  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4252   001206  EF07  F009         	goto	u2184
  4253   00120A                     u2185:
  4254   00120A  90D8               	bcf	status,0,c
  4255   00120C  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4256   00120E                     u2184:
  4257   00120E  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4258   001210  EF05  F009         	goto	u2185
  4259   001214  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4260   001216  1295               	iorwf	149,f,c	;volatile
  4261                           
  4262                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 59:                         break;
  4263   001218  EF82  F009         	goto	l2872
  4264   00121C                     l2858:
  4265   00121C  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4266   00121E  6ED9               	movwf	fsr2l,c
  4267   001220  6ADA               	clrf	fsr2h,c
  4268   001222  BCDF               	btfsc	indf2,6,c
  4269   001224  EF16  F009         	goto	u2191
  4270   001228  EF19  F009         	goto	u2190
  4271   00122C                     u2191:
  4272   00122C  0E01               	movlw	1
  4273   00122E  EF1A  F009         	goto	u2196
  4274   001232                     u2190:
  4275   001232  0E00               	movlw	0
  4276   001234                     u2196:
  4277                           
  4278                           ; Switch size 1, requested type "simple"
  4279                           ; Number of cases is 2, Range of values is 0 to 1
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            7     4 (average)
  4283                           ;	Chosen strategy is simple_byte
  4284   001234  0A00               	xorlw	0	; case 0
  4285   001236  B4D8               	btfsc	status,2,c
  4286   001238  EFF8  F008         	goto	l2854
  4287   00123C  0A01               	xorlw	1	; case 1
  4288   00123E  B4D8               	btfsc	status,2,c
  4289   001240  EFE1  F008         	goto	l2852
  4290   001244  EF82  F009         	goto	l2872
  4291   001248                     l2860:
  4292                           
  4293                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 66:                         TRISE &= ~ (1 << copyPinCF
      +                          G->Pin);
  4294   001248  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4295   00124A  6ED9               	movwf	fsr2l,c
  4296   00124C  6ADA               	clrf	fsr2h,c
  4297   00124E  30DF               	rrcf	223,w,c
  4298   001250  32E8               	rrcf	wreg,f,c
  4299   001252  32E8               	rrcf	wreg,f,c
  4300   001254  0B07               	andlw	7
  4301   001256  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4302   001258  0E01               	movlw	1
  4303   00125A  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4304   00125C  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4305   00125E  EF33  F009         	goto	u2204
  4306   001262                     u2205:
  4307   001262  90D8               	bcf	status,0,c
  4308   001264  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4309   001266                     u2204:
  4310   001266  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4311   001268  EF31  F009         	goto	u2205
  4312   00126C  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4313   00126E  0AFF               	xorlw	255
  4314   001270  1696               	andwf	150,f,c	;volatile
  4315                           
  4316                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 67:                         break;
  4317   001272  EF82  F009         	goto	l2872
  4318   001276                     l2862:
  4319                           
  4320                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 69:                         TRISE |= (1 << copyPinCFG-
      +                          >Pin);
  4321   001276  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4322   001278  6ED9               	movwf	fsr2l,c
  4323   00127A  6ADA               	clrf	fsr2h,c
  4324   00127C  30DF               	rrcf	223,w,c
  4325   00127E  32E8               	rrcf	wreg,f,c
  4326   001280  32E8               	rrcf	wreg,f,c
  4327   001282  0B07               	andlw	7
  4328   001284  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4329   001286  0E01               	movlw	1
  4330   001288  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4331   00128A  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4332   00128C  EF4A  F009         	goto	u2214
  4333   001290                     u2215:
  4334   001290  90D8               	bcf	status,0,c
  4335   001292  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4336   001294                     u2214:
  4337   001294  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4338   001296  EF48  F009         	goto	u2215
  4339   00129A  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4340   00129C  1296               	iorwf	150,f,c	;volatile
  4341                           
  4342                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 70:                         break;
  4343   00129E  EF82  F009         	goto	l2872
  4344   0012A2                     l2866:
  4345   0012A2  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4346   0012A4  6ED9               	movwf	fsr2l,c
  4347   0012A6  6ADA               	clrf	fsr2h,c
  4348   0012A8  BCDF               	btfsc	indf2,6,c
  4349   0012AA  EF59  F009         	goto	u2221
  4350   0012AE  EF5C  F009         	goto	u2220
  4351   0012B2                     u2221:
  4352   0012B2  0E01               	movlw	1
  4353   0012B4  EF5D  F009         	goto	u2226
  4354   0012B8                     u2220:
  4355   0012B8  0E00               	movlw	0
  4356   0012BA                     u2226:
  4357                           
  4358                           ; Switch size 1, requested type "simple"
  4359                           ; Number of cases is 2, Range of values is 0 to 1
  4360                           ; switch strategies available:
  4361                           ; Name         Instructions Cycles
  4362                           ; simple_byte            7     4 (average)
  4363                           ;	Chosen strategy is simple_byte
  4364   0012BA  0A00               	xorlw	0	; case 0
  4365   0012BC  B4D8               	btfsc	status,2,c
  4366   0012BE  EF3B  F009         	goto	l2862
  4367   0012C2  0A01               	xorlw	1	; case 1
  4368   0012C4  B4D8               	btfsc	status,2,c
  4369   0012C6  EF24  F009         	goto	l2860
  4370   0012CA  EF82  F009         	goto	l2872
  4371   0012CE                     l2870:
  4372   0012CE  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4373   0012D0  6ED9               	movwf	fsr2l,c
  4374   0012D2  6ADA               	clrf	fsr2h,c
  4375   0012D4  50DF               	movf	223,w,c
  4376   0012D6  0B07               	andlw	7
  4377                           
  4378                           ; Switch size 1, requested type "simple"
  4379                           ; Number of cases is 5, Range of values is 0 to 4
  4380                           ; switch strategies available:
  4381                           ; Name         Instructions Cycles
  4382                           ; simple_byte           16     9 (average)
  4383                           ;	Chosen strategy is simple_byte
  4384   0012D8  0A00               	xorlw	0	; case 0
  4385   0012DA  B4D8               	btfsc	status,2,c
  4386   0012DC  EF45  F008         	goto	l2834
  4387   0012E0  0A01               	xorlw	1	; case 1
  4388   0012E2  B4D8               	btfsc	status,2,c
  4389   0012E4  EF88  F008         	goto	l2842
  4390   0012E8  0A03               	xorlw	3	; case 2
  4391   0012EA  B4D8               	btfsc	status,2,c
  4392   0012EC  EFCB  F008         	goto	l2850
  4393   0012F0  0A01               	xorlw	1	; case 3
  4394   0012F2  B4D8               	btfsc	status,2,c
  4395   0012F4  EF0E  F009         	goto	l2858
  4396   0012F8  0A07               	xorlw	7	; case 4
  4397   0012FA  B4D8               	btfsc	status,2,c
  4398   0012FC  EF51  F009         	goto	l2866
  4399   001300  EF15  F008         	goto	l2826
  4400   001304                     l2872:
  4401                           
  4402                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 78:     return retVal;
  4403   001304  5004               	movf	Mcal_GPIO_initPinDirection@retVal^0,w,c
  4404   001306  0012               	return		;funcret
  4405   001308                     __end_of_Mcal_GPIO_initPinDirection:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _HALL_LCD_8bit_sendCMD *****************
  4409 ;; Defined at:
  4410 ;;		line 158 in file "Hall/LCD/Hall_lcd_prog.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  copyLCD         1    6[COMRAM] PTR const struct .
  4413 ;;		 -> LCD1_8Bit(10), 
  4414 ;;  copyCMD         1    7[COMRAM] unsigned char 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  Counter         1   10[COMRAM] unsigned char 
  4417 ;;  RetValue        1    0        unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      unsigned char 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;Total ram usage:        5 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 2
  4434 ;; This function calls:
  4435 ;;		_LCD_sendEnableSignal8Bits
  4436 ;;		_MCAL_GPIO_writePinStatus
  4437 ;; This function is called by:
  4438 ;;		_HALL_LCD_8bit_init
  4439 ;;		_HALL_LCD_8bit_goto
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text16
  4444   001B02                     __ptext16:
  4445                           	callstack 0
  4446   001B02                     _HALL_LCD_8bit_sendCMD:
  4447                           	callstack 27
  4448   001B02                     
  4449                           ;Hall/LCD/Hall_lcd_prog.c: 160:     if(copyLCD == ((void*)0)) {
  4450   001B02  5007               	movf	HALL_LCD_8bit_sendCMD@copyLCD^0,w,c
  4451   001B04  A4D8               	btfss	status,2,c
  4452   001B06  EF87  F00D         	goto	u2251
  4453   001B0A  EF89  F00D         	goto	u2250
  4454   001B0E                     u2251:
  4455   001B0E  EF8B  F00D         	goto	l2910
  4456   001B12                     u2250:
  4457   001B12                     
  4458                           ;Hall/LCD/Hall_lcd_prog.c: 162:     }
  4459   001B12  EFB4  F00D         	goto	l207
  4460   001B16                     l2910:
  4461                           
  4462                           ;Hall/LCD/Hall_lcd_prog.c: 164:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO
      +                          _Status_Low);
  4463   001B16  C007  F001         	movff	HALL_LCD_8bit_sendCMD@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  4464   001B1A  0E00               	movlw	0
  4465   001B1C  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4466   001B1E  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4467   001B22                     
  4468                           ;Hall/LCD/Hall_lcd_prog.c: 165:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  4469   001B22  6A0B               	clrf	HALL_LCD_8bit_sendCMD@Counter^0,c
  4470   001B24                     l2918:
  4471                           
  4472                           ;Hall/LCD/Hall_lcd_prog.c: 166:             MCAL_GPIO_writePinStatus(&(copyLCD->LCD_D[Co
      +                          unter]),(copyCMD >> Counter) & (uint8_t)0x01);
  4473   001B24  5007               	movf	HALL_LCD_8bit_sendCMD@copyLCD^0,w,c
  4474   001B26  240B               	addwf	HALL_LCD_8bit_sendCMD@Counter^0,w,c
  4475   001B28  0F02               	addlw	2
  4476   001B2A  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4477   001B2C  C00B  F009         	movff	HALL_LCD_8bit_sendCMD@Counter,??_HALL_LCD_8bit_sendCMD
  4478   001B30  C008  F00A         	movff	HALL_LCD_8bit_sendCMD@copyCMD,??_HALL_LCD_8bit_sendCMD+1
  4479   001B34  2A09               	incf	??_HALL_LCD_8bit_sendCMD^0,f,c
  4480   001B36  EF9F  F00D         	goto	u2264
  4481   001B3A                     u2265:
  4482   001B3A  90D8               	bcf	status,0,c
  4483   001B3C  320A               	rrcf	(??_HALL_LCD_8bit_sendCMD+1)^0,f,c
  4484   001B3E                     u2264:
  4485   001B3E  2E09               	decfsz	??_HALL_LCD_8bit_sendCMD^0,f,c
  4486   001B40  EF9D  F00D         	goto	u2265
  4487   001B44  500A               	movf	(??_HALL_LCD_8bit_sendCMD+1)^0,w,c
  4488   001B46  0B01               	andlw	1
  4489   001B48  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4490   001B4A  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4491   001B4E                     
  4492                           ;Hall/LCD/Hall_lcd_prog.c: 167:         }
  4493   001B4E  2A0B               	incf	HALL_LCD_8bit_sendCMD@Counter^0,f,c
  4494   001B50  0E07               	movlw	7
  4495   001B52  640B               	cpfsgt	HALL_LCD_8bit_sendCMD@Counter^0,c
  4496   001B54  EFAE  F00D         	goto	u2271
  4497   001B58  EFB0  F00D         	goto	u2270
  4498   001B5C                     u2271:
  4499   001B5C  EF92  F00D         	goto	l2918
  4500   001B60                     u2270:
  4501   001B60                     
  4502                           ;Hall/LCD/Hall_lcd_prog.c: 168:         LCD_sendEnableSignal8Bits(copyLCD);
  4503   001B60  C007  F006         	movff	HALL_LCD_8bit_sendCMD@copyLCD,LCD_sendEnableSignal8Bits@copyLCD
  4504   001B64  ECC4  F00E         	call	_LCD_sendEnableSignal8Bits	;wreg free
  4505   001B68                     l207:
  4506   001B68  0012               	return		;funcret
  4507   001B6A                     __end_of_HALL_LCD_8bit_sendCMD:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _LCD_sendEnableSignal8Bits *****************
  4511 ;; Defined at:
  4512 ;;		line 299 in file "Hall/LCD/Hall_lcd_prog.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  copyLCD         1    5[COMRAM] PTR const struct .
  4515 ;;		 -> LCD1_8Bit(10), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  RetValue        1    0        unsigned char 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      unsigned char 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4527 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;Total ram usage:        1 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 1
  4534 ;; This function calls:
  4535 ;;		_MCAL_GPIO_writePinStatus
  4536 ;; This function is called by:
  4537 ;;		_HALL_LCD_8bit_sendCMD
  4538 ;;		_HALL_LCD_8bit_sendChar
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text17
  4543   001D88                     __ptext17:
  4544                           	callstack 0
  4545   001D88                     _LCD_sendEnableSignal8Bits:
  4546                           	callstack 27
  4547   001D88                     
  4548                           ;Hall/LCD/Hall_lcd_prog.c: 301:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_High);
  4549   001D88  2806               	incf	LCD_sendEnableSignal8Bits@copyLCD^0,w,c
  4550   001D8A  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4551   001D8C  0E01               	movlw	1
  4552   001D8E  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4553   001D90  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4554   001D94                     
  4555                           ;Hall/LCD/Hall_lcd_prog.c: 302:     _delay((unsigned long)((5)*(4000000U/4000000.0)));
  4556   001D94  D000               	nop2		;2 cycle nop
  4557   001D96  D000               	nop2		;2 cycle nop
  4558   001D98  0000               	nop	
  4559   001D9A                     
  4560                           ;Hall/LCD/Hall_lcd_prog.c: 303:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_Low);
  4561   001D9A  2806               	incf	LCD_sendEnableSignal8Bits@copyLCD^0,w,c
  4562   001D9C  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4563   001D9E  0E00               	movlw	0
  4564   001DA0  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4565   001DA2  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4566   001DA6  0012               	return		;funcret
  4567   001DA8                     __end_of_LCD_sendEnableSignal8Bits:
  4568                           	callstack 0
  4569                           
  4570 ;; *************** function _MCAL_GPIO_writePinStatus *****************
  4571 ;; Defined at:
  4572 ;;		line 117 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  copyPinCFG      1    0[COMRAM] PTR const struct .
  4575 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_turnOFF@objPin(1), HALL_Relay_turnON@objPin(1), HALL_Relay_init@objPin(1), 
  4576 ;;		 -> HALL_Led_trunOFF@objLed(1), HALL_Led_trunON@objLed(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  4577 ;;		 -> objPin_motor_1(1), LCD1_8Bit(10), 
  4578 ;;  copyStatusPi    1    1[COMRAM] enum E2982
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  retVal          1    4[COMRAM] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      unsigned char 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:        5 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_HALL_LCD_8bit_sendCMD
  4600 ;;		_HALL_LCD_8bit_sendChar
  4601 ;;		_LCD_sendEnableSignal8Bits
  4602 ;;		_MCAL_GPIO_init
  4603 ;;		_HALL_DC_MOTOR_right
  4604 ;;		_HALL_DC_MOTOR_left
  4605 ;;		_HALL_DC_MOTOR_stop
  4606 ;;		_HALL_KeyPad_getValue
  4607 ;;		_HALL_LCD_4bit_sendCMD
  4608 ;;		_HALL_LCD_4bit_sendChar
  4609 ;;		_LCD_send4Bits
  4610 ;;		_LCD_sendEnableSignal4Bits
  4611 ;;		_HALL_Led_trunON
  4612 ;;		_HALL_Led_trunOFF
  4613 ;;		_HALL_Relay_turnON
  4614 ;;		_HALL_Relay_turnOFF
  4615 ;;		_HALL_SEVEN_SEGEMENT_writeNumber
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text18
  4620   001308                     __ptext18:
  4621                           	callstack 0
  4622   001308                     _MCAL_GPIO_writePinStatus:
  4623                           	callstack 28
  4624   001308                     
  4625                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 118:     uint8_t retVal = (Std_Return)1;
  4626   001308  0E01               	movlw	1
  4627   00130A  6E05               	movwf	MCAL_GPIO_writePinStatus@retVal^0,c
  4628                           
  4629                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 119:     if(copyPinCFG == ((void*)0)) {
  4630   00130C  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4631   00130E  A4D8               	btfss	status,2,c
  4632   001310  EF8C  F009         	goto	u1861
  4633   001314  EF8E  F009         	goto	u1860
  4634   001318                     u1861:
  4635   001318  EFDB  F00A         	goto	l2748
  4636   00131C                     u1860:
  4637   00131C                     l2704:
  4638                           
  4639                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 120:         retVal = (Std_Return)0;
  4640   00131C  6A05               	clrf	MCAL_GPIO_writePinStatus@retVal^0,c
  4641                           
  4642                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 121:     }
  4643   00131E  EFF6  F00A         	goto	l2750
  4644   001322                     l2706:
  4645                           
  4646                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 127:                         LATA |= (1 << copyPinCFG-
      +                          >Pin);
  4647   001322  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4648   001324  6ED9               	movwf	fsr2l,c
  4649   001326  6ADA               	clrf	fsr2h,c
  4650   001328  30DF               	rrcf	223,w,c
  4651   00132A  32E8               	rrcf	wreg,f,c
  4652   00132C  32E8               	rrcf	wreg,f,c
  4653   00132E  0B07               	andlw	7
  4654   001330  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4655   001332  0E01               	movlw	1
  4656   001334  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4657   001336  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4658   001338  EFA0  F009         	goto	u1874
  4659   00133C                     u1875:
  4660   00133C  90D8               	bcf	status,0,c
  4661   00133E  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4662   001340                     u1874:
  4663   001340  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4664   001342  EF9E  F009         	goto	u1875
  4665   001346  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4666   001348  1289               	iorwf	137,f,c	;volatile
  4667                           
  4668                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 128:                         break;
  4669   00134A  EFF6  F00A         	goto	l2750
  4670   00134E                     l2708:
  4671                           
  4672                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 130:                         LATA &= ~ (1 << copyPinCF
      +                          G->Pin);
  4673   00134E  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4674   001350  6ED9               	movwf	fsr2l,c
  4675   001352  6ADA               	clrf	fsr2h,c
  4676   001354  30DF               	rrcf	223,w,c
  4677   001356  32E8               	rrcf	wreg,f,c
  4678   001358  32E8               	rrcf	wreg,f,c
  4679   00135A  0B07               	andlw	7
  4680   00135C  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4681   00135E  0E01               	movlw	1
  4682   001360  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4683   001362  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4684   001364  EFB6  F009         	goto	u1884
  4685   001368                     u1885:
  4686   001368  90D8               	bcf	status,0,c
  4687   00136A  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4688   00136C                     u1884:
  4689   00136C  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4690   00136E  EFB4  F009         	goto	u1885
  4691   001372  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4692   001374  0AFF               	xorlw	255
  4693   001376  1689               	andwf	137,f,c	;volatile
  4694                           
  4695                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 131:                         break;
  4696   001378  EFF6  F00A         	goto	l2750
  4697   00137C                     l2712:
  4698   00137C  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4699   00137E  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4700   001380  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4701                           
  4702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4703                           ; Switch size 1, requested type "simple"
  4704                           ; Number of cases is 1, Range of values is 0 to 0
  4705                           ; switch strategies available:
  4706                           ; Name         Instructions Cycles
  4707                           ; simple_byte            4     3 (average)
  4708                           ;	Chosen strategy is simple_byte
  4709   001382  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4710   001384  0A00               	xorlw	0	; case 0
  4711   001386  B4D8               	btfsc	status,2,c
  4712   001388  EFC8  F009         	goto	l3652
  4713   00138C  EF8E  F009         	goto	l2704
  4714   001390                     l3652:
  4715                           
  4716                           ; Switch size 1, requested type "simple"
  4717                           ; Number of cases is 2, Range of values is 0 to 1
  4718                           ; switch strategies available:
  4719                           ; Name         Instructions Cycles
  4720                           ; simple_byte            7     4 (average)
  4721                           ;	Chosen strategy is simple_byte
  4722   001390  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4723   001392  0A00               	xorlw	0	; case 0
  4724   001394  B4D8               	btfsc	status,2,c
  4725   001396  EFA7  F009         	goto	l2708
  4726   00139A  0A01               	xorlw	1	; case 1
  4727   00139C  B4D8               	btfsc	status,2,c
  4728   00139E  EF91  F009         	goto	l2706
  4729   0013A2  EF8E  F009         	goto	l2704
  4730   0013A6                     l2714:
  4731                           
  4732                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 141:                         LATB |= (1 << copyPinCFG-
      +                          >Pin);
  4733   0013A6  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4734   0013A8  6ED9               	movwf	fsr2l,c
  4735   0013AA  6ADA               	clrf	fsr2h,c
  4736   0013AC  30DF               	rrcf	223,w,c
  4737   0013AE  32E8               	rrcf	wreg,f,c
  4738   0013B0  32E8               	rrcf	wreg,f,c
  4739   0013B2  0B07               	andlw	7
  4740   0013B4  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4741   0013B6  0E01               	movlw	1
  4742   0013B8  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4743   0013BA  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4744   0013BC  EFE2  F009         	goto	u1894
  4745   0013C0                     u1895:
  4746   0013C0  90D8               	bcf	status,0,c
  4747   0013C2  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4748   0013C4                     u1894:
  4749   0013C4  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4750   0013C6  EFE0  F009         	goto	u1895
  4751   0013CA  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4752   0013CC  128A               	iorwf	138,f,c	;volatile
  4753                           
  4754                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 142:                         break;
  4755   0013CE  EFF6  F00A         	goto	l2750
  4756   0013D2                     l2716:
  4757                           
  4758                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 144:                         LATB &= ~ (1 << copyPinCF
      +                          G->Pin);
  4759   0013D2  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4760   0013D4  6ED9               	movwf	fsr2l,c
  4761   0013D6  6ADA               	clrf	fsr2h,c
  4762   0013D8  30DF               	rrcf	223,w,c
  4763   0013DA  32E8               	rrcf	wreg,f,c
  4764   0013DC  32E8               	rrcf	wreg,f,c
  4765   0013DE  0B07               	andlw	7
  4766   0013E0  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4767   0013E2  0E01               	movlw	1
  4768   0013E4  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4769   0013E6  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4770   0013E8  EFF8  F009         	goto	u1904
  4771   0013EC                     u1905:
  4772   0013EC  90D8               	bcf	status,0,c
  4773   0013EE  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4774   0013F0                     u1904:
  4775   0013F0  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4776   0013F2  EFF6  F009         	goto	u1905
  4777   0013F6  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4778   0013F8  0AFF               	xorlw	255
  4779   0013FA  168A               	andwf	138,f,c	;volatile
  4780                           
  4781                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 145:                         break;
  4782   0013FC  EFF6  F00A         	goto	l2750
  4783   001400                     l2720:
  4784   001400  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4785   001402  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4786   001404  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4787                           
  4788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4789                           ; Switch size 1, requested type "simple"
  4790                           ; Number of cases is 1, Range of values is 0 to 0
  4791                           ; switch strategies available:
  4792                           ; Name         Instructions Cycles
  4793                           ; simple_byte            4     3 (average)
  4794                           ;	Chosen strategy is simple_byte
  4795   001406  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4796   001408  0A00               	xorlw	0	; case 0
  4797   00140A  B4D8               	btfsc	status,2,c
  4798   00140C  EF0A  F00A         	goto	l3654
  4799   001410  EF8E  F009         	goto	l2704
  4800   001414                     l3654:
  4801                           
  4802                           ; Switch size 1, requested type "simple"
  4803                           ; Number of cases is 2, Range of values is 0 to 1
  4804                           ; switch strategies available:
  4805                           ; Name         Instructions Cycles
  4806                           ; simple_byte            7     4 (average)
  4807                           ;	Chosen strategy is simple_byte
  4808   001414  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4809   001416  0A00               	xorlw	0	; case 0
  4810   001418  B4D8               	btfsc	status,2,c
  4811   00141A  EFE9  F009         	goto	l2716
  4812   00141E  0A01               	xorlw	1	; case 1
  4813   001420  B4D8               	btfsc	status,2,c
  4814   001422  EFD3  F009         	goto	l2714
  4815   001426  EF8E  F009         	goto	l2704
  4816   00142A                     l2722:
  4817                           
  4818                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 155:                         LATC |= (1 << copyPinCFG-
      +                          >Pin);
  4819   00142A  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4820   00142C  6ED9               	movwf	fsr2l,c
  4821   00142E  6ADA               	clrf	fsr2h,c
  4822   001430  30DF               	rrcf	223,w,c
  4823   001432  32E8               	rrcf	wreg,f,c
  4824   001434  32E8               	rrcf	wreg,f,c
  4825   001436  0B07               	andlw	7
  4826   001438  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4827   00143A  0E01               	movlw	1
  4828   00143C  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4829   00143E  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4830   001440  EF24  F00A         	goto	u1914
  4831   001444                     u1915:
  4832   001444  90D8               	bcf	status,0,c
  4833   001446  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4834   001448                     u1914:
  4835   001448  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4836   00144A  EF22  F00A         	goto	u1915
  4837   00144E  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4838   001450  128B               	iorwf	139,f,c	;volatile
  4839                           
  4840                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 156:                         break;
  4841   001452  EFF6  F00A         	goto	l2750
  4842   001456                     l2724:
  4843                           
  4844                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 158:                         LATC &= ~ (1 << copyPinCF
      +                          G->Pin);
  4845   001456  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4846   001458  6ED9               	movwf	fsr2l,c
  4847   00145A  6ADA               	clrf	fsr2h,c
  4848   00145C  30DF               	rrcf	223,w,c
  4849   00145E  32E8               	rrcf	wreg,f,c
  4850   001460  32E8               	rrcf	wreg,f,c
  4851   001462  0B07               	andlw	7
  4852   001464  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4853   001466  0E01               	movlw	1
  4854   001468  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4855   00146A  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4856   00146C  EF3A  F00A         	goto	u1924
  4857   001470                     u1925:
  4858   001470  90D8               	bcf	status,0,c
  4859   001472  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4860   001474                     u1924:
  4861   001474  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4862   001476  EF38  F00A         	goto	u1925
  4863   00147A  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4864   00147C  0AFF               	xorlw	255
  4865   00147E  168B               	andwf	139,f,c	;volatile
  4866                           
  4867                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 159:                         break;
  4868   001480  EFF6  F00A         	goto	l2750
  4869   001484                     l2728:
  4870   001484  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4871   001486  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4872   001488  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4873                           
  4874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4875                           ; Switch size 1, requested type "simple"
  4876                           ; Number of cases is 1, Range of values is 0 to 0
  4877                           ; switch strategies available:
  4878                           ; Name         Instructions Cycles
  4879                           ; simple_byte            4     3 (average)
  4880                           ;	Chosen strategy is simple_byte
  4881   00148A  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4882   00148C  0A00               	xorlw	0	; case 0
  4883   00148E  B4D8               	btfsc	status,2,c
  4884   001490  EF4C  F00A         	goto	l3656
  4885   001494  EF8E  F009         	goto	l2704
  4886   001498                     l3656:
  4887                           
  4888                           ; Switch size 1, requested type "simple"
  4889                           ; Number of cases is 2, Range of values is 0 to 1
  4890                           ; switch strategies available:
  4891                           ; Name         Instructions Cycles
  4892                           ; simple_byte            7     4 (average)
  4893                           ;	Chosen strategy is simple_byte
  4894   001498  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4895   00149A  0A00               	xorlw	0	; case 0
  4896   00149C  B4D8               	btfsc	status,2,c
  4897   00149E  EF2B  F00A         	goto	l2724
  4898   0014A2  0A01               	xorlw	1	; case 1
  4899   0014A4  B4D8               	btfsc	status,2,c
  4900   0014A6  EF15  F00A         	goto	l2722
  4901   0014AA  EF8E  F009         	goto	l2704
  4902   0014AE                     l2730:
  4903                           
  4904                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 170:                         LATD |= (1 << copyPinCFG-
      +                          >Pin);
  4905   0014AE  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4906   0014B0  6ED9               	movwf	fsr2l,c
  4907   0014B2  6ADA               	clrf	fsr2h,c
  4908   0014B4  30DF               	rrcf	223,w,c
  4909   0014B6  32E8               	rrcf	wreg,f,c
  4910   0014B8  32E8               	rrcf	wreg,f,c
  4911   0014BA  0B07               	andlw	7
  4912   0014BC  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4913   0014BE  0E01               	movlw	1
  4914   0014C0  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4915   0014C2  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4916   0014C4  EF66  F00A         	goto	u1934
  4917   0014C8                     u1935:
  4918   0014C8  90D8               	bcf	status,0,c
  4919   0014CA  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4920   0014CC                     u1934:
  4921   0014CC  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4922   0014CE  EF64  F00A         	goto	u1935
  4923   0014D2  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4924   0014D4  128C               	iorwf	140,f,c	;volatile
  4925                           
  4926                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 171:                         break;
  4927   0014D6  EFF6  F00A         	goto	l2750
  4928   0014DA                     l2732:
  4929                           
  4930                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 173:                         LATD &= ~ (1 << copyPinCF
      +                          G->Pin);
  4931   0014DA  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4932   0014DC  6ED9               	movwf	fsr2l,c
  4933   0014DE  6ADA               	clrf	fsr2h,c
  4934   0014E0  30DF               	rrcf	223,w,c
  4935   0014E2  32E8               	rrcf	wreg,f,c
  4936   0014E4  32E8               	rrcf	wreg,f,c
  4937   0014E6  0B07               	andlw	7
  4938   0014E8  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4939   0014EA  0E01               	movlw	1
  4940   0014EC  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4941   0014EE  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4942   0014F0  EF7C  F00A         	goto	u1944
  4943   0014F4                     u1945:
  4944   0014F4  90D8               	bcf	status,0,c
  4945   0014F6  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4946   0014F8                     u1944:
  4947   0014F8  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4948   0014FA  EF7A  F00A         	goto	u1945
  4949   0014FE  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4950   001500  0AFF               	xorlw	255
  4951   001502  168C               	andwf	140,f,c	;volatile
  4952                           
  4953                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 174:                         break;
  4954   001504  EFF6  F00A         	goto	l2750
  4955   001508                     l2736:
  4956   001508  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4957   00150A  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4958   00150C  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4959                           
  4960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4961                           ; Switch size 1, requested type "simple"
  4962                           ; Number of cases is 1, Range of values is 0 to 0
  4963                           ; switch strategies available:
  4964                           ; Name         Instructions Cycles
  4965                           ; simple_byte            4     3 (average)
  4966                           ;	Chosen strategy is simple_byte
  4967   00150E  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4968   001510  0A00               	xorlw	0	; case 0
  4969   001512  B4D8               	btfsc	status,2,c
  4970   001514  EF8E  F00A         	goto	l3658
  4971   001518  EF8E  F009         	goto	l2704
  4972   00151C                     l3658:
  4973                           
  4974                           ; Switch size 1, requested type "simple"
  4975                           ; Number of cases is 2, Range of values is 0 to 1
  4976                           ; switch strategies available:
  4977                           ; Name         Instructions Cycles
  4978                           ; simple_byte            7     4 (average)
  4979                           ;	Chosen strategy is simple_byte
  4980   00151C  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4981   00151E  0A00               	xorlw	0	; case 0
  4982   001520  B4D8               	btfsc	status,2,c
  4983   001522  EF6D  F00A         	goto	l2732
  4984   001526  0A01               	xorlw	1	; case 1
  4985   001528  B4D8               	btfsc	status,2,c
  4986   00152A  EF57  F00A         	goto	l2730
  4987   00152E  EF8E  F009         	goto	l2704
  4988   001532                     l2738:
  4989                           
  4990                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 185:                         LATE |= (1 << copyPinCFG-
      +                          >Pin);
  4991   001532  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4992   001534  6ED9               	movwf	fsr2l,c
  4993   001536  6ADA               	clrf	fsr2h,c
  4994   001538  30DF               	rrcf	223,w,c
  4995   00153A  32E8               	rrcf	wreg,f,c
  4996   00153C  32E8               	rrcf	wreg,f,c
  4997   00153E  0B07               	andlw	7
  4998   001540  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4999   001542  0E01               	movlw	1
  5000   001544  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  5001   001546  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  5002   001548  EFA8  F00A         	goto	u1954
  5003   00154C                     u1955:
  5004   00154C  90D8               	bcf	status,0,c
  5005   00154E  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  5006   001550                     u1954:
  5007   001550  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  5008   001552  EFA6  F00A         	goto	u1955
  5009   001556  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  5010   001558  128D               	iorwf	141,f,c	;volatile
  5011                           
  5012                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 186:                         break;
  5013   00155A  EFF6  F00A         	goto	l2750
  5014   00155E                     l2740:
  5015                           
  5016                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 188:                         LATE &= ~ (1 << copyPinCF
      +                          G->Pin);
  5017   00155E  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  5018   001560  6ED9               	movwf	fsr2l,c
  5019   001562  6ADA               	clrf	fsr2h,c
  5020   001564  30DF               	rrcf	223,w,c
  5021   001566  32E8               	rrcf	wreg,f,c
  5022   001568  32E8               	rrcf	wreg,f,c
  5023   00156A  0B07               	andlw	7
  5024   00156C  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  5025   00156E  0E01               	movlw	1
  5026   001570  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  5027   001572  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  5028   001574  EFBE  F00A         	goto	u1964
  5029   001578                     u1965:
  5030   001578  90D8               	bcf	status,0,c
  5031   00157A  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  5032   00157C                     u1964:
  5033   00157C  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  5034   00157E  EFBC  F00A         	goto	u1965
  5035   001582  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  5036   001584  0AFF               	xorlw	255
  5037   001586  168D               	andwf	141,f,c	;volatile
  5038                           
  5039                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 189:                         break;
  5040   001588  EFF6  F00A         	goto	l2750
  5041   00158C                     l2744:
  5042   00158C  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  5043   00158E  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  5044   001590  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  5045                           
  5046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5047                           ; Switch size 1, requested type "simple"
  5048                           ; Number of cases is 1, Range of values is 0 to 0
  5049                           ; switch strategies available:
  5050                           ; Name         Instructions Cycles
  5051                           ; simple_byte            4     3 (average)
  5052                           ;	Chosen strategy is simple_byte
  5053   001592  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  5054   001594  0A00               	xorlw	0	; case 0
  5055   001596  B4D8               	btfsc	status,2,c
  5056   001598  EFD0  F00A         	goto	l3660
  5057   00159C  EF8E  F009         	goto	l2704
  5058   0015A0                     l3660:
  5059                           
  5060                           ; Switch size 1, requested type "simple"
  5061                           ; Number of cases is 2, Range of values is 0 to 1
  5062                           ; switch strategies available:
  5063                           ; Name         Instructions Cycles
  5064                           ; simple_byte            7     4 (average)
  5065                           ;	Chosen strategy is simple_byte
  5066   0015A0  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  5067   0015A2  0A00               	xorlw	0	; case 0
  5068   0015A4  B4D8               	btfsc	status,2,c
  5069   0015A6  EFAF  F00A         	goto	l2740
  5070   0015AA  0A01               	xorlw	1	; case 1
  5071   0015AC  B4D8               	btfsc	status,2,c
  5072   0015AE  EF99  F00A         	goto	l2738
  5073   0015B2  EF8E  F009         	goto	l2704
  5074   0015B6                     l2748:
  5075   0015B6  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  5076   0015B8  6ED9               	movwf	fsr2l,c
  5077   0015BA  6ADA               	clrf	fsr2h,c
  5078   0015BC  50DF               	movf	223,w,c
  5079   0015BE  0B07               	andlw	7
  5080                           
  5081                           ; Switch size 1, requested type "simple"
  5082                           ; Number of cases is 5, Range of values is 0 to 4
  5083                           ; switch strategies available:
  5084                           ; Name         Instructions Cycles
  5085                           ; simple_byte           16     9 (average)
  5086                           ;	Chosen strategy is simple_byte
  5087   0015C0  0A00               	xorlw	0	; case 0
  5088   0015C2  B4D8               	btfsc	status,2,c
  5089   0015C4  EFBE  F009         	goto	l2712
  5090   0015C8  0A01               	xorlw	1	; case 1
  5091   0015CA  B4D8               	btfsc	status,2,c
  5092   0015CC  EF00  F00A         	goto	l2720
  5093   0015D0  0A03               	xorlw	3	; case 2
  5094   0015D2  B4D8               	btfsc	status,2,c
  5095   0015D4  EF42  F00A         	goto	l2728
  5096   0015D8  0A01               	xorlw	1	; case 3
  5097   0015DA  B4D8               	btfsc	status,2,c
  5098   0015DC  EF84  F00A         	goto	l2736
  5099   0015E0  0A07               	xorlw	7	; case 4
  5100   0015E2  B4D8               	btfsc	status,2,c
  5101   0015E4  EFC6  F00A         	goto	l2744
  5102   0015E8  EF8E  F009         	goto	l2704
  5103   0015EC                     l2750:
  5104                           
  5105                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 200:     return retVal;
  5106   0015EC  5005               	movf	MCAL_GPIO_writePinStatus@retVal^0,w,c
  5107   0015EE  0012               	return		;funcret
  5108   0015F0                     __end_of_MCAL_GPIO_writePinStatus:
  5109                           	callstack 0
  5110                           
  5111                           	psect	rparam
  5112   000001                     ___rparam_used  equ	1
  5113   000000                     ___param_bank   equ	0
  5114   000000                     __Lparam        equ	__Lrparam
  5115   000000                     __Hparam        equ	__Hrparam
  5116                           
  5117                           	psect	config
  5118                           
  5119                           ; Padding undefined space
  5120   300000                     	org	3145728
  5121   300000  FF                 	db	255
  5122                           
  5123                           ;Config register CONFIG1H @ 0x300001
  5124                           ;	Oscillator Selection bits
  5125                           ;	OSC = HS, HS oscillator
  5126                           ;	Fail-Safe Clock Monitor Enable bit
  5127                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5128                           ;	Internal/External Oscillator Switchover bit
  5129                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5130   300001                     	org	3145729
  5131   300001  02                 	db	2
  5132                           
  5133                           ;Config register CONFIG2L @ 0x300002
  5134                           ;	Power-up Timer Enable bit
  5135                           ;	PWRT = OFF, PWRT disabled
  5136                           ;	Brown-out Reset Enable bits
  5137                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5138                           ;	Brown Out Reset Voltage bits
  5139                           ;	BORV = 1, 
  5140   300002                     	org	3145730
  5141   300002  09                 	db	9
  5142                           
  5143                           ;Config register CONFIG2H @ 0x300003
  5144                           ;	Watchdog Timer Enable bit
  5145                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5146                           ;	Watchdog Timer Postscale Select bits
  5147                           ;	WDTPS = 32768, 1:32768
  5148   300003                     	org	3145731
  5149   300003  1E                 	db	30
  5150                           
  5151                           ; Padding undefined space
  5152   300004                     	org	3145732
  5153   300004  FF                 	db	255
  5154                           
  5155                           ;Config register CONFIG3H @ 0x300005
  5156                           ;	CCP2 MUX bit
  5157                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5158                           ;	PORTB A/D Enable bit
  5159                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5160                           ;	Low-Power Timer1 Oscillator Enable bit
  5161                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5162                           ;	MCLR Pin Enable bit
  5163                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5164   300005                     	org	3145733
  5165   300005  81                 	db	129
  5166                           
  5167                           ;Config register CONFIG4L @ 0x300006
  5168                           ;	Stack Full/Underflow Reset Enable bit
  5169                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5170                           ;	Single-Supply ICSP Enable bit
  5171                           ;	LVP = OFF, Single-Supply ICSP disabled
  5172                           ;	Extended Instruction Set Enable bit
  5173                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5174                           ;	Background Debugger Enable bit
  5175                           ;	DEBUG = 0x1, unprogrammed default
  5176   300006                     	org	3145734
  5177   300006  81                 	db	129
  5178                           
  5179                           ; Padding undefined space
  5180   300007                     	org	3145735
  5181   300007  FF                 	db	255
  5182                           
  5183                           ;Config register CONFIG5L @ 0x300008
  5184                           ;	Code Protection bit
  5185                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5186                           ;	Code Protection bit
  5187                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5188                           ;	Code Protection bit
  5189                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5190                           ;	Code Protection bit
  5191                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5192   300008                     	org	3145736
  5193   300008  0F                 	db	15
  5194                           
  5195                           ;Config register CONFIG5H @ 0x300009
  5196                           ;	Boot Block Code Protection bit
  5197                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5198                           ;	Data EEPROM Code Protection bit
  5199                           ;	CPD = OFF, Data EEPROM not code-protected
  5200   300009                     	org	3145737
  5201   300009  C0                 	db	192
  5202                           
  5203                           ;Config register CONFIG6L @ 0x30000A
  5204                           ;	Write Protection bit
  5205                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5206                           ;	Write Protection bit
  5207                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5208                           ;	Write Protection bit
  5209                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5210                           ;	Write Protection bit
  5211                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5212   30000A                     	org	3145738
  5213   30000A  0F                 	db	15
  5214                           
  5215                           ;Config register CONFIG6H @ 0x30000B
  5216                           ;	Configuration Register Write Protection bit
  5217                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5218                           ;	Boot Block Write Protection bit
  5219                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5220                           ;	Data EEPROM Write Protection bit
  5221                           ;	WRTD = OFF, Data EEPROM not write-protected
  5222   30000B                     	org	3145739
  5223   30000B  E0                 	db	224
  5224                           
  5225                           ;Config register CONFIG7L @ 0x30000C
  5226                           ;	Table Read Protection bit
  5227                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5228                           ;	Table Read Protection bit
  5229                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5230                           ;	Table Read Protection bit
  5231                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5232                           ;	Table Read Protection bit
  5233                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5234   30000C                     	org	3145740
  5235   30000C  0F                 	db	15
  5236                           
  5237                           ;Config register CONFIG7H @ 0x30000D
  5238                           ;	Boot Block Table Read Protection bit
  5239                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5240   30000D                     	org	3145741
  5241   30000D  40                 	db	64
  5242                           tosu	equ	0xFFF
  5243                           tosh	equ	0xFFE
  5244                           tosl	equ	0xFFD
  5245                           stkptr	equ	0xFFC
  5246                           pclatu	equ	0xFFB
  5247                           pclath	equ	0xFFA
  5248                           pcl	equ	0xFF9
  5249                           tblptru	equ	0xFF8
  5250                           tblptrh	equ	0xFF7
  5251                           tblptrl	equ	0xFF6
  5252                           tablat	equ	0xFF5
  5253                           prodh	equ	0xFF4
  5254                           prodl	equ	0xFF3
  5255                           indf0	equ	0xFEF
  5256                           postinc0	equ	0xFEE
  5257                           postdec0	equ	0xFED
  5258                           preinc0	equ	0xFEC
  5259                           plusw0	equ	0xFEB
  5260                           fsr0h	equ	0xFEA
  5261                           fsr0l	equ	0xFE9
  5262                           wreg	equ	0xFE8
  5263                           indf1	equ	0xFE7
  5264                           postinc1	equ	0xFE6
  5265                           postdec1	equ	0xFE5
  5266                           preinc1	equ	0xFE4
  5267                           plusw1	equ	0xFE3
  5268                           fsr1h	equ	0xFE2
  5269                           fsr1l	equ	0xFE1
  5270                           bsr	equ	0xFE0
  5271                           indf2	equ	0xFDF
  5272                           postinc2	equ	0xFDE
  5273                           postdec2	equ	0xFDD
  5274                           preinc2	equ	0xFDC
  5275                           plusw2	equ	0xFDB
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        37
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45     104
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    HALL_LCD_8bit_init@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendChar@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendCMD@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendSTR@copyData	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    HALL_LCD_8bit_sendSTR@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_convertU8toSTR@copySTR	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    LCD_sendEnableSignal8Bits@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    MCAL_GPIO_init@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), LCD1_8Bit$LCD_D(COMRAM[8]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    Mcal_GPIO_initPinDirection@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_BTN_init@copyBTN(COMRAM[2]), HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), 
		 -> LCD1_8Bit$LCD_D(COMRAM[8]), objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    MCAL_GPIO_writePinStatus@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Led_trunOFF@objLed(COMRAM[1]), HALL_Led_trunON@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), 
		 -> HALL_Relay_turnOFF@objPin(COMRAM[1]), HALL_Relay_turnON@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), LCD1_8Bit$LCD_D(COMRAM[8]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    RetValue_BTN	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    RetValue_KeyPad	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1338$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    S1338$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_HALL_LCD_convertU8toSTR
    _HALL_LCD_convertU8toSTR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _HALL_LCD_8bit_sendSTR->_HALL_LCD_8bit_sendChar
    _HALL_LCD_8bit_sendChar->_LCD_sendEnableSignal8Bits
    _HALL_LCD_8bit_init->_HALL_LCD_8bit_sendCMD
    _MCAL_GPIO_init->_MCAL_GPIO_writePinStatus
    _HALL_LCD_8bit_sendCMD->_LCD_sendEnableSignal8Bits
    _LCD_sendEnableSignal8Bits->_MCAL_GPIO_writePinStatus

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5839
                 _HALL_LCD_8bit_init
              _HALL_LCD_8bit_sendSTR
            _HALL_LCD_convertU8toSTR
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_convertU8toSTR                              3     2      1    1974
                                             43 COMRAM     2     1      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6    1764
                                             25 COMRAM    18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    1559
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    1434
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     230
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     105
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_8bit_sendSTR                                3     1      2    1300
                                             11 COMRAM     2     0      2
             _HALL_LCD_8bit_sendChar
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_8bit_sendChar                               6     4      2    1200
                                              6 COMRAM     5     3      2
          _LCD_sendEnableSignal8Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_8bit_init                                   4     3      1    2565
                                             11 COMRAM     3     2      1
              _HALL_LCD_8bit_sendCMD
                     _MCAL_GPIO_init
 ---------------------------------------------------------------------------------
 (2) _MCAL_GPIO_init                                       2     1      1     981
                                              5 COMRAM     2     1      1
           _MCAL_GPIO_writePinStatus
         _Mcal_GPIO_initPinDirection
 ---------------------------------------------------------------------------------
 (3) _Mcal_GPIO_initPinDirection                           4     3      1     402
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_8bit_sendCMD                                6     4      2    1220
                                              6 COMRAM     5     3      2
          _LCD_sendEnableSignal8Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _LCD_sendEnableSignal8Bits                            2     1      1     519
                                              5 COMRAM     1     0      1
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _MCAL_GPIO_writePinStatus                             5     3      2     466
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HALL_LCD_8bit_init
     _HALL_LCD_8bit_sendCMD
       _LCD_sendEnableSignal8Bits
         _MCAL_GPIO_writePinStatus
       _MCAL_GPIO_writePinStatus
     _MCAL_GPIO_init
       _MCAL_GPIO_writePinStatus
       _Mcal_GPIO_initPinDirection
   _HALL_LCD_8bit_sendSTR
     _HALL_LCD_8bit_sendChar
       _LCD_sendEnableSignal8Bits
       _MCAL_GPIO_writePinStatus
   _HALL_LCD_convertU8toSTR
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0      32     25.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     45     104     81.9%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRl           4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     136      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Oct 24 19:53:56 2024

                     ??_MCAL_GPIO_init 0007                                     l33 1D5A  
                                   l34 1D5A                           ___awdiv@sign 0006  
                                  l200 187E                                    l214 1B00  
                                  l207 1B68                                    l227 1C2C  
                                  l252 1BEC                                    l271 1DA6  
                                  l523 1CA2                                    l439 1306  
                                  l490 15EE                                    l813 1940  
                                  l826 19EE                                    _Num 0048  
                                  _abs 1CD8                           ___awmod@sign 0006  
                                  wreg 0FE8           HALL_LCD_8bit_sendCMD@Counter 000B  
                                 ?_abs 0007                                   l1310 1C6A  
                                 l3000 1808                                   l1304 17A6  
                                 l3010 184E                                   l3002 1824  
                                 l1314 1CF2                                   l3012 185A  
                                 l3004 182A                                   l1340 1DA8  
                                 l1317 1D0A                                   l3014 1866  
                                 l3006 1836                                   l3030 1BDA  
                                 l3022 1BAE                                   l3016 1872  
                                 l3008 1842                                   l3040 1BFE  
                                 l3032 1BEC                                   l3024 1BAE  
                                 l1329 1A98                                   l3018 187E  
                                 l3042 1C02                                   l1266 1CD6  
                                 l3026 1BBE                                   l1259 1D3A  
                                 l3044 1C14                                   l3036 1BEE  
                                 l3028 1BC2                                   l3046 1C16  
                                 l3038 1BEE                                   l3048 1C2C  
                                 l3080 1D4E                                   l2610 1898  
                                 l2620 18BE                                   l2612 189C  
                                 l2604 1880                                   l2700 1CE6  
                                 l3076 1D3C                                   l2702 1308  
                                 l2630 18F4                                   l2622 18D0  
                                 l2614 18AA                                   l2606 1882  
                                 l3078 1D44                                   l2720 1400  
                                 l2712 137C                                   l2704 131C  
                                 l2632 190A                                   l2624 18D8  
                                 l2640 1920                                   l2616 18B2  
                                 l2608 1890                                   l2800 1704  
                                 l2730 14AE                                   l2722 142A  
                                 l2714 13A6                                   l2706 1322  
                                 l2642 1930                                   l2634 1912  
                                 l2626 18E0                                   l2618 18B6  
                                 l2650 1944                                   l2810 1760  
                                 l2802 1714                                   l2740 155E  
                                 l2732 14DA                                   l2724 1456  
                                 l2716 13D2                                   l2708 134E  
                                 l2900 1C80                                   l2644 1938  
                                 l2636 1914                                   l2628 18EE  
                                 l2660 1974                                   l2652 1952  
                                 l2804 1724                                   l2812 1762  
                                 l2750 15EC                                   l2910 1B16  
                                 l2830 105E                                   l2638 191A  
                                 l2670 19BA                                   l2662 1986  
                                 l2654 195A                                   l2806 1734  
                                 l2814 1778                                   l2744 158C  
                                 l2736 1508                                   l2728 1484  
                                 l2920 1B4E                                   l2912 1B22  
                                 l2904 1B02                                   l2824 1016  
                                 l2680 19E6                                   l2672 19C2  
                                 l2664 198E                                   l2656 195E  
                                 l2648 1942                                   l2808 1746  
                                 l2738 1532                                   l2922 1B50  
                                 l2906 1B02                                   l2850 1196  
                                 l2842 1110                                   l2834 108A  
                                 l2826 102A                                   l2930 1A9A  
                                 l2674 19C8                                   l2666 1996  
                                 l2658 196C                                   l2690 1A1A  
                                 l2818 1784                                   l3660 15A0  
                                 l3652 1390                                   l2748 15B6  
                                 l2924 1B60                                   l2908 1B12  
                                 l2860 1248                                   l2852 11C2  
                                 l2844 113C                                   l2836 10B6  
                                 l2828 1030                                   l2932 1A9A  
                                 l2668 19A4                                   l2676 19CE  
                                 l2692 1A36                                   l2684 19F0  
                                 l2780 1626                                   l3654 1414  
                                 l2926 1B68                                   l2918 1B24  
                                 l2862 1276                                   l2854 11F0  
                                 l2846 116A                                   l2838 10E4  
                                 l2870 12CE                                   l2950 1AF8  
                                 l2934 1AAA                                   l2678 19DE  
                                 l2694 1A68                                   l2686 1A00  
                                 l2790 1684                                   l2782 162A  
                                 l2774 15F0                                   l3656 1498  
                                 l2880 1D94                                   l2872 1304  
                                 l2952 1B00                                   l2944 1ABC  
                                 l2936 1AAE                                   l2960 1D1E  
                                 l2688 1A10                                   l2792 168E  
                                 l2784 1634                                   l2776 1612  
                                 l3658 151C                                   l2882 1D9A  
                                 l2866 12A2                                   l2858 121C  
                                 l2946 1AE6                                   l2938 1ABA  
                                 l2962 1D20                                   l2698 1CD8  
                                 l2794 16A6                                   l2786 1650  
                                 l2778 161A                                   l2890 1C46  
                                 l2970 1CBC                                   l2876 1D88  
                                 l2980 17B8                                   l2948 1AE8  
                                 l2956 1D0C                                   l2796 16D6  
                                 l2788 166C                                   l2892 1C62  
                                 l2972 1CCC                                   l2964 1CA4  
                                 l2878 1D88                                   l2990 17CE  
                                 l2982 17BC                                   l2958 1D14  
                                 l2798 16F2                                   l2886 1C2E  
                                 l2966 1CAC                                   l2896 1C6C  
                                 l2992 17DA                                   l2984 17CC  
                                 l2976 17A8                                   l2888 1C36  
                                 l2968 1CB4                                   l2898 1C7C  
                                 l2994 17DC                                   l2978 17A8  
                                 l2996 17EC                                   l2998 17FC  
                                 STR_1 1011                                   _BTN1 0041  
                                 u2000 16A2                                   u2001 169C  
                                 u2010 16A4                                   u2100 10A0  
                                 u2020 1704                                   u2101 109A  
                                 u2021 1700                                   u2030 1714  
                                 u2031 1710                                   u2040 1724  
                                 u2041 1720                                   u2130 1126  
                                 u2114 10D4                                   u2106 10A2  
                                 u2050 1734                                   u2131 1120  
                                 u2115 10D0                                   u2051 1730  
                                 u2220 12B8                                   u2204 1266  
                                 u2124 1102                                   u2300 1AF8  
                                 u2060 1774                                   u2221 12B2  
                                 u2205 1262                                   u2125 10FE  
                                 u2301 1AF4                                   u2061 1770  
                                 _LATA 0F89                                   u2214 1294  
                                 u2070 102A                                   u2310 1D3A  
                                 u2230 1C62                                   _LATB 0F8A  
                                 u2215 1290                                   u2071 1026  
                                 u2311 1D36                                   u2231 1C5E  
                                 _LATC 0F8B                                   u2160 11AC  
                                 u2144 115A                                   u2136 1128  
                                 u2240 1C7C                                   u2320 17B8  
                                 _LATD 0F8C                                   u2161 11A6  
                                 u2145 1156                                   u2241 1C78  
                                 u2321 17B4                                   _LATE 0F8D  
                                 u2250 1B12                                   u2226 12BA  
                                 u2154 1188                                   u2330 17EC  
                                 u2251 1B0E                                   u2155 1184  
                                 u2331 17E8                                   u2084 104E  
                                 u1700 18AA                                   u2340 1BBE  
                                 u2085 104A                                   u1701 18A6  
                                 u2341 1BBA                                   u2270 1B60  
                                 u2190 1232                                   u2174 11E0  
                                 u2166 11AE                                   u2094 107C  
                                 u2350 1BFE                                   u1710 18D0  
                                 u2271 1B5C                                   u2191 122C  
                                 u2175 11DC                                   u2095 1078  
                                 u2351 1BFA                                   u1711 18CC  
                                 u2264 1B3E                                   u2184 120E  
                                 u2280 1AAA                                   u2360 1C2C  
                                 u1720 18EE                                   u1800 19DE  
                                 u2265 1B3A                                   u2185 120A  
                                 u2281 1AA6                                   u2361 1C28  
                                 u1721 18EA                                   u1801 19DA  
                                 u1730 190A                                   u1810 1A00  
                                 u1731 1906                                   u1811 19FC  
                                 u2196 1234                                   u1740 1930  
                                 u1820 1A10                                   u1741 192C  
                                 u1821 1A0C                                   u2294 1AD6  
                                 u1750 1952                                   u1830 1A36  
                                 u2295 1AD2                                   u1751 194E  
                                 u1831 1A32                                   u1904 13F0  
                                 u1760 196C                                   u1840 1A68  
                                 u1905 13EC                                   u1761 1968  
                                 u1841 1A64                                   u1914 1448  
                                 u1690 1890                                   u1770 1986  
                                 u1850 1CE6                                   u1915 1444  
                                 u1691 188C                                   u1771 1982  
                                 u1851 1CE2                                   u1924 1474  
                                 u1860 131C                                   u1780 19A4  
                                 u1925 1470                                   u1861 1318  
                                 u1781 19A0                                   u1934 14CC  
                                 u1790 19BA                                   u1935 14C8  
                                 u1791 19B6                                   u1944 14F8  
                                 u1945 14F4                                   u1954 1550  
                                 u1874 1340                                   u1970 1612  
                                 u1955 154C                                   u1875 133C  
                                 u2907 1826                                   u1971 160E  
                                 u1964 157C                                   u1884 136C  
                                 u1980 1650                                   u1965 1578  
                                 u1885 1368                                   u1981 164C  
                                 u1894 13C4                                   u1990 166C  
                                 u1895 13C0                                   u1991 1668  
                                 u2887 17F2                                   u2897 180E  
                                 _Seg1 003C                                   abs@a 0007  
                                 _dbuf 0080                                   _main 1D3C  
                                 _prec 0055                                   fsr1h 0FE2  
                                 fsr2h 0FDA                                   indf2 0FDF  
                                 fsr1l 0FE1                                   fsr2l 0FD9  
                                 start 0000           HALL_LCD_8bit_sendCMD@copyCMD 0008  
         HALL_LCD_8bit_sendCMD@copyLCD 0007                  _HALL_LCD_8bit_sendCMD 1B02  
                         ___param_bank 0000                  _HALL_LCD_8bit_sendSTR 1BEE  
                                ??_abs 0009                                  ?_main 0001  
                      __end_of___awdiv 1942                        __end_of___awmod 19F0  
                      ___awdiv@divisor 0003                        ___awdiv@counter 0005  
                         vfpfcnvrt@fmt 000C                                  _PORTA 0F80  
                                _PORTB 0F81                                  _PORTC 0F82  
                                _PORTD 0F83                                  _PORTE 0F84  
                                _TRISA 0F92                                  _TRISB 0F93  
                                _TRISC 0F94                                  _TRISD 0F95  
                                _TRISE 0F96             ?_LCD_sendEnableSignal8Bits 0006  
                                _flags 005B                                  _fputc 19F0  
       HALL_LCD_convertU8toSTR@copySTR 002C                                  _width 0053  
                                _putch 1DA8                                  tablat 0FF5  
                                status 0FD8                        __end_of_sprintf 1CD8  
                       _objPin_motor_1 0068                         _objPin_motor_2 0067  
                      __initialization 1B6A                           __end_of_main 1D62  
               _HALL_LCD_8bit_sendChar 1A9A       __end_of_MCAL_GPIO_writePinStatus 15F0  
                               ??_main 002E                          __activetblptr 0002  
    __end_of_LCD_sendEnableSignal8Bits 1DA8                                 ?_fputc 0001  
                     ___awdiv@dividend 0001                                 ?_putch 0001  
                        vfpfcnvrt@done 000F   Mcal_GPIO_initPinDirection@copyPinCFG 0001  
               ?_HALL_LCD_8bit_sendCMD 0007                 ?_HALL_LCD_8bit_sendSTR 000C  
                               _NumArr 0063                                 _Motor1 0046  
                               _Motor2 0044                           vfprintf@cfmt 0019  
     HALL_LCD_convertU8toSTR@copyValue 002D                              ??___awdiv 0005  
                            ??___awmod 0005                                 _memset 1D0C  
                               clear_0 1B90                                 clear_1 1B9C  
                     ___awdiv@quotient 0007                        ___awmod@divisor 0003  
                               isa$std 0001                        ___awmod@counter 0005  
         ??_Mcal_GPIO_initPinDirection 0002                _HALL_LCD_convertU8toSTR 1BAC  
                               fputc@c 0001                           __pdataCOMRAM 002E  
              HALL_Relay_turnOFF@F3064 005C                           __mediumconst 0000  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                                 putch@c 0001  
                     __end_of_vfprintf 1C6C                              ??_sprintf 0020  
                           __accesstop 0080                __end_of__initialization 1BA2  
                        ___rparam_used 0001                         __pcstackCOMRAM 0001  
                        __end_of_fputc 1A9A                          __end_of_putch 1DAA  
             _MCAL_GPIO_writePinStatus 1308                                ??_fputc 0004  
                              ??_putch 0001                             __pbssBANK0 0080  
MCAL_GPIO_writePinStatus@copyStatusPin 0002     MCAL_GPIO_writePinStatus@copyPinCFG 0001  
                              ?_memset 0001              ??_HALL_LCD_convertU8toSTR 002D  
          ??_LCD_sendEnableSignal8Bits 0007         MCAL_GPIO_writePinStatus@retVal 0005  
                              _KeyPad1 002E                ?_HALL_LCD_8bit_sendChar 0007  
                              __Hparam 0000                                __Lparam 0000  
                    __end_of_btn_Value 1011                                ___awdiv 1880  
                              ___awmod 1942                              _LCD1_4Bit 0036  
                            _LCD1_8Bit 0049                              ?_vfprintf 0016  
                         __psmallconst 1000     __end_of_Mcal_GPIO_initPinDirection 1308  
           _Mcal_GPIO_initPinDirection 1016                                __pcinit 1B6A  
                              __ramtop 1000                                __ptext0 1D3C  
                              __ptext1 1BAC                                __ptext2 1CA4  
                              __ptext3 1C2E                                __ptext4 15F0  
                              __ptext5 19F0                                __ptext6 1DA8  
                              __ptext7 1CD8                                __ptext8 1942  
                              __ptext9 1880                       ___awmod@dividend 0001  
                              _sprintf 1CA4                   end_of_initialization 1BA2  
                 HALL_Led_trunON@F3065 0061                                fputc@fp 0003  
              ??_HALL_LCD_8bit_sendCMD 0009                                memset@c 0002  
                              memset@n 0004                                memset@p 0006  
                        __Lmediumconst 0000                ??_HALL_LCD_8bit_sendSTR 000E  
         HALL_LCD_8bit_sendSTR@copyLCD 000C         __end_of_HALL_LCD_8bit_sendChar 1B02  
            _LCD_sendEnableSignal8Bits 1D88             __end_of_HALL_LCD_8bit_init 1880  
                    __end_of_vfpfcnvrt 17A8                                postdec1 0FE5  
                              postdec2 0FDD                                postinc0 0FEE  
                              postinc1 0FE6                                postinc2 0FDE  
                     vfpfcnvrt@convarg 0011                             ??_vfprintf 0019  
        HALL_LCD_8bit_sendSTR@copyData 000D          HALL_LCD_8bit_sendChar@Counter 000B  
             HALL_Led_trunToggle@F3075 005F             ??_MCAL_GPIO_writePinStatus 0003  
                          vfpfcnvrt@ap 000D                            vfpfcnvrt@cp 0010  
                          vfpfcnvrt@fp 000B          HALL_LCD_8bit_sendChar@copyLCD 0007  
                        __pidataCOMRAM 1D62                         __end_of_memset 1D3C  
     Mcal_GPIO_initPinDirection@retVal 0004                    start_initialization 1B6A  
                          __end_of_abs 1D0C                        _RetValue_KeyPad 0059  
                          vfprintf@fmt 0017                               ??_memset 0006  
                           memset@dest 0001                 HALL_Relay_turnON@F3059 005D  
                       _MCAL_GPIO_init 1C6C                            __pbssCOMRAM 0053  
                             ?___awdiv 0001                               ?___awmod 0001  
                            _btn_Value 1001            ?_Mcal_GPIO_initPinDirection 0001  
               __end_of_MCAL_GPIO_init 1CA4         HALL_LCD_8bit_sendChar@copyData 0008  
                          __smallconst 1000                           _RetValue_BTN 0057  
                             ?_sprintf 001A       LCD_sendEnableSignal8Bits@copyLCD 0006  
        __end_of_HALL_LCD_8bit_sendCMD 1B6A          __end_of_HALL_LCD_8bit_sendSTR 1C2E  
             ?_HALL_LCD_convertU8toSTR 002C                              _vfpfcnvrt 15F0  
                      ?_MCAL_GPIO_init 0006                   HALL_Relay_init@F3054 005E  
                   _HALL_LCD_8bit_init 17A8                             vfpfcnvrt@c 0015  
                  ?_HALL_LCD_8bit_init 000C                              copy_data0 1B7E  
                             __Hrparam 0000                             vfprintf@ap 0018  
                             __Lrparam 0000                             vfprintf@fp 0016  
                 ??_HALL_LCD_8bit_init 000D                   MCAL_GPIO_init@retVal 0007  
                           ?_vfpfcnvrt 000B                             sprintf@fmt 001B  
                             __ptext10 1D0C                               __ptext11 1BEE  
                             __ptext12 1A9A                               __ptext13 17A8  
                             __ptext14 1C6C                               __ptext15 1016  
                             __ptext16 1B02                               __ptext17 1D88  
                             __ptext18 1308        __end_of_HALL_LCD_convertU8toSTR 1BEE  
            HALL_LCD_8bit_init@Counter 000E                               isa$xinst 0000  
                             _vfprintf 1C2E                  HALL_Led_trunOFF@F3070 0060  
            HALL_LCD_8bit_init@copyLCD 000C              ?_MCAL_GPIO_writePinStatus 0001  
             ??_HALL_LCD_8bit_sendChar 0009                              sprintf@ap 0020  
                          ??_vfpfcnvrt 000E               MCAL_GPIO_init@copyPinCFG 0006  
                             sprintf@f 0021                               sprintf@s 001A  
                   HALL_Led_init@F3060 0062  
