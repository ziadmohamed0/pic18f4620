

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Oct 25 01:38:59 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 17/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000FE0                     bsr             equ	4064
    70   000FE9                     fsr0            equ	4073
    71   000FEA                     fsr0h           equ	4074
    72   000FE9                     fsr0l           equ	4073
    73   000FE1                     fsr1            equ	4065
    74   000FE2                     fsr1h           equ	4066
    75   000FE1                     fsr1l           equ	4065
    76   000FD9                     fsr2            equ	4057
    77   000FDA                     fsr2h           equ	4058
    78   000FD9                     fsr2l           equ	4057
    79   000FEF                     indf0           equ	4079
    80   000FE7                     indf1           equ	4071
    81   000FDF                     indf2           equ	4063
    82   000FF2                     intcon          equ	4082
    83   000000                     nvmcon          equ	0
    84   000FF9                     pcl             equ	4089
    85   000FFA                     pclath          equ	4090
    86   000FFB                     pclatu          equ	4091
    87   000FEB                     plusw0          equ	4075
    88   000FE3                     plusw1          equ	4067
    89   000FDB                     plusw2          equ	4059
    90   000FED                     postdec0        equ	4077
    91   000FE5                     postdec1        equ	4069
    92   000FDD                     postdec2        equ	4061
    93   000FEE                     postinc0        equ	4078
    94   000FE6                     postinc1        equ	4070
    95   000FDE                     postinc2        equ	4062
    96   000FEC                     preinc0         equ	4076
    97   000FE4                     preinc1         equ	4068
    98   000FDC                     preinc2         equ	4060
    99   000FF3                     prod            equ	4083
   100   000FF4                     prodh           equ	4084
   101   000FF3                     prodl           equ	4083
   102   000FD8                     status          equ	4056
   103   000FF5                     tablat          equ	4085
   104   000FF6                     tblptr          equ	4086
   105   000FF7                     tblptrh         equ	4087
   106   000FF6                     tblptrl         equ	4086
   107   000FF8                     tblptru         equ	4088
   108   000FFD                     tosl            equ	4093
   109   000FE8                     wreg            equ	4072
   110   000F80                     PORTA           equ	3968	;# 
   111   000F81                     PORTB           equ	3969	;# 
   112   000F82                     PORTC           equ	3970	;# 
   113   000F83                     PORTD           equ	3971	;# 
   114   000F84                     PORTE           equ	3972	;# 
   115   000F89                     LATA            equ	3977	;# 
   116   000F8A                     LATB            equ	3978	;# 
   117   000F8B                     LATC            equ	3979	;# 
   118   000F8C                     LATD            equ	3980	;# 
   119   000F8D                     LATE            equ	3981	;# 
   120   000F92                     TRISA           equ	3986	;# 
   121   000F92                     DDRA            equ	3986	;# 
   122   000F93                     TRISB           equ	3987	;# 
   123   000F93                     DDRB            equ	3987	;# 
   124   000F94                     TRISC           equ	3988	;# 
   125   000F94                     DDRC            equ	3988	;# 
   126   000F95                     TRISD           equ	3989	;# 
   127   000F95                     DDRD            equ	3989	;# 
   128   000F96                     TRISE           equ	3990	;# 
   129   000F96                     DDRE            equ	3990	;# 
   130   000F9B                     OSCTUNE         equ	3995	;# 
   131   000F9D                     PIE1            equ	3997	;# 
   132   000F9E                     PIR1            equ	3998	;# 
   133   000F9F                     IPR1            equ	3999	;# 
   134   000FA0                     PIE2            equ	4000	;# 
   135   000FA1                     PIR2            equ	4001	;# 
   136   000FA2                     IPR2            equ	4002	;# 
   137   000FA6                     EECON1          equ	4006	;# 
   138   000FA7                     EECON2          equ	4007	;# 
   139   000FA8                     EEDATA          equ	4008	;# 
   140   000FA9                     EEADR           equ	4009	;# 
   141   000FAA                     EEADRH          equ	4010	;# 
   142   000FAB                     RCSTA           equ	4011	;# 
   143   000FAB                     RCSTA1          equ	4011	;# 
   144   000FAC                     TXSTA           equ	4012	;# 
   145   000FAC                     TXSTA1          equ	4012	;# 
   146   000FAD                     TXREG           equ	4013	;# 
   147   000FAD                     TXREG1          equ	4013	;# 
   148   000FAE                     RCREG           equ	4014	;# 
   149   000FAE                     RCREG1          equ	4014	;# 
   150   000FAF                     SPBRG           equ	4015	;# 
   151   000FAF                     SPBRG1          equ	4015	;# 
   152   000FB0                     SPBRGH          equ	4016	;# 
   153   000FB1                     T3CON           equ	4017	;# 
   154   000FB2                     TMR3            equ	4018	;# 
   155   000FB2                     TMR3L           equ	4018	;# 
   156   000FB3                     TMR3H           equ	4019	;# 
   157   000FB4                     CMCON           equ	4020	;# 
   158   000FB5                     CVRCON          equ	4021	;# 
   159   000FB6                     ECCP1AS         equ	4022	;# 
   160   000FB7                     PWM1CON         equ	4023	;# 
   161   000FB8                     BAUDCON         equ	4024	;# 
   162   000FB8                     BAUDCTL         equ	4024	;# 
   163   000FBA                     CCP2CON         equ	4026	;# 
   164   000FBB                     CCPR2           equ	4027	;# 
   165   000FBB                     CCPR2L          equ	4027	;# 
   166   000FBC                     CCPR2H          equ	4028	;# 
   167   000FBD                     CCP1CON         equ	4029	;# 
   168   000FBE                     CCPR1           equ	4030	;# 
   169   000FBE                     CCPR1L          equ	4030	;# 
   170   000FBF                     CCPR1H          equ	4031	;# 
   171   000FC0                     ADCON2          equ	4032	;# 
   172   000FC1                     ADCON1          equ	4033	;# 
   173   000FC2                     ADCON0          equ	4034	;# 
   174   000FC3                     ADRES           equ	4035	;# 
   175   000FC3                     ADRESL          equ	4035	;# 
   176   000FC4                     ADRESH          equ	4036	;# 
   177   000FC5                     SSPCON2         equ	4037	;# 
   178   000FC6                     SSPCON1         equ	4038	;# 
   179   000FC7                     SSPSTAT         equ	4039	;# 
   180   000FC8                     SSPADD          equ	4040	;# 
   181   000FC9                     SSPBUF          equ	4041	;# 
   182   000FCA                     T2CON           equ	4042	;# 
   183   000FCB                     PR2             equ	4043	;# 
   184   000FCB                     MEMCON          equ	4043	;# 
   185   000FCC                     TMR2            equ	4044	;# 
   186   000FCD                     T1CON           equ	4045	;# 
   187   000FCE                     TMR1            equ	4046	;# 
   188   000FCE                     TMR1L           equ	4046	;# 
   189   000FCF                     TMR1H           equ	4047	;# 
   190   000FD0                     RCON            equ	4048	;# 
   191   000FD1                     WDTCON          equ	4049	;# 
   192   000FD2                     HLVDCON         equ	4050	;# 
   193   000FD2                     LVDCON          equ	4050	;# 
   194   000FD3                     OSCCON          equ	4051	;# 
   195   000FD5                     T0CON           equ	4053	;# 
   196   000FD6                     TMR0            equ	4054	;# 
   197   000FD6                     TMR0L           equ	4054	;# 
   198   000FD7                     TMR0H           equ	4055	;# 
   199   000FD8                     STATUS          equ	4056	;# 
   200   000FD9                     FSR2            equ	4057	;# 
   201   000FD9                     FSR2L           equ	4057	;# 
   202   000FDA                     FSR2H           equ	4058	;# 
   203   000FDB                     PLUSW2          equ	4059	;# 
   204   000FDC                     PREINC2         equ	4060	;# 
   205   000FDD                     POSTDEC2        equ	4061	;# 
   206   000FDE                     POSTINC2        equ	4062	;# 
   207   000FDF                     INDF2           equ	4063	;# 
   208   000FE0                     BSR             equ	4064	;# 
   209   000FE1                     FSR1            equ	4065	;# 
   210   000FE1                     FSR1L           equ	4065	;# 
   211   000FE2                     FSR1H           equ	4066	;# 
   212   000FE3                     PLUSW1          equ	4067	;# 
   213   000FE4                     PREINC1         equ	4068	;# 
   214   000FE5                     POSTDEC1        equ	4069	;# 
   215   000FE6                     POSTINC1        equ	4070	;# 
   216   000FE7                     INDF1           equ	4071	;# 
   217   000FE8                     WREG            equ	4072	;# 
   218   000FE9                     FSR0            equ	4073	;# 
   219   000FE9                     FSR0L           equ	4073	;# 
   220   000FEA                     FSR0H           equ	4074	;# 
   221   000FEB                     PLUSW0          equ	4075	;# 
   222   000FEC                     PREINC0         equ	4076	;# 
   223   000FED                     POSTDEC0        equ	4077	;# 
   224   000FEE                     POSTINC0        equ	4078	;# 
   225   000FEF                     INDF0           equ	4079	;# 
   226   000FF0                     INTCON3         equ	4080	;# 
   227   000FF1                     INTCON2         equ	4081	;# 
   228   000FF2                     INTCON          equ	4082	;# 
   229   000FF3                     PROD            equ	4083	;# 
   230   000FF3                     PRODL           equ	4083	;# 
   231   000FF4                     PRODH           equ	4084	;# 
   232   000FF5                     TABLAT          equ	4085	;# 
   233   000FF6                     TBLPTR          equ	4086	;# 
   234   000FF6                     TBLPTRL         equ	4086	;# 
   235   000FF7                     TBLPTRH         equ	4087	;# 
   236   000FF8                     TBLPTRU         equ	4088	;# 
   237   000FF9                     PCLAT           equ	4089	;# 
   238   000FF9                     PC              equ	4089	;# 
   239   000FF9                     PCL             equ	4089	;# 
   240   000FFA                     PCLATH          equ	4090	;# 
   241   000FFB                     PCLATU          equ	4091	;# 
   242   000FFC                     STKPTR          equ	4092	;# 
   243   000FFD                     TOS             equ	4093	;# 
   244   000FFD                     TOSL            equ	4093	;# 
   245   000FFE                     TOSH            equ	4094	;# 
   246   000FFF                     TOSU            equ	4095	;# 
   247   000F80                     PORTA           equ	3968	;# 
   248   000F81                     PORTB           equ	3969	;# 
   249   000F82                     PORTC           equ	3970	;# 
   250   000F83                     PORTD           equ	3971	;# 
   251   000F84                     PORTE           equ	3972	;# 
   252   000F89                     LATA            equ	3977	;# 
   253   000F8A                     LATB            equ	3978	;# 
   254   000F8B                     LATC            equ	3979	;# 
   255   000F8C                     LATD            equ	3980	;# 
   256   000F8D                     LATE            equ	3981	;# 
   257   000F92                     TRISA           equ	3986	;# 
   258   000F92                     DDRA            equ	3986	;# 
   259   000F93                     TRISB           equ	3987	;# 
   260   000F93                     DDRB            equ	3987	;# 
   261   000F94                     TRISC           equ	3988	;# 
   262   000F94                     DDRC            equ	3988	;# 
   263   000F95                     TRISD           equ	3989	;# 
   264   000F95                     DDRD            equ	3989	;# 
   265   000F96                     TRISE           equ	3990	;# 
   266   000F96                     DDRE            equ	3990	;# 
   267   000F9B                     OSCTUNE         equ	3995	;# 
   268   000F9D                     PIE1            equ	3997	;# 
   269   000F9E                     PIR1            equ	3998	;# 
   270   000F9F                     IPR1            equ	3999	;# 
   271   000FA0                     PIE2            equ	4000	;# 
   272   000FA1                     PIR2            equ	4001	;# 
   273   000FA2                     IPR2            equ	4002	;# 
   274   000FA6                     EECON1          equ	4006	;# 
   275   000FA7                     EECON2          equ	4007	;# 
   276   000FA8                     EEDATA          equ	4008	;# 
   277   000FA9                     EEADR           equ	4009	;# 
   278   000FAA                     EEADRH          equ	4010	;# 
   279   000FAB                     RCSTA           equ	4011	;# 
   280   000FAB                     RCSTA1          equ	4011	;# 
   281   000FAC                     TXSTA           equ	4012	;# 
   282   000FAC                     TXSTA1          equ	4012	;# 
   283   000FAD                     TXREG           equ	4013	;# 
   284   000FAD                     TXREG1          equ	4013	;# 
   285   000FAE                     RCREG           equ	4014	;# 
   286   000FAE                     RCREG1          equ	4014	;# 
   287   000FAF                     SPBRG           equ	4015	;# 
   288   000FAF                     SPBRG1          equ	4015	;# 
   289   000FB0                     SPBRGH          equ	4016	;# 
   290   000FB1                     T3CON           equ	4017	;# 
   291   000FB2                     TMR3            equ	4018	;# 
   292   000FB2                     TMR3L           equ	4018	;# 
   293   000FB3                     TMR3H           equ	4019	;# 
   294   000FB4                     CMCON           equ	4020	;# 
   295   000FB5                     CVRCON          equ	4021	;# 
   296   000FB6                     ECCP1AS         equ	4022	;# 
   297   000FB7                     PWM1CON         equ	4023	;# 
   298   000FB8                     BAUDCON         equ	4024	;# 
   299   000FB8                     BAUDCTL         equ	4024	;# 
   300   000FBA                     CCP2CON         equ	4026	;# 
   301   000FBB                     CCPR2           equ	4027	;# 
   302   000FBB                     CCPR2L          equ	4027	;# 
   303   000FBC                     CCPR2H          equ	4028	;# 
   304   000FBD                     CCP1CON         equ	4029	;# 
   305   000FBE                     CCPR1           equ	4030	;# 
   306   000FBE                     CCPR1L          equ	4030	;# 
   307   000FBF                     CCPR1H          equ	4031	;# 
   308   000FC0                     ADCON2          equ	4032	;# 
   309   000FC1                     ADCON1          equ	4033	;# 
   310   000FC2                     ADCON0          equ	4034	;# 
   311   000FC3                     ADRES           equ	4035	;# 
   312   000FC3                     ADRESL          equ	4035	;# 
   313   000FC4                     ADRESH          equ	4036	;# 
   314   000FC5                     SSPCON2         equ	4037	;# 
   315   000FC6                     SSPCON1         equ	4038	;# 
   316   000FC7                     SSPSTAT         equ	4039	;# 
   317   000FC8                     SSPADD          equ	4040	;# 
   318   000FC9                     SSPBUF          equ	4041	;# 
   319   000FCA                     T2CON           equ	4042	;# 
   320   000FCB                     PR2             equ	4043	;# 
   321   000FCB                     MEMCON          equ	4043	;# 
   322   000FCC                     TMR2            equ	4044	;# 
   323   000FCD                     T1CON           equ	4045	;# 
   324   000FCE                     TMR1            equ	4046	;# 
   325   000FCE                     TMR1L           equ	4046	;# 
   326   000FCF                     TMR1H           equ	4047	;# 
   327   000FD0                     RCON            equ	4048	;# 
   328   000FD1                     WDTCON          equ	4049	;# 
   329   000FD2                     HLVDCON         equ	4050	;# 
   330   000FD2                     LVDCON          equ	4050	;# 
   331   000FD3                     OSCCON          equ	4051	;# 
   332   000FD5                     T0CON           equ	4053	;# 
   333   000FD6                     TMR0            equ	4054	;# 
   334   000FD6                     TMR0L           equ	4054	;# 
   335   000FD7                     TMR0H           equ	4055	;# 
   336   000FD8                     STATUS          equ	4056	;# 
   337   000FD9                     FSR2            equ	4057	;# 
   338   000FD9                     FSR2L           equ	4057	;# 
   339   000FDA                     FSR2H           equ	4058	;# 
   340   000FDB                     PLUSW2          equ	4059	;# 
   341   000FDC                     PREINC2         equ	4060	;# 
   342   000FDD                     POSTDEC2        equ	4061	;# 
   343   000FDE                     POSTINC2        equ	4062	;# 
   344   000FDF                     INDF2           equ	4063	;# 
   345   000FE0                     BSR             equ	4064	;# 
   346   000FE1                     FSR1            equ	4065	;# 
   347   000FE1                     FSR1L           equ	4065	;# 
   348   000FE2                     FSR1H           equ	4066	;# 
   349   000FE3                     PLUSW1          equ	4067	;# 
   350   000FE4                     PREINC1         equ	4068	;# 
   351   000FE5                     POSTDEC1        equ	4069	;# 
   352   000FE6                     POSTINC1        equ	4070	;# 
   353   000FE7                     INDF1           equ	4071	;# 
   354   000FE8                     WREG            equ	4072	;# 
   355   000FE9                     FSR0            equ	4073	;# 
   356   000FE9                     FSR0L           equ	4073	;# 
   357   000FEA                     FSR0H           equ	4074	;# 
   358   000FEB                     PLUSW0          equ	4075	;# 
   359   000FEC                     PREINC0         equ	4076	;# 
   360   000FED                     POSTDEC0        equ	4077	;# 
   361   000FEE                     POSTINC0        equ	4078	;# 
   362   000FEF                     INDF0           equ	4079	;# 
   363   000FF0                     INTCON3         equ	4080	;# 
   364   000FF1                     INTCON2         equ	4081	;# 
   365   000FF2                     INTCON          equ	4082	;# 
   366   000FF3                     PROD            equ	4083	;# 
   367   000FF3                     PRODL           equ	4083	;# 
   368   000FF4                     PRODH           equ	4084	;# 
   369   000FF5                     TABLAT          equ	4085	;# 
   370   000FF6                     TBLPTR          equ	4086	;# 
   371   000FF6                     TBLPTRL         equ	4086	;# 
   372   000FF7                     TBLPTRH         equ	4087	;# 
   373   000FF8                     TBLPTRU         equ	4088	;# 
   374   000FF9                     PCLAT           equ	4089	;# 
   375   000FF9                     PC              equ	4089	;# 
   376   000FF9                     PCL             equ	4089	;# 
   377   000FFA                     PCLATH          equ	4090	;# 
   378   000FFB                     PCLATU          equ	4091	;# 
   379   000FFC                     STKPTR          equ	4092	;# 
   380   000FFD                     TOS             equ	4093	;# 
   381   000FFD                     TOSL            equ	4093	;# 
   382   000FFE                     TOSH            equ	4094	;# 
   383   000FFF                     TOSU            equ	4095	;# 
   384   000F80                     PORTA           equ	3968	;# 
   385   000F81                     PORTB           equ	3969	;# 
   386   000F82                     PORTC           equ	3970	;# 
   387   000F83                     PORTD           equ	3971	;# 
   388   000F84                     PORTE           equ	3972	;# 
   389   000F89                     LATA            equ	3977	;# 
   390   000F8A                     LATB            equ	3978	;# 
   391   000F8B                     LATC            equ	3979	;# 
   392   000F8C                     LATD            equ	3980	;# 
   393   000F8D                     LATE            equ	3981	;# 
   394   000F92                     TRISA           equ	3986	;# 
   395   000F92                     DDRA            equ	3986	;# 
   396   000F93                     TRISB           equ	3987	;# 
   397   000F93                     DDRB            equ	3987	;# 
   398   000F94                     TRISC           equ	3988	;# 
   399   000F94                     DDRC            equ	3988	;# 
   400   000F95                     TRISD           equ	3989	;# 
   401   000F95                     DDRD            equ	3989	;# 
   402   000F96                     TRISE           equ	3990	;# 
   403   000F96                     DDRE            equ	3990	;# 
   404   000F9B                     OSCTUNE         equ	3995	;# 
   405   000F9D                     PIE1            equ	3997	;# 
   406   000F9E                     PIR1            equ	3998	;# 
   407   000F9F                     IPR1            equ	3999	;# 
   408   000FA0                     PIE2            equ	4000	;# 
   409   000FA1                     PIR2            equ	4001	;# 
   410   000FA2                     IPR2            equ	4002	;# 
   411   000FA6                     EECON1          equ	4006	;# 
   412   000FA7                     EECON2          equ	4007	;# 
   413   000FA8                     EEDATA          equ	4008	;# 
   414   000FA9                     EEADR           equ	4009	;# 
   415   000FAA                     EEADRH          equ	4010	;# 
   416   000FAB                     RCSTA           equ	4011	;# 
   417   000FAB                     RCSTA1          equ	4011	;# 
   418   000FAC                     TXSTA           equ	4012	;# 
   419   000FAC                     TXSTA1          equ	4012	;# 
   420   000FAD                     TXREG           equ	4013	;# 
   421   000FAD                     TXREG1          equ	4013	;# 
   422   000FAE                     RCREG           equ	4014	;# 
   423   000FAE                     RCREG1          equ	4014	;# 
   424   000FAF                     SPBRG           equ	4015	;# 
   425   000FAF                     SPBRG1          equ	4015	;# 
   426   000FB0                     SPBRGH          equ	4016	;# 
   427   000FB1                     T3CON           equ	4017	;# 
   428   000FB2                     TMR3            equ	4018	;# 
   429   000FB2                     TMR3L           equ	4018	;# 
   430   000FB3                     TMR3H           equ	4019	;# 
   431   000FB4                     CMCON           equ	4020	;# 
   432   000FB5                     CVRCON          equ	4021	;# 
   433   000FB6                     ECCP1AS         equ	4022	;# 
   434   000FB7                     PWM1CON         equ	4023	;# 
   435   000FB8                     BAUDCON         equ	4024	;# 
   436   000FB8                     BAUDCTL         equ	4024	;# 
   437   000FBA                     CCP2CON         equ	4026	;# 
   438   000FBB                     CCPR2           equ	4027	;# 
   439   000FBB                     CCPR2L          equ	4027	;# 
   440   000FBC                     CCPR2H          equ	4028	;# 
   441   000FBD                     CCP1CON         equ	4029	;# 
   442   000FBE                     CCPR1           equ	4030	;# 
   443   000FBE                     CCPR1L          equ	4030	;# 
   444   000FBF                     CCPR1H          equ	4031	;# 
   445   000FC0                     ADCON2          equ	4032	;# 
   446   000FC1                     ADCON1          equ	4033	;# 
   447   000FC2                     ADCON0          equ	4034	;# 
   448   000FC3                     ADRES           equ	4035	;# 
   449   000FC3                     ADRESL          equ	4035	;# 
   450   000FC4                     ADRESH          equ	4036	;# 
   451   000FC5                     SSPCON2         equ	4037	;# 
   452   000FC6                     SSPCON1         equ	4038	;# 
   453   000FC7                     SSPSTAT         equ	4039	;# 
   454   000FC8                     SSPADD          equ	4040	;# 
   455   000FC9                     SSPBUF          equ	4041	;# 
   456   000FCA                     T2CON           equ	4042	;# 
   457   000FCB                     PR2             equ	4043	;# 
   458   000FCB                     MEMCON          equ	4043	;# 
   459   000FCC                     TMR2            equ	4044	;# 
   460   000FCD                     T1CON           equ	4045	;# 
   461   000FCE                     TMR1            equ	4046	;# 
   462   000FCE                     TMR1L           equ	4046	;# 
   463   000FCF                     TMR1H           equ	4047	;# 
   464   000FD0                     RCON            equ	4048	;# 
   465   000FD1                     WDTCON          equ	4049	;# 
   466   000FD2                     HLVDCON         equ	4050	;# 
   467   000FD2                     LVDCON          equ	4050	;# 
   468   000FD3                     OSCCON          equ	4051	;# 
   469   000FD5                     T0CON           equ	4053	;# 
   470   000FD6                     TMR0            equ	4054	;# 
   471   000FD6                     TMR0L           equ	4054	;# 
   472   000FD7                     TMR0H           equ	4055	;# 
   473   000FD8                     STATUS          equ	4056	;# 
   474   000FD9                     FSR2            equ	4057	;# 
   475   000FD9                     FSR2L           equ	4057	;# 
   476   000FDA                     FSR2H           equ	4058	;# 
   477   000FDB                     PLUSW2          equ	4059	;# 
   478   000FDC                     PREINC2         equ	4060	;# 
   479   000FDD                     POSTDEC2        equ	4061	;# 
   480   000FDE                     POSTINC2        equ	4062	;# 
   481   000FDF                     INDF2           equ	4063	;# 
   482   000FE0                     BSR             equ	4064	;# 
   483   000FE1                     FSR1            equ	4065	;# 
   484   000FE1                     FSR1L           equ	4065	;# 
   485   000FE2                     FSR1H           equ	4066	;# 
   486   000FE3                     PLUSW1          equ	4067	;# 
   487   000FE4                     PREINC1         equ	4068	;# 
   488   000FE5                     POSTDEC1        equ	4069	;# 
   489   000FE6                     POSTINC1        equ	4070	;# 
   490   000FE7                     INDF1           equ	4071	;# 
   491   000FE8                     WREG            equ	4072	;# 
   492   000FE9                     FSR0            equ	4073	;# 
   493   000FE9                     FSR0L           equ	4073	;# 
   494   000FEA                     FSR0H           equ	4074	;# 
   495   000FEB                     PLUSW0          equ	4075	;# 
   496   000FEC                     PREINC0         equ	4076	;# 
   497   000FED                     POSTDEC0        equ	4077	;# 
   498   000FEE                     POSTINC0        equ	4078	;# 
   499   000FEF                     INDF0           equ	4079	;# 
   500   000FF0                     INTCON3         equ	4080	;# 
   501   000FF1                     INTCON2         equ	4081	;# 
   502   000FF2                     INTCON          equ	4082	;# 
   503   000FF3                     PROD            equ	4083	;# 
   504   000FF3                     PRODL           equ	4083	;# 
   505   000FF4                     PRODH           equ	4084	;# 
   506   000FF5                     TABLAT          equ	4085	;# 
   507   000FF6                     TBLPTR          equ	4086	;# 
   508   000FF6                     TBLPTRL         equ	4086	;# 
   509   000FF7                     TBLPTRH         equ	4087	;# 
   510   000FF8                     TBLPTRU         equ	4088	;# 
   511   000FF9                     PCLAT           equ	4089	;# 
   512   000FF9                     PC              equ	4089	;# 
   513   000FF9                     PCL             equ	4089	;# 
   514   000FFA                     PCLATH          equ	4090	;# 
   515   000FFB                     PCLATU          equ	4091	;# 
   516   000FFC                     STKPTR          equ	4092	;# 
   517   000FFD                     TOS             equ	4093	;# 
   518   000FFD                     TOSL            equ	4093	;# 
   519   000FFE                     TOSH            equ	4094	;# 
   520   000FFF                     TOSU            equ	4095	;# 
   521   000F80                     PORTA           equ	3968	;# 
   522   000F81                     PORTB           equ	3969	;# 
   523   000F82                     PORTC           equ	3970	;# 
   524   000F83                     PORTD           equ	3971	;# 
   525   000F84                     PORTE           equ	3972	;# 
   526   000F89                     LATA            equ	3977	;# 
   527   000F8A                     LATB            equ	3978	;# 
   528   000F8B                     LATC            equ	3979	;# 
   529   000F8C                     LATD            equ	3980	;# 
   530   000F8D                     LATE            equ	3981	;# 
   531   000F92                     TRISA           equ	3986	;# 
   532   000F92                     DDRA            equ	3986	;# 
   533   000F93                     TRISB           equ	3987	;# 
   534   000F93                     DDRB            equ	3987	;# 
   535   000F94                     TRISC           equ	3988	;# 
   536   000F94                     DDRC            equ	3988	;# 
   537   000F95                     TRISD           equ	3989	;# 
   538   000F95                     DDRD            equ	3989	;# 
   539   000F96                     TRISE           equ	3990	;# 
   540   000F96                     DDRE            equ	3990	;# 
   541   000F9B                     OSCTUNE         equ	3995	;# 
   542   000F9D                     PIE1            equ	3997	;# 
   543   000F9E                     PIR1            equ	3998	;# 
   544   000F9F                     IPR1            equ	3999	;# 
   545   000FA0                     PIE2            equ	4000	;# 
   546   000FA1                     PIR2            equ	4001	;# 
   547   000FA2                     IPR2            equ	4002	;# 
   548   000FA6                     EECON1          equ	4006	;# 
   549   000FA7                     EECON2          equ	4007	;# 
   550   000FA8                     EEDATA          equ	4008	;# 
   551   000FA9                     EEADR           equ	4009	;# 
   552   000FAA                     EEADRH          equ	4010	;# 
   553   000FAB                     RCSTA           equ	4011	;# 
   554   000FAB                     RCSTA1          equ	4011	;# 
   555   000FAC                     TXSTA           equ	4012	;# 
   556   000FAC                     TXSTA1          equ	4012	;# 
   557   000FAD                     TXREG           equ	4013	;# 
   558   000FAD                     TXREG1          equ	4013	;# 
   559   000FAE                     RCREG           equ	4014	;# 
   560   000FAE                     RCREG1          equ	4014	;# 
   561   000FAF                     SPBRG           equ	4015	;# 
   562   000FAF                     SPBRG1          equ	4015	;# 
   563   000FB0                     SPBRGH          equ	4016	;# 
   564   000FB1                     T3CON           equ	4017	;# 
   565   000FB2                     TMR3            equ	4018	;# 
   566   000FB2                     TMR3L           equ	4018	;# 
   567   000FB3                     TMR3H           equ	4019	;# 
   568   000FB4                     CMCON           equ	4020	;# 
   569   000FB5                     CVRCON          equ	4021	;# 
   570   000FB6                     ECCP1AS         equ	4022	;# 
   571   000FB7                     PWM1CON         equ	4023	;# 
   572   000FB8                     BAUDCON         equ	4024	;# 
   573   000FB8                     BAUDCTL         equ	4024	;# 
   574   000FBA                     CCP2CON         equ	4026	;# 
   575   000FBB                     CCPR2           equ	4027	;# 
   576   000FBB                     CCPR2L          equ	4027	;# 
   577   000FBC                     CCPR2H          equ	4028	;# 
   578   000FBD                     CCP1CON         equ	4029	;# 
   579   000FBE                     CCPR1           equ	4030	;# 
   580   000FBE                     CCPR1L          equ	4030	;# 
   581   000FBF                     CCPR1H          equ	4031	;# 
   582   000FC0                     ADCON2          equ	4032	;# 
   583   000FC1                     ADCON1          equ	4033	;# 
   584   000FC2                     ADCON0          equ	4034	;# 
   585   000FC3                     ADRES           equ	4035	;# 
   586   000FC3                     ADRESL          equ	4035	;# 
   587   000FC4                     ADRESH          equ	4036	;# 
   588   000FC5                     SSPCON2         equ	4037	;# 
   589   000FC6                     SSPCON1         equ	4038	;# 
   590   000FC7                     SSPSTAT         equ	4039	;# 
   591   000FC8                     SSPADD          equ	4040	;# 
   592   000FC9                     SSPBUF          equ	4041	;# 
   593   000FCA                     T2CON           equ	4042	;# 
   594   000FCB                     PR2             equ	4043	;# 
   595   000FCB                     MEMCON          equ	4043	;# 
   596   000FCC                     TMR2            equ	4044	;# 
   597   000FCD                     T1CON           equ	4045	;# 
   598   000FCE                     TMR1            equ	4046	;# 
   599   000FCE                     TMR1L           equ	4046	;# 
   600   000FCF                     TMR1H           equ	4047	;# 
   601   000FD0                     RCON            equ	4048	;# 
   602   000FD1                     WDTCON          equ	4049	;# 
   603   000FD2                     HLVDCON         equ	4050	;# 
   604   000FD2                     LVDCON          equ	4050	;# 
   605   000FD3                     OSCCON          equ	4051	;# 
   606   000FD5                     T0CON           equ	4053	;# 
   607   000FD6                     TMR0            equ	4054	;# 
   608   000FD6                     TMR0L           equ	4054	;# 
   609   000FD7                     TMR0H           equ	4055	;# 
   610   000FD8                     STATUS          equ	4056	;# 
   611   000FD9                     FSR2            equ	4057	;# 
   612   000FD9                     FSR2L           equ	4057	;# 
   613   000FDA                     FSR2H           equ	4058	;# 
   614   000FDB                     PLUSW2          equ	4059	;# 
   615   000FDC                     PREINC2         equ	4060	;# 
   616   000FDD                     POSTDEC2        equ	4061	;# 
   617   000FDE                     POSTINC2        equ	4062	;# 
   618   000FDF                     INDF2           equ	4063	;# 
   619   000FE0                     BSR             equ	4064	;# 
   620   000FE1                     FSR1            equ	4065	;# 
   621   000FE1                     FSR1L           equ	4065	;# 
   622   000FE2                     FSR1H           equ	4066	;# 
   623   000FE3                     PLUSW1          equ	4067	;# 
   624   000FE4                     PREINC1         equ	4068	;# 
   625   000FE5                     POSTDEC1        equ	4069	;# 
   626   000FE6                     POSTINC1        equ	4070	;# 
   627   000FE7                     INDF1           equ	4071	;# 
   628   000FE8                     WREG            equ	4072	;# 
   629   000FE9                     FSR0            equ	4073	;# 
   630   000FE9                     FSR0L           equ	4073	;# 
   631   000FEA                     FSR0H           equ	4074	;# 
   632   000FEB                     PLUSW0          equ	4075	;# 
   633   000FEC                     PREINC0         equ	4076	;# 
   634   000FED                     POSTDEC0        equ	4077	;# 
   635   000FEE                     POSTINC0        equ	4078	;# 
   636   000FEF                     INDF0           equ	4079	;# 
   637   000FF0                     INTCON3         equ	4080	;# 
   638   000FF1                     INTCON2         equ	4081	;# 
   639   000FF2                     INTCON          equ	4082	;# 
   640   000FF3                     PROD            equ	4083	;# 
   641   000FF3                     PRODL           equ	4083	;# 
   642   000FF4                     PRODH           equ	4084	;# 
   643   000FF5                     TABLAT          equ	4085	;# 
   644   000FF6                     TBLPTR          equ	4086	;# 
   645   000FF6                     TBLPTRL         equ	4086	;# 
   646   000FF7                     TBLPTRH         equ	4087	;# 
   647   000FF8                     TBLPTRU         equ	4088	;# 
   648   000FF9                     PCLAT           equ	4089	;# 
   649   000FF9                     PC              equ	4089	;# 
   650   000FF9                     PCL             equ	4089	;# 
   651   000FFA                     PCLATH          equ	4090	;# 
   652   000FFB                     PCLATU          equ	4091	;# 
   653   000FFC                     STKPTR          equ	4092	;# 
   654   000FFD                     TOS             equ	4093	;# 
   655   000FFD                     TOSL            equ	4093	;# 
   656   000FFE                     TOSH            equ	4094	;# 
   657   000FFF                     TOSU            equ	4095	;# 
   658   000F80                     PORTA           equ	3968	;# 
   659   000F81                     PORTB           equ	3969	;# 
   660   000F82                     PORTC           equ	3970	;# 
   661   000F83                     PORTD           equ	3971	;# 
   662   000F84                     PORTE           equ	3972	;# 
   663   000F89                     LATA            equ	3977	;# 
   664   000F8A                     LATB            equ	3978	;# 
   665   000F8B                     LATC            equ	3979	;# 
   666   000F8C                     LATD            equ	3980	;# 
   667   000F8D                     LATE            equ	3981	;# 
   668   000F92                     TRISA           equ	3986	;# 
   669   000F92                     DDRA            equ	3986	;# 
   670   000F93                     TRISB           equ	3987	;# 
   671   000F93                     DDRB            equ	3987	;# 
   672   000F94                     TRISC           equ	3988	;# 
   673   000F94                     DDRC            equ	3988	;# 
   674   000F95                     TRISD           equ	3989	;# 
   675   000F95                     DDRD            equ	3989	;# 
   676   000F96                     TRISE           equ	3990	;# 
   677   000F96                     DDRE            equ	3990	;# 
   678   000F9B                     OSCTUNE         equ	3995	;# 
   679   000F9D                     PIE1            equ	3997	;# 
   680   000F9E                     PIR1            equ	3998	;# 
   681   000F9F                     IPR1            equ	3999	;# 
   682   000FA0                     PIE2            equ	4000	;# 
   683   000FA1                     PIR2            equ	4001	;# 
   684   000FA2                     IPR2            equ	4002	;# 
   685   000FA6                     EECON1          equ	4006	;# 
   686   000FA7                     EECON2          equ	4007	;# 
   687   000FA8                     EEDATA          equ	4008	;# 
   688   000FA9                     EEADR           equ	4009	;# 
   689   000FAA                     EEADRH          equ	4010	;# 
   690   000FAB                     RCSTA           equ	4011	;# 
   691   000FAB                     RCSTA1          equ	4011	;# 
   692   000FAC                     TXSTA           equ	4012	;# 
   693   000FAC                     TXSTA1          equ	4012	;# 
   694   000FAD                     TXREG           equ	4013	;# 
   695   000FAD                     TXREG1          equ	4013	;# 
   696   000FAE                     RCREG           equ	4014	;# 
   697   000FAE                     RCREG1          equ	4014	;# 
   698   000FAF                     SPBRG           equ	4015	;# 
   699   000FAF                     SPBRG1          equ	4015	;# 
   700   000FB0                     SPBRGH          equ	4016	;# 
   701   000FB1                     T3CON           equ	4017	;# 
   702   000FB2                     TMR3            equ	4018	;# 
   703   000FB2                     TMR3L           equ	4018	;# 
   704   000FB3                     TMR3H           equ	4019	;# 
   705   000FB4                     CMCON           equ	4020	;# 
   706   000FB5                     CVRCON          equ	4021	;# 
   707   000FB6                     ECCP1AS         equ	4022	;# 
   708   000FB7                     PWM1CON         equ	4023	;# 
   709   000FB8                     BAUDCON         equ	4024	;# 
   710   000FB8                     BAUDCTL         equ	4024	;# 
   711   000FBA                     CCP2CON         equ	4026	;# 
   712   000FBB                     CCPR2           equ	4027	;# 
   713   000FBB                     CCPR2L          equ	4027	;# 
   714   000FBC                     CCPR2H          equ	4028	;# 
   715   000FBD                     CCP1CON         equ	4029	;# 
   716   000FBE                     CCPR1           equ	4030	;# 
   717   000FBE                     CCPR1L          equ	4030	;# 
   718   000FBF                     CCPR1H          equ	4031	;# 
   719   000FC0                     ADCON2          equ	4032	;# 
   720   000FC1                     ADCON1          equ	4033	;# 
   721   000FC2                     ADCON0          equ	4034	;# 
   722   000FC3                     ADRES           equ	4035	;# 
   723   000FC3                     ADRESL          equ	4035	;# 
   724   000FC4                     ADRESH          equ	4036	;# 
   725   000FC5                     SSPCON2         equ	4037	;# 
   726   000FC6                     SSPCON1         equ	4038	;# 
   727   000FC7                     SSPSTAT         equ	4039	;# 
   728   000FC8                     SSPADD          equ	4040	;# 
   729   000FC9                     SSPBUF          equ	4041	;# 
   730   000FCA                     T2CON           equ	4042	;# 
   731   000FCB                     PR2             equ	4043	;# 
   732   000FCB                     MEMCON          equ	4043	;# 
   733   000FCC                     TMR2            equ	4044	;# 
   734   000FCD                     T1CON           equ	4045	;# 
   735   000FCE                     TMR1            equ	4046	;# 
   736   000FCE                     TMR1L           equ	4046	;# 
   737   000FCF                     TMR1H           equ	4047	;# 
   738   000FD0                     RCON            equ	4048	;# 
   739   000FD1                     WDTCON          equ	4049	;# 
   740   000FD2                     HLVDCON         equ	4050	;# 
   741   000FD2                     LVDCON          equ	4050	;# 
   742   000FD3                     OSCCON          equ	4051	;# 
   743   000FD5                     T0CON           equ	4053	;# 
   744   000FD6                     TMR0            equ	4054	;# 
   745   000FD6                     TMR0L           equ	4054	;# 
   746   000FD7                     TMR0H           equ	4055	;# 
   747   000FD8                     STATUS          equ	4056	;# 
   748   000FD9                     FSR2            equ	4057	;# 
   749   000FD9                     FSR2L           equ	4057	;# 
   750   000FDA                     FSR2H           equ	4058	;# 
   751   000FDB                     PLUSW2          equ	4059	;# 
   752   000FDC                     PREINC2         equ	4060	;# 
   753   000FDD                     POSTDEC2        equ	4061	;# 
   754   000FDE                     POSTINC2        equ	4062	;# 
   755   000FDF                     INDF2           equ	4063	;# 
   756   000FE0                     BSR             equ	4064	;# 
   757   000FE1                     FSR1            equ	4065	;# 
   758   000FE1                     FSR1L           equ	4065	;# 
   759   000FE2                     FSR1H           equ	4066	;# 
   760   000FE3                     PLUSW1          equ	4067	;# 
   761   000FE4                     PREINC1         equ	4068	;# 
   762   000FE5                     POSTDEC1        equ	4069	;# 
   763   000FE6                     POSTINC1        equ	4070	;# 
   764   000FE7                     INDF1           equ	4071	;# 
   765   000FE8                     WREG            equ	4072	;# 
   766   000FE9                     FSR0            equ	4073	;# 
   767   000FE9                     FSR0L           equ	4073	;# 
   768   000FEA                     FSR0H           equ	4074	;# 
   769   000FEB                     PLUSW0          equ	4075	;# 
   770   000FEC                     PREINC0         equ	4076	;# 
   771   000FED                     POSTDEC0        equ	4077	;# 
   772   000FEE                     POSTINC0        equ	4078	;# 
   773   000FEF                     INDF0           equ	4079	;# 
   774   000FF0                     INTCON3         equ	4080	;# 
   775   000FF1                     INTCON2         equ	4081	;# 
   776   000FF2                     INTCON          equ	4082	;# 
   777   000FF3                     PROD            equ	4083	;# 
   778   000FF3                     PRODL           equ	4083	;# 
   779   000FF4                     PRODH           equ	4084	;# 
   780   000FF5                     TABLAT          equ	4085	;# 
   781   000FF6                     TBLPTR          equ	4086	;# 
   782   000FF6                     TBLPTRL         equ	4086	;# 
   783   000FF7                     TBLPTRH         equ	4087	;# 
   784   000FF8                     TBLPTRU         equ	4088	;# 
   785   000FF9                     PCLAT           equ	4089	;# 
   786   000FF9                     PC              equ	4089	;# 
   787   000FF9                     PCL             equ	4089	;# 
   788   000FFA                     PCLATH          equ	4090	;# 
   789   000FFB                     PCLATU          equ	4091	;# 
   790   000FFC                     STKPTR          equ	4092	;# 
   791   000FFD                     TOS             equ	4093	;# 
   792   000FFD                     TOSL            equ	4093	;# 
   793   000FFE                     TOSH            equ	4094	;# 
   794   000FFF                     TOSU            equ	4095	;# 
   795   000F80                     PORTA           equ	3968	;# 
   796   000F81                     PORTB           equ	3969	;# 
   797   000F82                     PORTC           equ	3970	;# 
   798   000F83                     PORTD           equ	3971	;# 
   799   000F84                     PORTE           equ	3972	;# 
   800   000F89                     LATA            equ	3977	;# 
   801   000F8A                     LATB            equ	3978	;# 
   802   000F8B                     LATC            equ	3979	;# 
   803   000F8C                     LATD            equ	3980	;# 
   804   000F8D                     LATE            equ	3981	;# 
   805   000F92                     TRISA           equ	3986	;# 
   806   000F92                     DDRA            equ	3986	;# 
   807   000F93                     TRISB           equ	3987	;# 
   808   000F93                     DDRB            equ	3987	;# 
   809   000F94                     TRISC           equ	3988	;# 
   810   000F94                     DDRC            equ	3988	;# 
   811   000F95                     TRISD           equ	3989	;# 
   812   000F95                     DDRD            equ	3989	;# 
   813   000F96                     TRISE           equ	3990	;# 
   814   000F96                     DDRE            equ	3990	;# 
   815   000F9B                     OSCTUNE         equ	3995	;# 
   816   000F9D                     PIE1            equ	3997	;# 
   817   000F9E                     PIR1            equ	3998	;# 
   818   000F9F                     IPR1            equ	3999	;# 
   819   000FA0                     PIE2            equ	4000	;# 
   820   000FA1                     PIR2            equ	4001	;# 
   821   000FA2                     IPR2            equ	4002	;# 
   822   000FA6                     EECON1          equ	4006	;# 
   823   000FA7                     EECON2          equ	4007	;# 
   824   000FA8                     EEDATA          equ	4008	;# 
   825   000FA9                     EEADR           equ	4009	;# 
   826   000FAA                     EEADRH          equ	4010	;# 
   827   000FAB                     RCSTA           equ	4011	;# 
   828   000FAB                     RCSTA1          equ	4011	;# 
   829   000FAC                     TXSTA           equ	4012	;# 
   830   000FAC                     TXSTA1          equ	4012	;# 
   831   000FAD                     TXREG           equ	4013	;# 
   832   000FAD                     TXREG1          equ	4013	;# 
   833   000FAE                     RCREG           equ	4014	;# 
   834   000FAE                     RCREG1          equ	4014	;# 
   835   000FAF                     SPBRG           equ	4015	;# 
   836   000FAF                     SPBRG1          equ	4015	;# 
   837   000FB0                     SPBRGH          equ	4016	;# 
   838   000FB1                     T3CON           equ	4017	;# 
   839   000FB2                     TMR3            equ	4018	;# 
   840   000FB2                     TMR3L           equ	4018	;# 
   841   000FB3                     TMR3H           equ	4019	;# 
   842   000FB4                     CMCON           equ	4020	;# 
   843   000FB5                     CVRCON          equ	4021	;# 
   844   000FB6                     ECCP1AS         equ	4022	;# 
   845   000FB7                     PWM1CON         equ	4023	;# 
   846   000FB8                     BAUDCON         equ	4024	;# 
   847   000FB8                     BAUDCTL         equ	4024	;# 
   848   000FBA                     CCP2CON         equ	4026	;# 
   849   000FBB                     CCPR2           equ	4027	;# 
   850   000FBB                     CCPR2L          equ	4027	;# 
   851   000FBC                     CCPR2H          equ	4028	;# 
   852   000FBD                     CCP1CON         equ	4029	;# 
   853   000FBE                     CCPR1           equ	4030	;# 
   854   000FBE                     CCPR1L          equ	4030	;# 
   855   000FBF                     CCPR1H          equ	4031	;# 
   856   000FC0                     ADCON2          equ	4032	;# 
   857   000FC1                     ADCON1          equ	4033	;# 
   858   000FC2                     ADCON0          equ	4034	;# 
   859   000FC3                     ADRES           equ	4035	;# 
   860   000FC3                     ADRESL          equ	4035	;# 
   861   000FC4                     ADRESH          equ	4036	;# 
   862   000FC5                     SSPCON2         equ	4037	;# 
   863   000FC6                     SSPCON1         equ	4038	;# 
   864   000FC7                     SSPSTAT         equ	4039	;# 
   865   000FC8                     SSPADD          equ	4040	;# 
   866   000FC9                     SSPBUF          equ	4041	;# 
   867   000FCA                     T2CON           equ	4042	;# 
   868   000FCB                     PR2             equ	4043	;# 
   869   000FCB                     MEMCON          equ	4043	;# 
   870   000FCC                     TMR2            equ	4044	;# 
   871   000FCD                     T1CON           equ	4045	;# 
   872   000FCE                     TMR1            equ	4046	;# 
   873   000FCE                     TMR1L           equ	4046	;# 
   874   000FCF                     TMR1H           equ	4047	;# 
   875   000FD0                     RCON            equ	4048	;# 
   876   000FD1                     WDTCON          equ	4049	;# 
   877   000FD2                     HLVDCON         equ	4050	;# 
   878   000FD2                     LVDCON          equ	4050	;# 
   879   000FD3                     OSCCON          equ	4051	;# 
   880   000FD5                     T0CON           equ	4053	;# 
   881   000FD6                     TMR0            equ	4054	;# 
   882   000FD6                     TMR0L           equ	4054	;# 
   883   000FD7                     TMR0H           equ	4055	;# 
   884   000FD8                     STATUS          equ	4056	;# 
   885   000FD9                     FSR2            equ	4057	;# 
   886   000FD9                     FSR2L           equ	4057	;# 
   887   000FDA                     FSR2H           equ	4058	;# 
   888   000FDB                     PLUSW2          equ	4059	;# 
   889   000FDC                     PREINC2         equ	4060	;# 
   890   000FDD                     POSTDEC2        equ	4061	;# 
   891   000FDE                     POSTINC2        equ	4062	;# 
   892   000FDF                     INDF2           equ	4063	;# 
   893   000FE0                     BSR             equ	4064	;# 
   894   000FE1                     FSR1            equ	4065	;# 
   895   000FE1                     FSR1L           equ	4065	;# 
   896   000FE2                     FSR1H           equ	4066	;# 
   897   000FE3                     PLUSW1          equ	4067	;# 
   898   000FE4                     PREINC1         equ	4068	;# 
   899   000FE5                     POSTDEC1        equ	4069	;# 
   900   000FE6                     POSTINC1        equ	4070	;# 
   901   000FE7                     INDF1           equ	4071	;# 
   902   000FE8                     WREG            equ	4072	;# 
   903   000FE9                     FSR0            equ	4073	;# 
   904   000FE9                     FSR0L           equ	4073	;# 
   905   000FEA                     FSR0H           equ	4074	;# 
   906   000FEB                     PLUSW0          equ	4075	;# 
   907   000FEC                     PREINC0         equ	4076	;# 
   908   000FED                     POSTDEC0        equ	4077	;# 
   909   000FEE                     POSTINC0        equ	4078	;# 
   910   000FEF                     INDF0           equ	4079	;# 
   911   000FF0                     INTCON3         equ	4080	;# 
   912   000FF1                     INTCON2         equ	4081	;# 
   913   000FF2                     INTCON          equ	4082	;# 
   914   000FF3                     PROD            equ	4083	;# 
   915   000FF3                     PRODL           equ	4083	;# 
   916   000FF4                     PRODH           equ	4084	;# 
   917   000FF5                     TABLAT          equ	4085	;# 
   918   000FF6                     TBLPTR          equ	4086	;# 
   919   000FF6                     TBLPTRL         equ	4086	;# 
   920   000FF7                     TBLPTRH         equ	4087	;# 
   921   000FF8                     TBLPTRU         equ	4088	;# 
   922   000FF9                     PCLAT           equ	4089	;# 
   923   000FF9                     PC              equ	4089	;# 
   924   000FF9                     PCL             equ	4089	;# 
   925   000FFA                     PCLATH          equ	4090	;# 
   926   000FFB                     PCLATU          equ	4091	;# 
   927   000FFC                     STKPTR          equ	4092	;# 
   928   000FFD                     TOS             equ	4093	;# 
   929   000FFD                     TOSL            equ	4093	;# 
   930   000FFE                     TOSH            equ	4094	;# 
   931   000FFF                     TOSU            equ	4095	;# 
   932   000F80                     PORTA           equ	3968	;# 
   933   000F81                     PORTB           equ	3969	;# 
   934   000F82                     PORTC           equ	3970	;# 
   935   000F83                     PORTD           equ	3971	;# 
   936   000F84                     PORTE           equ	3972	;# 
   937   000F89                     LATA            equ	3977	;# 
   938   000F8A                     LATB            equ	3978	;# 
   939   000F8B                     LATC            equ	3979	;# 
   940   000F8C                     LATD            equ	3980	;# 
   941   000F8D                     LATE            equ	3981	;# 
   942   000F92                     TRISA           equ	3986	;# 
   943   000F92                     DDRA            equ	3986	;# 
   944   000F93                     TRISB           equ	3987	;# 
   945   000F93                     DDRB            equ	3987	;# 
   946   000F94                     TRISC           equ	3988	;# 
   947   000F94                     DDRC            equ	3988	;# 
   948   000F95                     TRISD           equ	3989	;# 
   949   000F95                     DDRD            equ	3989	;# 
   950   000F96                     TRISE           equ	3990	;# 
   951   000F96                     DDRE            equ	3990	;# 
   952   000F9B                     OSCTUNE         equ	3995	;# 
   953   000F9D                     PIE1            equ	3997	;# 
   954   000F9E                     PIR1            equ	3998	;# 
   955   000F9F                     IPR1            equ	3999	;# 
   956   000FA0                     PIE2            equ	4000	;# 
   957   000FA1                     PIR2            equ	4001	;# 
   958   000FA2                     IPR2            equ	4002	;# 
   959   000FA6                     EECON1          equ	4006	;# 
   960   000FA7                     EECON2          equ	4007	;# 
   961   000FA8                     EEDATA          equ	4008	;# 
   962   000FA9                     EEADR           equ	4009	;# 
   963   000FAA                     EEADRH          equ	4010	;# 
   964   000FAB                     RCSTA           equ	4011	;# 
   965   000FAB                     RCSTA1          equ	4011	;# 
   966   000FAC                     TXSTA           equ	4012	;# 
   967   000FAC                     TXSTA1          equ	4012	;# 
   968   000FAD                     TXREG           equ	4013	;# 
   969   000FAD                     TXREG1          equ	4013	;# 
   970   000FAE                     RCREG           equ	4014	;# 
   971   000FAE                     RCREG1          equ	4014	;# 
   972   000FAF                     SPBRG           equ	4015	;# 
   973   000FAF                     SPBRG1          equ	4015	;# 
   974   000FB0                     SPBRGH          equ	4016	;# 
   975   000FB1                     T3CON           equ	4017	;# 
   976   000FB2                     TMR3            equ	4018	;# 
   977   000FB2                     TMR3L           equ	4018	;# 
   978   000FB3                     TMR3H           equ	4019	;# 
   979   000FB4                     CMCON           equ	4020	;# 
   980   000FB5                     CVRCON          equ	4021	;# 
   981   000FB6                     ECCP1AS         equ	4022	;# 
   982   000FB7                     PWM1CON         equ	4023	;# 
   983   000FB8                     BAUDCON         equ	4024	;# 
   984   000FB8                     BAUDCTL         equ	4024	;# 
   985   000FBA                     CCP2CON         equ	4026	;# 
   986   000FBB                     CCPR2           equ	4027	;# 
   987   000FBB                     CCPR2L          equ	4027	;# 
   988   000FBC                     CCPR2H          equ	4028	;# 
   989   000FBD                     CCP1CON         equ	4029	;# 
   990   000FBE                     CCPR1           equ	4030	;# 
   991   000FBE                     CCPR1L          equ	4030	;# 
   992   000FBF                     CCPR1H          equ	4031	;# 
   993   000FC0                     ADCON2          equ	4032	;# 
   994   000FC1                     ADCON1          equ	4033	;# 
   995   000FC2                     ADCON0          equ	4034	;# 
   996   000FC3                     ADRES           equ	4035	;# 
   997   000FC3                     ADRESL          equ	4035	;# 
   998   000FC4                     ADRESH          equ	4036	;# 
   999   000FC5                     SSPCON2         equ	4037	;# 
  1000   000FC6                     SSPCON1         equ	4038	;# 
  1001   000FC7                     SSPSTAT         equ	4039	;# 
  1002   000FC8                     SSPADD          equ	4040	;# 
  1003   000FC9                     SSPBUF          equ	4041	;# 
  1004   000FCA                     T2CON           equ	4042	;# 
  1005   000FCB                     PR2             equ	4043	;# 
  1006   000FCB                     MEMCON          equ	4043	;# 
  1007   000FCC                     TMR2            equ	4044	;# 
  1008   000FCD                     T1CON           equ	4045	;# 
  1009   000FCE                     TMR1            equ	4046	;# 
  1010   000FCE                     TMR1L           equ	4046	;# 
  1011   000FCF                     TMR1H           equ	4047	;# 
  1012   000FD0                     RCON            equ	4048	;# 
  1013   000FD1                     WDTCON          equ	4049	;# 
  1014   000FD2                     HLVDCON         equ	4050	;# 
  1015   000FD2                     LVDCON          equ	4050	;# 
  1016   000FD3                     OSCCON          equ	4051	;# 
  1017   000FD5                     T0CON           equ	4053	;# 
  1018   000FD6                     TMR0            equ	4054	;# 
  1019   000FD6                     TMR0L           equ	4054	;# 
  1020   000FD7                     TMR0H           equ	4055	;# 
  1021   000FD8                     STATUS          equ	4056	;# 
  1022   000FD9                     FSR2            equ	4057	;# 
  1023   000FD9                     FSR2L           equ	4057	;# 
  1024   000FDA                     FSR2H           equ	4058	;# 
  1025   000FDB                     PLUSW2          equ	4059	;# 
  1026   000FDC                     PREINC2         equ	4060	;# 
  1027   000FDD                     POSTDEC2        equ	4061	;# 
  1028   000FDE                     POSTINC2        equ	4062	;# 
  1029   000FDF                     INDF2           equ	4063	;# 
  1030   000FE0                     BSR             equ	4064	;# 
  1031   000FE1                     FSR1            equ	4065	;# 
  1032   000FE1                     FSR1L           equ	4065	;# 
  1033   000FE2                     FSR1H           equ	4066	;# 
  1034   000FE3                     PLUSW1          equ	4067	;# 
  1035   000FE4                     PREINC1         equ	4068	;# 
  1036   000FE5                     POSTDEC1        equ	4069	;# 
  1037   000FE6                     POSTINC1        equ	4070	;# 
  1038   000FE7                     INDF1           equ	4071	;# 
  1039   000FE8                     WREG            equ	4072	;# 
  1040   000FE9                     FSR0            equ	4073	;# 
  1041   000FE9                     FSR0L           equ	4073	;# 
  1042   000FEA                     FSR0H           equ	4074	;# 
  1043   000FEB                     PLUSW0          equ	4075	;# 
  1044   000FEC                     PREINC0         equ	4076	;# 
  1045   000FED                     POSTDEC0        equ	4077	;# 
  1046   000FEE                     POSTINC0        equ	4078	;# 
  1047   000FEF                     INDF0           equ	4079	;# 
  1048   000FF0                     INTCON3         equ	4080	;# 
  1049   000FF1                     INTCON2         equ	4081	;# 
  1050   000FF2                     INTCON          equ	4082	;# 
  1051   000FF3                     PROD            equ	4083	;# 
  1052   000FF3                     PRODL           equ	4083	;# 
  1053   000FF4                     PRODH           equ	4084	;# 
  1054   000FF5                     TABLAT          equ	4085	;# 
  1055   000FF6                     TBLPTR          equ	4086	;# 
  1056   000FF6                     TBLPTRL         equ	4086	;# 
  1057   000FF7                     TBLPTRH         equ	4087	;# 
  1058   000FF8                     TBLPTRU         equ	4088	;# 
  1059   000FF9                     PCLAT           equ	4089	;# 
  1060   000FF9                     PC              equ	4089	;# 
  1061   000FF9                     PCL             equ	4089	;# 
  1062   000FFA                     PCLATH          equ	4090	;# 
  1063   000FFB                     PCLATU          equ	4091	;# 
  1064   000FFC                     STKPTR          equ	4092	;# 
  1065   000FFD                     TOS             equ	4093	;# 
  1066   000FFD                     TOSL            equ	4093	;# 
  1067   000FFE                     TOSH            equ	4094	;# 
  1068   000FFF                     TOSU            equ	4095	;# 
  1069   000F80                     PORTA           equ	3968	;# 
  1070   000F81                     PORTB           equ	3969	;# 
  1071   000F82                     PORTC           equ	3970	;# 
  1072   000F83                     PORTD           equ	3971	;# 
  1073   000F84                     PORTE           equ	3972	;# 
  1074   000F89                     LATA            equ	3977	;# 
  1075   000F8A                     LATB            equ	3978	;# 
  1076   000F8B                     LATC            equ	3979	;# 
  1077   000F8C                     LATD            equ	3980	;# 
  1078   000F8D                     LATE            equ	3981	;# 
  1079   000F92                     TRISA           equ	3986	;# 
  1080   000F92                     DDRA            equ	3986	;# 
  1081   000F93                     TRISB           equ	3987	;# 
  1082   000F93                     DDRB            equ	3987	;# 
  1083   000F94                     TRISC           equ	3988	;# 
  1084   000F94                     DDRC            equ	3988	;# 
  1085   000F95                     TRISD           equ	3989	;# 
  1086   000F95                     DDRD            equ	3989	;# 
  1087   000F96                     TRISE           equ	3990	;# 
  1088   000F96                     DDRE            equ	3990	;# 
  1089   000F9B                     OSCTUNE         equ	3995	;# 
  1090   000F9D                     PIE1            equ	3997	;# 
  1091   000F9E                     PIR1            equ	3998	;# 
  1092   000F9F                     IPR1            equ	3999	;# 
  1093   000FA0                     PIE2            equ	4000	;# 
  1094   000FA1                     PIR2            equ	4001	;# 
  1095   000FA2                     IPR2            equ	4002	;# 
  1096   000FA6                     EECON1          equ	4006	;# 
  1097   000FA7                     EECON2          equ	4007	;# 
  1098   000FA8                     EEDATA          equ	4008	;# 
  1099   000FA9                     EEADR           equ	4009	;# 
  1100   000FAA                     EEADRH          equ	4010	;# 
  1101   000FAB                     RCSTA           equ	4011	;# 
  1102   000FAB                     RCSTA1          equ	4011	;# 
  1103   000FAC                     TXSTA           equ	4012	;# 
  1104   000FAC                     TXSTA1          equ	4012	;# 
  1105   000FAD                     TXREG           equ	4013	;# 
  1106   000FAD                     TXREG1          equ	4013	;# 
  1107   000FAE                     RCREG           equ	4014	;# 
  1108   000FAE                     RCREG1          equ	4014	;# 
  1109   000FAF                     SPBRG           equ	4015	;# 
  1110   000FAF                     SPBRG1          equ	4015	;# 
  1111   000FB0                     SPBRGH          equ	4016	;# 
  1112   000FB1                     T3CON           equ	4017	;# 
  1113   000FB2                     TMR3            equ	4018	;# 
  1114   000FB2                     TMR3L           equ	4018	;# 
  1115   000FB3                     TMR3H           equ	4019	;# 
  1116   000FB4                     CMCON           equ	4020	;# 
  1117   000FB5                     CVRCON          equ	4021	;# 
  1118   000FB6                     ECCP1AS         equ	4022	;# 
  1119   000FB7                     PWM1CON         equ	4023	;# 
  1120   000FB8                     BAUDCON         equ	4024	;# 
  1121   000FB8                     BAUDCTL         equ	4024	;# 
  1122   000FBA                     CCP2CON         equ	4026	;# 
  1123   000FBB                     CCPR2           equ	4027	;# 
  1124   000FBB                     CCPR2L          equ	4027	;# 
  1125   000FBC                     CCPR2H          equ	4028	;# 
  1126   000FBD                     CCP1CON         equ	4029	;# 
  1127   000FBE                     CCPR1           equ	4030	;# 
  1128   000FBE                     CCPR1L          equ	4030	;# 
  1129   000FBF                     CCPR1H          equ	4031	;# 
  1130   000FC0                     ADCON2          equ	4032	;# 
  1131   000FC1                     ADCON1          equ	4033	;# 
  1132   000FC2                     ADCON0          equ	4034	;# 
  1133   000FC3                     ADRES           equ	4035	;# 
  1134   000FC3                     ADRESL          equ	4035	;# 
  1135   000FC4                     ADRESH          equ	4036	;# 
  1136   000FC5                     SSPCON2         equ	4037	;# 
  1137   000FC6                     SSPCON1         equ	4038	;# 
  1138   000FC7                     SSPSTAT         equ	4039	;# 
  1139   000FC8                     SSPADD          equ	4040	;# 
  1140   000FC9                     SSPBUF          equ	4041	;# 
  1141   000FCA                     T2CON           equ	4042	;# 
  1142   000FCB                     PR2             equ	4043	;# 
  1143   000FCB                     MEMCON          equ	4043	;# 
  1144   000FCC                     TMR2            equ	4044	;# 
  1145   000FCD                     T1CON           equ	4045	;# 
  1146   000FCE                     TMR1            equ	4046	;# 
  1147   000FCE                     TMR1L           equ	4046	;# 
  1148   000FCF                     TMR1H           equ	4047	;# 
  1149   000FD0                     RCON            equ	4048	;# 
  1150   000FD1                     WDTCON          equ	4049	;# 
  1151   000FD2                     HLVDCON         equ	4050	;# 
  1152   000FD2                     LVDCON          equ	4050	;# 
  1153   000FD3                     OSCCON          equ	4051	;# 
  1154   000FD5                     T0CON           equ	4053	;# 
  1155   000FD6                     TMR0            equ	4054	;# 
  1156   000FD6                     TMR0L           equ	4054	;# 
  1157   000FD7                     TMR0H           equ	4055	;# 
  1158   000FD8                     STATUS          equ	4056	;# 
  1159   000FD9                     FSR2            equ	4057	;# 
  1160   000FD9                     FSR2L           equ	4057	;# 
  1161   000FDA                     FSR2H           equ	4058	;# 
  1162   000FDB                     PLUSW2          equ	4059	;# 
  1163   000FDC                     PREINC2         equ	4060	;# 
  1164   000FDD                     POSTDEC2        equ	4061	;# 
  1165   000FDE                     POSTINC2        equ	4062	;# 
  1166   000FDF                     INDF2           equ	4063	;# 
  1167   000FE0                     BSR             equ	4064	;# 
  1168   000FE1                     FSR1            equ	4065	;# 
  1169   000FE1                     FSR1L           equ	4065	;# 
  1170   000FE2                     FSR1H           equ	4066	;# 
  1171   000FE3                     PLUSW1          equ	4067	;# 
  1172   000FE4                     PREINC1         equ	4068	;# 
  1173   000FE5                     POSTDEC1        equ	4069	;# 
  1174   000FE6                     POSTINC1        equ	4070	;# 
  1175   000FE7                     INDF1           equ	4071	;# 
  1176   000FE8                     WREG            equ	4072	;# 
  1177   000FE9                     FSR0            equ	4073	;# 
  1178   000FE9                     FSR0L           equ	4073	;# 
  1179   000FEA                     FSR0H           equ	4074	;# 
  1180   000FEB                     PLUSW0          equ	4075	;# 
  1181   000FEC                     PREINC0         equ	4076	;# 
  1182   000FED                     POSTDEC0        equ	4077	;# 
  1183   000FEE                     POSTINC0        equ	4078	;# 
  1184   000FEF                     INDF0           equ	4079	;# 
  1185   000FF0                     INTCON3         equ	4080	;# 
  1186   000FF1                     INTCON2         equ	4081	;# 
  1187   000FF2                     INTCON          equ	4082	;# 
  1188   000FF3                     PROD            equ	4083	;# 
  1189   000FF3                     PRODL           equ	4083	;# 
  1190   000FF4                     PRODH           equ	4084	;# 
  1191   000FF5                     TABLAT          equ	4085	;# 
  1192   000FF6                     TBLPTR          equ	4086	;# 
  1193   000FF6                     TBLPTRL         equ	4086	;# 
  1194   000FF7                     TBLPTRH         equ	4087	;# 
  1195   000FF8                     TBLPTRU         equ	4088	;# 
  1196   000FF9                     PCLAT           equ	4089	;# 
  1197   000FF9                     PC              equ	4089	;# 
  1198   000FF9                     PCL             equ	4089	;# 
  1199   000FFA                     PCLATH          equ	4090	;# 
  1200   000FFB                     PCLATU          equ	4091	;# 
  1201   000FFC                     STKPTR          equ	4092	;# 
  1202   000FFD                     TOS             equ	4093	;# 
  1203   000FFD                     TOSL            equ	4093	;# 
  1204   000FFE                     TOSH            equ	4094	;# 
  1205   000FFF                     TOSU            equ	4095	;# 
  1206   000F80                     PORTA           equ	3968	;# 
  1207   000F81                     PORTB           equ	3969	;# 
  1208   000F82                     PORTC           equ	3970	;# 
  1209   000F83                     PORTD           equ	3971	;# 
  1210   000F84                     PORTE           equ	3972	;# 
  1211   000F89                     LATA            equ	3977	;# 
  1212   000F8A                     LATB            equ	3978	;# 
  1213   000F8B                     LATC            equ	3979	;# 
  1214   000F8C                     LATD            equ	3980	;# 
  1215   000F8D                     LATE            equ	3981	;# 
  1216   000F92                     TRISA           equ	3986	;# 
  1217   000F92                     DDRA            equ	3986	;# 
  1218   000F93                     TRISB           equ	3987	;# 
  1219   000F93                     DDRB            equ	3987	;# 
  1220   000F94                     TRISC           equ	3988	;# 
  1221   000F94                     DDRC            equ	3988	;# 
  1222   000F95                     TRISD           equ	3989	;# 
  1223   000F95                     DDRD            equ	3989	;# 
  1224   000F96                     TRISE           equ	3990	;# 
  1225   000F96                     DDRE            equ	3990	;# 
  1226   000F9B                     OSCTUNE         equ	3995	;# 
  1227   000F9D                     PIE1            equ	3997	;# 
  1228   000F9E                     PIR1            equ	3998	;# 
  1229   000F9F                     IPR1            equ	3999	;# 
  1230   000FA0                     PIE2            equ	4000	;# 
  1231   000FA1                     PIR2            equ	4001	;# 
  1232   000FA2                     IPR2            equ	4002	;# 
  1233   000FA6                     EECON1          equ	4006	;# 
  1234   000FA7                     EECON2          equ	4007	;# 
  1235   000FA8                     EEDATA          equ	4008	;# 
  1236   000FA9                     EEADR           equ	4009	;# 
  1237   000FAA                     EEADRH          equ	4010	;# 
  1238   000FAB                     RCSTA           equ	4011	;# 
  1239   000FAB                     RCSTA1          equ	4011	;# 
  1240   000FAC                     TXSTA           equ	4012	;# 
  1241   000FAC                     TXSTA1          equ	4012	;# 
  1242   000FAD                     TXREG           equ	4013	;# 
  1243   000FAD                     TXREG1          equ	4013	;# 
  1244   000FAE                     RCREG           equ	4014	;# 
  1245   000FAE                     RCREG1          equ	4014	;# 
  1246   000FAF                     SPBRG           equ	4015	;# 
  1247   000FAF                     SPBRG1          equ	4015	;# 
  1248   000FB0                     SPBRGH          equ	4016	;# 
  1249   000FB1                     T3CON           equ	4017	;# 
  1250   000FB2                     TMR3            equ	4018	;# 
  1251   000FB2                     TMR3L           equ	4018	;# 
  1252   000FB3                     TMR3H           equ	4019	;# 
  1253   000FB4                     CMCON           equ	4020	;# 
  1254   000FB5                     CVRCON          equ	4021	;# 
  1255   000FB6                     ECCP1AS         equ	4022	;# 
  1256   000FB7                     PWM1CON         equ	4023	;# 
  1257   000FB8                     BAUDCON         equ	4024	;# 
  1258   000FB8                     BAUDCTL         equ	4024	;# 
  1259   000FBA                     CCP2CON         equ	4026	;# 
  1260   000FBB                     CCPR2           equ	4027	;# 
  1261   000FBB                     CCPR2L          equ	4027	;# 
  1262   000FBC                     CCPR2H          equ	4028	;# 
  1263   000FBD                     CCP1CON         equ	4029	;# 
  1264   000FBE                     CCPR1           equ	4030	;# 
  1265   000FBE                     CCPR1L          equ	4030	;# 
  1266   000FBF                     CCPR1H          equ	4031	;# 
  1267   000FC0                     ADCON2          equ	4032	;# 
  1268   000FC1                     ADCON1          equ	4033	;# 
  1269   000FC2                     ADCON0          equ	4034	;# 
  1270   000FC3                     ADRES           equ	4035	;# 
  1271   000FC3                     ADRESL          equ	4035	;# 
  1272   000FC4                     ADRESH          equ	4036	;# 
  1273   000FC5                     SSPCON2         equ	4037	;# 
  1274   000FC6                     SSPCON1         equ	4038	;# 
  1275   000FC7                     SSPSTAT         equ	4039	;# 
  1276   000FC8                     SSPADD          equ	4040	;# 
  1277   000FC9                     SSPBUF          equ	4041	;# 
  1278   000FCA                     T2CON           equ	4042	;# 
  1279   000FCB                     PR2             equ	4043	;# 
  1280   000FCB                     MEMCON          equ	4043	;# 
  1281   000FCC                     TMR2            equ	4044	;# 
  1282   000FCD                     T1CON           equ	4045	;# 
  1283   000FCE                     TMR1            equ	4046	;# 
  1284   000FCE                     TMR1L           equ	4046	;# 
  1285   000FCF                     TMR1H           equ	4047	;# 
  1286   000FD0                     RCON            equ	4048	;# 
  1287   000FD1                     WDTCON          equ	4049	;# 
  1288   000FD2                     HLVDCON         equ	4050	;# 
  1289   000FD2                     LVDCON          equ	4050	;# 
  1290   000FD3                     OSCCON          equ	4051	;# 
  1291   000FD5                     T0CON           equ	4053	;# 
  1292   000FD6                     TMR0            equ	4054	;# 
  1293   000FD6                     TMR0L           equ	4054	;# 
  1294   000FD7                     TMR0H           equ	4055	;# 
  1295   000FD8                     STATUS          equ	4056	;# 
  1296   000FD9                     FSR2            equ	4057	;# 
  1297   000FD9                     FSR2L           equ	4057	;# 
  1298   000FDA                     FSR2H           equ	4058	;# 
  1299   000FDB                     PLUSW2          equ	4059	;# 
  1300   000FDC                     PREINC2         equ	4060	;# 
  1301   000FDD                     POSTDEC2        equ	4061	;# 
  1302   000FDE                     POSTINC2        equ	4062	;# 
  1303   000FDF                     INDF2           equ	4063	;# 
  1304   000FE0                     BSR             equ	4064	;# 
  1305   000FE1                     FSR1            equ	4065	;# 
  1306   000FE1                     FSR1L           equ	4065	;# 
  1307   000FE2                     FSR1H           equ	4066	;# 
  1308   000FE3                     PLUSW1          equ	4067	;# 
  1309   000FE4                     PREINC1         equ	4068	;# 
  1310   000FE5                     POSTDEC1        equ	4069	;# 
  1311   000FE6                     POSTINC1        equ	4070	;# 
  1312   000FE7                     INDF1           equ	4071	;# 
  1313   000FE8                     WREG            equ	4072	;# 
  1314   000FE9                     FSR0            equ	4073	;# 
  1315   000FE9                     FSR0L           equ	4073	;# 
  1316   000FEA                     FSR0H           equ	4074	;# 
  1317   000FEB                     PLUSW0          equ	4075	;# 
  1318   000FEC                     PREINC0         equ	4076	;# 
  1319   000FED                     POSTDEC0        equ	4077	;# 
  1320   000FEE                     POSTINC0        equ	4078	;# 
  1321   000FEF                     INDF0           equ	4079	;# 
  1322   000FF0                     INTCON3         equ	4080	;# 
  1323   000FF1                     INTCON2         equ	4081	;# 
  1324   000FF2                     INTCON          equ	4082	;# 
  1325   000FF3                     PROD            equ	4083	;# 
  1326   000FF3                     PRODL           equ	4083	;# 
  1327   000FF4                     PRODH           equ	4084	;# 
  1328   000FF5                     TABLAT          equ	4085	;# 
  1329   000FF6                     TBLPTR          equ	4086	;# 
  1330   000FF6                     TBLPTRL         equ	4086	;# 
  1331   000FF7                     TBLPTRH         equ	4087	;# 
  1332   000FF8                     TBLPTRU         equ	4088	;# 
  1333   000FF9                     PCLAT           equ	4089	;# 
  1334   000FF9                     PC              equ	4089	;# 
  1335   000FF9                     PCL             equ	4089	;# 
  1336   000FFA                     PCLATH          equ	4090	;# 
  1337   000FFB                     PCLATU          equ	4091	;# 
  1338   000FFC                     STKPTR          equ	4092	;# 
  1339   000FFD                     TOS             equ	4093	;# 
  1340   000FFD                     TOSL            equ	4093	;# 
  1341   000FFE                     TOSH            equ	4094	;# 
  1342   000FFF                     TOSU            equ	4095	;# 
  1343   000F80                     PORTA           equ	3968	;# 
  1344   000F81                     PORTB           equ	3969	;# 
  1345   000F82                     PORTC           equ	3970	;# 
  1346   000F83                     PORTD           equ	3971	;# 
  1347   000F84                     PORTE           equ	3972	;# 
  1348   000F89                     LATA            equ	3977	;# 
  1349   000F8A                     LATB            equ	3978	;# 
  1350   000F8B                     LATC            equ	3979	;# 
  1351   000F8C                     LATD            equ	3980	;# 
  1352   000F8D                     LATE            equ	3981	;# 
  1353   000F92                     TRISA           equ	3986	;# 
  1354   000F92                     DDRA            equ	3986	;# 
  1355   000F93                     TRISB           equ	3987	;# 
  1356   000F93                     DDRB            equ	3987	;# 
  1357   000F94                     TRISC           equ	3988	;# 
  1358   000F94                     DDRC            equ	3988	;# 
  1359   000F95                     TRISD           equ	3989	;# 
  1360   000F95                     DDRD            equ	3989	;# 
  1361   000F96                     TRISE           equ	3990	;# 
  1362   000F96                     DDRE            equ	3990	;# 
  1363   000F9B                     OSCTUNE         equ	3995	;# 
  1364   000F9D                     PIE1            equ	3997	;# 
  1365   000F9E                     PIR1            equ	3998	;# 
  1366   000F9F                     IPR1            equ	3999	;# 
  1367   000FA0                     PIE2            equ	4000	;# 
  1368   000FA1                     PIR2            equ	4001	;# 
  1369   000FA2                     IPR2            equ	4002	;# 
  1370   000FA6                     EECON1          equ	4006	;# 
  1371   000FA7                     EECON2          equ	4007	;# 
  1372   000FA8                     EEDATA          equ	4008	;# 
  1373   000FA9                     EEADR           equ	4009	;# 
  1374   000FAA                     EEADRH          equ	4010	;# 
  1375   000FAB                     RCSTA           equ	4011	;# 
  1376   000FAB                     RCSTA1          equ	4011	;# 
  1377   000FAC                     TXSTA           equ	4012	;# 
  1378   000FAC                     TXSTA1          equ	4012	;# 
  1379   000FAD                     TXREG           equ	4013	;# 
  1380   000FAD                     TXREG1          equ	4013	;# 
  1381   000FAE                     RCREG           equ	4014	;# 
  1382   000FAE                     RCREG1          equ	4014	;# 
  1383   000FAF                     SPBRG           equ	4015	;# 
  1384   000FAF                     SPBRG1          equ	4015	;# 
  1385   000FB0                     SPBRGH          equ	4016	;# 
  1386   000FB1                     T3CON           equ	4017	;# 
  1387   000FB2                     TMR3            equ	4018	;# 
  1388   000FB2                     TMR3L           equ	4018	;# 
  1389   000FB3                     TMR3H           equ	4019	;# 
  1390   000FB4                     CMCON           equ	4020	;# 
  1391   000FB5                     CVRCON          equ	4021	;# 
  1392   000FB6                     ECCP1AS         equ	4022	;# 
  1393   000FB7                     PWM1CON         equ	4023	;# 
  1394   000FB8                     BAUDCON         equ	4024	;# 
  1395   000FB8                     BAUDCTL         equ	4024	;# 
  1396   000FBA                     CCP2CON         equ	4026	;# 
  1397   000FBB                     CCPR2           equ	4027	;# 
  1398   000FBB                     CCPR2L          equ	4027	;# 
  1399   000FBC                     CCPR2H          equ	4028	;# 
  1400   000FBD                     CCP1CON         equ	4029	;# 
  1401   000FBE                     CCPR1           equ	4030	;# 
  1402   000FBE                     CCPR1L          equ	4030	;# 
  1403   000FBF                     CCPR1H          equ	4031	;# 
  1404   000FC0                     ADCON2          equ	4032	;# 
  1405   000FC1                     ADCON1          equ	4033	;# 
  1406   000FC2                     ADCON0          equ	4034	;# 
  1407   000FC3                     ADRES           equ	4035	;# 
  1408   000FC3                     ADRESL          equ	4035	;# 
  1409   000FC4                     ADRESH          equ	4036	;# 
  1410   000FC5                     SSPCON2         equ	4037	;# 
  1411   000FC6                     SSPCON1         equ	4038	;# 
  1412   000FC7                     SSPSTAT         equ	4039	;# 
  1413   000FC8                     SSPADD          equ	4040	;# 
  1414   000FC9                     SSPBUF          equ	4041	;# 
  1415   000FCA                     T2CON           equ	4042	;# 
  1416   000FCB                     PR2             equ	4043	;# 
  1417   000FCB                     MEMCON          equ	4043	;# 
  1418   000FCC                     TMR2            equ	4044	;# 
  1419   000FCD                     T1CON           equ	4045	;# 
  1420   000FCE                     TMR1            equ	4046	;# 
  1421   000FCE                     TMR1L           equ	4046	;# 
  1422   000FCF                     TMR1H           equ	4047	;# 
  1423   000FD0                     RCON            equ	4048	;# 
  1424   000FD1                     WDTCON          equ	4049	;# 
  1425   000FD2                     HLVDCON         equ	4050	;# 
  1426   000FD2                     LVDCON          equ	4050	;# 
  1427   000FD3                     OSCCON          equ	4051	;# 
  1428   000FD5                     T0CON           equ	4053	;# 
  1429   000FD6                     TMR0            equ	4054	;# 
  1430   000FD6                     TMR0L           equ	4054	;# 
  1431   000FD7                     TMR0H           equ	4055	;# 
  1432   000FD8                     STATUS          equ	4056	;# 
  1433   000FD9                     FSR2            equ	4057	;# 
  1434   000FD9                     FSR2L           equ	4057	;# 
  1435   000FDA                     FSR2H           equ	4058	;# 
  1436   000FDB                     PLUSW2          equ	4059	;# 
  1437   000FDC                     PREINC2         equ	4060	;# 
  1438   000FDD                     POSTDEC2        equ	4061	;# 
  1439   000FDE                     POSTINC2        equ	4062	;# 
  1440   000FDF                     INDF2           equ	4063	;# 
  1441   000FE0                     BSR             equ	4064	;# 
  1442   000FE1                     FSR1            equ	4065	;# 
  1443   000FE1                     FSR1L           equ	4065	;# 
  1444   000FE2                     FSR1H           equ	4066	;# 
  1445   000FE3                     PLUSW1          equ	4067	;# 
  1446   000FE4                     PREINC1         equ	4068	;# 
  1447   000FE5                     POSTDEC1        equ	4069	;# 
  1448   000FE6                     POSTINC1        equ	4070	;# 
  1449   000FE7                     INDF1           equ	4071	;# 
  1450   000FE8                     WREG            equ	4072	;# 
  1451   000FE9                     FSR0            equ	4073	;# 
  1452   000FE9                     FSR0L           equ	4073	;# 
  1453   000FEA                     FSR0H           equ	4074	;# 
  1454   000FEB                     PLUSW0          equ	4075	;# 
  1455   000FEC                     PREINC0         equ	4076	;# 
  1456   000FED                     POSTDEC0        equ	4077	;# 
  1457   000FEE                     POSTINC0        equ	4078	;# 
  1458   000FEF                     INDF0           equ	4079	;# 
  1459   000FF0                     INTCON3         equ	4080	;# 
  1460   000FF1                     INTCON2         equ	4081	;# 
  1461   000FF2                     INTCON          equ	4082	;# 
  1462   000FF3                     PROD            equ	4083	;# 
  1463   000FF3                     PRODL           equ	4083	;# 
  1464   000FF4                     PRODH           equ	4084	;# 
  1465   000FF5                     TABLAT          equ	4085	;# 
  1466   000FF6                     TBLPTR          equ	4086	;# 
  1467   000FF6                     TBLPTRL         equ	4086	;# 
  1468   000FF7                     TBLPTRH         equ	4087	;# 
  1469   000FF8                     TBLPTRU         equ	4088	;# 
  1470   000FF9                     PCLAT           equ	4089	;# 
  1471   000FF9                     PC              equ	4089	;# 
  1472   000FF9                     PCL             equ	4089	;# 
  1473   000FFA                     PCLATH          equ	4090	;# 
  1474   000FFB                     PCLATU          equ	4091	;# 
  1475   000FFC                     STKPTR          equ	4092	;# 
  1476   000FFD                     TOS             equ	4093	;# 
  1477   000FFD                     TOSL            equ	4093	;# 
  1478   000FFE                     TOSH            equ	4094	;# 
  1479   000FFF                     TOSU            equ	4095	;# 
  1480   000F80                     PORTA           equ	3968	;# 
  1481   000F81                     PORTB           equ	3969	;# 
  1482   000F82                     PORTC           equ	3970	;# 
  1483   000F83                     PORTD           equ	3971	;# 
  1484   000F84                     PORTE           equ	3972	;# 
  1485   000F89                     LATA            equ	3977	;# 
  1486   000F8A                     LATB            equ	3978	;# 
  1487   000F8B                     LATC            equ	3979	;# 
  1488   000F8C                     LATD            equ	3980	;# 
  1489   000F8D                     LATE            equ	3981	;# 
  1490   000F92                     TRISA           equ	3986	;# 
  1491   000F92                     DDRA            equ	3986	;# 
  1492   000F93                     TRISB           equ	3987	;# 
  1493   000F93                     DDRB            equ	3987	;# 
  1494   000F94                     TRISC           equ	3988	;# 
  1495   000F94                     DDRC            equ	3988	;# 
  1496   000F95                     TRISD           equ	3989	;# 
  1497   000F95                     DDRD            equ	3989	;# 
  1498   000F96                     TRISE           equ	3990	;# 
  1499   000F96                     DDRE            equ	3990	;# 
  1500   000F9B                     OSCTUNE         equ	3995	;# 
  1501   000F9D                     PIE1            equ	3997	;# 
  1502   000F9E                     PIR1            equ	3998	;# 
  1503   000F9F                     IPR1            equ	3999	;# 
  1504   000FA0                     PIE2            equ	4000	;# 
  1505   000FA1                     PIR2            equ	4001	;# 
  1506   000FA2                     IPR2            equ	4002	;# 
  1507   000FA6                     EECON1          equ	4006	;# 
  1508   000FA7                     EECON2          equ	4007	;# 
  1509   000FA8                     EEDATA          equ	4008	;# 
  1510   000FA9                     EEADR           equ	4009	;# 
  1511   000FAA                     EEADRH          equ	4010	;# 
  1512   000FAB                     RCSTA           equ	4011	;# 
  1513   000FAB                     RCSTA1          equ	4011	;# 
  1514   000FAC                     TXSTA           equ	4012	;# 
  1515   000FAC                     TXSTA1          equ	4012	;# 
  1516   000FAD                     TXREG           equ	4013	;# 
  1517   000FAD                     TXREG1          equ	4013	;# 
  1518   000FAE                     RCREG           equ	4014	;# 
  1519   000FAE                     RCREG1          equ	4014	;# 
  1520   000FAF                     SPBRG           equ	4015	;# 
  1521   000FAF                     SPBRG1          equ	4015	;# 
  1522   000FB0                     SPBRGH          equ	4016	;# 
  1523   000FB1                     T3CON           equ	4017	;# 
  1524   000FB2                     TMR3            equ	4018	;# 
  1525   000FB2                     TMR3L           equ	4018	;# 
  1526   000FB3                     TMR3H           equ	4019	;# 
  1527   000FB4                     CMCON           equ	4020	;# 
  1528   000FB5                     CVRCON          equ	4021	;# 
  1529   000FB6                     ECCP1AS         equ	4022	;# 
  1530   000FB7                     PWM1CON         equ	4023	;# 
  1531   000FB8                     BAUDCON         equ	4024	;# 
  1532   000FB8                     BAUDCTL         equ	4024	;# 
  1533   000FBA                     CCP2CON         equ	4026	;# 
  1534   000FBB                     CCPR2           equ	4027	;# 
  1535   000FBB                     CCPR2L          equ	4027	;# 
  1536   000FBC                     CCPR2H          equ	4028	;# 
  1537   000FBD                     CCP1CON         equ	4029	;# 
  1538   000FBE                     CCPR1           equ	4030	;# 
  1539   000FBE                     CCPR1L          equ	4030	;# 
  1540   000FBF                     CCPR1H          equ	4031	;# 
  1541   000FC0                     ADCON2          equ	4032	;# 
  1542   000FC1                     ADCON1          equ	4033	;# 
  1543   000FC2                     ADCON0          equ	4034	;# 
  1544   000FC3                     ADRES           equ	4035	;# 
  1545   000FC3                     ADRESL          equ	4035	;# 
  1546   000FC4                     ADRESH          equ	4036	;# 
  1547   000FC5                     SSPCON2         equ	4037	;# 
  1548   000FC6                     SSPCON1         equ	4038	;# 
  1549   000FC7                     SSPSTAT         equ	4039	;# 
  1550   000FC8                     SSPADD          equ	4040	;# 
  1551   000FC9                     SSPBUF          equ	4041	;# 
  1552   000FCA                     T2CON           equ	4042	;# 
  1553   000FCB                     PR2             equ	4043	;# 
  1554   000FCB                     MEMCON          equ	4043	;# 
  1555   000FCC                     TMR2            equ	4044	;# 
  1556   000FCD                     T1CON           equ	4045	;# 
  1557   000FCE                     TMR1            equ	4046	;# 
  1558   000FCE                     TMR1L           equ	4046	;# 
  1559   000FCF                     TMR1H           equ	4047	;# 
  1560   000FD0                     RCON            equ	4048	;# 
  1561   000FD1                     WDTCON          equ	4049	;# 
  1562   000FD2                     HLVDCON         equ	4050	;# 
  1563   000FD2                     LVDCON          equ	4050	;# 
  1564   000FD3                     OSCCON          equ	4051	;# 
  1565   000FD5                     T0CON           equ	4053	;# 
  1566   000FD6                     TMR0            equ	4054	;# 
  1567   000FD6                     TMR0L           equ	4054	;# 
  1568   000FD7                     TMR0H           equ	4055	;# 
  1569   000FD8                     STATUS          equ	4056	;# 
  1570   000FD9                     FSR2            equ	4057	;# 
  1571   000FD9                     FSR2L           equ	4057	;# 
  1572   000FDA                     FSR2H           equ	4058	;# 
  1573   000FDB                     PLUSW2          equ	4059	;# 
  1574   000FDC                     PREINC2         equ	4060	;# 
  1575   000FDD                     POSTDEC2        equ	4061	;# 
  1576   000FDE                     POSTINC2        equ	4062	;# 
  1577   000FDF                     INDF2           equ	4063	;# 
  1578   000FE0                     BSR             equ	4064	;# 
  1579   000FE1                     FSR1            equ	4065	;# 
  1580   000FE1                     FSR1L           equ	4065	;# 
  1581   000FE2                     FSR1H           equ	4066	;# 
  1582   000FE3                     PLUSW1          equ	4067	;# 
  1583   000FE4                     PREINC1         equ	4068	;# 
  1584   000FE5                     POSTDEC1        equ	4069	;# 
  1585   000FE6                     POSTINC1        equ	4070	;# 
  1586   000FE7                     INDF1           equ	4071	;# 
  1587   000FE8                     WREG            equ	4072	;# 
  1588   000FE9                     FSR0            equ	4073	;# 
  1589   000FE9                     FSR0L           equ	4073	;# 
  1590   000FEA                     FSR0H           equ	4074	;# 
  1591   000FEB                     PLUSW0          equ	4075	;# 
  1592   000FEC                     PREINC0         equ	4076	;# 
  1593   000FED                     POSTDEC0        equ	4077	;# 
  1594   000FEE                     POSTINC0        equ	4078	;# 
  1595   000FEF                     INDF0           equ	4079	;# 
  1596   000FF0                     INTCON3         equ	4080	;# 
  1597   000FF1                     INTCON2         equ	4081	;# 
  1598   000FF2                     INTCON          equ	4082	;# 
  1599   000FF3                     PROD            equ	4083	;# 
  1600   000FF3                     PRODL           equ	4083	;# 
  1601   000FF4                     PRODH           equ	4084	;# 
  1602   000FF5                     TABLAT          equ	4085	;# 
  1603   000FF6                     TBLPTR          equ	4086	;# 
  1604   000FF6                     TBLPTRL         equ	4086	;# 
  1605   000FF7                     TBLPTRH         equ	4087	;# 
  1606   000FF8                     TBLPTRU         equ	4088	;# 
  1607   000FF9                     PCLAT           equ	4089	;# 
  1608   000FF9                     PC              equ	4089	;# 
  1609   000FF9                     PCL             equ	4089	;# 
  1610   000FFA                     PCLATH          equ	4090	;# 
  1611   000FFB                     PCLATU          equ	4091	;# 
  1612   000FFC                     STKPTR          equ	4092	;# 
  1613   000FFD                     TOS             equ	4093	;# 
  1614   000FFD                     TOSL            equ	4093	;# 
  1615   000FFE                     TOSH            equ	4094	;# 
  1616   000FFF                     TOSU            equ	4095	;# 
  1617   000F80                     PORTA           equ	3968	;# 
  1618   000F81                     PORTB           equ	3969	;# 
  1619   000F82                     PORTC           equ	3970	;# 
  1620   000F83                     PORTD           equ	3971	;# 
  1621   000F84                     PORTE           equ	3972	;# 
  1622   000F89                     LATA            equ	3977	;# 
  1623   000F8A                     LATB            equ	3978	;# 
  1624   000F8B                     LATC            equ	3979	;# 
  1625   000F8C                     LATD            equ	3980	;# 
  1626   000F8D                     LATE            equ	3981	;# 
  1627   000F92                     TRISA           equ	3986	;# 
  1628   000F92                     DDRA            equ	3986	;# 
  1629   000F93                     TRISB           equ	3987	;# 
  1630   000F93                     DDRB            equ	3987	;# 
  1631   000F94                     TRISC           equ	3988	;# 
  1632   000F94                     DDRC            equ	3988	;# 
  1633   000F95                     TRISD           equ	3989	;# 
  1634   000F95                     DDRD            equ	3989	;# 
  1635   000F96                     TRISE           equ	3990	;# 
  1636   000F96                     DDRE            equ	3990	;# 
  1637   000F9B                     OSCTUNE         equ	3995	;# 
  1638   000F9D                     PIE1            equ	3997	;# 
  1639   000F9E                     PIR1            equ	3998	;# 
  1640   000F9F                     IPR1            equ	3999	;# 
  1641   000FA0                     PIE2            equ	4000	;# 
  1642   000FA1                     PIR2            equ	4001	;# 
  1643   000FA2                     IPR2            equ	4002	;# 
  1644   000FA6                     EECON1          equ	4006	;# 
  1645   000FA7                     EECON2          equ	4007	;# 
  1646   000FA8                     EEDATA          equ	4008	;# 
  1647   000FA9                     EEADR           equ	4009	;# 
  1648   000FAA                     EEADRH          equ	4010	;# 
  1649   000FAB                     RCSTA           equ	4011	;# 
  1650   000FAB                     RCSTA1          equ	4011	;# 
  1651   000FAC                     TXSTA           equ	4012	;# 
  1652   000FAC                     TXSTA1          equ	4012	;# 
  1653   000FAD                     TXREG           equ	4013	;# 
  1654   000FAD                     TXREG1          equ	4013	;# 
  1655   000FAE                     RCREG           equ	4014	;# 
  1656   000FAE                     RCREG1          equ	4014	;# 
  1657   000FAF                     SPBRG           equ	4015	;# 
  1658   000FAF                     SPBRG1          equ	4015	;# 
  1659   000FB0                     SPBRGH          equ	4016	;# 
  1660   000FB1                     T3CON           equ	4017	;# 
  1661   000FB2                     TMR3            equ	4018	;# 
  1662   000FB2                     TMR3L           equ	4018	;# 
  1663   000FB3                     TMR3H           equ	4019	;# 
  1664   000FB4                     CMCON           equ	4020	;# 
  1665   000FB5                     CVRCON          equ	4021	;# 
  1666   000FB6                     ECCP1AS         equ	4022	;# 
  1667   000FB7                     PWM1CON         equ	4023	;# 
  1668   000FB8                     BAUDCON         equ	4024	;# 
  1669   000FB8                     BAUDCTL         equ	4024	;# 
  1670   000FBA                     CCP2CON         equ	4026	;# 
  1671   000FBB                     CCPR2           equ	4027	;# 
  1672   000FBB                     CCPR2L          equ	4027	;# 
  1673   000FBC                     CCPR2H          equ	4028	;# 
  1674   000FBD                     CCP1CON         equ	4029	;# 
  1675   000FBE                     CCPR1           equ	4030	;# 
  1676   000FBE                     CCPR1L          equ	4030	;# 
  1677   000FBF                     CCPR1H          equ	4031	;# 
  1678   000FC0                     ADCON2          equ	4032	;# 
  1679   000FC1                     ADCON1          equ	4033	;# 
  1680   000FC2                     ADCON0          equ	4034	;# 
  1681   000FC3                     ADRES           equ	4035	;# 
  1682   000FC3                     ADRESL          equ	4035	;# 
  1683   000FC4                     ADRESH          equ	4036	;# 
  1684   000FC5                     SSPCON2         equ	4037	;# 
  1685   000FC6                     SSPCON1         equ	4038	;# 
  1686   000FC7                     SSPSTAT         equ	4039	;# 
  1687   000FC8                     SSPADD          equ	4040	;# 
  1688   000FC9                     SSPBUF          equ	4041	;# 
  1689   000FCA                     T2CON           equ	4042	;# 
  1690   000FCB                     PR2             equ	4043	;# 
  1691   000FCB                     MEMCON          equ	4043	;# 
  1692   000FCC                     TMR2            equ	4044	;# 
  1693   000FCD                     T1CON           equ	4045	;# 
  1694   000FCE                     TMR1            equ	4046	;# 
  1695   000FCE                     TMR1L           equ	4046	;# 
  1696   000FCF                     TMR1H           equ	4047	;# 
  1697   000FD0                     RCON            equ	4048	;# 
  1698   000FD1                     WDTCON          equ	4049	;# 
  1699   000FD2                     HLVDCON         equ	4050	;# 
  1700   000FD2                     LVDCON          equ	4050	;# 
  1701   000FD3                     OSCCON          equ	4051	;# 
  1702   000FD5                     T0CON           equ	4053	;# 
  1703   000FD6                     TMR0            equ	4054	;# 
  1704   000FD6                     TMR0L           equ	4054	;# 
  1705   000FD7                     TMR0H           equ	4055	;# 
  1706   000FD8                     STATUS          equ	4056	;# 
  1707   000FD9                     FSR2            equ	4057	;# 
  1708   000FD9                     FSR2L           equ	4057	;# 
  1709   000FDA                     FSR2H           equ	4058	;# 
  1710   000FDB                     PLUSW2          equ	4059	;# 
  1711   000FDC                     PREINC2         equ	4060	;# 
  1712   000FDD                     POSTDEC2        equ	4061	;# 
  1713   000FDE                     POSTINC2        equ	4062	;# 
  1714   000FDF                     INDF2           equ	4063	;# 
  1715   000FE0                     BSR             equ	4064	;# 
  1716   000FE1                     FSR1            equ	4065	;# 
  1717   000FE1                     FSR1L           equ	4065	;# 
  1718   000FE2                     FSR1H           equ	4066	;# 
  1719   000FE3                     PLUSW1          equ	4067	;# 
  1720   000FE4                     PREINC1         equ	4068	;# 
  1721   000FE5                     POSTDEC1        equ	4069	;# 
  1722   000FE6                     POSTINC1        equ	4070	;# 
  1723   000FE7                     INDF1           equ	4071	;# 
  1724   000FE8                     WREG            equ	4072	;# 
  1725   000FE9                     FSR0            equ	4073	;# 
  1726   000FE9                     FSR0L           equ	4073	;# 
  1727   000FEA                     FSR0H           equ	4074	;# 
  1728   000FEB                     PLUSW0          equ	4075	;# 
  1729   000FEC                     PREINC0         equ	4076	;# 
  1730   000FED                     POSTDEC0        equ	4077	;# 
  1731   000FEE                     POSTINC0        equ	4078	;# 
  1732   000FEF                     INDF0           equ	4079	;# 
  1733   000FF0                     INTCON3         equ	4080	;# 
  1734   000FF1                     INTCON2         equ	4081	;# 
  1735   000FF2                     INTCON          equ	4082	;# 
  1736   000FF3                     PROD            equ	4083	;# 
  1737   000FF3                     PRODL           equ	4083	;# 
  1738   000FF4                     PRODH           equ	4084	;# 
  1739   000FF5                     TABLAT          equ	4085	;# 
  1740   000FF6                     TBLPTR          equ	4086	;# 
  1741   000FF6                     TBLPTRL         equ	4086	;# 
  1742   000FF7                     TBLPTRH         equ	4087	;# 
  1743   000FF8                     TBLPTRU         equ	4088	;# 
  1744   000FF9                     PCLAT           equ	4089	;# 
  1745   000FF9                     PC              equ	4089	;# 
  1746   000FF9                     PCL             equ	4089	;# 
  1747   000FFA                     PCLATH          equ	4090	;# 
  1748   000FFB                     PCLATU          equ	4091	;# 
  1749   000FFC                     STKPTR          equ	4092	;# 
  1750   000FFD                     TOS             equ	4093	;# 
  1751   000FFD                     TOSL            equ	4093	;# 
  1752   000FFE                     TOSH            equ	4094	;# 
  1753   000FFF                     TOSU            equ	4095	;# 
  1754   000F80                     PORTA           equ	3968	;# 
  1755   000F81                     PORTB           equ	3969	;# 
  1756   000F82                     PORTC           equ	3970	;# 
  1757   000F83                     PORTD           equ	3971	;# 
  1758   000F84                     PORTE           equ	3972	;# 
  1759   000F89                     LATA            equ	3977	;# 
  1760   000F8A                     LATB            equ	3978	;# 
  1761   000F8B                     LATC            equ	3979	;# 
  1762   000F8C                     LATD            equ	3980	;# 
  1763   000F8D                     LATE            equ	3981	;# 
  1764   000F92                     TRISA           equ	3986	;# 
  1765   000F92                     DDRA            equ	3986	;# 
  1766   000F93                     TRISB           equ	3987	;# 
  1767   000F93                     DDRB            equ	3987	;# 
  1768   000F94                     TRISC           equ	3988	;# 
  1769   000F94                     DDRC            equ	3988	;# 
  1770   000F95                     TRISD           equ	3989	;# 
  1771   000F95                     DDRD            equ	3989	;# 
  1772   000F96                     TRISE           equ	3990	;# 
  1773   000F96                     DDRE            equ	3990	;# 
  1774   000F9B                     OSCTUNE         equ	3995	;# 
  1775   000F9D                     PIE1            equ	3997	;# 
  1776   000F9E                     PIR1            equ	3998	;# 
  1777   000F9F                     IPR1            equ	3999	;# 
  1778   000FA0                     PIE2            equ	4000	;# 
  1779   000FA1                     PIR2            equ	4001	;# 
  1780   000FA2                     IPR2            equ	4002	;# 
  1781   000FA6                     EECON1          equ	4006	;# 
  1782   000FA7                     EECON2          equ	4007	;# 
  1783   000FA8                     EEDATA          equ	4008	;# 
  1784   000FA9                     EEADR           equ	4009	;# 
  1785   000FAA                     EEADRH          equ	4010	;# 
  1786   000FAB                     RCSTA           equ	4011	;# 
  1787   000FAB                     RCSTA1          equ	4011	;# 
  1788   000FAC                     TXSTA           equ	4012	;# 
  1789   000FAC                     TXSTA1          equ	4012	;# 
  1790   000FAD                     TXREG           equ	4013	;# 
  1791   000FAD                     TXREG1          equ	4013	;# 
  1792   000FAE                     RCREG           equ	4014	;# 
  1793   000FAE                     RCREG1          equ	4014	;# 
  1794   000FAF                     SPBRG           equ	4015	;# 
  1795   000FAF                     SPBRG1          equ	4015	;# 
  1796   000FB0                     SPBRGH          equ	4016	;# 
  1797   000FB1                     T3CON           equ	4017	;# 
  1798   000FB2                     TMR3            equ	4018	;# 
  1799   000FB2                     TMR3L           equ	4018	;# 
  1800   000FB3                     TMR3H           equ	4019	;# 
  1801   000FB4                     CMCON           equ	4020	;# 
  1802   000FB5                     CVRCON          equ	4021	;# 
  1803   000FB6                     ECCP1AS         equ	4022	;# 
  1804   000FB7                     PWM1CON         equ	4023	;# 
  1805   000FB8                     BAUDCON         equ	4024	;# 
  1806   000FB8                     BAUDCTL         equ	4024	;# 
  1807   000FBA                     CCP2CON         equ	4026	;# 
  1808   000FBB                     CCPR2           equ	4027	;# 
  1809   000FBB                     CCPR2L          equ	4027	;# 
  1810   000FBC                     CCPR2H          equ	4028	;# 
  1811   000FBD                     CCP1CON         equ	4029	;# 
  1812   000FBE                     CCPR1           equ	4030	;# 
  1813   000FBE                     CCPR1L          equ	4030	;# 
  1814   000FBF                     CCPR1H          equ	4031	;# 
  1815   000FC0                     ADCON2          equ	4032	;# 
  1816   000FC1                     ADCON1          equ	4033	;# 
  1817   000FC2                     ADCON0          equ	4034	;# 
  1818   000FC3                     ADRES           equ	4035	;# 
  1819   000FC3                     ADRESL          equ	4035	;# 
  1820   000FC4                     ADRESH          equ	4036	;# 
  1821   000FC5                     SSPCON2         equ	4037	;# 
  1822   000FC6                     SSPCON1         equ	4038	;# 
  1823   000FC7                     SSPSTAT         equ	4039	;# 
  1824   000FC8                     SSPADD          equ	4040	;# 
  1825   000FC9                     SSPBUF          equ	4041	;# 
  1826   000FCA                     T2CON           equ	4042	;# 
  1827   000FCB                     PR2             equ	4043	;# 
  1828   000FCB                     MEMCON          equ	4043	;# 
  1829   000FCC                     TMR2            equ	4044	;# 
  1830   000FCD                     T1CON           equ	4045	;# 
  1831   000FCE                     TMR1            equ	4046	;# 
  1832   000FCE                     TMR1L           equ	4046	;# 
  1833   000FCF                     TMR1H           equ	4047	;# 
  1834   000FD0                     RCON            equ	4048	;# 
  1835   000FD1                     WDTCON          equ	4049	;# 
  1836   000FD2                     HLVDCON         equ	4050	;# 
  1837   000FD2                     LVDCON          equ	4050	;# 
  1838   000FD3                     OSCCON          equ	4051	;# 
  1839   000FD5                     T0CON           equ	4053	;# 
  1840   000FD6                     TMR0            equ	4054	;# 
  1841   000FD6                     TMR0L           equ	4054	;# 
  1842   000FD7                     TMR0H           equ	4055	;# 
  1843   000FD8                     STATUS          equ	4056	;# 
  1844   000FD9                     FSR2            equ	4057	;# 
  1845   000FD9                     FSR2L           equ	4057	;# 
  1846   000FDA                     FSR2H           equ	4058	;# 
  1847   000FDB                     PLUSW2          equ	4059	;# 
  1848   000FDC                     PREINC2         equ	4060	;# 
  1849   000FDD                     POSTDEC2        equ	4061	;# 
  1850   000FDE                     POSTINC2        equ	4062	;# 
  1851   000FDF                     INDF2           equ	4063	;# 
  1852   000FE0                     BSR             equ	4064	;# 
  1853   000FE1                     FSR1            equ	4065	;# 
  1854   000FE1                     FSR1L           equ	4065	;# 
  1855   000FE2                     FSR1H           equ	4066	;# 
  1856   000FE3                     PLUSW1          equ	4067	;# 
  1857   000FE4                     PREINC1         equ	4068	;# 
  1858   000FE5                     POSTDEC1        equ	4069	;# 
  1859   000FE6                     POSTINC1        equ	4070	;# 
  1860   000FE7                     INDF1           equ	4071	;# 
  1861   000FE8                     WREG            equ	4072	;# 
  1862   000FE9                     FSR0            equ	4073	;# 
  1863   000FE9                     FSR0L           equ	4073	;# 
  1864   000FEA                     FSR0H           equ	4074	;# 
  1865   000FEB                     PLUSW0          equ	4075	;# 
  1866   000FEC                     PREINC0         equ	4076	;# 
  1867   000FED                     POSTDEC0        equ	4077	;# 
  1868   000FEE                     POSTINC0        equ	4078	;# 
  1869   000FEF                     INDF0           equ	4079	;# 
  1870   000FF0                     INTCON3         equ	4080	;# 
  1871   000FF1                     INTCON2         equ	4081	;# 
  1872   000FF2                     INTCON          equ	4082	;# 
  1873   000FF3                     PROD            equ	4083	;# 
  1874   000FF3                     PRODL           equ	4083	;# 
  1875   000FF4                     PRODH           equ	4084	;# 
  1876   000FF5                     TABLAT          equ	4085	;# 
  1877   000FF6                     TBLPTR          equ	4086	;# 
  1878   000FF6                     TBLPTRL         equ	4086	;# 
  1879   000FF7                     TBLPTRH         equ	4087	;# 
  1880   000FF8                     TBLPTRU         equ	4088	;# 
  1881   000FF9                     PCLAT           equ	4089	;# 
  1882   000FF9                     PC              equ	4089	;# 
  1883   000FF9                     PCL             equ	4089	;# 
  1884   000FFA                     PCLATH          equ	4090	;# 
  1885   000FFB                     PCLATU          equ	4091	;# 
  1886   000FFC                     STKPTR          equ	4092	;# 
  1887   000FFD                     TOS             equ	4093	;# 
  1888   000FFD                     TOSL            equ	4093	;# 
  1889   000FFE                     TOSH            equ	4094	;# 
  1890   000FFF                     TOSU            equ	4095	;# 
  1891                           
  1892                           	psect	idataCOMRAM
  1893   001D62                     __pidataCOMRAM:
  1894                           	callstack 0
  1895                           
  1896                           ;initializer for _KeyPad1
  1897   001D62  42                 	db	66
  1898   001D63  4A                 	db	74
  1899   001D64  52                 	db	82
  1900   001D65  5A                 	db	90
  1901   001D66  22                 	db	34
  1902   001D67  2A                 	db	42
  1903   001D68  32                 	db	50
  1904   001D69  3A                 	db	58
  1905                           
  1906                           ;initializer for _LCD1_4Bit
  1907   001D6A  41                 	db	65
  1908   001D6B  49                 	db	73
  1909   001D6C  51                 	db	81
  1910   001D6D  59                 	db	89
  1911   001D6E  61                 	db	97
  1912   001D6F  69                 	db	105
  1913                           
  1914                           ;initializer for _Seg1
  1915   001D70  41                 	db	65
  1916   001D71  49                 	db	73
  1917   001D72  51                 	db	81
  1918   001D73  59                 	db	89
  1919   001D74  00                 	db	0
  1920                           
  1921                           ;initializer for _BTN1
  1922   001D75  01                 	db	1
  1923   001D76  01                 	db	1
  1924   001D77  00                 	db	0
  1925                           
  1926                           ;initializer for _Motor2
  1927   001D78  21                 	db	33
  1928   001D79  31                 	db	49
  1929                           
  1930                           ;initializer for _Motor1
  1931   001D7A  01                 	db	1
  1932   001D7B  11                 	db	17
  1933                           
  1934                           ;initializer for _Num
  1935   001D7C  14                 	db	20
  1936                           
  1937                           ;initializer for _LCD1_8Bit
  1938   001D7D  42                 	db	66
  1939   001D7E  4A                 	db	74
  1940   001D7F  43                 	db	67
  1941   001D80  4B                 	db	75
  1942   001D81  53                 	db	83
  1943   001D82  5B                 	db	91
  1944   001D83  63                 	db	99
  1945   001D84  6B                 	db	107
  1946   001D85  73                 	db	115
  1947   001D86  7B                 	db	123
  1948                           
  1949                           	psect	smallconst
  1950   001000                     __psmallconst:
  1951                           	callstack 0
  1952   001000  00                 	db	0
  1953   001001                     _btn_Value:
  1954                           	callstack 0
  1955   001001  07                 	db	7
  1956   001002  08                 	db	8
  1957   001003  09                 	db	9
  1958   001004  2F                 	db	47
  1959   001005  04                 	db	4
  1960   001006  05                 	db	5
  1961   001007  06                 	db	6
  1962   001008  2A                 	db	42
  1963   001009  01                 	db	1
  1964   00100A  02                 	db	2
  1965   00100B  03                 	db	3
  1966   00100C  2D                 	db	45
  1967   00100D  23                 	db	35
  1968   00100E  00                 	db	0
  1969   00100F  3D                 	db	61
  1970   001010  2B                 	db	43
  1971   001011                     __end_of_btn_Value:
  1972                           	callstack 0
  1973   000FF1                     _INTCON2bits    set	4081
  1974   000FF0                     _INTCON3bits    set	4080
  1975   000FF2                     _INTCONbits     set	4082
  1976   000F84                     _PORTE          set	3972
  1977   000F83                     _PORTD          set	3971
  1978   000F82                     _PORTC          set	3970
  1979   000F81                     _PORTB          set	3969
  1980   000F80                     _PORTA          set	3968
  1981   000F8D                     _LATE           set	3981
  1982   000F8C                     _LATD           set	3980
  1983   000F8B                     _LATC           set	3979
  1984   000F8A                     _LATB           set	3978
  1985   000F89                     _LATA           set	3977
  1986   000F96                     _TRISE          set	3990
  1987   000F95                     _TRISD          set	3989
  1988   000F94                     _TRISC          set	3988
  1989   000F93                     _TRISB          set	3987
  1990   000F92                     _TRISA          set	3986
  1991   001011                     STR_1:
  1992   001011  25                 	db	37
  1993   001012  69                 	db	105	;'i'
  1994   001013  00                 	db	0
  1995   001011                     STR_2           equ	STR_1
  1996   001011                     STR_3           equ	STR_1
  1997   001014  00                 	db	0	; dummy byte at the end
  1998   000002                     __activetblptr  equ	2
  1999                           
  2000                           ; #config settings
  2001                           
  2002                           	psect	cinit
  2003   001B6A                     __pcinit:
  2004                           	callstack 0
  2005   001B6A                     start_initialization:
  2006                           	callstack 0
  2007   001B6A                     __initialization:
  2008                           	callstack 0
  2009                           
  2010                           ; Initialize objects allocated to COMRAM (37 bytes)
  2011                           ; load TBLPTR registers with __pidataCOMRAM
  2012   001B6A  0E62               	movlw	low __pidataCOMRAM
  2013   001B6C  6EF6               	movwf	tblptrl,c
  2014   001B6E  0E1D               	movlw	high __pidataCOMRAM
  2015   001B70  6EF7               	movwf	tblptrh,c
  2016   001B72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2017   001B74  6EF8               	movwf	tblptru,c
  2018   001B76  EE00  F02E         	lfsr	0,__pdataCOMRAM
  2019   001B7A  EE10 F025          	lfsr	1,37
  2020   001B7E                     copy_data0:
  2021   001B7E  0009               	tblrd		*+
  2022   001B80  CFF5 FFEE          	movff	tablat,postinc0
  2023   001B84  50E5               	movf	postdec1,w,c
  2024   001B86  50E1               	movf	fsr1l,w,c
  2025   001B88  E1FA               	bnz	copy_data0
  2026                           
  2027                           ; Clear objects allocated to BANK0 (32 bytes)
  2028   001B8A  EE00  F080         	lfsr	0,__pbssBANK0
  2029   001B8E  0E20               	movlw	32
  2030   001B90                     clear_0:
  2031   001B90  6AEE               	clrf	postinc0,c
  2032   001B92  06E8               	decf	wreg,f,c
  2033   001B94  E1FD               	bnz	clear_0
  2034                           
  2035                           ; Clear objects allocated to COMRAM (22 bytes)
  2036   001B96  EE00  F053         	lfsr	0,__pbssCOMRAM
  2037   001B9A  0E16               	movlw	22
  2038   001B9C                     clear_1:
  2039   001B9C  6AEE               	clrf	postinc0,c
  2040   001B9E  06E8               	decf	wreg,f,c
  2041   001BA0  E1FD               	bnz	clear_1
  2042   001BA2                     end_of_initialization:
  2043                           	callstack 0
  2044   001BA2                     __end_of__initialization:
  2045                           	callstack 0
  2046   001BA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2047   001BA4  6EF8               	movwf	tblptru,c
  2048   001BA6  0100               	movlb	0
  2049   001BA8  EF9E  F00E         	goto	_main	;jump to C main() function
  2050                           
  2051                           	psect	bssCOMRAM
  2052   000053                     __pbssCOMRAM:
  2053                           	callstack 0
  2054   000053                     _width:
  2055                           	callstack 0
  2056   000053                     	ds	2
  2057   000055                     _prec:
  2058                           	callstack 0
  2059   000055                     	ds	2
  2060   000057                     _RetValue_BTN:
  2061                           	callstack 0
  2062   000057                     	ds	2
  2063   000059                     _RetValue_KeyPad:
  2064                           	callstack 0
  2065   000059                     	ds	2
  2066   00005B                     _flags:
  2067                           	callstack 0
  2068   00005B                     	ds	1
  2069   00005C                     HALL_Relay_turnOFF@F3064:
  2070                           	callstack 0
  2071   00005C                     	ds	1
  2072   00005D                     HALL_Relay_turnON@F3059:
  2073                           	callstack 0
  2074   00005D                     	ds	1
  2075   00005E                     HALL_Relay_init@F3054:
  2076                           	callstack 0
  2077   00005E                     	ds	1
  2078   00005F                     HALL_Led_trunToggle@F3075:
  2079                           	callstack 0
  2080   00005F                     	ds	1
  2081   000060                     HALL_Led_trunOFF@F3070:
  2082                           	callstack 0
  2083   000060                     	ds	1
  2084   000061                     HALL_Led_trunON@F3065:
  2085                           	callstack 0
  2086   000061                     	ds	1
  2087   000062                     HALL_Led_init@F3060:
  2088                           	callstack 0
  2089   000062                     	ds	1
  2090   000063                     _NumArr:
  2091                           	callstack 0
  2092   000063                     	ds	4
  2093   000067                     _objPin_motor_2:
  2094                           	callstack 0
  2095   000067                     	ds	1
  2096   000068                     _objPin_motor_1:
  2097                           	callstack 0
  2098   000068                     	ds	1
  2099                           
  2100                           	psect	dataCOMRAM
  2101   00002E                     __pdataCOMRAM:
  2102                           	callstack 0
  2103   00002E                     _KeyPad1:
  2104                           	callstack 0
  2105   00002E                     	ds	8
  2106   000036                     _LCD1_4Bit:
  2107                           	callstack 0
  2108   000036                     	ds	6
  2109   00003C                     _Seg1:
  2110                           	callstack 0
  2111   00003C                     	ds	5
  2112   000041                     _BTN1:
  2113                           	callstack 0
  2114   000041                     	ds	3
  2115   000044                     _Motor2:
  2116                           	callstack 0
  2117   000044                     	ds	2
  2118   000046                     _Motor1:
  2119                           	callstack 0
  2120   000046                     	ds	2
  2121   000048                     _Num:
  2122                           	callstack 0
  2123   000048                     	ds	1
  2124   000049                     _LCD1_8Bit:
  2125                           	callstack 0
  2126   000049                     	ds	10
  2127                           
  2128                           	psect	bssBANK0
  2129   000080                     __pbssBANK0:
  2130                           	callstack 0
  2131   000080                     _dbuf:
  2132                           	callstack 0
  2133   000080                     	ds	32
  2134                           
  2135                           	psect	cstackCOMRAM
  2136   000001                     __pcstackCOMRAM:
  2137                           	callstack 0
  2138   000001                     ?___awdiv:
  2139                           	callstack 0
  2140   000001                     ?___awmod:
  2141                           	callstack 0
  2142   000001                     Mcal_GPIO_initPinDirection@copyPinCFG:
  2143                           	callstack 0
  2144   000001                     MCAL_GPIO_writePinStatus@copyPinCFG:
  2145                           	callstack 0
  2146   000001                     memset@dest:
  2147                           	callstack 0
  2148   000001                     ___awdiv@dividend:
  2149                           	callstack 0
  2150   000001                     ___awmod@dividend:
  2151                           	callstack 0
  2152   000001                     fputc@c:
  2153                           	callstack 0
  2154   000001                     
  2155                           ; 1 bytes @ 0x0
  2156   000001                     	ds	1
  2157   000002                     MCAL_GPIO_writePinStatus@copyStatusPin:
  2158                           	callstack 0
  2159   000002                     memset@c:
  2160                           	callstack 0
  2161   000002                     ??_Mcal_GPIO_initPinDirection:
  2162                           
  2163                           ; 1 bytes @ 0x1
  2164   000002                     	ds	1
  2165   000003                     fputc@fp:
  2166                           	callstack 0
  2167   000003                     ___awdiv@divisor:
  2168                           	callstack 0
  2169   000003                     ___awmod@divisor:
  2170                           	callstack 0
  2171   000003                     ??_MCAL_GPIO_writePinStatus:
  2172                           
  2173                           ; 1 bytes @ 0x2
  2174   000003                     	ds	1
  2175   000004                     Mcal_GPIO_initPinDirection@retVal:
  2176                           	callstack 0
  2177   000004                     memset@n:
  2178                           	callstack 0
  2179   000004                     ??_fputc:
  2180                           
  2181                           ; 1 bytes @ 0x3
  2182   000004                     	ds	1
  2183   000005                     MCAL_GPIO_writePinStatus@retVal:
  2184                           	callstack 0
  2185   000005                     ___awdiv@counter:
  2186                           	callstack 0
  2187   000005                     ___awmod@counter:
  2188                           	callstack 0
  2189   000005                     
  2190                           ; 1 bytes @ 0x4
  2191   000005                     	ds	1
  2192   000006                     LCD_sendEnableSignal8Bits@copyLCD:
  2193                           	callstack 0
  2194   000006                     MCAL_GPIO_init@copyPinCFG:
  2195                           	callstack 0
  2196   000006                     ___awdiv@sign:
  2197                           	callstack 0
  2198   000006                     ___awmod@sign:
  2199                           	callstack 0
  2200   000006                     memset@p:
  2201                           	callstack 0
  2202   000006                     
  2203                           ; 1 bytes @ 0x5
  2204   000006                     	ds	1
  2205   000007                     ?_abs:
  2206                           	callstack 0
  2207   000007                     HALL_LCD_8bit_sendCMD@copyLCD:
  2208                           	callstack 0
  2209   000007                     HALL_LCD_8bit_sendChar@copyLCD:
  2210                           	callstack 0
  2211   000007                     MCAL_GPIO_init@retVal:
  2212                           	callstack 0
  2213   000007                     ___awdiv@quotient:
  2214                           	callstack 0
  2215   000007                     abs@a:
  2216                           	callstack 0
  2217   000007                     
  2218                           ; 1 bytes @ 0x6
  2219   000007                     	ds	1
  2220   000008                     HALL_LCD_8bit_sendCMD@copyCMD:
  2221                           	callstack 0
  2222   000008                     HALL_LCD_8bit_sendChar@copyData:
  2223                           	callstack 0
  2224                           
  2225                           ; 1 bytes @ 0x7
  2226   000008                     	ds	1
  2227   000009                     ??_HALL_LCD_8bit_sendCMD:
  2228   000009                     ??_abs:
  2229   000009                     ??_HALL_LCD_8bit_sendChar:
  2230                           
  2231                           ; 1 bytes @ 0x8
  2232   000009                     	ds	2
  2233   00000B                     HALL_LCD_8bit_sendCMD@Counter:
  2234                           	callstack 0
  2235   00000B                     HALL_LCD_8bit_sendChar@Counter:
  2236                           	callstack 0
  2237   00000B                     vfpfcnvrt@fp:
  2238                           	callstack 0
  2239                           
  2240                           ; 1 bytes @ 0xA
  2241   00000B                     	ds	1
  2242   00000C                     HALL_LCD_8bit_init@copyLCD:
  2243                           	callstack 0
  2244   00000C                     HALL_LCD_8bit_sendSTR@copyLCD:
  2245                           	callstack 0
  2246   00000C                     vfpfcnvrt@fmt:
  2247                           	callstack 0
  2248                           
  2249                           ; 1 bytes @ 0xB
  2250   00000C                     	ds	1
  2251   00000D                     HALL_LCD_8bit_sendSTR@copyData:
  2252                           	callstack 0
  2253   00000D                     vfpfcnvrt@ap:
  2254                           	callstack 0
  2255   00000D                     ??_HALL_LCD_8bit_init:
  2256                           
  2257                           ; 1 bytes @ 0xC
  2258   00000D                     	ds	1
  2259   00000E                     HALL_LCD_8bit_init@Counter:
  2260                           	callstack 0
  2261   00000E                     ??_vfpfcnvrt:
  2262                           
  2263                           ; 1 bytes @ 0xD
  2264   00000E                     	ds	1
  2265   00000F                     vfpfcnvrt@done:
  2266                           	callstack 0
  2267                           
  2268                           ; 1 bytes @ 0xE
  2269   00000F                     	ds	1
  2270   000010                     vfpfcnvrt@cp:
  2271                           	callstack 0
  2272                           
  2273                           ; 1 bytes @ 0xF
  2274   000010                     	ds	1
  2275   000011                     vfpfcnvrt@convarg:
  2276                           	callstack 0
  2277                           
  2278                           ; 4 bytes @ 0x10
  2279   000011                     	ds	4
  2280   000015                     vfpfcnvrt@c:
  2281                           	callstack 0
  2282                           
  2283                           ; 1 bytes @ 0x14
  2284   000015                     	ds	1
  2285   000016                     ?_vfprintf:
  2286                           	callstack 0
  2287   000016                     vfprintf@fp:
  2288                           	callstack 0
  2289                           
  2290                           ; 1 bytes @ 0x15
  2291   000016                     	ds	1
  2292   000017                     vfprintf@fmt:
  2293                           	callstack 0
  2294                           
  2295                           ; 1 bytes @ 0x16
  2296   000017                     	ds	1
  2297   000018                     vfprintf@ap:
  2298                           	callstack 0
  2299                           
  2300                           ; 1 bytes @ 0x17
  2301   000018                     	ds	1
  2302   000019                     vfprintf@cfmt:
  2303                           	callstack 0
  2304   000019                     
  2305                           ; 1 bytes @ 0x18
  2306   000019                     	ds	1
  2307   00001A                     ?_sprintf:
  2308                           	callstack 0
  2309   00001A                     sprintf@s:
  2310                           	callstack 0
  2311                           
  2312                           ; 1 bytes @ 0x19
  2313   00001A                     	ds	1
  2314   00001B                     sprintf@fmt:
  2315                           	callstack 0
  2316                           
  2317                           ; 1 bytes @ 0x1A
  2318   00001B                     	ds	5
  2319   000020                     sprintf@ap:
  2320                           	callstack 0
  2321   000020                     
  2322                           ; 1 bytes @ 0x1F
  2323   000020                     	ds	1
  2324   000021                     sprintf@f:
  2325                           	callstack 0
  2326                           
  2327                           ; 11 bytes @ 0x20
  2328   000021                     	ds	11
  2329   00002C                     HALL_LCD_convertU8toSTR@copySTR:
  2330                           	callstack 0
  2331                           
  2332                           ; 1 bytes @ 0x2B
  2333   00002C                     	ds	1
  2334   00002D                     HALL_LCD_convertU8toSTR@copyValue:
  2335                           	callstack 0
  2336   00002D                     
  2337                           ; 1 bytes @ 0x2C
  2338   00002D                     	ds	1
  2339   00002E                     
  2340                           ; 1 bytes @ 0x2D
  2341 ;;
  2342 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2343 ;;
  2344 ;; *************** function _main *****************
  2345 ;; Defined at:
  2346 ;;		line 12 in file "App/Main.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels required when called: 6
  2366 ;; This function calls:
  2367 ;;		_HALL_LCD_8bit_init
  2368 ;;		_HALL_LCD_8bit_sendSTR
  2369 ;;		_HALL_LCD_convertU8toSTR
  2370 ;; This function is called by:
  2371 ;;		Startup code after reset
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text0
  2376   001D3C                     __ptext0:
  2377                           	callstack 0
  2378   001D3C                     _main:
  2379                           	callstack 25
  2380   001D3C                     
  2381                           ;App/Main.c: 13:     HALL_LCD_8bit_init(&LCD1_8Bit);
  2382   001D3C  0E49               	movlw	low _LCD1_8Bit
  2383   001D3E  6E0C               	movwf	HALL_LCD_8bit_init@copyLCD^0,c
  2384   001D40  ECD4  F00B         	call	_HALL_LCD_8bit_init	;wreg free
  2385   001D44                     
  2386                           ;App/Main.c: 14:     HALL_LCD_convertU8toSTR(Num, NumArr);
  2387   001D44  0E63               	movlw	low _NumArr
  2388   001D46  6E2C               	movwf	HALL_LCD_convertU8toSTR@copySTR^0,c
  2389   001D48  0E14               	movlw	20
  2390   001D4A  ECD6  F00D         	call	_HALL_LCD_convertU8toSTR
  2391   001D4E                     
  2392                           ;App/Main.c: 15:     HALL_LCD_8bit_sendSTR(&LCD1_8Bit, NumArr);
  2393   001D4E  0E49               	movlw	low _LCD1_8Bit
  2394   001D50  6E0C               	movwf	HALL_LCD_8bit_sendSTR@copyLCD^0,c
  2395   001D52  0E63               	movlw	low _NumArr
  2396   001D54  6E0D               	movwf	HALL_LCD_8bit_sendSTR@copyData^0,c
  2397   001D56  ECF7  F00D         	call	_HALL_LCD_8bit_sendSTR	;wreg free
  2398   001D5A                     l33:
  2399   001D5A  EFAD  F00E         	goto	l33
  2400   001D5E  EF00  F000         	goto	start
  2401   001D62                     __end_of_main:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _HALL_LCD_convertU8toSTR *****************
  2405 ;; Defined at:
  2406 ;;		line 246 in file "Hall/LCD/Hall_lcd_prog.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  copyValue       1    wreg     unsigned char 
  2409 ;;  copySTR         1   43[COMRAM] PTR unsigned char 
  2410 ;;		 -> NumArr(4), 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  copyValue       1   44[COMRAM] unsigned char 
  2413 ;;  RetValue        1    0        unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      unsigned char 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2423 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 5
  2430 ;; This function calls:
  2431 ;;		_memset
  2432 ;;		_sprintf
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text1
  2439   001BAC                     __ptext1:
  2440                           	callstack 0
  2441   001BAC                     _HALL_LCD_convertU8toSTR:
  2442                           	callstack 25
  2443                           
  2444                           ;incstack = 0
  2445                           ;HALL_LCD_convertU8toSTR@copyValue stored from wreg
  2446   001BAC  6E2D               	movwf	HALL_LCD_convertU8toSTR@copyValue^0,c
  2447   001BAE                     
  2448                           ;Hall/LCD/Hall_lcd_prog.c: 248:     if(copySTR == ((void*)0)) {
  2449   001BAE  502C               	movf	HALL_LCD_convertU8toSTR@copySTR^0,w,c
  2450   001BB0  A4D8               	btfss	status,2,c
  2451   001BB2  EFDD  F00D         	goto	u2441
  2452   001BB6  EFDF  F00D         	goto	u2440
  2453   001BBA                     u2441:
  2454   001BBA  EFE1  F00D         	goto	l3368
  2455   001BBE                     u2440:
  2456   001BBE                     
  2457                           ;Hall/LCD/Hall_lcd_prog.c: 250:     }
  2458   001BBE  EFF6  F00D         	goto	l252
  2459   001BC2                     l3368:
  2460                           
  2461                           ;Hall/LCD/Hall_lcd_prog.c: 252:         memset(copySTR, '\0', 4);
  2462   001BC2  C02C  F001         	movff	HALL_LCD_convertU8toSTR@copySTR,memset@dest
  2463   001BC6  0E00               	movlw	0
  2464   001BC8  6E03               	movwf	(memset@c+1)^0,c
  2465   001BCA  0E00               	movlw	0
  2466   001BCC  6E02               	movwf	memset@c^0,c
  2467   001BCE  0E00               	movlw	0
  2468   001BD0  6E05               	movwf	(memset@n+1)^0,c
  2469   001BD2  0E04               	movlw	4
  2470   001BD4  6E04               	movwf	memset@n^0,c
  2471   001BD6  EC86  F00E         	call	_memset	;wreg free
  2472   001BDA                     
  2473                           ;Hall/LCD/Hall_lcd_prog.c: 253:         sprintf(copySTR, "%i", copyValue);
  2474   001BDA  C02C  F01A         	movff	HALL_LCD_convertU8toSTR@copySTR,sprintf@s
  2475   001BDE  0E11               	movlw	low STR_1
  2476   001BE0  6E1B               	movwf	sprintf@fmt^0,c
  2477   001BE2  C02D  F01C         	movff	HALL_LCD_convertU8toSTR@copyValue,?_sprintf+2
  2478   001BE6  6A1D               	clrf	(?_sprintf+3)^0,c
  2479   001BE8  EC52  F00E         	call	_sprintf	;wreg free
  2480   001BEC                     l252:
  2481   001BEC  0012               	return		;funcret
  2482   001BEE                     __end_of_HALL_LCD_convertU8toSTR:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _sprintf *****************
  2486 ;; Defined at:
  2487 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  s               1   25[COMRAM] PTR unsigned char 
  2490 ;;		 -> NumArr(4), 
  2491 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  2492 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  f              11   32[COMRAM] struct _IO_FILE
  2495 ;;  ret             2    0        int 
  2496 ;;  ap              1   31[COMRAM] PTR void [1]
  2497 ;;		 -> ?_sprintf(2), 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2   25[COMRAM] int 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2507 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;Total ram usage:       18 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 4
  2514 ;; This function calls:
  2515 ;;		_vfprintf
  2516 ;; This function is called by:
  2517 ;;		_HALL_LCD_convertU8toSTR
  2518 ;;		_HALL_LCD_convertU16toSTR
  2519 ;;		_HALL_LCD_convertU32toSTR
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text2
  2524   001CA4                     __ptext2:
  2525                           	callstack 0
  2526   001CA4                     _sprintf:
  2527                           	callstack 25
  2528   001CA4  0E1C               	movlw	low (?_sprintf+2)
  2529   001CA6  6E20               	movwf	sprintf@ap^0,c
  2530   001CA8  C01A  F021         	movff	sprintf@s,sprintf@f
  2531   001CAC  0E00               	movlw	0
  2532   001CAE  6E24               	movwf	(sprintf@f+3)^0,c
  2533   001CB0  0E00               	movlw	0
  2534   001CB2  6E23               	movwf	(sprintf@f+2)^0,c
  2535   001CB4  0E00               	movlw	0
  2536   001CB6  6E2B               	movwf	(sprintf@f+10)^0,c
  2537   001CB8  0E00               	movlw	0
  2538   001CBA  6E2A               	movwf	(sprintf@f+9)^0,c
  2539   001CBC  0E21               	movlw	low sprintf@f
  2540   001CBE  6E16               	movwf	vfprintf@fp^0,c
  2541   001CC0  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  2542   001CC4  0E20               	movlw	low sprintf@ap
  2543   001CC6  6E18               	movwf	vfprintf@ap^0,c
  2544   001CC8  EC17  F00E         	call	_vfprintf	;wreg free
  2545   001CCC  501A               	movf	sprintf@s^0,w,c
  2546   001CCE  2423               	addwf	(sprintf@f+2)^0,w,c
  2547   001CD0  6ED9               	movwf	fsr2l,c
  2548   001CD2  6ADA               	clrf	fsr2h,c
  2549   001CD4  6ADF               	clrf	indf2,c
  2550   001CD6  0012               	return		;funcret
  2551   001CD8                     __end_of_sprintf:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function _vfprintf *****************
  2555 ;; Defined at:
  2556 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  2559 ;;		 -> sprintf@f(11), 
  2560 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  2561 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2562 ;;  ap              1   23[COMRAM] PTR PTR void 
  2563 ;;		 -> sprintf@ap(1), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  2566 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2   21[COMRAM] int 
  2569 ;; Registers used:
  2570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        4 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 3
  2583 ;; This function calls:
  2584 ;;		_vfpfcnvrt
  2585 ;; This function is called by:
  2586 ;;		_sprintf
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text3
  2591   001C2E                     __ptext3:
  2592                           	callstack 0
  2593   001C2E                     _vfprintf:
  2594                           	callstack 25
  2595   001C2E                     
  2596                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2597   001C2E  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2600   001C32  EF23  F00E         	goto	l3230
  2601   001C36                     l3228:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2604   001C36  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2605   001C3A  0E19               	movlw	low vfprintf@cfmt
  2606   001C3C  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2607   001C3E  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2608   001C42  ECF8  F00A         	call	_vfpfcnvrt	;wreg free
  2609   001C46                     l3230:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2612   001C46  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  2613   001C4A                     	if	1	;There is more than 1 active tblptr byte
  2614   001C4A  0E10               	movlw	high __smallconst
  2615   001C4C  6EF7               	movwf	tblptrh,c
  2616   001C4E                     	endif
  2617   001C4E                     	if	0	;tblptru may be non-zero
  2618   001C4E                     	endif
  2619   001C4E                     	if	0	;tblptru may be non-zero
  2620   001C4E                     	endif
  2621   001C4E  0008               	tblrd		*
  2622   001C50  50F5               	movf	tablat,w,c
  2623   001C52  0900               	iorlw	0
  2624   001C54  A4D8               	btfss	status,2,c
  2625   001C56  EF2F  F00E         	goto	u2331
  2626   001C5A  EF31  F00E         	goto	u2330
  2627   001C5E                     u2331:
  2628   001C5E  EF1B  F00E         	goto	l3228
  2629   001C62                     u2330:
  2630   001C62                     
  2631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2632   001C62  0E00               	movlw	0
  2633   001C64  6E17               	movwf	(?_vfprintf+1)^0,c
  2634   001C66  0E00               	movlw	0
  2635   001C68  6E16               	movwf	?_vfprintf^0,c
  2636   001C6A  0012               	return		;funcret
  2637   001C6C                     __end_of_vfprintf:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _vfpfcnvrt *****************
  2641 ;; Defined at:
  2642 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2645 ;;		 -> sprintf@f(11), 
  2646 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2647 ;;		 -> vfprintf@cfmt(1), 
  2648 ;;  ap              1   12[COMRAM] PTR PTR void 
  2649 ;;		 -> sprintf@ap(1), 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  convarg         4   16[COMRAM] struct .
  2652 ;;  c               1   20[COMRAM] unsigned char 
  2653 ;;  cp              1   15[COMRAM] PTR unsigned char 
  2654 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2655 ;;  done            1   14[COMRAM] _Bool 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2665 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;Total ram usage:       11 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 2
  2672 ;; This function calls:
  2673 ;;		___awdiv
  2674 ;;		___awmod
  2675 ;;		_abs
  2676 ;;		_fputc
  2677 ;; This function is called by:
  2678 ;;		_vfprintf
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text4
  2683   0015F0                     __ptext4:
  2684                           	callstack 0
  2685   0015F0                     _vfpfcnvrt:
  2686                           	callstack 25
  2687   0015F0                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2689   0015F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2690   0015F2  6ED9               	movwf	fsr2l,c
  2691   0015F4  6ADA               	clrf	fsr2h,c
  2692   0015F6  CFDF FFF6          	movff	indf2,tblptrl
  2693   0015FA                     	if	1	;There is more than 1 active tblptr byte
  2694   0015FA  0E10               	movlw	high __smallconst
  2695   0015FC  6EF7               	movwf	tblptrh,c
  2696   0015FE                     	endif
  2697   0015FE                     	if	0	;tblptru may be non-zero
  2698   0015FE                     	endif
  2699   0015FE                     	if	0	;tblptru may be non-zero
  2700   0015FE                     	endif
  2701   0015FE  0008               	tblrd		*
  2702   001600  50F5               	movf	tablat,w,c
  2703   001602  0A25               	xorlw	37
  2704   001604  A4D8               	btfss	status,2,c
  2705   001606  EF07  F00B         	goto	u2071
  2706   00160A  EF09  F00B         	goto	u2070
  2707   00160E                     u2071:
  2708   00160E  EFC2  F00B         	goto	l3158
  2709   001612                     u2070:
  2710   001612                     
  2711                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2712   001612  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2713   001614  6ED9               	movwf	fsr2l,c
  2714   001616  6ADA               	clrf	fsr2h,c
  2715   001618  2ADF               	incf	indf2,f,c
  2716   00161A                     
  2717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2718   00161A  0E00               	movlw	0
  2719   00161C  6E54               	movwf	(_width+1)^0,c
  2720   00161E  0E00               	movlw	0
  2721   001620  6E53               	movwf	_width^0,c
  2722   001622  C053  F05B         	movff	_width,_flags
  2723   001626                     
  2724                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2725   001626  6855               	setf	_prec^0,c
  2726   001628  6856               	setf	(_prec+1)^0,c
  2727   00162A                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2729   00162A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2730   00162C  6ED9               	movwf	fsr2l,c
  2731   00162E  6ADA               	clrf	fsr2h,c
  2732   001630  50DF               	movf	indf2,w,c
  2733   001632  6E10               	movwf	vfpfcnvrt@cp^0,c
  2734   001634                     
  2735                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2736   001634  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2737   001638                     	if	1	;There is more than 1 active tblptr byte
  2738   001638  0E10               	movlw	high __smallconst
  2739   00163A  6EF7               	movwf	tblptrh,c
  2740   00163C                     	endif
  2741   00163C                     	if	0	;tblptru may be non-zero
  2742   00163C                     	endif
  2743   00163C                     	if	0	;tblptru may be non-zero
  2744   00163C                     	endif
  2745   00163C  0008               	tblrd		*
  2746   00163E  50F5               	movf	tablat,w,c
  2747   001640  0A64               	xorlw	100
  2748   001642  B4D8               	btfsc	status,2,c
  2749   001644  EF26  F00B         	goto	u2081
  2750   001648  EF28  F00B         	goto	u2080
  2751   00164C                     u2081:
  2752   00164C  EF36  F00B         	goto	l3128
  2753   001650                     u2080:
  2754   001650  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2755   001654                     	if	1	;There is more than 1 active tblptr byte
  2756   001654  0E10               	movlw	high __smallconst
  2757   001656  6EF7               	movwf	tblptrh,c
  2758   001658                     	endif
  2759   001658                     	if	0	;tblptru may be non-zero
  2760   001658                     	endif
  2761   001658                     	if	0	;tblptru may be non-zero
  2762   001658                     	endif
  2763   001658  0008               	tblrd		*
  2764   00165A  50F5               	movf	tablat,w,c
  2765   00165C  0A69               	xorlw	105
  2766   00165E  A4D8               	btfss	status,2,c
  2767   001660  EF34  F00B         	goto	u2091
  2768   001664  EF36  F00B         	goto	u2090
  2769   001668                     u2091:
  2770   001668  EFBC  F00B         	goto	l3154
  2771   00166C                     u2090:
  2772   00166C                     l3128:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2775   00166C  500D               	movf	vfpfcnvrt@ap^0,w,c
  2776   00166E  6ED9               	movwf	fsr2l,c
  2777   001670  6ADA               	clrf	fsr2h,c
  2778   001672  0E02               	movlw	2
  2779   001674  26DF               	addwf	indf2,f,c
  2780   001676  5CDF               	subwf	indf2,w,c
  2781   001678  6ED9               	movwf	fsr2l,c
  2782   00167A  6ADA               	clrf	fsr2h,c
  2783   00167C  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  2784   001680  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  2785   001684                     
  2786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2787   001684  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2788   001686  6ED9               	movwf	fsr2l,c
  2789   001688  6ADA               	clrf	fsr2h,c
  2790   00168A  2810               	incf	vfpfcnvrt@cp^0,w,c
  2791   00168C  6EDF               	movwf	indf2,c
  2792   00168E                     
  2793                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2794   00168E  0E20               	movlw	32
  2795   001690  6E15               	movwf	vfpfcnvrt@c^0,c
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2798   001692  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2799   001694  EF4E  F00B         	goto	u2101
  2800   001698  EF51  F00B         	goto	u2100
  2801   00169C                     u2101:
  2802   00169C  0E01               	movlw	1
  2803   00169E  EF52  F00B         	goto	u2110
  2804   0016A2                     u2100:
  2805   0016A2  0E00               	movlw	0
  2806   0016A4                     u2110:
  2807   0016A4  6E0F               	movwf	vfpfcnvrt@done^0,c
  2808   0016A6                     l3134:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2811   0016A6  0615               	decf	vfpfcnvrt@c^0,f,c
  2812   0016A8  5015               	movf	vfpfcnvrt@c^0,w,c
  2813   0016AA  0F80               	addlw	low _dbuf
  2814   0016AC  6ED9               	movwf	fsr2l,c
  2815   0016AE  6ADA               	clrf	fsr2h,c
  2816   0016B0  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2817   0016B4  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2818   0016B8  0E00               	movlw	0
  2819   0016BA  6E04               	movwf	(___awmod@divisor+1)^0,c
  2820   0016BC  0E0A               	movlw	10
  2821   0016BE  6E03               	movwf	___awmod@divisor^0,c
  2822   0016C0  ECA1  F00C         	call	___awmod	;wreg free
  2823   0016C4  C001  F007         	movff	?___awmod,abs@a
  2824   0016C8  C002  F008         	movff	?___awmod+1,abs@a+1
  2825   0016CC  EC6C  F00E         	call	_abs	;wreg free
  2826   0016D0  5007               	movf	?_abs^0,w,c
  2827   0016D2  0F30               	addlw	48
  2828   0016D4  6EDF               	movwf	indf2,c
  2829   0016D6                     
  2830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2831   0016D6  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2832   0016DA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2833   0016DE  0E00               	movlw	0
  2834   0016E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2835   0016E2  0E0A               	movlw	10
  2836   0016E4  6E03               	movwf	___awdiv@divisor^0,c
  2837   0016E6  EC40  F00C         	call	___awdiv	;wreg free
  2838   0016EA  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  2839   0016EE  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2840   0016F2                     
  2841                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2842   0016F2  5011               	movf	vfpfcnvrt@convarg^0,w,c
  2843   0016F4  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2844   0016F6  B4D8               	btfsc	status,2,c
  2845   0016F8  EF80  F00B         	goto	u2121
  2846   0016FC  EF82  F00B         	goto	u2120
  2847   001700                     u2121:
  2848   001700  EF8A  F00B         	goto	l3142
  2849   001704                     u2120:
  2850   001704  5015               	movf	vfpfcnvrt@c^0,w,c
  2851   001706  A4D8               	btfss	status,2,c
  2852   001708  EF88  F00B         	goto	u2131
  2853   00170C  EF8A  F00B         	goto	u2130
  2854   001710                     u2131:
  2855   001710  EF53  F00B         	goto	l3134
  2856   001714                     u2130:
  2857   001714                     l3142:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2860   001714  5015               	movf	vfpfcnvrt@c^0,w,c
  2861   001716  B4D8               	btfsc	status,2,c
  2862   001718  EF90  F00B         	goto	u2141
  2863   00171C  EF92  F00B         	goto	u2140
  2864   001720                     u2141:
  2865   001720  EFB1  F00B         	goto	l3152
  2866   001724                     u2140:
  2867   001724  500F               	movf	vfpfcnvrt@done^0,w,c
  2868   001726  B4D8               	btfsc	status,2,c
  2869   001728  EF98  F00B         	goto	u2151
  2870   00172C  EF9A  F00B         	goto	u2150
  2871   001730                     u2151:
  2872   001730  EFB1  F00B         	goto	l3152
  2873   001734                     u2150:
  2874   001734                     
  2875                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2876   001734  0615               	decf	vfpfcnvrt@c^0,f,c
  2877   001736  5015               	movf	vfpfcnvrt@c^0,w,c
  2878   001738  0F80               	addlw	low _dbuf
  2879   00173A  6ED9               	movwf	fsr2l,c
  2880   00173C  6ADA               	clrf	fsr2h,c
  2881   00173E  0E2D               	movlw	45
  2882   001740  6EDF               	movwf	indf2,c
  2883   001742  EFB1  F00B         	goto	l3152
  2884   001746                     l3148:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2887   001746  5015               	movf	vfpfcnvrt@c^0,w,c
  2888   001748  0F80               	addlw	low _dbuf
  2889   00174A  6ED9               	movwf	fsr2l,c
  2890   00174C  6ADA               	clrf	fsr2h,c
  2891   00174E  50DF               	movf	indf2,w,c
  2892   001750  6E0E               	movwf	??_vfpfcnvrt^0,c
  2893   001752  500E               	movf	??_vfpfcnvrt^0,w,c
  2894   001754  6E01               	movwf	fputc@c^0,c
  2895   001756  6A02               	clrf	(fputc@c+1)^0,c
  2896   001758  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2897   00175C  ECF8  F00C         	call	_fputc	;wreg free
  2898   001760  2A15               	incf	vfpfcnvrt@c^0,f,c
  2899   001762                     l3152:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2902   001762  0E20               	movlw	32
  2903   001764  1815               	xorwf	vfpfcnvrt@c^0,w,c
  2904   001766  A4D8               	btfss	status,2,c
  2905   001768  EFB8  F00B         	goto	u2161
  2906   00176C  EFBA  F00B         	goto	u2160
  2907   001770                     u2161:
  2908   001770  EFA3  F00B         	goto	l3148
  2909   001774                     u2160:
  2910   001774  EFD3  F00B         	goto	l1428
  2911   001778                     l3154:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2914   001778  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2915   00177A  6ED9               	movwf	fsr2l,c
  2916   00177C  6ADA               	clrf	fsr2h,c
  2917   00177E  2ADF               	incf	indf2,f,c
  2918   001780  EFD3  F00B         	goto	l1428
  2919   001784                     l3158:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2922   001784  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2923   001786  6ED9               	movwf	fsr2l,c
  2924   001788  6ADA               	clrf	fsr2h,c
  2925   00178A  CFDF FFF6          	movff	indf2,tblptrl
  2926   00178E                     	if	1	;There is more than 1 active tblptr byte
  2927   00178E  0E10               	movlw	high __smallconst
  2928   001790  6EF7               	movwf	tblptrh,c
  2929   001792                     	endif
  2930   001792                     	if	0	;tblptru may be non-zero
  2931   001792                     	endif
  2932   001792                     	if	0	;tblptru may be non-zero
  2933   001792                     	endif
  2934   001792  0008               	tblrd		*
  2935   001794  50F5               	movf	tablat,w,c
  2936   001796  6E01               	movwf	fputc@c^0,c
  2937   001798  6A02               	clrf	(fputc@c+1)^0,c
  2938   00179A  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2939   00179E  ECF8  F00C         	call	_fputc	;wreg free
  2940   0017A2  EFBC  F00B         	goto	l3154
  2941   0017A6                     l1428:
  2942   0017A6  0012               	return		;funcret
  2943   0017A8                     __end_of_vfpfcnvrt:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _fputc *****************
  2947 ;; Defined at:
  2948 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  c               2    0[COMRAM] int 
  2951 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2952 ;;		 -> sprintf@f(11), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  2    0[COMRAM] int 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        8 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 1
  2971 ;; This function calls:
  2972 ;;		_putch
  2973 ;; This function is called by:
  2974 ;;		_vfpfcnvrt
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text5
  2979   0019F0                     __ptext5:
  2980                           	callstack 0
  2981   0019F0                     _fputc:
  2982                           	callstack 25
  2983   0019F0  5003               	movf	fputc@fp^0,w,c
  2984   0019F2  B4D8               	btfsc	status,2,c
  2985   0019F4  EFFE  F00C         	goto	u1911
  2986   0019F8  EF00  F00D         	goto	u1910
  2987   0019FC                     u1911:
  2988   0019FC  EF08  F00D         	goto	l3028
  2989   001A00                     u1910:
  2990   001A00  5003               	movf	fputc@fp^0,w,c
  2991   001A02  A4D8               	btfss	status,2,c
  2992   001A04  EF06  F00D         	goto	u1921
  2993   001A08  EF08  F00D         	goto	u1920
  2994   001A0C                     u1921:
  2995   001A0C  EF0D  F00D         	goto	l3030
  2996   001A10                     u1920:
  2997   001A10                     l3028:
  2998   001A10  5001               	movf	fputc@c^0,w,c
  2999   001A12  ECD4  F00E         	call	_putch
  3000   001A16  EF4C  F00D         	goto	l1453
  3001   001A1A                     l3030:
  3002   001A1A  5003               	movf	fputc@fp^0,w,c
  3003   001A1C  6ED9               	movwf	fsr2l,c
  3004   001A1E  6ADA               	clrf	fsr2h,c
  3005   001A20  0E09               	movlw	9
  3006   001A22  26D9               	addwf	fsr2l,f,c
  3007   001A24  50DE               	movf	postinc2,w,c
  3008   001A26  10DE               	iorwf	postinc2,w,c
  3009   001A28  B4D8               	btfsc	status,2,c
  3010   001A2A  EF19  F00D         	goto	u1931
  3011   001A2E  EF1B  F00D         	goto	u1930
  3012   001A32                     u1931:
  3013   001A32  EF34  F00D         	goto	l3034
  3014   001A36                     u1930:
  3015   001A36  5003               	movf	fputc@fp^0,w,c
  3016   001A38  6ED9               	movwf	fsr2l,c
  3017   001A3A  6ADA               	clrf	fsr2h,c
  3018   001A3C  0E09               	movlw	9
  3019   001A3E  26D9               	addwf	fsr2l,f,c
  3020   001A40  5003               	movf	fputc@fp^0,w,c
  3021   001A42  6EE1               	movwf	fsr1l,c
  3022   001A44  6AE2               	clrf	fsr1h,c
  3023   001A46  0E02               	movlw	2
  3024   001A48  26E1               	addwf	fsr1l,f,c
  3025   001A4A  50DE               	movf	postinc2,w,c
  3026   001A4C  5CE6               	subwf	postinc1,w,c
  3027   001A4E  50E6               	movf	postinc1,w,c
  3028   001A50  0A80               	xorlw	128
  3029   001A52  6E08               	movwf	(??_fputc+4)^0,c
  3030   001A54  50DE               	movf	postinc2,w,c
  3031   001A56  0A80               	xorlw	128
  3032   001A58  5808               	subwfb	(??_fputc+4)^0,w,c
  3033   001A5A  B0D8               	btfsc	status,0,c
  3034   001A5C  EF32  F00D         	goto	u1941
  3035   001A60  EF34  F00D         	goto	u1940
  3036   001A64                     u1941:
  3037   001A64  EF4C  F00D         	goto	l1453
  3038   001A68                     u1940:
  3039   001A68                     l3034:
  3040   001A68  5003               	movf	fputc@fp^0,w,c
  3041   001A6A  6ED9               	movwf	fsr2l,c
  3042   001A6C  6ADA               	clrf	fsr2h,c
  3043   001A6E  0E02               	movlw	2
  3044   001A70  26D9               	addwf	fsr2l,f,c
  3045   001A72  50DF               	movf	indf2,w,c
  3046   001A74  6E04               	movwf	??_fputc^0,c
  3047   001A76  5003               	movf	fputc@fp^0,w,c
  3048   001A78  6ED9               	movwf	fsr2l,c
  3049   001A7A  6ADA               	clrf	fsr2h,c
  3050   001A7C  50DF               	movf	indf2,w,c
  3051   001A7E  2404               	addwf	??_fputc^0,w,c
  3052   001A80  6ED9               	movwf	fsr2l,c
  3053   001A82  6ADA               	clrf	fsr2h,c
  3054   001A84  C001  FFDF         	movff	fputc@c,indf2
  3055   001A88  5003               	movf	fputc@fp^0,w,c
  3056   001A8A  6ED9               	movwf	fsr2l,c
  3057   001A8C  6ADA               	clrf	fsr2h,c
  3058   001A8E  0E02               	movlw	2
  3059   001A90  26D9               	addwf	fsr2l,f,c
  3060   001A92  2ADE               	incf	postinc2,f,c
  3061   001A94  0E00               	movlw	0
  3062   001A96  22DD               	addwfc	postdec2,f,c
  3063   001A98                     l1453:
  3064   001A98  0012               	return		;funcret
  3065   001A9A                     __end_of_fputc:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function _putch *****************
  3069 ;; Defined at:
  3070 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  c               1    wreg     unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  c               1    0[COMRAM] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_fputc
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text6
  3098   001DA8                     __ptext6:
  3099                           	callstack 0
  3100   001DA8                     _putch:
  3101                           	callstack 25
  3102   001DA8  0012               	return		;funcret
  3103   001DAA                     __end_of_putch:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function _abs *****************
  3107 ;; Defined at:
  3108 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  a               2    6[COMRAM] int 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2    6[COMRAM] int 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;Total ram usage:        4 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_vfpfcnvrt
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text7
  3136   001CD8                     __ptext7:
  3137                           	callstack 0
  3138   001CD8                     _abs:
  3139                           	callstack 26
  3140   001CD8  BE08               	btfsc	(abs@a+1)^0,7,c
  3141   001CDA  EF71  F00E         	goto	u1951
  3142   001CDE  EF73  F00E         	goto	u1950
  3143   001CE2                     u1951:
  3144   001CE2  EF79  F00E         	goto	l1438
  3145   001CE6                     u1950:
  3146   001CE6  C007  F007         	movff	abs@a,?_abs
  3147   001CEA  C008  F008         	movff	abs@a+1,?_abs+1
  3148   001CEE  EF85  F00E         	goto	l1441
  3149   001CF2                     l1438:
  3150   001CF2  C007  F009         	movff	abs@a,??_abs
  3151   001CF6  C008  F00A         	movff	abs@a+1,??_abs+1
  3152   001CFA  1E09               	comf	??_abs^0,f,c
  3153   001CFC  1E0A               	comf	(??_abs+1)^0,f,c
  3154   001CFE  4A09               	infsnz	??_abs^0,f,c
  3155   001D00  2A0A               	incf	(??_abs+1)^0,f,c
  3156   001D02  C009  F007         	movff	??_abs,?_abs
  3157   001D06  C00A  F008         	movff	??_abs+1,?_abs+1
  3158   001D0A                     l1441:
  3159   001D0A  0012               	return		;funcret
  3160   001D0C                     __end_of_abs:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function ___awmod *****************
  3164 ;; Defined at:
  3165 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  dividend        2    0[COMRAM] int 
  3168 ;;  divisor         2    2[COMRAM] int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  sign            1    5[COMRAM] unsigned char 
  3171 ;;  counter         1    4[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  2    0[COMRAM] int 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;Total ram usage:        6 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_vfpfcnvrt
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text8
  3195   001942                     __ptext8:
  3196                           	callstack 0
  3197   001942                     ___awmod:
  3198                           	callstack 26
  3199   001942  6A06               	clrf	___awmod@sign^0,c
  3200   001944  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3201   001946  EFA9  F00C         	goto	u1850
  3202   00194A  EFA7  F00C         	goto	u1851
  3203   00194E                     u1851:
  3204   00194E  EFAF  F00C         	goto	l2996
  3205   001952                     u1850:
  3206   001952  6C01               	negf	___awmod@dividend^0,c
  3207   001954  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3208   001956  B0D8               	btfsc	status,0,c
  3209   001958  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3210   00195A  0E01               	movlw	1
  3211   00195C  6E06               	movwf	___awmod@sign^0,c
  3212   00195E                     l2996:
  3213   00195E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3214   001960  EFB6  F00C         	goto	u1860
  3215   001964  EFB4  F00C         	goto	u1861
  3216   001968                     u1861:
  3217   001968  EFBA  F00C         	goto	l3000
  3218   00196C                     u1860:
  3219   00196C  6C03               	negf	___awmod@divisor^0,c
  3220   00196E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3221   001970  B0D8               	btfsc	status,0,c
  3222   001972  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3223   001974                     l3000:
  3224   001974  5003               	movf	___awmod@divisor^0,w,c
  3225   001976  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3226   001978  B4D8               	btfsc	status,2,c
  3227   00197A  EFC1  F00C         	goto	u1871
  3228   00197E  EFC3  F00C         	goto	u1870
  3229   001982                     u1871:
  3230   001982  EFE7  F00C         	goto	l3016
  3231   001986                     u1870:
  3232   001986  0E01               	movlw	1
  3233   001988  6E05               	movwf	___awmod@counter^0,c
  3234   00198A  EFCB  F00C         	goto	l3006
  3235   00198E                     l3004:
  3236   00198E  90D8               	bcf	status,0,c
  3237   001990  3603               	rlcf	___awmod@divisor^0,f,c
  3238   001992  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3239   001994  2A05               	incf	___awmod@counter^0,f,c
  3240   001996                     l3006:
  3241   001996  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3242   001998  EFD0  F00C         	goto	u1881
  3243   00199C  EFD2  F00C         	goto	u1880
  3244   0019A0                     u1881:
  3245   0019A0  EFC7  F00C         	goto	l3004
  3246   0019A4                     u1880:
  3247   0019A4                     l3008:
  3248   0019A4  5003               	movf	___awmod@divisor^0,w,c
  3249   0019A6  5C01               	subwf	___awmod@dividend^0,w,c
  3250   0019A8  5004               	movf	(___awmod@divisor+1)^0,w,c
  3251   0019AA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3252   0019AC  A0D8               	btfss	status,0,c
  3253   0019AE  EFDB  F00C         	goto	u1891
  3254   0019B2  EFDD  F00C         	goto	u1890
  3255   0019B6                     u1891:
  3256   0019B6  EFE1  F00C         	goto	l3012
  3257   0019BA                     u1890:
  3258   0019BA  5003               	movf	___awmod@divisor^0,w,c
  3259   0019BC  5E01               	subwf	___awmod@dividend^0,f,c
  3260   0019BE  5004               	movf	(___awmod@divisor+1)^0,w,c
  3261   0019C0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3262   0019C2                     l3012:
  3263   0019C2  90D8               	bcf	status,0,c
  3264   0019C4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3265   0019C6  3203               	rrcf	___awmod@divisor^0,f,c
  3266   0019C8  2E05               	decfsz	___awmod@counter^0,f,c
  3267   0019CA  EFD2  F00C         	goto	l3008
  3268   0019CE                     l3016:
  3269   0019CE  5006               	movf	___awmod@sign^0,w,c
  3270   0019D0  B4D8               	btfsc	status,2,c
  3271   0019D2  EFED  F00C         	goto	u1901
  3272   0019D6  EFEF  F00C         	goto	u1900
  3273   0019DA                     u1901:
  3274   0019DA  EFF3  F00C         	goto	l3020
  3275   0019DE                     u1900:
  3276   0019DE  6C01               	negf	___awmod@dividend^0,c
  3277   0019E0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3278   0019E2  B0D8               	btfsc	status,0,c
  3279   0019E4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3280   0019E6                     l3020:
  3281   0019E6  C001  F001         	movff	___awmod@dividend,?___awmod
  3282   0019EA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3283   0019EE  0012               	return		;funcret
  3284   0019F0                     __end_of___awmod:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function ___awdiv *****************
  3288 ;; Defined at:
  3289 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  dividend        2    0[COMRAM] int 
  3292 ;;  divisor         2    2[COMRAM] int 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  quotient        2    6[COMRAM] int 
  3295 ;;  sign            1    5[COMRAM] unsigned char 
  3296 ;;  counter         1    4[COMRAM] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  2    0[COMRAM] int 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;Total ram usage:        8 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_vfpfcnvrt
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text9
  3320   001880                     __ptext9:
  3321                           	callstack 0
  3322   001880                     ___awdiv:
  3323                           	callstack 26
  3324   001880  6A06               	clrf	___awdiv@sign^0,c
  3325   001882  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3326   001884  EF48  F00C         	goto	u1790
  3327   001888  EF46  F00C         	goto	u1791
  3328   00188C                     u1791:
  3329   00188C  EF4E  F00C         	goto	l2952
  3330   001890                     u1790:
  3331   001890  6C03               	negf	___awdiv@divisor^0,c
  3332   001892  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3333   001894  B0D8               	btfsc	status,0,c
  3334   001896  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3335   001898  0E01               	movlw	1
  3336   00189A  6E06               	movwf	___awdiv@sign^0,c
  3337   00189C                     l2952:
  3338   00189C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3339   00189E  EF55  F00C         	goto	u1800
  3340   0018A2  EF53  F00C         	goto	u1801
  3341   0018A6                     u1801:
  3342   0018A6  EF5B  F00C         	goto	l2958
  3343   0018AA                     u1800:
  3344   0018AA  6C01               	negf	___awdiv@dividend^0,c
  3345   0018AC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3346   0018AE  B0D8               	btfsc	status,0,c
  3347   0018B0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3348   0018B2  0E01               	movlw	1
  3349   0018B4  1A06               	xorwf	___awdiv@sign^0,f,c
  3350   0018B6                     l2958:
  3351   0018B6  0E00               	movlw	0
  3352   0018B8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3353   0018BA  0E00               	movlw	0
  3354   0018BC  6E07               	movwf	___awdiv@quotient^0,c
  3355   0018BE  5003               	movf	___awdiv@divisor^0,w,c
  3356   0018C0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3357   0018C2  B4D8               	btfsc	status,2,c
  3358   0018C4  EF66  F00C         	goto	u1811
  3359   0018C8  EF68  F00C         	goto	u1810
  3360   0018CC                     u1811:
  3361   0018CC  EF90  F00C         	goto	l2980
  3362   0018D0                     u1810:
  3363   0018D0  0E01               	movlw	1
  3364   0018D2  6E05               	movwf	___awdiv@counter^0,c
  3365   0018D4  EF70  F00C         	goto	l2966
  3366   0018D8                     l2964:
  3367   0018D8  90D8               	bcf	status,0,c
  3368   0018DA  3603               	rlcf	___awdiv@divisor^0,f,c
  3369   0018DC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3370   0018DE  2A05               	incf	___awdiv@counter^0,f,c
  3371   0018E0                     l2966:
  3372   0018E0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3373   0018E2  EF75  F00C         	goto	u1821
  3374   0018E6  EF77  F00C         	goto	u1820
  3375   0018EA                     u1821:
  3376   0018EA  EF6C  F00C         	goto	l2964
  3377   0018EE                     u1820:
  3378   0018EE                     l2968:
  3379   0018EE  90D8               	bcf	status,0,c
  3380   0018F0  3607               	rlcf	___awdiv@quotient^0,f,c
  3381   0018F2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3382   0018F4  5003               	movf	___awdiv@divisor^0,w,c
  3383   0018F6  5C01               	subwf	___awdiv@dividend^0,w,c
  3384   0018F8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3385   0018FA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3386   0018FC  A0D8               	btfss	status,0,c
  3387   0018FE  EF83  F00C         	goto	u1831
  3388   001902  EF85  F00C         	goto	u1830
  3389   001906                     u1831:
  3390   001906  EF8A  F00C         	goto	l2976
  3391   00190A                     u1830:
  3392   00190A  5003               	movf	___awdiv@divisor^0,w,c
  3393   00190C  5E01               	subwf	___awdiv@dividend^0,f,c
  3394   00190E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3395   001910  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3396   001912  8007               	bsf	___awdiv@quotient^0,0,c
  3397   001914                     l2976:
  3398   001914  90D8               	bcf	status,0,c
  3399   001916  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3400   001918  3203               	rrcf	___awdiv@divisor^0,f,c
  3401   00191A  2E05               	decfsz	___awdiv@counter^0,f,c
  3402   00191C  EF77  F00C         	goto	l2968
  3403   001920                     l2980:
  3404   001920  5006               	movf	___awdiv@sign^0,w,c
  3405   001922  B4D8               	btfsc	status,2,c
  3406   001924  EF96  F00C         	goto	u1841
  3407   001928  EF98  F00C         	goto	u1840
  3408   00192C                     u1841:
  3409   00192C  EF9C  F00C         	goto	l2984
  3410   001930                     u1840:
  3411   001930  6C07               	negf	___awdiv@quotient^0,c
  3412   001932  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3413   001934  B0D8               	btfsc	status,0,c
  3414   001936  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3415   001938                     l2984:
  3416   001938  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3417   00193C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3418   001940  0012               	return		;funcret
  3419   001942                     __end_of___awdiv:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function _memset *****************
  3423 ;; Defined at:
  3424 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  dest            1    0[COMRAM] PTR void 
  3427 ;;		 -> NumArr(4), 
  3428 ;;  c               2    1[COMRAM] int 
  3429 ;;  n               2    3[COMRAM] unsigned int 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  p               1    5[COMRAM] PTR unsigned char 
  3432 ;;		 -> NumArr(4), 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    0[COMRAM] PTR void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:        6 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_HALL_LCD_convertU8toSTR
  3452 ;;		_HALL_LCD_convertU16toSTR
  3453 ;;		_HALL_LCD_convertU32toSTR
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text10
  3458   001D0C                     __ptext10:
  3459                           	callstack 0
  3460   001D0C                     _memset:
  3461                           	callstack 29
  3462   001D0C  C001  F006         	movff	memset@dest,memset@p
  3463   001D10  EF90  F00E         	goto	l3302
  3464   001D14                     l3298:
  3465   001D14  5006               	movf	memset@p^0,w,c
  3466   001D16  6ED9               	movwf	fsr2l,c
  3467   001D18  6ADA               	clrf	fsr2h,c
  3468   001D1A  C002  FFDF         	movff	memset@c,indf2
  3469   001D1E  2A06               	incf	memset@p^0,f,c
  3470   001D20                     l3302:
  3471   001D20  0604               	decf	memset@n^0,f,c
  3472   001D22  A0D8               	btfss	status,0,c
  3473   001D24  0605               	decf	(memset@n+1)^0,f,c
  3474   001D26  2804               	incf	memset@n^0,w,c
  3475   001D28  E106               	bnz	u2411
  3476   001D2A  2805               	incf	(memset@n+1)^0,w,c
  3477   001D2C  A4D8               	btfss	status,2,c
  3478   001D2E  EF9B  F00E         	goto	u2411
  3479   001D32  EF9D  F00E         	goto	u2410
  3480   001D36                     u2411:
  3481   001D36  EF8A  F00E         	goto	l3298
  3482   001D3A                     u2410:
  3483   001D3A  0012               	return		;funcret
  3484   001D3C                     __end_of_memset:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _HALL_LCD_8bit_sendSTR *****************
  3488 ;; Defined at:
  3489 ;;		line 200 in file "Hall/LCD/Hall_lcd_prog.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  copyLCD         1   11[COMRAM] PTR const struct .
  3492 ;;		 -> LCD1_8Bit(10), 
  3493 ;;  copyData        1   12[COMRAM] PTR unsigned char 
  3494 ;;		 -> NumArr(4), 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  RetValue        1    0        unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      unsigned char 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 3
  3513 ;; This function calls:
  3514 ;;		_HALL_LCD_8bit_sendChar
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text11
  3521   001BEE                     __ptext11:
  3522                           	callstack 0
  3523   001BEE                     _HALL_LCD_8bit_sendSTR:
  3524                           	callstack 27
  3525   001BEE                     
  3526                           ;Hall/LCD/Hall_lcd_prog.c: 202:     if(copyLCD == ((void*)0)) {
  3527   001BEE  500C               	movf	HALL_LCD_8bit_sendSTR@copyLCD^0,w,c
  3528   001BF0  A4D8               	btfss	status,2,c
  3529   001BF2  EFFD  F00D         	goto	u2451
  3530   001BF6  EFFF  F00D         	goto	u2450
  3531   001BFA                     u2451:
  3532   001BFA  EF0B  F00E         	goto	l3386
  3533   001BFE                     u2450:
  3534   001BFE                     
  3535                           ;Hall/LCD/Hall_lcd_prog.c: 204:     }
  3536   001BFE  EF16  F00E         	goto	l227
  3537   001C02                     l3382:
  3538                           
  3539                           ;Hall/LCD/Hall_lcd_prog.c: 207:             HALL_LCD_8bit_sendChar(copyLCD, *copyData++)
      +                          ;
  3540   001C02  C00C  F007         	movff	HALL_LCD_8bit_sendSTR@copyLCD,HALL_LCD_8bit_sendChar@copyLCD
  3541   001C06  500D               	movf	HALL_LCD_8bit_sendSTR@copyData^0,w,c
  3542   001C08  6ED9               	movwf	fsr2l,c
  3543   001C0A  6ADA               	clrf	fsr2h,c
  3544   001C0C  50DF               	movf	indf2,w,c
  3545   001C0E  6E08               	movwf	HALL_LCD_8bit_sendChar@copyData^0,c
  3546   001C10  EC4D  F00D         	call	_HALL_LCD_8bit_sendChar	;wreg free
  3547   001C14  2A0D               	incf	HALL_LCD_8bit_sendSTR@copyData^0,f,c
  3548   001C16                     l3386:
  3549                           
  3550                           ;Hall/LCD/Hall_lcd_prog.c: 206:         while(*copyData) {
  3551   001C16  500D               	movf	HALL_LCD_8bit_sendSTR@copyData^0,w,c
  3552   001C18  6ED9               	movwf	fsr2l,c
  3553   001C1A  6ADA               	clrf	fsr2h,c
  3554   001C1C  50DF               	movf	indf2,w,c
  3555   001C1E  A4D8               	btfss	status,2,c
  3556   001C20  EF14  F00E         	goto	u2461
  3557   001C24  EF16  F00E         	goto	u2460
  3558   001C28                     u2461:
  3559   001C28  EF01  F00E         	goto	l3382
  3560   001C2C                     u2460:
  3561   001C2C                     l227:
  3562   001C2C  0012               	return		;funcret
  3563   001C2E                     __end_of_HALL_LCD_8bit_sendSTR:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function _HALL_LCD_8bit_sendChar *****************
  3567 ;; Defined at:
  3568 ;;		line 173 in file "Hall/LCD/Hall_lcd_prog.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  copyLCD         1    6[COMRAM] PTR const struct .
  3571 ;;		 -> LCD1_8Bit(10), 
  3572 ;;  copyData        1    7[COMRAM] unsigned char 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  Counter         1   10[COMRAM] unsigned char 
  3575 ;;  RetValue        1    0        unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      unsigned char 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;Total ram usage:        5 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 2
  3592 ;; This function calls:
  3593 ;;		_LCD_sendEnableSignal8Bits
  3594 ;;		_MCAL_GPIO_writePinStatus
  3595 ;; This function is called by:
  3596 ;;		_HALL_LCD_8bit_sendSTR
  3597 ;;		_HALL_LCD_8bit_sendCharPos
  3598 ;;		_HALL_LCD_8bit_sendSTRPos
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text12
  3603   001A9A                     __ptext12:
  3604                           	callstack 0
  3605   001A9A                     _HALL_LCD_8bit_sendChar:
  3606                           	callstack 27
  3607   001A9A                     
  3608                           ;Hall/LCD/Hall_lcd_prog.c: 175:     if(copyLCD == ((void*)0)) {
  3609   001A9A  5007               	movf	HALL_LCD_8bit_sendChar@copyLCD^0,w,c
  3610   001A9C  A4D8               	btfss	status,2,c
  3611   001A9E  EF53  F00D         	goto	u2381
  3612   001AA2  EF55  F00D         	goto	u2380
  3613   001AA6                     u2381:
  3614   001AA6  EF57  F00D         	goto	l3276
  3615   001AAA                     u2380:
  3616   001AAA                     
  3617                           ;Hall/LCD/Hall_lcd_prog.c: 177:     }
  3618   001AAA  EF80  F00D         	goto	l214
  3619   001AAE                     l3276:
  3620                           
  3621                           ;Hall/LCD/Hall_lcd_prog.c: 179:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO
      +                          _Status_High);
  3622   001AAE  C007  F001         	movff	HALL_LCD_8bit_sendChar@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  3623   001AB2  0E01               	movlw	1
  3624   001AB4  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3625   001AB6  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3626   001ABA                     
  3627                           ;Hall/LCD/Hall_lcd_prog.c: 180:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  3628   001ABA  6A0B               	clrf	HALL_LCD_8bit_sendChar@Counter^0,c
  3629   001ABC                     l3284:
  3630                           
  3631                           ;Hall/LCD/Hall_lcd_prog.c: 181:             MCAL_GPIO_writePinStatus(&(copyLCD->LCD_D[Co
      +                          unter]),(copyData >> Counter) & (uint8_t)0x01);
  3632   001ABC  5007               	movf	HALL_LCD_8bit_sendChar@copyLCD^0,w,c
  3633   001ABE  240B               	addwf	HALL_LCD_8bit_sendChar@Counter^0,w,c
  3634   001AC0  0F02               	addlw	2
  3635   001AC2  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  3636   001AC4  C00B  F009         	movff	HALL_LCD_8bit_sendChar@Counter,??_HALL_LCD_8bit_sendChar
  3637   001AC8  C008  F00A         	movff	HALL_LCD_8bit_sendChar@copyData,??_HALL_LCD_8bit_sendChar+1
  3638   001ACC  2A09               	incf	??_HALL_LCD_8bit_sendChar^0,f,c
  3639   001ACE  EF6B  F00D         	goto	u2394
  3640   001AD2                     u2395:
  3641   001AD2  90D8               	bcf	status,0,c
  3642   001AD4  320A               	rrcf	(??_HALL_LCD_8bit_sendChar+1)^0,f,c
  3643   001AD6                     u2394:
  3644   001AD6  2E09               	decfsz	??_HALL_LCD_8bit_sendChar^0,f,c
  3645   001AD8  EF69  F00D         	goto	u2395
  3646   001ADC  500A               	movf	(??_HALL_LCD_8bit_sendChar+1)^0,w,c
  3647   001ADE  0B01               	andlw	1
  3648   001AE0  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3649   001AE2  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3650   001AE6                     
  3651                           ;Hall/LCD/Hall_lcd_prog.c: 182:         }
  3652   001AE6  2A0B               	incf	HALL_LCD_8bit_sendChar@Counter^0,f,c
  3653   001AE8  0E07               	movlw	7
  3654   001AEA  640B               	cpfsgt	HALL_LCD_8bit_sendChar@Counter^0,c
  3655   001AEC  EF7A  F00D         	goto	u2401
  3656   001AF0  EF7C  F00D         	goto	u2400
  3657   001AF4                     u2401:
  3658   001AF4  EF5E  F00D         	goto	l3284
  3659   001AF8                     u2400:
  3660   001AF8                     
  3661                           ;Hall/LCD/Hall_lcd_prog.c: 183:         LCD_sendEnableSignal8Bits(copyLCD);
  3662   001AF8  C007  F006         	movff	HALL_LCD_8bit_sendChar@copyLCD,LCD_sendEnableSignal8Bits@copyLCD
  3663   001AFC  ECC4  F00E         	call	_LCD_sendEnableSignal8Bits	;wreg free
  3664   001B00                     l214:
  3665   001B00  0012               	return		;funcret
  3666   001B02                     __end_of_HALL_LCD_8bit_sendChar:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _HALL_LCD_8bit_init *****************
  3670 ;; Defined at:
  3671 ;;		line 130 in file "Hall/LCD/Hall_lcd_prog.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  copyLCD         1   11[COMRAM] PTR const struct .
  3674 ;;		 -> LCD1_8Bit(10), 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  Counter         1   13[COMRAM] unsigned char 
  3677 ;;  RetValue        1    0        unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      unsigned char 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3687 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;Total ram usage:        3 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 3
  3694 ;; This function calls:
  3695 ;;		_HALL_LCD_8bit_sendCMD
  3696 ;;		_MCAL_GPIO_init
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text13
  3703   0017A8                     __ptext13:
  3704                           	callstack 0
  3705   0017A8                     _HALL_LCD_8bit_init:
  3706                           	callstack 27
  3707   0017A8                     
  3708                           ;Hall/LCD/Hall_lcd_prog.c: 132:     if(copyLCD == ((void*)0)) {
  3709   0017A8  500C               	movf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3710   0017AA  A4D8               	btfss	status,2,c
  3711   0017AC  EFDA  F00B         	goto	u2421
  3712   0017B0  EFDC  F00B         	goto	u2420
  3713   0017B4                     u2421:
  3714   0017B4  EFDE  F00B         	goto	l3322
  3715   0017B8                     u2420:
  3716   0017B8                     
  3717                           ;Hall/LCD/Hall_lcd_prog.c: 134:     }
  3718   0017B8  EF3F  F00C         	goto	l200
  3719   0017BC                     l3322:
  3720                           
  3721                           ;Hall/LCD/Hall_lcd_prog.c: 136:         MCAL_GPIO_init(&(copyLCD->LCD_rs));
  3722   0017BC  C00C  F006         	movff	HALL_LCD_8bit_init@copyLCD,MCAL_GPIO_init@copyPinCFG
  3723   0017C0  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3724                           
  3725                           ;Hall/LCD/Hall_lcd_prog.c: 137:         MCAL_GPIO_init(&(copyLCD->LCD_en));
  3726   0017C4  280C               	incf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3727   0017C6  6E06               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  3728   0017C8  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3729   0017CC                     
  3730                           ;Hall/LCD/Hall_lcd_prog.c: 138:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  3731   0017CC  6A0E               	clrf	HALL_LCD_8bit_init@Counter^0,c
  3732   0017CE                     l3330:
  3733                           
  3734                           ;Hall/LCD/Hall_lcd_prog.c: 139:             MCAL_GPIO_init(&(copyLCD->LCD_D[Counter]));
  3735   0017CE  500C               	movf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3736   0017D0  240E               	addwf	HALL_LCD_8bit_init@Counter^0,w,c
  3737   0017D2  0F02               	addlw	2
  3738   0017D4  6E06               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  3739   0017D6  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3740   0017DA                     
  3741                           ;Hall/LCD/Hall_lcd_prog.c: 140:         }
  3742   0017DA  2A0E               	incf	HALL_LCD_8bit_init@Counter^0,f,c
  3743   0017DC  0E07               	movlw	7
  3744   0017DE  640E               	cpfsgt	HALL_LCD_8bit_init@Counter^0,c
  3745   0017E0  EFF4  F00B         	goto	u2431
  3746   0017E4  EFF6  F00B         	goto	u2430
  3747   0017E8                     u2431:
  3748   0017E8  EFE7  F00B         	goto	l3330
  3749   0017EC                     u2430:
  3750   0017EC                     
  3751                           ;Hall/LCD/Hall_lcd_prog.c: 141:         _delay((unsigned long)((20)*(4000000U/4000.0)));
  3752   0017EC  0E1A               	movlw	26
  3753   0017EE  6E0D               	movwf	??_HALL_LCD_8bit_init^0,c
  3754   0017F0  0EF8               	movlw	248
  3755   0017F2                     u3007:
  3756   0017F2  2EE8               	decfsz	wreg,f,c
  3757   0017F4  D7FE               	bra	u3007
  3758   0017F6  2E0D               	decfsz	??_HALL_LCD_8bit_init^0,f,c
  3759   0017F8  D7FC               	bra	u3007
  3760   0017FA  D000               	nop2	
  3761   0017FC                     
  3762                           ;Hall/LCD/Hall_lcd_prog.c: 142:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3763   0017FC  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3764   001800  0E38               	movlw	56
  3765   001802  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3766   001804  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3767   001808                     
  3768                           ;Hall/LCD/Hall_lcd_prog.c: 143:         _delay((unsigned long)((5)*(4000000U/4000.0)));
  3769   001808  0E07               	movlw	7
  3770   00180A  6E0D               	movwf	??_HALL_LCD_8bit_init^0,c
  3771   00180C  0E7D               	movlw	125
  3772   00180E                     u3017:
  3773   00180E  2EE8               	decfsz	wreg,f,c
  3774   001810  D7FE               	bra	u3017
  3775   001812  2E0D               	decfsz	??_HALL_LCD_8bit_init^0,f,c
  3776   001814  D7FC               	bra	u3017
  3777   001816  0000               	nop	
  3778                           
  3779                           ;Hall/LCD/Hall_lcd_prog.c: 144:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3780   001818  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3781   00181C  0E38               	movlw	56
  3782   00181E  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3783   001820  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3784   001824                     
  3785                           ;Hall/LCD/Hall_lcd_prog.c: 145:         _delay((unsigned long)((150)*(4000000U/4000000.0
      +                          )));
  3786   001824  0E32               	movlw	50
  3787   001826                     u3027:
  3788   001826  2EE8               	decfsz	wreg,f,c
  3789   001828  D7FE               	bra	u3027
  3790   00182A                     
  3791                           ;Hall/LCD/Hall_lcd_prog.c: 146:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3792   00182A  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3793   00182E  0E38               	movlw	56
  3794   001830  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3795   001832  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3796   001836                     
  3797                           ;Hall/LCD/Hall_lcd_prog.c: 147:         HALL_LCD_8bit_sendCMD(copyLCD, 0x01);
  3798   001836  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3799   00183A  0E01               	movlw	1
  3800   00183C  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3801   00183E  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3802   001842                     
  3803                           ;Hall/LCD/Hall_lcd_prog.c: 148:         HALL_LCD_8bit_sendCMD(copyLCD, 0x02);
  3804   001842  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3805   001846  0E02               	movlw	2
  3806   001848  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3807   00184A  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3808   00184E                     
  3809                           ;Hall/LCD/Hall_lcd_prog.c: 149:         HALL_LCD_8bit_sendCMD(copyLCD, 0x06);
  3810   00184E  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3811   001852  0E06               	movlw	6
  3812   001854  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3813   001856  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3814   00185A                     
  3815                           ;Hall/LCD/Hall_lcd_prog.c: 150:         HALL_LCD_8bit_sendCMD(copyLCD, 0x0C);
  3816   00185A  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3817   00185E  0E0C               	movlw	12
  3818   001860  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3819   001862  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3820   001866                     
  3821                           ;Hall/LCD/Hall_lcd_prog.c: 151:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3822   001866  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3823   00186A  0E38               	movlw	56
  3824   00186C  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3825   00186E  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3826   001872                     
  3827                           ;Hall/LCD/Hall_lcd_prog.c: 152:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3828   001872  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3829   001876  0E38               	movlw	56
  3830   001878  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3831   00187A  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3832   00187E                     l200:
  3833   00187E  0012               	return		;funcret
  3834   001880                     __end_of_HALL_LCD_8bit_init:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function _MCAL_GPIO_init *****************
  3838 ;; Defined at:
  3839 ;;		line 274 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  copyPinCFG      1    5[COMRAM] PTR const struct .
  3842 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  3843 ;;		 -> objPin_motor_1(1), LCD1_8Bit(10), 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  retVal          1    6[COMRAM] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      unsigned char 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3855 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;Total ram usage:        2 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 1
  3862 ;; This function calls:
  3863 ;;		_MCAL_GPIO_writePinStatus
  3864 ;;		_Mcal_GPIO_initPinDirection
  3865 ;; This function is called by:
  3866 ;;		_HALL_LCD_8bit_init
  3867 ;;		_HALL_DC_MOTOR_init
  3868 ;;		_HALL_KeyPad_init
  3869 ;;		_HALL_LCD_4bit_init
  3870 ;;		_HALL_Led_init
  3871 ;;		_HALL_Relay_init
  3872 ;;		_HALL_SEVEN_SEGEMENT_init
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text14
  3877   001C6C                     __ptext14:
  3878                           	callstack 0
  3879   001C6C                     _MCAL_GPIO_init:
  3880                           	callstack 28
  3881   001C6C                     
  3882                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 276:     if(copyPinCFG == ((void*)0)) {
  3883   001C6C  5006               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  3884   001C6E  A4D8               	btfss	status,2,c
  3885   001C70  EF3C  F00E         	goto	u2341
  3886   001C74  EF3E  F00E         	goto	u2340
  3887   001C78                     u2341:
  3888   001C78  EF40  F00E         	goto	l3240
  3889   001C7C                     u2340:
  3890   001C7C                     
  3891                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 278:     }
  3892   001C7C  EF51  F00E         	goto	l523
  3893   001C80                     l3240:
  3894                           
  3895                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 280:         retVal = Mcal_GPIO_initPinDirection(copyP
      +                          inCFG);
  3896   001C80  C006  F001         	movff	MCAL_GPIO_init@copyPinCFG,Mcal_GPIO_initPinDirection@copyPinCFG
  3897   001C84  EC0B  F008         	call	_Mcal_GPIO_initPinDirection	;wreg free
  3898   001C88  6E07               	movwf	MCAL_GPIO_init@retVal^0,c
  3899                           
  3900                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 281:         retVal = MCAL_GPIO_writePinStatus(copyPin
      +                          CFG,copyPinCFG->Status);
  3901   001C8A  C006  F001         	movff	MCAL_GPIO_init@copyPinCFG,MCAL_GPIO_writePinStatus@copyPinCFG
  3902   001C8E  5006               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  3903   001C90  6ED9               	movwf	fsr2l,c
  3904   001C92  6ADA               	clrf	fsr2h,c
  3905   001C94  0E00               	movlw	0
  3906   001C96  BEDF               	btfsc	indf2,7,c
  3907   001C98  0E01               	movlw	1
  3908   001C9A  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3909   001C9C  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3910   001CA0  6E07               	movwf	MCAL_GPIO_init@retVal^0,c
  3911   001CA2                     l523:
  3912   001CA2  0012               	return		;funcret
  3913   001CA4                     __end_of_MCAL_GPIO_init:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _Mcal_GPIO_initPinDirection *****************
  3917 ;; Defined at:
  3918 ;;		line 11 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  copyPinCFG      1    0[COMRAM] PTR const struct .
  3921 ;;		 -> MCAL_INTERRUPT_INTx_init@copyINTx(2), LCD1_8Bit$LCD_D(8), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), 
  3922 ;;		 -> objPin_motor_2(1), objPin_motor_1(1), HALL_BTN_init@copyBTN(2), LCD1_8Bit(10), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  retVal          1    3[COMRAM] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      unsigned char 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3934 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;Total ram usage:        4 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_MCAL_GPIO_init
  3944 ;;		_HALL_BTN_init
  3945 ;;		_HALL_KeyPad_init
  3946 ;;		_INTERRUPT_INTx_PinInit
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text15
  3951   001016                     __ptext15:
  3952                           	callstack 0
  3953   001016                     _Mcal_GPIO_initPinDirection:
  3954                           	callstack 28
  3955   001016                     
  3956                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 13:     uint8_t retVal = (Std_Return)1;
  3957   001016  0E01               	movlw	1
  3958   001018  6E04               	movwf	Mcal_GPIO_initPinDirection@retVal^0,c
  3959                           
  3960                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 14:     if(copyPinCFG == ((void*)0)) {
  3961   00101A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3962   00101C  A4D8               	btfss	status,2,c
  3963   00101E  EF13  F008         	goto	u2171
  3964   001022  EF15  F008         	goto	u2170
  3965   001026                     u2171:
  3966   001026  EF67  F009         	goto	l3210
  3967   00102A                     u2170:
  3968   00102A                     l3166:
  3969                           
  3970                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 15:         retVal = (Std_Return)0;
  3971   00102A  6A04               	clrf	Mcal_GPIO_initPinDirection@retVal^0,c
  3972                           
  3973                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 16:     }
  3974   00102C  EF82  F009         	goto	l3212
  3975   001030                     l3168:
  3976                           
  3977                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 22:                         TRISA &= ~ (1 << copyPinCF
      +                          G->Pin);
  3978   001030  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3979   001032  6ED9               	movwf	fsr2l,c
  3980   001034  6ADA               	clrf	fsr2h,c
  3981   001036  30DF               	rrcf	223,w,c
  3982   001038  32E8               	rrcf	wreg,f,c
  3983   00103A  32E8               	rrcf	wreg,f,c
  3984   00103C  0B07               	andlw	7
  3985   00103E  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3986   001040  0E01               	movlw	1
  3987   001042  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3988   001044  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3989   001046  EF27  F008         	goto	u2184
  3990   00104A                     u2185:
  3991   00104A  90D8               	bcf	status,0,c
  3992   00104C  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3993   00104E                     u2184:
  3994   00104E  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3995   001050  EF25  F008         	goto	u2185
  3996   001054  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3997   001056  0AFF               	xorlw	255
  3998   001058  1692               	andwf	146,f,c	;volatile
  3999                           
  4000                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 23:                         break;
  4001   00105A  EF82  F009         	goto	l3212
  4002   00105E                     l3170:
  4003                           
  4004                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 25:                         TRISA |= (1 << copyPinCFG-
      +                          >Pin);
  4005   00105E  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4006   001060  6ED9               	movwf	fsr2l,c
  4007   001062  6ADA               	clrf	fsr2h,c
  4008   001064  30DF               	rrcf	223,w,c
  4009   001066  32E8               	rrcf	wreg,f,c
  4010   001068  32E8               	rrcf	wreg,f,c
  4011   00106A  0B07               	andlw	7
  4012   00106C  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4013   00106E  0E01               	movlw	1
  4014   001070  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4015   001072  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4016   001074  EF3E  F008         	goto	u2194
  4017   001078                     u2195:
  4018   001078  90D8               	bcf	status,0,c
  4019   00107A  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4020   00107C                     u2194:
  4021   00107C  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4022   00107E  EF3C  F008         	goto	u2195
  4023   001082  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4024   001084  1292               	iorwf	146,f,c	;volatile
  4025                           
  4026                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 26:                         break;
  4027   001086  EF82  F009         	goto	l3212
  4028   00108A                     l3174:
  4029   00108A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4030   00108C  6ED9               	movwf	fsr2l,c
  4031   00108E  6ADA               	clrf	fsr2h,c
  4032   001090  BCDF               	btfsc	indf2,6,c
  4033   001092  EF4D  F008         	goto	u2201
  4034   001096  EF50  F008         	goto	u2200
  4035   00109A                     u2201:
  4036   00109A  0E01               	movlw	1
  4037   00109C  EF51  F008         	goto	u2206
  4038   0010A0                     u2200:
  4039   0010A0  0E00               	movlw	0
  4040   0010A2                     u2206:
  4041                           
  4042                           ; Switch size 1, requested type "simple"
  4043                           ; Number of cases is 2, Range of values is 0 to 1
  4044                           ; switch strategies available:
  4045                           ; Name         Instructions Cycles
  4046                           ; simple_byte            7     4 (average)
  4047                           ;	Chosen strategy is simple_byte
  4048   0010A2  0A00               	xorlw	0	; case 0
  4049   0010A4  B4D8               	btfsc	status,2,c
  4050   0010A6  EF2F  F008         	goto	l3170
  4051   0010AA  0A01               	xorlw	1	; case 1
  4052   0010AC  B4D8               	btfsc	status,2,c
  4053   0010AE  EF18  F008         	goto	l3168
  4054   0010B2  EF82  F009         	goto	l3212
  4055   0010B6                     l3176:
  4056                           
  4057                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 33:                         TRISB &= ~ (1 << copyPinCF
      +                          G->Pin);
  4058   0010B6  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4059   0010B8  6ED9               	movwf	fsr2l,c
  4060   0010BA  6ADA               	clrf	fsr2h,c
  4061   0010BC  30DF               	rrcf	223,w,c
  4062   0010BE  32E8               	rrcf	wreg,f,c
  4063   0010C0  32E8               	rrcf	wreg,f,c
  4064   0010C2  0B07               	andlw	7
  4065   0010C4  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4066   0010C6  0E01               	movlw	1
  4067   0010C8  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4068   0010CA  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4069   0010CC  EF6A  F008         	goto	u2214
  4070   0010D0                     u2215:
  4071   0010D0  90D8               	bcf	status,0,c
  4072   0010D2  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4073   0010D4                     u2214:
  4074   0010D4  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4075   0010D6  EF68  F008         	goto	u2215
  4076   0010DA  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4077   0010DC  0AFF               	xorlw	255
  4078   0010DE  1693               	andwf	147,f,c	;volatile
  4079                           
  4080                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 34:                         break;
  4081   0010E0  EF82  F009         	goto	l3212
  4082   0010E4                     l3178:
  4083                           
  4084                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 36:                         TRISB |= (1 << copyPinCFG-
      +                          >Pin);
  4085   0010E4  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4086   0010E6  6ED9               	movwf	fsr2l,c
  4087   0010E8  6ADA               	clrf	fsr2h,c
  4088   0010EA  30DF               	rrcf	223,w,c
  4089   0010EC  32E8               	rrcf	wreg,f,c
  4090   0010EE  32E8               	rrcf	wreg,f,c
  4091   0010F0  0B07               	andlw	7
  4092   0010F2  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4093   0010F4  0E01               	movlw	1
  4094   0010F6  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4095   0010F8  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4096   0010FA  EF81  F008         	goto	u2224
  4097   0010FE                     u2225:
  4098   0010FE  90D8               	bcf	status,0,c
  4099   001100  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4100   001102                     u2224:
  4101   001102  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4102   001104  EF7F  F008         	goto	u2225
  4103   001108  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4104   00110A  1293               	iorwf	147,f,c	;volatile
  4105                           
  4106                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 37:                         break;
  4107   00110C  EF82  F009         	goto	l3212
  4108   001110                     l3182:
  4109   001110  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4110   001112  6ED9               	movwf	fsr2l,c
  4111   001114  6ADA               	clrf	fsr2h,c
  4112   001116  BCDF               	btfsc	indf2,6,c
  4113   001118  EF90  F008         	goto	u2231
  4114   00111C  EF93  F008         	goto	u2230
  4115   001120                     u2231:
  4116   001120  0E01               	movlw	1
  4117   001122  EF94  F008         	goto	u2236
  4118   001126                     u2230:
  4119   001126  0E00               	movlw	0
  4120   001128                     u2236:
  4121                           
  4122                           ; Switch size 1, requested type "simple"
  4123                           ; Number of cases is 2, Range of values is 0 to 1
  4124                           ; switch strategies available:
  4125                           ; Name         Instructions Cycles
  4126                           ; simple_byte            7     4 (average)
  4127                           ;	Chosen strategy is simple_byte
  4128   001128  0A00               	xorlw	0	; case 0
  4129   00112A  B4D8               	btfsc	status,2,c
  4130   00112C  EF72  F008         	goto	l3178
  4131   001130  0A01               	xorlw	1	; case 1
  4132   001132  B4D8               	btfsc	status,2,c
  4133   001134  EF5B  F008         	goto	l3176
  4134   001138  EF82  F009         	goto	l3212
  4135   00113C                     l3184:
  4136                           
  4137                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 44:                         TRISC &= ~ (1 << copyPinCF
      +                          G->Pin);
  4138   00113C  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4139   00113E  6ED9               	movwf	fsr2l,c
  4140   001140  6ADA               	clrf	fsr2h,c
  4141   001142  30DF               	rrcf	223,w,c
  4142   001144  32E8               	rrcf	wreg,f,c
  4143   001146  32E8               	rrcf	wreg,f,c
  4144   001148  0B07               	andlw	7
  4145   00114A  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4146   00114C  0E01               	movlw	1
  4147   00114E  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4148   001150  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4149   001152  EFAD  F008         	goto	u2244
  4150   001156                     u2245:
  4151   001156  90D8               	bcf	status,0,c
  4152   001158  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4153   00115A                     u2244:
  4154   00115A  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4155   00115C  EFAB  F008         	goto	u2245
  4156   001160  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4157   001162  0AFF               	xorlw	255
  4158   001164  1694               	andwf	148,f,c	;volatile
  4159                           
  4160                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 45:                         break;
  4161   001166  EF82  F009         	goto	l3212
  4162   00116A                     l3186:
  4163                           
  4164                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 47:                         TRISC |= (1 << copyPinCFG-
      +                          >Pin);
  4165   00116A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4166   00116C  6ED9               	movwf	fsr2l,c
  4167   00116E  6ADA               	clrf	fsr2h,c
  4168   001170  30DF               	rrcf	223,w,c
  4169   001172  32E8               	rrcf	wreg,f,c
  4170   001174  32E8               	rrcf	wreg,f,c
  4171   001176  0B07               	andlw	7
  4172   001178  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4173   00117A  0E01               	movlw	1
  4174   00117C  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4175   00117E  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4176   001180  EFC4  F008         	goto	u2254
  4177   001184                     u2255:
  4178   001184  90D8               	bcf	status,0,c
  4179   001186  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4180   001188                     u2254:
  4181   001188  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4182   00118A  EFC2  F008         	goto	u2255
  4183   00118E  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4184   001190  1294               	iorwf	148,f,c	;volatile
  4185                           
  4186                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 48:                         break;
  4187   001192  EF82  F009         	goto	l3212
  4188   001196                     l3190:
  4189   001196  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4190   001198  6ED9               	movwf	fsr2l,c
  4191   00119A  6ADA               	clrf	fsr2h,c
  4192   00119C  BCDF               	btfsc	indf2,6,c
  4193   00119E  EFD3  F008         	goto	u2261
  4194   0011A2  EFD6  F008         	goto	u2260
  4195   0011A6                     u2261:
  4196   0011A6  0E01               	movlw	1
  4197   0011A8  EFD7  F008         	goto	u2266
  4198   0011AC                     u2260:
  4199   0011AC  0E00               	movlw	0
  4200   0011AE                     u2266:
  4201                           
  4202                           ; Switch size 1, requested type "simple"
  4203                           ; Number of cases is 2, Range of values is 0 to 1
  4204                           ; switch strategies available:
  4205                           ; Name         Instructions Cycles
  4206                           ; simple_byte            7     4 (average)
  4207                           ;	Chosen strategy is simple_byte
  4208   0011AE  0A00               	xorlw	0	; case 0
  4209   0011B0  B4D8               	btfsc	status,2,c
  4210   0011B2  EFB5  F008         	goto	l3186
  4211   0011B6  0A01               	xorlw	1	; case 1
  4212   0011B8  B4D8               	btfsc	status,2,c
  4213   0011BA  EF9E  F008         	goto	l3184
  4214   0011BE  EF82  F009         	goto	l3212
  4215   0011C2                     l3192:
  4216                           
  4217                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 55:                         TRISD &= ~ (1 << copyPinCF
      +                          G->Pin);
  4218   0011C2  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4219   0011C4  6ED9               	movwf	fsr2l,c
  4220   0011C6  6ADA               	clrf	fsr2h,c
  4221   0011C8  30DF               	rrcf	223,w,c
  4222   0011CA  32E8               	rrcf	wreg,f,c
  4223   0011CC  32E8               	rrcf	wreg,f,c
  4224   0011CE  0B07               	andlw	7
  4225   0011D0  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4226   0011D2  0E01               	movlw	1
  4227   0011D4  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4228   0011D6  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4229   0011D8  EFF0  F008         	goto	u2274
  4230   0011DC                     u2275:
  4231   0011DC  90D8               	bcf	status,0,c
  4232   0011DE  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4233   0011E0                     u2274:
  4234   0011E0  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4235   0011E2  EFEE  F008         	goto	u2275
  4236   0011E6  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4237   0011E8  0AFF               	xorlw	255
  4238   0011EA  1695               	andwf	149,f,c	;volatile
  4239                           
  4240                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 56:                         break;
  4241   0011EC  EF82  F009         	goto	l3212
  4242   0011F0                     l3194:
  4243                           
  4244                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 58:                         TRISD |= (1 << copyPinCFG-
      +                          >Pin);
  4245   0011F0  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4246   0011F2  6ED9               	movwf	fsr2l,c
  4247   0011F4  6ADA               	clrf	fsr2h,c
  4248   0011F6  30DF               	rrcf	223,w,c
  4249   0011F8  32E8               	rrcf	wreg,f,c
  4250   0011FA  32E8               	rrcf	wreg,f,c
  4251   0011FC  0B07               	andlw	7
  4252   0011FE  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4253   001200  0E01               	movlw	1
  4254   001202  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4255   001204  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4256   001206  EF07  F009         	goto	u2284
  4257   00120A                     u2285:
  4258   00120A  90D8               	bcf	status,0,c
  4259   00120C  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4260   00120E                     u2284:
  4261   00120E  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4262   001210  EF05  F009         	goto	u2285
  4263   001214  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4264   001216  1295               	iorwf	149,f,c	;volatile
  4265                           
  4266                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 59:                         break;
  4267   001218  EF82  F009         	goto	l3212
  4268   00121C                     l3198:
  4269   00121C  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4270   00121E  6ED9               	movwf	fsr2l,c
  4271   001220  6ADA               	clrf	fsr2h,c
  4272   001222  BCDF               	btfsc	indf2,6,c
  4273   001224  EF16  F009         	goto	u2291
  4274   001228  EF19  F009         	goto	u2290
  4275   00122C                     u2291:
  4276   00122C  0E01               	movlw	1
  4277   00122E  EF1A  F009         	goto	u2296
  4278   001232                     u2290:
  4279   001232  0E00               	movlw	0
  4280   001234                     u2296:
  4281                           
  4282                           ; Switch size 1, requested type "simple"
  4283                           ; Number of cases is 2, Range of values is 0 to 1
  4284                           ; switch strategies available:
  4285                           ; Name         Instructions Cycles
  4286                           ; simple_byte            7     4 (average)
  4287                           ;	Chosen strategy is simple_byte
  4288   001234  0A00               	xorlw	0	; case 0
  4289   001236  B4D8               	btfsc	status,2,c
  4290   001238  EFF8  F008         	goto	l3194
  4291   00123C  0A01               	xorlw	1	; case 1
  4292   00123E  B4D8               	btfsc	status,2,c
  4293   001240  EFE1  F008         	goto	l3192
  4294   001244  EF82  F009         	goto	l3212
  4295   001248                     l3200:
  4296                           
  4297                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 66:                         TRISE &= ~ (1 << copyPinCF
      +                          G->Pin);
  4298   001248  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4299   00124A  6ED9               	movwf	fsr2l,c
  4300   00124C  6ADA               	clrf	fsr2h,c
  4301   00124E  30DF               	rrcf	223,w,c
  4302   001250  32E8               	rrcf	wreg,f,c
  4303   001252  32E8               	rrcf	wreg,f,c
  4304   001254  0B07               	andlw	7
  4305   001256  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4306   001258  0E01               	movlw	1
  4307   00125A  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4308   00125C  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4309   00125E  EF33  F009         	goto	u2304
  4310   001262                     u2305:
  4311   001262  90D8               	bcf	status,0,c
  4312   001264  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4313   001266                     u2304:
  4314   001266  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4315   001268  EF31  F009         	goto	u2305
  4316   00126C  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4317   00126E  0AFF               	xorlw	255
  4318   001270  1696               	andwf	150,f,c	;volatile
  4319                           
  4320                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 67:                         break;
  4321   001272  EF82  F009         	goto	l3212
  4322   001276                     l3202:
  4323                           
  4324                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 69:                         TRISE |= (1 << copyPinCFG-
      +                          >Pin);
  4325   001276  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4326   001278  6ED9               	movwf	fsr2l,c
  4327   00127A  6ADA               	clrf	fsr2h,c
  4328   00127C  30DF               	rrcf	223,w,c
  4329   00127E  32E8               	rrcf	wreg,f,c
  4330   001280  32E8               	rrcf	wreg,f,c
  4331   001282  0B07               	andlw	7
  4332   001284  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  4333   001286  0E01               	movlw	1
  4334   001288  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  4335   00128A  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  4336   00128C  EF4A  F009         	goto	u2314
  4337   001290                     u2315:
  4338   001290  90D8               	bcf	status,0,c
  4339   001292  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  4340   001294                     u2314:
  4341   001294  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  4342   001296  EF48  F009         	goto	u2315
  4343   00129A  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  4344   00129C  1296               	iorwf	150,f,c	;volatile
  4345                           
  4346                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 70:                         break;
  4347   00129E  EF82  F009         	goto	l3212
  4348   0012A2                     l3206:
  4349   0012A2  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4350   0012A4  6ED9               	movwf	fsr2l,c
  4351   0012A6  6ADA               	clrf	fsr2h,c
  4352   0012A8  BCDF               	btfsc	indf2,6,c
  4353   0012AA  EF59  F009         	goto	u2321
  4354   0012AE  EF5C  F009         	goto	u2320
  4355   0012B2                     u2321:
  4356   0012B2  0E01               	movlw	1
  4357   0012B4  EF5D  F009         	goto	u2326
  4358   0012B8                     u2320:
  4359   0012B8  0E00               	movlw	0
  4360   0012BA                     u2326:
  4361                           
  4362                           ; Switch size 1, requested type "simple"
  4363                           ; Number of cases is 2, Range of values is 0 to 1
  4364                           ; switch strategies available:
  4365                           ; Name         Instructions Cycles
  4366                           ; simple_byte            7     4 (average)
  4367                           ;	Chosen strategy is simple_byte
  4368   0012BA  0A00               	xorlw	0	; case 0
  4369   0012BC  B4D8               	btfsc	status,2,c
  4370   0012BE  EF3B  F009         	goto	l3202
  4371   0012C2  0A01               	xorlw	1	; case 1
  4372   0012C4  B4D8               	btfsc	status,2,c
  4373   0012C6  EF24  F009         	goto	l3200
  4374   0012CA  EF82  F009         	goto	l3212
  4375   0012CE                     l3210:
  4376   0012CE  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  4377   0012D0  6ED9               	movwf	fsr2l,c
  4378   0012D2  6ADA               	clrf	fsr2h,c
  4379   0012D4  50DF               	movf	223,w,c
  4380   0012D6  0B07               	andlw	7
  4381                           
  4382                           ; Switch size 1, requested type "simple"
  4383                           ; Number of cases is 5, Range of values is 0 to 4
  4384                           ; switch strategies available:
  4385                           ; Name         Instructions Cycles
  4386                           ; simple_byte           16     9 (average)
  4387                           ;	Chosen strategy is simple_byte
  4388   0012D8  0A00               	xorlw	0	; case 0
  4389   0012DA  B4D8               	btfsc	status,2,c
  4390   0012DC  EF45  F008         	goto	l3174
  4391   0012E0  0A01               	xorlw	1	; case 1
  4392   0012E2  B4D8               	btfsc	status,2,c
  4393   0012E4  EF88  F008         	goto	l3182
  4394   0012E8  0A03               	xorlw	3	; case 2
  4395   0012EA  B4D8               	btfsc	status,2,c
  4396   0012EC  EFCB  F008         	goto	l3190
  4397   0012F0  0A01               	xorlw	1	; case 3
  4398   0012F2  B4D8               	btfsc	status,2,c
  4399   0012F4  EF0E  F009         	goto	l3198
  4400   0012F8  0A07               	xorlw	7	; case 4
  4401   0012FA  B4D8               	btfsc	status,2,c
  4402   0012FC  EF51  F009         	goto	l3206
  4403   001300  EF15  F008         	goto	l3166
  4404   001304                     l3212:
  4405                           
  4406                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 78:     return retVal;
  4407   001304  5004               	movf	Mcal_GPIO_initPinDirection@retVal^0,w,c
  4408   001306  0012               	return		;funcret
  4409   001308                     __end_of_Mcal_GPIO_initPinDirection:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _HALL_LCD_8bit_sendCMD *****************
  4413 ;; Defined at:
  4414 ;;		line 158 in file "Hall/LCD/Hall_lcd_prog.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  copyLCD         1    6[COMRAM] PTR const struct .
  4417 ;;		 -> LCD1_8Bit(10), 
  4418 ;;  copyCMD         1    7[COMRAM] unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  Counter         1   10[COMRAM] unsigned char 
  4421 ;;  RetValue        1    0        unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 2
  4438 ;; This function calls:
  4439 ;;		_LCD_sendEnableSignal8Bits
  4440 ;;		_MCAL_GPIO_writePinStatus
  4441 ;; This function is called by:
  4442 ;;		_HALL_LCD_8bit_init
  4443 ;;		_HALL_LCD_8bit_goto
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text16
  4448   001B02                     __ptext16:
  4449                           	callstack 0
  4450   001B02                     _HALL_LCD_8bit_sendCMD:
  4451                           	callstack 27
  4452   001B02                     
  4453                           ;Hall/LCD/Hall_lcd_prog.c: 160:     if(copyLCD == ((void*)0)) {
  4454   001B02  5007               	movf	HALL_LCD_8bit_sendCMD@copyLCD^0,w,c
  4455   001B04  A4D8               	btfss	status,2,c
  4456   001B06  EF87  F00D         	goto	u2351
  4457   001B0A  EF89  F00D         	goto	u2350
  4458   001B0E                     u2351:
  4459   001B0E  EF8B  F00D         	goto	l3250
  4460   001B12                     u2350:
  4461   001B12                     
  4462                           ;Hall/LCD/Hall_lcd_prog.c: 162:     }
  4463   001B12  EFB4  F00D         	goto	l207
  4464   001B16                     l3250:
  4465                           
  4466                           ;Hall/LCD/Hall_lcd_prog.c: 164:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO
      +                          _Status_Low);
  4467   001B16  C007  F001         	movff	HALL_LCD_8bit_sendCMD@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  4468   001B1A  0E00               	movlw	0
  4469   001B1C  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4470   001B1E  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4471   001B22                     
  4472                           ;Hall/LCD/Hall_lcd_prog.c: 165:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  4473   001B22  6A0B               	clrf	HALL_LCD_8bit_sendCMD@Counter^0,c
  4474   001B24                     l3258:
  4475                           
  4476                           ;Hall/LCD/Hall_lcd_prog.c: 166:             MCAL_GPIO_writePinStatus(&(copyLCD->LCD_D[Co
      +                          unter]),(copyCMD >> Counter) & (uint8_t)0x01);
  4477   001B24  5007               	movf	HALL_LCD_8bit_sendCMD@copyLCD^0,w,c
  4478   001B26  240B               	addwf	HALL_LCD_8bit_sendCMD@Counter^0,w,c
  4479   001B28  0F02               	addlw	2
  4480   001B2A  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4481   001B2C  C00B  F009         	movff	HALL_LCD_8bit_sendCMD@Counter,??_HALL_LCD_8bit_sendCMD
  4482   001B30  C008  F00A         	movff	HALL_LCD_8bit_sendCMD@copyCMD,??_HALL_LCD_8bit_sendCMD+1
  4483   001B34  2A09               	incf	??_HALL_LCD_8bit_sendCMD^0,f,c
  4484   001B36  EF9F  F00D         	goto	u2364
  4485   001B3A                     u2365:
  4486   001B3A  90D8               	bcf	status,0,c
  4487   001B3C  320A               	rrcf	(??_HALL_LCD_8bit_sendCMD+1)^0,f,c
  4488   001B3E                     u2364:
  4489   001B3E  2E09               	decfsz	??_HALL_LCD_8bit_sendCMD^0,f,c
  4490   001B40  EF9D  F00D         	goto	u2365
  4491   001B44  500A               	movf	(??_HALL_LCD_8bit_sendCMD+1)^0,w,c
  4492   001B46  0B01               	andlw	1
  4493   001B48  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4494   001B4A  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4495   001B4E                     
  4496                           ;Hall/LCD/Hall_lcd_prog.c: 167:         }
  4497   001B4E  2A0B               	incf	HALL_LCD_8bit_sendCMD@Counter^0,f,c
  4498   001B50  0E07               	movlw	7
  4499   001B52  640B               	cpfsgt	HALL_LCD_8bit_sendCMD@Counter^0,c
  4500   001B54  EFAE  F00D         	goto	u2371
  4501   001B58  EFB0  F00D         	goto	u2370
  4502   001B5C                     u2371:
  4503   001B5C  EF92  F00D         	goto	l3258
  4504   001B60                     u2370:
  4505   001B60                     
  4506                           ;Hall/LCD/Hall_lcd_prog.c: 168:         LCD_sendEnableSignal8Bits(copyLCD);
  4507   001B60  C007  F006         	movff	HALL_LCD_8bit_sendCMD@copyLCD,LCD_sendEnableSignal8Bits@copyLCD
  4508   001B64  ECC4  F00E         	call	_LCD_sendEnableSignal8Bits	;wreg free
  4509   001B68                     l207:
  4510   001B68  0012               	return		;funcret
  4511   001B6A                     __end_of_HALL_LCD_8bit_sendCMD:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _LCD_sendEnableSignal8Bits *****************
  4515 ;; Defined at:
  4516 ;;		line 299 in file "Hall/LCD/Hall_lcd_prog.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  copyLCD         1    5[COMRAM] PTR const struct .
  4519 ;;		 -> LCD1_8Bit(10), 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  RetValue        1    0        unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      unsigned char 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4531 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;Total ram usage:        1 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 1
  4538 ;; This function calls:
  4539 ;;		_MCAL_GPIO_writePinStatus
  4540 ;; This function is called by:
  4541 ;;		_HALL_LCD_8bit_sendCMD
  4542 ;;		_HALL_LCD_8bit_sendChar
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text17
  4547   001D88                     __ptext17:
  4548                           	callstack 0
  4549   001D88                     _LCD_sendEnableSignal8Bits:
  4550                           	callstack 27
  4551   001D88                     
  4552                           ;Hall/LCD/Hall_lcd_prog.c: 301:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_High);
  4553   001D88  2806               	incf	LCD_sendEnableSignal8Bits@copyLCD^0,w,c
  4554   001D8A  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4555   001D8C  0E01               	movlw	1
  4556   001D8E  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4557   001D90  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4558   001D94                     
  4559                           ;Hall/LCD/Hall_lcd_prog.c: 302:     _delay((unsigned long)((5)*(4000000U/4000000.0)));
  4560   001D94  D000               	nop2		;2 cycle nop
  4561   001D96  D000               	nop2		;2 cycle nop
  4562   001D98  0000               	nop	
  4563   001D9A                     
  4564                           ;Hall/LCD/Hall_lcd_prog.c: 303:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_Low);
  4565   001D9A  2806               	incf	LCD_sendEnableSignal8Bits@copyLCD^0,w,c
  4566   001D9C  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4567   001D9E  0E00               	movlw	0
  4568   001DA0  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4569   001DA2  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4570   001DA6  0012               	return		;funcret
  4571   001DA8                     __end_of_LCD_sendEnableSignal8Bits:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _MCAL_GPIO_writePinStatus *****************
  4575 ;; Defined at:
  4576 ;;		line 117 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  copyPinCFG      1    0[COMRAM] PTR const struct .
  4579 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_turnOFF@objPin(1), HALL_Relay_turnON@objPin(1), HALL_Relay_init@objPin(1), 
  4580 ;;		 -> HALL_Led_trunOFF@objLed(1), HALL_Led_trunON@objLed(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  4581 ;;		 -> objPin_motor_1(1), LCD1_8Bit(10), 
  4582 ;;  copyStatusPi    1    1[COMRAM] enum E2982
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  retVal          1    4[COMRAM] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      unsigned char 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;Total ram usage:        5 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_HALL_LCD_8bit_sendCMD
  4604 ;;		_HALL_LCD_8bit_sendChar
  4605 ;;		_LCD_sendEnableSignal8Bits
  4606 ;;		_MCAL_GPIO_init
  4607 ;;		_HALL_DC_MOTOR_right
  4608 ;;		_HALL_DC_MOTOR_left
  4609 ;;		_HALL_DC_MOTOR_stop
  4610 ;;		_HALL_KeyPad_getValue
  4611 ;;		_HALL_LCD_4bit_sendCMD
  4612 ;;		_HALL_LCD_4bit_sendChar
  4613 ;;		_LCD_send4Bits
  4614 ;;		_LCD_sendEnableSignal4Bits
  4615 ;;		_HALL_Led_trunON
  4616 ;;		_HALL_Led_trunOFF
  4617 ;;		_HALL_Relay_turnON
  4618 ;;		_HALL_Relay_turnOFF
  4619 ;;		_HALL_SEVEN_SEGEMENT_writeNumber
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text18
  4624   001308                     __ptext18:
  4625                           	callstack 0
  4626   001308                     _MCAL_GPIO_writePinStatus:
  4627                           	callstack 28
  4628   001308                     
  4629                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 118:     uint8_t retVal = (Std_Return)1;
  4630   001308  0E01               	movlw	1
  4631   00130A  6E05               	movwf	MCAL_GPIO_writePinStatus@retVal^0,c
  4632                           
  4633                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 119:     if(copyPinCFG == ((void*)0)) {
  4634   00130C  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4635   00130E  A4D8               	btfss	status,2,c
  4636   001310  EF8C  F009         	goto	u1961
  4637   001314  EF8E  F009         	goto	u1960
  4638   001318                     u1961:
  4639   001318  EFDB  F00A         	goto	l3088
  4640   00131C                     u1960:
  4641   00131C                     l3044:
  4642                           
  4643                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 120:         retVal = (Std_Return)0;
  4644   00131C  6A05               	clrf	MCAL_GPIO_writePinStatus@retVal^0,c
  4645                           
  4646                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 121:     }
  4647   00131E  EFF6  F00A         	goto	l3090
  4648   001322                     l3046:
  4649                           
  4650                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 127:                         LATA |= (1 << copyPinCFG-
      +                          >Pin);
  4651   001322  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4652   001324  6ED9               	movwf	fsr2l,c
  4653   001326  6ADA               	clrf	fsr2h,c
  4654   001328  30DF               	rrcf	223,w,c
  4655   00132A  32E8               	rrcf	wreg,f,c
  4656   00132C  32E8               	rrcf	wreg,f,c
  4657   00132E  0B07               	andlw	7
  4658   001330  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4659   001332  0E01               	movlw	1
  4660   001334  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4661   001336  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4662   001338  EFA0  F009         	goto	u1974
  4663   00133C                     u1975:
  4664   00133C  90D8               	bcf	status,0,c
  4665   00133E  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4666   001340                     u1974:
  4667   001340  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4668   001342  EF9E  F009         	goto	u1975
  4669   001346  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4670   001348  1289               	iorwf	137,f,c	;volatile
  4671                           
  4672                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 128:                         break;
  4673   00134A  EFF6  F00A         	goto	l3090
  4674   00134E                     l3048:
  4675                           
  4676                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 130:                         LATA &= ~ (1 << copyPinCF
      +                          G->Pin);
  4677   00134E  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4678   001350  6ED9               	movwf	fsr2l,c
  4679   001352  6ADA               	clrf	fsr2h,c
  4680   001354  30DF               	rrcf	223,w,c
  4681   001356  32E8               	rrcf	wreg,f,c
  4682   001358  32E8               	rrcf	wreg,f,c
  4683   00135A  0B07               	andlw	7
  4684   00135C  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4685   00135E  0E01               	movlw	1
  4686   001360  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4687   001362  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4688   001364  EFB6  F009         	goto	u1984
  4689   001368                     u1985:
  4690   001368  90D8               	bcf	status,0,c
  4691   00136A  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4692   00136C                     u1984:
  4693   00136C  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4694   00136E  EFB4  F009         	goto	u1985
  4695   001372  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4696   001374  0AFF               	xorlw	255
  4697   001376  1689               	andwf	137,f,c	;volatile
  4698                           
  4699                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 131:                         break;
  4700   001378  EFF6  F00A         	goto	l3090
  4701   00137C                     l3052:
  4702   00137C  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4703   00137E  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4704   001380  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4705                           
  4706                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4707                           ; Switch size 1, requested type "simple"
  4708                           ; Number of cases is 1, Range of values is 0 to 0
  4709                           ; switch strategies available:
  4710                           ; Name         Instructions Cycles
  4711                           ; simple_byte            4     3 (average)
  4712                           ;	Chosen strategy is simple_byte
  4713   001382  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4714   001384  0A00               	xorlw	0	; case 0
  4715   001386  B4D8               	btfsc	status,2,c
  4716   001388  EFC8  F009         	goto	l4016
  4717   00138C  EF8E  F009         	goto	l3044
  4718   001390                     l4016:
  4719                           
  4720                           ; Switch size 1, requested type "simple"
  4721                           ; Number of cases is 2, Range of values is 0 to 1
  4722                           ; switch strategies available:
  4723                           ; Name         Instructions Cycles
  4724                           ; simple_byte            7     4 (average)
  4725                           ;	Chosen strategy is simple_byte
  4726   001390  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4727   001392  0A00               	xorlw	0	; case 0
  4728   001394  B4D8               	btfsc	status,2,c
  4729   001396  EFA7  F009         	goto	l3048
  4730   00139A  0A01               	xorlw	1	; case 1
  4731   00139C  B4D8               	btfsc	status,2,c
  4732   00139E  EF91  F009         	goto	l3046
  4733   0013A2  EF8E  F009         	goto	l3044
  4734   0013A6                     l3054:
  4735                           
  4736                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 141:                         LATB |= (1 << copyPinCFG-
      +                          >Pin);
  4737   0013A6  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4738   0013A8  6ED9               	movwf	fsr2l,c
  4739   0013AA  6ADA               	clrf	fsr2h,c
  4740   0013AC  30DF               	rrcf	223,w,c
  4741   0013AE  32E8               	rrcf	wreg,f,c
  4742   0013B0  32E8               	rrcf	wreg,f,c
  4743   0013B2  0B07               	andlw	7
  4744   0013B4  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4745   0013B6  0E01               	movlw	1
  4746   0013B8  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4747   0013BA  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4748   0013BC  EFE2  F009         	goto	u1994
  4749   0013C0                     u1995:
  4750   0013C0  90D8               	bcf	status,0,c
  4751   0013C2  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4752   0013C4                     u1994:
  4753   0013C4  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4754   0013C6  EFE0  F009         	goto	u1995
  4755   0013CA  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4756   0013CC  128A               	iorwf	138,f,c	;volatile
  4757                           
  4758                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 142:                         break;
  4759   0013CE  EFF6  F00A         	goto	l3090
  4760   0013D2                     l3056:
  4761                           
  4762                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 144:                         LATB &= ~ (1 << copyPinCF
      +                          G->Pin);
  4763   0013D2  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4764   0013D4  6ED9               	movwf	fsr2l,c
  4765   0013D6  6ADA               	clrf	fsr2h,c
  4766   0013D8  30DF               	rrcf	223,w,c
  4767   0013DA  32E8               	rrcf	wreg,f,c
  4768   0013DC  32E8               	rrcf	wreg,f,c
  4769   0013DE  0B07               	andlw	7
  4770   0013E0  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4771   0013E2  0E01               	movlw	1
  4772   0013E4  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4773   0013E6  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4774   0013E8  EFF8  F009         	goto	u2004
  4775   0013EC                     u2005:
  4776   0013EC  90D8               	bcf	status,0,c
  4777   0013EE  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4778   0013F0                     u2004:
  4779   0013F0  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4780   0013F2  EFF6  F009         	goto	u2005
  4781   0013F6  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4782   0013F8  0AFF               	xorlw	255
  4783   0013FA  168A               	andwf	138,f,c	;volatile
  4784                           
  4785                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 145:                         break;
  4786   0013FC  EFF6  F00A         	goto	l3090
  4787   001400                     l3060:
  4788   001400  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4789   001402  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4790   001404  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4791                           
  4792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4793                           ; Switch size 1, requested type "simple"
  4794                           ; Number of cases is 1, Range of values is 0 to 0
  4795                           ; switch strategies available:
  4796                           ; Name         Instructions Cycles
  4797                           ; simple_byte            4     3 (average)
  4798                           ;	Chosen strategy is simple_byte
  4799   001406  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4800   001408  0A00               	xorlw	0	; case 0
  4801   00140A  B4D8               	btfsc	status,2,c
  4802   00140C  EF0A  F00A         	goto	l4018
  4803   001410  EF8E  F009         	goto	l3044
  4804   001414                     l4018:
  4805                           
  4806                           ; Switch size 1, requested type "simple"
  4807                           ; Number of cases is 2, Range of values is 0 to 1
  4808                           ; switch strategies available:
  4809                           ; Name         Instructions Cycles
  4810                           ; simple_byte            7     4 (average)
  4811                           ;	Chosen strategy is simple_byte
  4812   001414  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4813   001416  0A00               	xorlw	0	; case 0
  4814   001418  B4D8               	btfsc	status,2,c
  4815   00141A  EFE9  F009         	goto	l3056
  4816   00141E  0A01               	xorlw	1	; case 1
  4817   001420  B4D8               	btfsc	status,2,c
  4818   001422  EFD3  F009         	goto	l3054
  4819   001426  EF8E  F009         	goto	l3044
  4820   00142A                     l3062:
  4821                           
  4822                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 155:                         LATC |= (1 << copyPinCFG-
      +                          >Pin);
  4823   00142A  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4824   00142C  6ED9               	movwf	fsr2l,c
  4825   00142E  6ADA               	clrf	fsr2h,c
  4826   001430  30DF               	rrcf	223,w,c
  4827   001432  32E8               	rrcf	wreg,f,c
  4828   001434  32E8               	rrcf	wreg,f,c
  4829   001436  0B07               	andlw	7
  4830   001438  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4831   00143A  0E01               	movlw	1
  4832   00143C  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4833   00143E  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4834   001440  EF24  F00A         	goto	u2014
  4835   001444                     u2015:
  4836   001444  90D8               	bcf	status,0,c
  4837   001446  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4838   001448                     u2014:
  4839   001448  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4840   00144A  EF22  F00A         	goto	u2015
  4841   00144E  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4842   001450  128B               	iorwf	139,f,c	;volatile
  4843                           
  4844                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 156:                         break;
  4845   001452  EFF6  F00A         	goto	l3090
  4846   001456                     l3064:
  4847                           
  4848                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 158:                         LATC &= ~ (1 << copyPinCF
      +                          G->Pin);
  4849   001456  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4850   001458  6ED9               	movwf	fsr2l,c
  4851   00145A  6ADA               	clrf	fsr2h,c
  4852   00145C  30DF               	rrcf	223,w,c
  4853   00145E  32E8               	rrcf	wreg,f,c
  4854   001460  32E8               	rrcf	wreg,f,c
  4855   001462  0B07               	andlw	7
  4856   001464  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4857   001466  0E01               	movlw	1
  4858   001468  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4859   00146A  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4860   00146C  EF3A  F00A         	goto	u2024
  4861   001470                     u2025:
  4862   001470  90D8               	bcf	status,0,c
  4863   001472  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4864   001474                     u2024:
  4865   001474  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4866   001476  EF38  F00A         	goto	u2025
  4867   00147A  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4868   00147C  0AFF               	xorlw	255
  4869   00147E  168B               	andwf	139,f,c	;volatile
  4870                           
  4871                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 159:                         break;
  4872   001480  EFF6  F00A         	goto	l3090
  4873   001484                     l3068:
  4874   001484  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4875   001486  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4876   001488  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4877                           
  4878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4879                           ; Switch size 1, requested type "simple"
  4880                           ; Number of cases is 1, Range of values is 0 to 0
  4881                           ; switch strategies available:
  4882                           ; Name         Instructions Cycles
  4883                           ; simple_byte            4     3 (average)
  4884                           ;	Chosen strategy is simple_byte
  4885   00148A  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4886   00148C  0A00               	xorlw	0	; case 0
  4887   00148E  B4D8               	btfsc	status,2,c
  4888   001490  EF4C  F00A         	goto	l4020
  4889   001494  EF8E  F009         	goto	l3044
  4890   001498                     l4020:
  4891                           
  4892                           ; Switch size 1, requested type "simple"
  4893                           ; Number of cases is 2, Range of values is 0 to 1
  4894                           ; switch strategies available:
  4895                           ; Name         Instructions Cycles
  4896                           ; simple_byte            7     4 (average)
  4897                           ;	Chosen strategy is simple_byte
  4898   001498  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4899   00149A  0A00               	xorlw	0	; case 0
  4900   00149C  B4D8               	btfsc	status,2,c
  4901   00149E  EF2B  F00A         	goto	l3064
  4902   0014A2  0A01               	xorlw	1	; case 1
  4903   0014A4  B4D8               	btfsc	status,2,c
  4904   0014A6  EF15  F00A         	goto	l3062
  4905   0014AA  EF8E  F009         	goto	l3044
  4906   0014AE                     l3070:
  4907                           
  4908                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 170:                         LATD |= (1 << copyPinCFG-
      +                          >Pin);
  4909   0014AE  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4910   0014B0  6ED9               	movwf	fsr2l,c
  4911   0014B2  6ADA               	clrf	fsr2h,c
  4912   0014B4  30DF               	rrcf	223,w,c
  4913   0014B6  32E8               	rrcf	wreg,f,c
  4914   0014B8  32E8               	rrcf	wreg,f,c
  4915   0014BA  0B07               	andlw	7
  4916   0014BC  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4917   0014BE  0E01               	movlw	1
  4918   0014C0  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4919   0014C2  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4920   0014C4  EF66  F00A         	goto	u2034
  4921   0014C8                     u2035:
  4922   0014C8  90D8               	bcf	status,0,c
  4923   0014CA  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4924   0014CC                     u2034:
  4925   0014CC  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4926   0014CE  EF64  F00A         	goto	u2035
  4927   0014D2  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4928   0014D4  128C               	iorwf	140,f,c	;volatile
  4929                           
  4930                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 171:                         break;
  4931   0014D6  EFF6  F00A         	goto	l3090
  4932   0014DA                     l3072:
  4933                           
  4934                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 173:                         LATD &= ~ (1 << copyPinCF
      +                          G->Pin);
  4935   0014DA  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4936   0014DC  6ED9               	movwf	fsr2l,c
  4937   0014DE  6ADA               	clrf	fsr2h,c
  4938   0014E0  30DF               	rrcf	223,w,c
  4939   0014E2  32E8               	rrcf	wreg,f,c
  4940   0014E4  32E8               	rrcf	wreg,f,c
  4941   0014E6  0B07               	andlw	7
  4942   0014E8  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4943   0014EA  0E01               	movlw	1
  4944   0014EC  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4945   0014EE  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4946   0014F0  EF7C  F00A         	goto	u2044
  4947   0014F4                     u2045:
  4948   0014F4  90D8               	bcf	status,0,c
  4949   0014F6  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4950   0014F8                     u2044:
  4951   0014F8  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4952   0014FA  EF7A  F00A         	goto	u2045
  4953   0014FE  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4954   001500  0AFF               	xorlw	255
  4955   001502  168C               	andwf	140,f,c	;volatile
  4956                           
  4957                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 174:                         break;
  4958   001504  EFF6  F00A         	goto	l3090
  4959   001508                     l3076:
  4960   001508  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4961   00150A  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4962   00150C  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4963                           
  4964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4965                           ; Switch size 1, requested type "simple"
  4966                           ; Number of cases is 1, Range of values is 0 to 0
  4967                           ; switch strategies available:
  4968                           ; Name         Instructions Cycles
  4969                           ; simple_byte            4     3 (average)
  4970                           ;	Chosen strategy is simple_byte
  4971   00150E  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4972   001510  0A00               	xorlw	0	; case 0
  4973   001512  B4D8               	btfsc	status,2,c
  4974   001514  EF8E  F00A         	goto	l4022
  4975   001518  EF8E  F009         	goto	l3044
  4976   00151C                     l4022:
  4977                           
  4978                           ; Switch size 1, requested type "simple"
  4979                           ; Number of cases is 2, Range of values is 0 to 1
  4980                           ; switch strategies available:
  4981                           ; Name         Instructions Cycles
  4982                           ; simple_byte            7     4 (average)
  4983                           ;	Chosen strategy is simple_byte
  4984   00151C  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4985   00151E  0A00               	xorlw	0	; case 0
  4986   001520  B4D8               	btfsc	status,2,c
  4987   001522  EF6D  F00A         	goto	l3072
  4988   001526  0A01               	xorlw	1	; case 1
  4989   001528  B4D8               	btfsc	status,2,c
  4990   00152A  EF57  F00A         	goto	l3070
  4991   00152E  EF8E  F009         	goto	l3044
  4992   001532                     l3078:
  4993                           
  4994                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 185:                         LATE |= (1 << copyPinCFG-
      +                          >Pin);
  4995   001532  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4996   001534  6ED9               	movwf	fsr2l,c
  4997   001536  6ADA               	clrf	fsr2h,c
  4998   001538  30DF               	rrcf	223,w,c
  4999   00153A  32E8               	rrcf	wreg,f,c
  5000   00153C  32E8               	rrcf	wreg,f,c
  5001   00153E  0B07               	andlw	7
  5002   001540  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  5003   001542  0E01               	movlw	1
  5004   001544  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  5005   001546  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  5006   001548  EFA8  F00A         	goto	u2054
  5007   00154C                     u2055:
  5008   00154C  90D8               	bcf	status,0,c
  5009   00154E  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  5010   001550                     u2054:
  5011   001550  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  5012   001552  EFA6  F00A         	goto	u2055
  5013   001556  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  5014   001558  128D               	iorwf	141,f,c	;volatile
  5015                           
  5016                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 186:                         break;
  5017   00155A  EFF6  F00A         	goto	l3090
  5018   00155E                     l3080:
  5019                           
  5020                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 188:                         LATE &= ~ (1 << copyPinCF
      +                          G->Pin);
  5021   00155E  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  5022   001560  6ED9               	movwf	fsr2l,c
  5023   001562  6ADA               	clrf	fsr2h,c
  5024   001564  30DF               	rrcf	223,w,c
  5025   001566  32E8               	rrcf	wreg,f,c
  5026   001568  32E8               	rrcf	wreg,f,c
  5027   00156A  0B07               	andlw	7
  5028   00156C  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  5029   00156E  0E01               	movlw	1
  5030   001570  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  5031   001572  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  5032   001574  EFBE  F00A         	goto	u2064
  5033   001578                     u2065:
  5034   001578  90D8               	bcf	status,0,c
  5035   00157A  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  5036   00157C                     u2064:
  5037   00157C  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  5038   00157E  EFBC  F00A         	goto	u2065
  5039   001582  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  5040   001584  0AFF               	xorlw	255
  5041   001586  168D               	andwf	141,f,c	;volatile
  5042                           
  5043                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 189:                         break;
  5044   001588  EFF6  F00A         	goto	l3090
  5045   00158C                     l3084:
  5046   00158C  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  5047   00158E  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  5048   001590  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  5049                           
  5050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5051                           ; Switch size 1, requested type "simple"
  5052                           ; Number of cases is 1, Range of values is 0 to 0
  5053                           ; switch strategies available:
  5054                           ; Name         Instructions Cycles
  5055                           ; simple_byte            4     3 (average)
  5056                           ;	Chosen strategy is simple_byte
  5057   001592  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  5058   001594  0A00               	xorlw	0	; case 0
  5059   001596  B4D8               	btfsc	status,2,c
  5060   001598  EFD0  F00A         	goto	l4024
  5061   00159C  EF8E  F009         	goto	l3044
  5062   0015A0                     l4024:
  5063                           
  5064                           ; Switch size 1, requested type "simple"
  5065                           ; Number of cases is 2, Range of values is 0 to 1
  5066                           ; switch strategies available:
  5067                           ; Name         Instructions Cycles
  5068                           ; simple_byte            7     4 (average)
  5069                           ;	Chosen strategy is simple_byte
  5070   0015A0  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  5071   0015A2  0A00               	xorlw	0	; case 0
  5072   0015A4  B4D8               	btfsc	status,2,c
  5073   0015A6  EFAF  F00A         	goto	l3080
  5074   0015AA  0A01               	xorlw	1	; case 1
  5075   0015AC  B4D8               	btfsc	status,2,c
  5076   0015AE  EF99  F00A         	goto	l3078
  5077   0015B2  EF8E  F009         	goto	l3044
  5078   0015B6                     l3088:
  5079   0015B6  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  5080   0015B8  6ED9               	movwf	fsr2l,c
  5081   0015BA  6ADA               	clrf	fsr2h,c
  5082   0015BC  50DF               	movf	223,w,c
  5083   0015BE  0B07               	andlw	7
  5084                           
  5085                           ; Switch size 1, requested type "simple"
  5086                           ; Number of cases is 5, Range of values is 0 to 4
  5087                           ; switch strategies available:
  5088                           ; Name         Instructions Cycles
  5089                           ; simple_byte           16     9 (average)
  5090                           ;	Chosen strategy is simple_byte
  5091   0015C0  0A00               	xorlw	0	; case 0
  5092   0015C2  B4D8               	btfsc	status,2,c
  5093   0015C4  EFBE  F009         	goto	l3052
  5094   0015C8  0A01               	xorlw	1	; case 1
  5095   0015CA  B4D8               	btfsc	status,2,c
  5096   0015CC  EF00  F00A         	goto	l3060
  5097   0015D0  0A03               	xorlw	3	; case 2
  5098   0015D2  B4D8               	btfsc	status,2,c
  5099   0015D4  EF42  F00A         	goto	l3068
  5100   0015D8  0A01               	xorlw	1	; case 3
  5101   0015DA  B4D8               	btfsc	status,2,c
  5102   0015DC  EF84  F00A         	goto	l3076
  5103   0015E0  0A07               	xorlw	7	; case 4
  5104   0015E2  B4D8               	btfsc	status,2,c
  5105   0015E4  EFC6  F00A         	goto	l3084
  5106   0015E8  EF8E  F009         	goto	l3044
  5107   0015EC                     l3090:
  5108                           
  5109                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 200:     return retVal;
  5110   0015EC  5005               	movf	MCAL_GPIO_writePinStatus@retVal^0,w,c
  5111   0015EE  0012               	return		;funcret
  5112   0015F0                     __end_of_MCAL_GPIO_writePinStatus:
  5113                           	callstack 0
  5114                           
  5115                           	psect	rparam
  5116   000001                     ___rparam_used  equ	1
  5117   000000                     ___param_bank   equ	0
  5118   000000                     __Lparam        equ	__Lrparam
  5119   000000                     __Hparam        equ	__Hrparam
  5120                           
  5121                           	psect	config
  5122                           
  5123                           ; Padding undefined space
  5124   300000                     	org	3145728
  5125   300000  FF                 	db	255
  5126                           
  5127                           ;Config register CONFIG1H @ 0x300001
  5128                           ;	Oscillator Selection bits
  5129                           ;	OSC = HS, HS oscillator
  5130                           ;	Fail-Safe Clock Monitor Enable bit
  5131                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5132                           ;	Internal/External Oscillator Switchover bit
  5133                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5134   300001                     	org	3145729
  5135   300001  02                 	db	2
  5136                           
  5137                           ;Config register CONFIG2L @ 0x300002
  5138                           ;	Power-up Timer Enable bit
  5139                           ;	PWRT = OFF, PWRT disabled
  5140                           ;	Brown-out Reset Enable bits
  5141                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5142                           ;	Brown Out Reset Voltage bits
  5143                           ;	BORV = 1, 
  5144   300002                     	org	3145730
  5145   300002  09                 	db	9
  5146                           
  5147                           ;Config register CONFIG2H @ 0x300003
  5148                           ;	Watchdog Timer Enable bit
  5149                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5150                           ;	Watchdog Timer Postscale Select bits
  5151                           ;	WDTPS = 32768, 1:32768
  5152   300003                     	org	3145731
  5153   300003  1E                 	db	30
  5154                           
  5155                           ; Padding undefined space
  5156   300004                     	org	3145732
  5157   300004  FF                 	db	255
  5158                           
  5159                           ;Config register CONFIG3H @ 0x300005
  5160                           ;	CCP2 MUX bit
  5161                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5162                           ;	PORTB A/D Enable bit
  5163                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5164                           ;	Low-Power Timer1 Oscillator Enable bit
  5165                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5166                           ;	MCLR Pin Enable bit
  5167                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5168   300005                     	org	3145733
  5169   300005  81                 	db	129
  5170                           
  5171                           ;Config register CONFIG4L @ 0x300006
  5172                           ;	Stack Full/Underflow Reset Enable bit
  5173                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5174                           ;	Single-Supply ICSP Enable bit
  5175                           ;	LVP = OFF, Single-Supply ICSP disabled
  5176                           ;	Extended Instruction Set Enable bit
  5177                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5178                           ;	Background Debugger Enable bit
  5179                           ;	DEBUG = 0x1, unprogrammed default
  5180   300006                     	org	3145734
  5181   300006  81                 	db	129
  5182                           
  5183                           ; Padding undefined space
  5184   300007                     	org	3145735
  5185   300007  FF                 	db	255
  5186                           
  5187                           ;Config register CONFIG5L @ 0x300008
  5188                           ;	Code Protection bit
  5189                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5190                           ;	Code Protection bit
  5191                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5192                           ;	Code Protection bit
  5193                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5194                           ;	Code Protection bit
  5195                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5196   300008                     	org	3145736
  5197   300008  0F                 	db	15
  5198                           
  5199                           ;Config register CONFIG5H @ 0x300009
  5200                           ;	Boot Block Code Protection bit
  5201                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5202                           ;	Data EEPROM Code Protection bit
  5203                           ;	CPD = OFF, Data EEPROM not code-protected
  5204   300009                     	org	3145737
  5205   300009  C0                 	db	192
  5206                           
  5207                           ;Config register CONFIG6L @ 0x30000A
  5208                           ;	Write Protection bit
  5209                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5210                           ;	Write Protection bit
  5211                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5212                           ;	Write Protection bit
  5213                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5214                           ;	Write Protection bit
  5215                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5216   30000A                     	org	3145738
  5217   30000A  0F                 	db	15
  5218                           
  5219                           ;Config register CONFIG6H @ 0x30000B
  5220                           ;	Configuration Register Write Protection bit
  5221                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5222                           ;	Boot Block Write Protection bit
  5223                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5224                           ;	Data EEPROM Write Protection bit
  5225                           ;	WRTD = OFF, Data EEPROM not write-protected
  5226   30000B                     	org	3145739
  5227   30000B  E0                 	db	224
  5228                           
  5229                           ;Config register CONFIG7L @ 0x30000C
  5230                           ;	Table Read Protection bit
  5231                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5232                           ;	Table Read Protection bit
  5233                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5234                           ;	Table Read Protection bit
  5235                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5236                           ;	Table Read Protection bit
  5237                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5238   30000C                     	org	3145740
  5239   30000C  0F                 	db	15
  5240                           
  5241                           ;Config register CONFIG7H @ 0x30000D
  5242                           ;	Boot Block Table Read Protection bit
  5243                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5244   30000D                     	org	3145741
  5245   30000D  40                 	db	64
  5246                           tosu	equ	0xFFF
  5247                           tosh	equ	0xFFE
  5248                           tosl	equ	0xFFD
  5249                           stkptr	equ	0xFFC
  5250                           pclatu	equ	0xFFB
  5251                           pclath	equ	0xFFA
  5252                           pcl	equ	0xFF9
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           prodh	equ	0xFF4
  5258                           prodl	equ	0xFF3
  5259                           indf0	equ	0xFEF
  5260                           postinc0	equ	0xFEE
  5261                           postdec0	equ	0xFED
  5262                           preinc0	equ	0xFEC
  5263                           plusw0	equ	0xFEB
  5264                           fsr0h	equ	0xFEA
  5265                           fsr0l	equ	0xFE9
  5266                           wreg	equ	0xFE8
  5267                           indf1	equ	0xFE7
  5268                           postinc1	equ	0xFE6
  5269                           postdec1	equ	0xFE5
  5270                           preinc1	equ	0xFE4
  5271                           plusw1	equ	0xFE3
  5272                           fsr1h	equ	0xFE2
  5273                           fsr1l	equ	0xFE1
  5274                           bsr	equ	0xFE0
  5275                           indf2	equ	0xFDF
  5276                           postinc2	equ	0xFDE
  5277                           postdec2	equ	0xFDD
  5278                           preinc2	equ	0xFDC
  5279                           plusw2	equ	0xFDB
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        37
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45     104
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    HALL_LCD_8bit_init@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendChar@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendCMD@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendSTR@copyData	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    HALL_LCD_8bit_sendSTR@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_convertU8toSTR@copySTR	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    INTERRUPT_INTx_ClearFlag@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTx_Disable@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTx_EdgInit@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTx_Enable@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTx_PinInit@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTx_PrioretyInit@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    LCD_sendEnableSignal8Bits@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    MCAL_GPIO_init@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), LCD1_8Bit$LCD_D(COMRAM[8]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    Mcal_GPIO_initPinDirection@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_BTN_init@copyBTN(COMRAM[2]), HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), 
		 -> LCD1_8Bit$LCD_D(COMRAM[8]), MCAL_INTERRUPT_INTx_init@copyINTx(COMRAM[2]), objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    MCAL_GPIO_writePinStatus@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Led_trunOFF@objLed(COMRAM[1]), HALL_Led_trunON@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), 
		 -> HALL_Relay_turnOFF@objPin(COMRAM[1]), HALL_Relay_turnON@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), LCD1_8Bit$LCD_D(COMRAM[8]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    MCAL_INTERRUPT_INTx_init@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    memset@dest	PTR void  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    RetValue_BTN	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    RetValue_KeyPad	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1623$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    S1623$source	PTR const unsigned char  size(2) Largest target is 0

    S912$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_HALL_LCD_convertU8toSTR
    _HALL_LCD_convertU8toSTR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _HALL_LCD_8bit_sendSTR->_HALL_LCD_8bit_sendChar
    _HALL_LCD_8bit_sendChar->_LCD_sendEnableSignal8Bits
    _HALL_LCD_8bit_init->_HALL_LCD_8bit_sendCMD
    _MCAL_GPIO_init->_MCAL_GPIO_writePinStatus
    _HALL_LCD_8bit_sendCMD->_LCD_sendEnableSignal8Bits
    _LCD_sendEnableSignal8Bits->_MCAL_GPIO_writePinStatus

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5840
                 _HALL_LCD_8bit_init
              _HALL_LCD_8bit_sendSTR
            _HALL_LCD_convertU8toSTR
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_convertU8toSTR                              3     2      1    1974
                                             43 COMRAM     2     1      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6    1764
                                             25 COMRAM    18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    1559
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    1434
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     230
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     105
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_8bit_sendSTR                                3     1      2    1300
                                             11 COMRAM     2     0      2
             _HALL_LCD_8bit_sendChar
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_8bit_sendChar                               6     4      2    1200
                                              6 COMRAM     5     3      2
          _LCD_sendEnableSignal8Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_8bit_init                                   4     3      1    2566
                                             11 COMRAM     3     2      1
              _HALL_LCD_8bit_sendCMD
                     _MCAL_GPIO_init
 ---------------------------------------------------------------------------------
 (2) _MCAL_GPIO_init                                       2     1      1     982
                                              5 COMRAM     2     1      1
           _MCAL_GPIO_writePinStatus
         _Mcal_GPIO_initPinDirection
 ---------------------------------------------------------------------------------
 (3) _Mcal_GPIO_initPinDirection                           4     3      1     403
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_8bit_sendCMD                                6     4      2    1220
                                              6 COMRAM     5     3      2
          _LCD_sendEnableSignal8Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _LCD_sendEnableSignal8Bits                            2     1      1     519
                                              5 COMRAM     1     0      1
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _MCAL_GPIO_writePinStatus                             5     3      2     466
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HALL_LCD_8bit_init
     _HALL_LCD_8bit_sendCMD
       _LCD_sendEnableSignal8Bits
         _MCAL_GPIO_writePinStatus
       _MCAL_GPIO_writePinStatus
     _MCAL_GPIO_init
       _MCAL_GPIO_writePinStatus
       _Mcal_GPIO_initPinDirection
   _HALL_LCD_8bit_sendSTR
     _HALL_LCD_8bit_sendChar
       _LCD_sendEnableSignal8Bits
       _MCAL_GPIO_writePinStatus
   _HALL_LCD_convertU8toSTR
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0      32     25.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     45     104     81.9%
BITBIGSFRlh        102      0       0      0.0%
BITBIGSFRh          15      0       0      0.0%
BITBIGSFRll          4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     136      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Oct 25 01:38:59 2024

                     ??_MCAL_GPIO_init 0007                                     l33 1D5A  
                                   l34 1D5A                           ___awdiv@sign 0006  
                                  l200 187E                                    l214 1B00  
                                  l207 1B68                                    l227 1C2C  
                                  l252 1BEC                                    l271 1DA6  
                                  l523 1CA2                                    l439 1306  
                                  l490 15EE                                    l950 19EE  
                                  l937 1940                                    _Num 0048  
                                  _abs 1CD8                           ___awmod@sign 0006  
                                  wreg 0FE8           HALL_LCD_8bit_sendCMD@Counter 000B  
                                 ?_abs 0007                                   l3000 1974  
                                 l3010 19BA                                   l3002 1986  
                                 l3020 19E6                                   l3012 19C2  
                                 l3004 198E                                   l3014 19C8  
                                 l3006 1996                                   l3030 1A1A  
                                 l3200 1248                                   l3008 19A4  
                                 l3016 19CE                                   l3040 1CE6  
                                 l3032 1A36                                   l3024 19F0  
                                 l3120 1626                                   l1441 1D0A  
                                 l3042 1308                                   l3202 1276  
                                 l3210 12CE                                   l3018 19DE  
                                 l3034 1A68                                   l3026 1A00  
                                 l3130 1684                                   l3122 162A  
                                 l3114 15F0                                   l1434 1C6A  
                                 l4020 1498                                   l3060 1400  
                                 l3052 137C                                   l3044 131C  
                                 l3220 1D94                                   l3212 1304  
                                 l3300 1D1E                                   l3028 1A10  
                                 l1428 17A6                                   l3140 1704  
                                 l3132 168E                                   l3124 1634  
                                 l3116 1612                                   l1453 1A98  
                                 l4022 151C                                   l3070 14AE  
                                 l3062 142A                                   l3054 13A6  
                                 l3046 1322                                   l3222 1D9A  
                                 l3206 12A2                                   l3302 1D20  
                                 l1438 1CF2                                   l3038 1CD8  
                                 l3150 1760                                   l3142 1714  
                                 l3134 16A6                                   l3126 1650  
                                 l3118 161A                                   l3230 1C46  
                                 l1390 1CD6                                   l3310 1CBC  
                                 l1383 1D3A                                   l4024 15A0  
                                 l3080 155E                                   l3072 14DA  
                                 l3064 1456                                   l3056 13D2  
                                 l4016 1390                                   l3048 134E  
                                 l3216 1D88                                   l3240 1C80  
                                 l3320 17B8                                   l1464 1DA8  
                                 l3144 1724                                   l3152 1762  
                                 l3136 16D6                                   l3128 166C  
                                 l3232 1C62                                   l3312 1CCC  
                                 l3304 1CA4                                   l4018 1414  
                                 l3090 15EC                                   l3218 1D88  
                                 l3250 1B16                                   l3170 105E  
                                 l3330 17CE                                   l3322 17BC  
                                 l3146 1734                                   l3138 16F2  
                                 l3154 1778                                   l3226 1C2E  
                                 l3306 1CAC                                   l3084 158C  
                                 l3076 1508                                   l3068 1484  
                                 l3260 1B4E                                   l3252 1B22  
                                 l3244 1B02                                   l3164 1016  
                                 l3236 1C6C                                   l3340 1808  
                                 l3332 17DA                                   l3324 17CC  
                                 l3316 17A8                                   l3148 1746  
                                 l3228 1C36                                   l3308 1CB4  
                                 l3420 1D4E                                   l3078 1532  
                                 l3262 1B50                                   l3246 1B02  
                                 l3190 1196                                   l3182 1110  
                                 l3174 108A                                   l3166 102A  
                                 l3238 1C7C                                   l3350 184E  
                                 l3342 1824                                   l3334 17DC  
                                 l3318 17A8                                   l3270 1A9A  
                                 l3158 1784                                   l3088 15B6  
                                 l3264 1B60                                   l3248 1B12  
                                 l3192 11C2                                   l3184 113C  
                                 l3176 10B6                                   l3168 1030  
                                 l3352 185A                                   l3344 182A  
                                 l3336 17EC                                   l3272 1A9A  
                                 l3416 1D3C                                   l3266 1B68  
                                 l3258 1B24                                   l3194 11F0  
                                 l3186 116A                                   l3178 10E4  
                                 l3354 1866                                   l3346 1836  
                                 l3338 17FC                                   l3290 1AF8  
                                 l3274 1AAA                                   l3370 1BDA  
                                 l3362 1BAE                                   l3418 1D44  
                                 l3356 1872                                   l3348 1842  
                                 l3292 1B00                                   l3284 1ABC  
                                 l3276 1AAE                                   l3380 1BFE  
                                 l3372 1BEC                                   l3364 1BAE  
                                 l3198 121C                                   l3358 187E  
                                 l3286 1AE6                                   l3278 1ABA  
                                 l3382 1C02                                   l3366 1BBE  
                                 l3288 1AE8                                   l3384 1C14  
                                 l3376 1BEE                                   l3296 1D0C  
                                 l3368 1BC2                                   l3386 1C16  
                                 l3378 1BEE                                   l3298 1D14  
                                 l3388 1C2C                                   l2950 1898  
                                 l2960 18BE                                   l2952 189C  
                                 l2944 1880                                   l2970 18F4  
                                 l2962 18D0                                   l2954 18AA  
                                 l2946 1882                                   l2972 190A  
                                 l2964 18D8                                   l2980 1920  
                                 l2956 18B2                                   l2948 1890  
                                 l2982 1930                                   l2974 1912  
                                 l2966 18E0                                   l2958 18B6  
                                 l2990 1944                                   l2984 1938  
                                 l2976 1914                                   l2968 18EE  
                                 l2992 1952                                   l2978 191A  
                                 l2994 195A                                   l2996 195E  
                                 l2988 1942                                   l2998 196C  
                                 STR_1 1011                                   _BTN1 0041  
                                 u2004 13F0                                   u2100 16A2  
                                 u2005 13EC                                   u2101 169C  
                                 u2014 1448                                   u2110 16A4  
                                 u2015 1444                                   u2024 1474  
                                 u2200 10A0                                   u2120 1704  
                                 u2025 1470                                   u2201 109A  
                                 u2121 1700                                   u2034 14CC  
                                 u2130 1714                                   u2035 14C8  
                                 u2131 1710                                   u2044 14F8  
                                 u2140 1724                                   u2045 14F4  
                                 u2141 1720                                   _LATA 0F89  
                                 u2054 1550                                   u2230 1126  
                                 u2214 10D4                                   u2206 10A2  
                                 u2150 1734                                   u2070 1612  
                                 _LATB 0F8A                                   u2055 154C  
                                 u2231 1120                                   u2215 10D0  
                                 u3007 17F2                                   u2151 1730  
                                 u2071 160E                                   _LATC 0F8B  
                                 u2064 157C                                   u2320 12B8  
                                 u2304 1266                                   u2224 1102  
                                 u2400 1AF8                                   u2160 1774  
                                 u2080 1650                                   _LATD 0F8C  
                                 u2065 1578                                   u2321 12B2  
                                 u2305 1262                                   u2225 10FE  
                                 u3017 180E                                   u2401 1AF4  
                                 u2161 1770                                   u2081 164C  
                                 _LATE 0F8D                                   u2314 1294  
                                 u2170 102A                                   u2410 1D3A  
                                 u2090 166C                                   u2330 1C62  
                                 u2315 1290                                   u2171 1026  
                                 u3027 1826                                   u2411 1D36  
                                 u2091 1668                                   u2331 1C5E  
                                 u2260 11AC                                   u2244 115A  
                                 u2236 1128                                   u2340 1C7C  
                                 u2420 17B8                                   u2261 11A6  
                                 u2245 1156                                   u2341 1C78  
                                 u2421 17B4                                   u2350 1B12  
                                 u2326 12BA                                   u2254 1188  
                                 u2430 17EC                                   u2351 1B0E  
                                 u2255 1184                                   u2431 17E8  
                                 u2184 104E                                   u1800 18AA  
                                 u2440 1BBE                                   u2185 104A  
                                 u1801 18A6                                   u2441 1BBA  
                                 u2370 1B60                                   u2290 1232  
                                 u2274 11E0                                   u2266 11AE  
                                 u2194 107C                                   u2450 1BFE  
                                 u1810 18D0                                   u2371 1B5C  
                                 u2291 122C                                   u2275 11DC  
                                 u2195 1078                                   u2451 1BFA  
                                 u1811 18CC                                   u2364 1B3E  
                                 u2284 120E                                   u2380 1AAA  
                                 u2460 1C2C                                   u1820 18EE  
                                 u1900 19DE                                   u2365 1B3A  
                                 u2285 120A                                   u2381 1AA6  
                                 u2461 1C28                                   u1821 18EA  
                                 u1901 19DA                                   u1830 190A  
                                 u1910 1A00                                   u1831 1906  
                                 u1911 19FC                                   u2296 1234  
                                 u1840 1930                                   u1920 1A10  
                                 u1841 192C                                   u1921 1A0C  
                                 u2394 1AD6                                   u1850 1952  
                                 u1930 1A36                                   u2395 1AD2  
                                 u1851 194E                                   u1931 1A32  
                                 u1860 196C                                   u1940 1A68  
                                 u1861 1968                                   u1941 1A64  
                                 u1790 1890                                   u1870 1986  
                                 u1950 1CE6                                   u1791 188C  
                                 u1871 1982                                   u1951 1CE2  
                                 u1960 131C                                   u1880 19A4  
                                 u1961 1318                                   u1881 19A0  
                                 u1890 19BA                                   u1891 19B6  
                                 u1974 1340                                   u1975 133C  
                                 u1984 136C                                   u1985 1368  
                                 u1994 13C4                                   u1995 13C0  
                                 _Seg1 003C                                   abs@a 0007  
                                 _dbuf 0080                                   _main 1D3C  
                                 _prec 0055                                   fsr1h 0FE2  
                                 fsr2h 0FDA                                   indf2 0FDF  
                                 fsr1l 0FE1                                   fsr2l 0FD9  
                                 start 0000           HALL_LCD_8bit_sendCMD@copyCMD 0008  
         HALL_LCD_8bit_sendCMD@copyLCD 0007                  _HALL_LCD_8bit_sendCMD 1B02  
                         ___param_bank 0000                  _HALL_LCD_8bit_sendSTR 1BEE  
                                ??_abs 0009                                  ?_main 0001  
                      __end_of___awdiv 1942                        __end_of___awmod 19F0  
                      ___awdiv@divisor 0003                        ___awdiv@counter 0005  
                         vfpfcnvrt@fmt 000C                                  _PORTA 0F80  
                                _PORTB 0F81                                  _PORTC 0F82  
                                _PORTD 0F83                                  _PORTE 0F84  
                                _TRISA 0F92                                  _TRISB 0F93  
                                _TRISC 0F94                                  _TRISD 0F95  
                                _TRISE 0F96             ?_LCD_sendEnableSignal8Bits 0006  
                                _flags 005B                                  _fputc 19F0  
       HALL_LCD_convertU8toSTR@copySTR 002C                                  _width 0053  
                                _putch 1DA8                                  tablat 0FF5  
                                status 0FD8                        __end_of_sprintf 1CD8  
                       _objPin_motor_1 0068                         _objPin_motor_2 0067  
                      __initialization 1B6A                           __end_of_main 1D62  
               _HALL_LCD_8bit_sendChar 1A9A       __end_of_MCAL_GPIO_writePinStatus 15F0  
                               ??_main 002E                          __activetblptr 0002  
    __end_of_LCD_sendEnableSignal8Bits 1DA8                                 ?_fputc 0001  
                     ___awdiv@dividend 0001                                 ?_putch 0001  
                        vfpfcnvrt@done 000F   Mcal_GPIO_initPinDirection@copyPinCFG 0001  
               ?_HALL_LCD_8bit_sendCMD 0007                 ?_HALL_LCD_8bit_sendSTR 000C  
                               _NumArr 0063                                 _Motor1 0046  
                               _Motor2 0044                           vfprintf@cfmt 0019  
     HALL_LCD_convertU8toSTR@copyValue 002D                              ??___awdiv 0005  
                            ??___awmod 0005                                 _memset 1D0C  
                               clear_0 1B90                                 clear_1 1B9C  
                     ___awdiv@quotient 0007                        ___awmod@divisor 0003  
                               isa$std 0001                        ___awmod@counter 0005  
         ??_Mcal_GPIO_initPinDirection 0002                _HALL_LCD_convertU8toSTR 1BAC  
                               fputc@c 0001                           __pdataCOMRAM 002E  
              HALL_Relay_turnOFF@F3064 005C                           __mediumconst 0000  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                                 putch@c 0001  
                     __end_of_vfprintf 1C6C                              ??_sprintf 0020  
                           __accesstop 0080                __end_of__initialization 1BA2  
                        ___rparam_used 0001                         __pcstackCOMRAM 0001  
                        __end_of_fputc 1A9A                          __end_of_putch 1DAA  
             _MCAL_GPIO_writePinStatus 1308                                ??_fputc 0004  
                              ??_putch 0001                             __pbssBANK0 0080  
MCAL_GPIO_writePinStatus@copyStatusPin 0002     MCAL_GPIO_writePinStatus@copyPinCFG 0001  
                              ?_memset 0001              ??_HALL_LCD_convertU8toSTR 002D  
          ??_LCD_sendEnableSignal8Bits 0007         MCAL_GPIO_writePinStatus@retVal 0005  
                              _KeyPad1 002E                ?_HALL_LCD_8bit_sendChar 0007  
                              __Hparam 0000                                __Lparam 0000  
                    __end_of_btn_Value 1011                                ___awdiv 1880  
                              ___awmod 1942                              _LCD1_4Bit 0036  
                            _LCD1_8Bit 0049                              ?_vfprintf 0016  
                         __psmallconst 1000     __end_of_Mcal_GPIO_initPinDirection 1308  
           _Mcal_GPIO_initPinDirection 1016                                __pcinit 1B6A  
                              __ramtop 1000                                __ptext0 1D3C  
                              __ptext1 1BAC                                __ptext2 1CA4  
                              __ptext3 1C2E                                __ptext4 15F0  
                              __ptext5 19F0                                __ptext6 1DA8  
                              __ptext7 1CD8                                __ptext8 1942  
                              __ptext9 1880                       ___awmod@dividend 0001  
                              _sprintf 1CA4                   end_of_initialization 1BA2  
                 HALL_Led_trunON@F3065 0061                                fputc@fp 0003  
              ??_HALL_LCD_8bit_sendCMD 0009                                memset@c 0002  
                              memset@n 0004                                memset@p 0006  
                        __Lmediumconst 0000                ??_HALL_LCD_8bit_sendSTR 000E  
         HALL_LCD_8bit_sendSTR@copyLCD 000C         __end_of_HALL_LCD_8bit_sendChar 1B02  
            _LCD_sendEnableSignal8Bits 1D88             __end_of_HALL_LCD_8bit_init 1880  
                    __end_of_vfpfcnvrt 17A8                                postdec1 0FE5  
                              postdec2 0FDD                                postinc0 0FEE  
                              postinc1 0FE6                                postinc2 0FDE  
                     vfpfcnvrt@convarg 0011                             ??_vfprintf 0019  
        HALL_LCD_8bit_sendSTR@copyData 000D          HALL_LCD_8bit_sendChar@Counter 000B  
             HALL_Led_trunToggle@F3075 005F             ??_MCAL_GPIO_writePinStatus 0003  
                          vfpfcnvrt@ap 000D                            vfpfcnvrt@cp 0010  
                          vfpfcnvrt@fp 000B          HALL_LCD_8bit_sendChar@copyLCD 0007  
                        __pidataCOMRAM 1D62                         __end_of_memset 1D3C  
     Mcal_GPIO_initPinDirection@retVal 0004                    start_initialization 1B6A  
                          __end_of_abs 1D0C                        _RetValue_KeyPad 0059  
                          vfprintf@fmt 0017                               ??_memset 0006  
                           memset@dest 0001                 HALL_Relay_turnON@F3059 005D  
                       _MCAL_GPIO_init 1C6C                            __pbssCOMRAM 0053  
                             ?___awdiv 0001                               ?___awmod 0001  
                            _btn_Value 1001            ?_Mcal_GPIO_initPinDirection 0001  
               __end_of_MCAL_GPIO_init 1CA4         HALL_LCD_8bit_sendChar@copyData 0008  
                          __smallconst 1000                           _RetValue_BTN 0057  
                             ?_sprintf 001A       LCD_sendEnableSignal8Bits@copyLCD 0006  
        __end_of_HALL_LCD_8bit_sendCMD 1B6A          __end_of_HALL_LCD_8bit_sendSTR 1C2E  
             ?_HALL_LCD_convertU8toSTR 002C                              _vfpfcnvrt 15F0  
                      ?_MCAL_GPIO_init 0006                   HALL_Relay_init@F3054 005E  
                   _HALL_LCD_8bit_init 17A8                             vfpfcnvrt@c 0015  
                  ?_HALL_LCD_8bit_init 000C                            _INTCON2bits 0FF1  
                          _INTCON3bits 0FF0                              copy_data0 1B7E  
                             __Hrparam 0000                             vfprintf@ap 0018  
                             __Lrparam 0000                             vfprintf@fp 0016  
                 ??_HALL_LCD_8bit_init 000D                   MCAL_GPIO_init@retVal 0007  
                           ?_vfpfcnvrt 000B                             sprintf@fmt 001B  
                             __ptext10 1D0C                               __ptext11 1BEE  
                             __ptext12 1A9A                               __ptext13 17A8  
                             __ptext14 1C6C                               __ptext15 1016  
                             __ptext16 1B02                               __ptext17 1D88  
                             __ptext18 1308        __end_of_HALL_LCD_convertU8toSTR 1BEE  
            HALL_LCD_8bit_init@Counter 000E                               isa$xinst 0000  
                             _vfprintf 1C2E                  HALL_Led_trunOFF@F3070 0060  
                           _INTCONbits 0FF2              HALL_LCD_8bit_init@copyLCD 000C  
            ?_MCAL_GPIO_writePinStatus 0001               ??_HALL_LCD_8bit_sendChar 0009  
                            sprintf@ap 0020                            ??_vfpfcnvrt 000E  
             MCAL_GPIO_init@copyPinCFG 0006                               sprintf@f 0021  
                             sprintf@s 001A                     HALL_Led_init@F3060 0062  
