

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Nov 17 07:26:19 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,inline
    23                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,inline
    24                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,inline
    25                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Generated 17/10/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4620 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000FE0                     bsr             equ	4064
   104   000FE9                     fsr0            equ	4073
   105   000FEA                     fsr0h           equ	4074
   106   000FE9                     fsr0l           equ	4073
   107   000FE1                     fsr1            equ	4065
   108   000FE2                     fsr1h           equ	4066
   109   000FE1                     fsr1l           equ	4065
   110   000FD9                     fsr2            equ	4057
   111   000FDA                     fsr2h           equ	4058
   112   000FD9                     fsr2l           equ	4057
   113   000FEF                     indf0           equ	4079
   114   000FE7                     indf1           equ	4071
   115   000FDF                     indf2           equ	4063
   116   000FF2                     intcon          equ	4082
   117   000000                     nvmcon          equ	0
   118   000FF9                     pcl             equ	4089
   119   000FFA                     pclath          equ	4090
   120   000FFB                     pclatu          equ	4091
   121   000FEB                     plusw0          equ	4075
   122   000FE3                     plusw1          equ	4067
   123   000FDB                     plusw2          equ	4059
   124   000FED                     postdec0        equ	4077
   125   000FE5                     postdec1        equ	4069
   126   000FDD                     postdec2        equ	4061
   127   000FEE                     postinc0        equ	4078
   128   000FE6                     postinc1        equ	4070
   129   000FDE                     postinc2        equ	4062
   130   000FEC                     preinc0         equ	4076
   131   000FE4                     preinc1         equ	4068
   132   000FDC                     preinc2         equ	4060
   133   000FF3                     prod            equ	4083
   134   000FF4                     prodh           equ	4084
   135   000FF3                     prodl           equ	4083
   136   000FD8                     status          equ	4056
   137   000FF5                     tablat          equ	4085
   138   000FF6                     tblptr          equ	4086
   139   000FF7                     tblptrh         equ	4087
   140   000FF6                     tblptrl         equ	4086
   141   000FF8                     tblptru         equ	4088
   142   000FFD                     tosl            equ	4093
   143   000FE8                     wreg            equ	4072
   144   000F80                     PORTA           equ	3968	;# 
   145   000F81                     PORTB           equ	3969	;# 
   146   000F82                     PORTC           equ	3970	;# 
   147   000F83                     PORTD           equ	3971	;# 
   148   000F84                     PORTE           equ	3972	;# 
   149   000F89                     LATA            equ	3977	;# 
   150   000F8A                     LATB            equ	3978	;# 
   151   000F8B                     LATC            equ	3979	;# 
   152   000F8C                     LATD            equ	3980	;# 
   153   000F8D                     LATE            equ	3981	;# 
   154   000F92                     TRISA           equ	3986	;# 
   155   000F92                     DDRA            equ	3986	;# 
   156   000F93                     TRISB           equ	3987	;# 
   157   000F93                     DDRB            equ	3987	;# 
   158   000F94                     TRISC           equ	3988	;# 
   159   000F94                     DDRC            equ	3988	;# 
   160   000F95                     TRISD           equ	3989	;# 
   161   000F95                     DDRD            equ	3989	;# 
   162   000F96                     TRISE           equ	3990	;# 
   163   000F96                     DDRE            equ	3990	;# 
   164   000F9B                     OSCTUNE         equ	3995	;# 
   165   000F9D                     PIE1            equ	3997	;# 
   166   000F9E                     PIR1            equ	3998	;# 
   167   000F9F                     IPR1            equ	3999	;# 
   168   000FA0                     PIE2            equ	4000	;# 
   169   000FA1                     PIR2            equ	4001	;# 
   170   000FA2                     IPR2            equ	4002	;# 
   171   000FA6                     EECON1          equ	4006	;# 
   172   000FA7                     EECON2          equ	4007	;# 
   173   000FA8                     EEDATA          equ	4008	;# 
   174   000FA9                     EEADR           equ	4009	;# 
   175   000FAA                     EEADRH          equ	4010	;# 
   176   000FAB                     RCSTA           equ	4011	;# 
   177   000FAB                     RCSTA1          equ	4011	;# 
   178   000FAC                     TXSTA           equ	4012	;# 
   179   000FAC                     TXSTA1          equ	4012	;# 
   180   000FAD                     TXREG           equ	4013	;# 
   181   000FAD                     TXREG1          equ	4013	;# 
   182   000FAE                     RCREG           equ	4014	;# 
   183   000FAE                     RCREG1          equ	4014	;# 
   184   000FAF                     SPBRG           equ	4015	;# 
   185   000FAF                     SPBRG1          equ	4015	;# 
   186   000FB0                     SPBRGH          equ	4016	;# 
   187   000FB1                     T3CON           equ	4017	;# 
   188   000FB2                     TMR3            equ	4018	;# 
   189   000FB2                     TMR3L           equ	4018	;# 
   190   000FB3                     TMR3H           equ	4019	;# 
   191   000FB4                     CMCON           equ	4020	;# 
   192   000FB5                     CVRCON          equ	4021	;# 
   193   000FB6                     ECCP1AS         equ	4022	;# 
   194   000FB7                     PWM1CON         equ	4023	;# 
   195   000FB8                     BAUDCON         equ	4024	;# 
   196   000FB8                     BAUDCTL         equ	4024	;# 
   197   000FBA                     CCP2CON         equ	4026	;# 
   198   000FBB                     CCPR2           equ	4027	;# 
   199   000FBB                     CCPR2L          equ	4027	;# 
   200   000FBC                     CCPR2H          equ	4028	;# 
   201   000FBD                     CCP1CON         equ	4029	;# 
   202   000FBE                     CCPR1           equ	4030	;# 
   203   000FBE                     CCPR1L          equ	4030	;# 
   204   000FBF                     CCPR1H          equ	4031	;# 
   205   000FC0                     ADCON2          equ	4032	;# 
   206   000FC1                     ADCON1          equ	4033	;# 
   207   000FC2                     ADCON0          equ	4034	;# 
   208   000FC3                     ADRES           equ	4035	;# 
   209   000FC3                     ADRESL          equ	4035	;# 
   210   000FC4                     ADRESH          equ	4036	;# 
   211   000FC5                     SSPCON2         equ	4037	;# 
   212   000FC6                     SSPCON1         equ	4038	;# 
   213   000FC7                     SSPSTAT         equ	4039	;# 
   214   000FC8                     SSPADD          equ	4040	;# 
   215   000FC9                     SSPBUF          equ	4041	;# 
   216   000FCA                     T2CON           equ	4042	;# 
   217   000FCB                     PR2             equ	4043	;# 
   218   000FCB                     MEMCON          equ	4043	;# 
   219   000FCC                     TMR2            equ	4044	;# 
   220   000FCD                     T1CON           equ	4045	;# 
   221   000FCE                     TMR1            equ	4046	;# 
   222   000FCE                     TMR1L           equ	4046	;# 
   223   000FCF                     TMR1H           equ	4047	;# 
   224   000FD0                     RCON            equ	4048	;# 
   225   000FD1                     WDTCON          equ	4049	;# 
   226   000FD2                     HLVDCON         equ	4050	;# 
   227   000FD2                     LVDCON          equ	4050	;# 
   228   000FD3                     OSCCON          equ	4051	;# 
   229   000FD5                     T0CON           equ	4053	;# 
   230   000FD6                     TMR0            equ	4054	;# 
   231   000FD6                     TMR0L           equ	4054	;# 
   232   000FD7                     TMR0H           equ	4055	;# 
   233   000FD8                     STATUS          equ	4056	;# 
   234   000FD9                     FSR2            equ	4057	;# 
   235   000FD9                     FSR2L           equ	4057	;# 
   236   000FDA                     FSR2H           equ	4058	;# 
   237   000FDB                     PLUSW2          equ	4059	;# 
   238   000FDC                     PREINC2         equ	4060	;# 
   239   000FDD                     POSTDEC2        equ	4061	;# 
   240   000FDE                     POSTINC2        equ	4062	;# 
   241   000FDF                     INDF2           equ	4063	;# 
   242   000FE0                     BSR             equ	4064	;# 
   243   000FE1                     FSR1            equ	4065	;# 
   244   000FE1                     FSR1L           equ	4065	;# 
   245   000FE2                     FSR1H           equ	4066	;# 
   246   000FE3                     PLUSW1          equ	4067	;# 
   247   000FE4                     PREINC1         equ	4068	;# 
   248   000FE5                     POSTDEC1        equ	4069	;# 
   249   000FE6                     POSTINC1        equ	4070	;# 
   250   000FE7                     INDF1           equ	4071	;# 
   251   000FE8                     WREG            equ	4072	;# 
   252   000FE9                     FSR0            equ	4073	;# 
   253   000FE9                     FSR0L           equ	4073	;# 
   254   000FEA                     FSR0H           equ	4074	;# 
   255   000FEB                     PLUSW0          equ	4075	;# 
   256   000FEC                     PREINC0         equ	4076	;# 
   257   000FED                     POSTDEC0        equ	4077	;# 
   258   000FEE                     POSTINC0        equ	4078	;# 
   259   000FEF                     INDF0           equ	4079	;# 
   260   000FF0                     INTCON3         equ	4080	;# 
   261   000FF1                     INTCON2         equ	4081	;# 
   262   000FF2                     INTCON          equ	4082	;# 
   263   000FF3                     PROD            equ	4083	;# 
   264   000FF3                     PRODL           equ	4083	;# 
   265   000FF4                     PRODH           equ	4084	;# 
   266   000FF5                     TABLAT          equ	4085	;# 
   267   000FF6                     TBLPTR          equ	4086	;# 
   268   000FF6                     TBLPTRL         equ	4086	;# 
   269   000FF7                     TBLPTRH         equ	4087	;# 
   270   000FF8                     TBLPTRU         equ	4088	;# 
   271   000FF9                     PCLAT           equ	4089	;# 
   272   000FF9                     PC              equ	4089	;# 
   273   000FF9                     PCL             equ	4089	;# 
   274   000FFA                     PCLATH          equ	4090	;# 
   275   000FFB                     PCLATU          equ	4091	;# 
   276   000FFC                     STKPTR          equ	4092	;# 
   277   000FFD                     TOS             equ	4093	;# 
   278   000FFD                     TOSL            equ	4093	;# 
   279   000FFE                     TOSH            equ	4094	;# 
   280   000FFF                     TOSU            equ	4095	;# 
   281   000F80                     PORTA           equ	3968	;# 
   282   000F81                     PORTB           equ	3969	;# 
   283   000F82                     PORTC           equ	3970	;# 
   284   000F83                     PORTD           equ	3971	;# 
   285   000F84                     PORTE           equ	3972	;# 
   286   000F89                     LATA            equ	3977	;# 
   287   000F8A                     LATB            equ	3978	;# 
   288   000F8B                     LATC            equ	3979	;# 
   289   000F8C                     LATD            equ	3980	;# 
   290   000F8D                     LATE            equ	3981	;# 
   291   000F92                     TRISA           equ	3986	;# 
   292   000F92                     DDRA            equ	3986	;# 
   293   000F93                     TRISB           equ	3987	;# 
   294   000F93                     DDRB            equ	3987	;# 
   295   000F94                     TRISC           equ	3988	;# 
   296   000F94                     DDRC            equ	3988	;# 
   297   000F95                     TRISD           equ	3989	;# 
   298   000F95                     DDRD            equ	3989	;# 
   299   000F96                     TRISE           equ	3990	;# 
   300   000F96                     DDRE            equ	3990	;# 
   301   000F9B                     OSCTUNE         equ	3995	;# 
   302   000F9D                     PIE1            equ	3997	;# 
   303   000F9E                     PIR1            equ	3998	;# 
   304   000F9F                     IPR1            equ	3999	;# 
   305   000FA0                     PIE2            equ	4000	;# 
   306   000FA1                     PIR2            equ	4001	;# 
   307   000FA2                     IPR2            equ	4002	;# 
   308   000FA6                     EECON1          equ	4006	;# 
   309   000FA7                     EECON2          equ	4007	;# 
   310   000FA8                     EEDATA          equ	4008	;# 
   311   000FA9                     EEADR           equ	4009	;# 
   312   000FAA                     EEADRH          equ	4010	;# 
   313   000FAB                     RCSTA           equ	4011	;# 
   314   000FAB                     RCSTA1          equ	4011	;# 
   315   000FAC                     TXSTA           equ	4012	;# 
   316   000FAC                     TXSTA1          equ	4012	;# 
   317   000FAD                     TXREG           equ	4013	;# 
   318   000FAD                     TXREG1          equ	4013	;# 
   319   000FAE                     RCREG           equ	4014	;# 
   320   000FAE                     RCREG1          equ	4014	;# 
   321   000FAF                     SPBRG           equ	4015	;# 
   322   000FAF                     SPBRG1          equ	4015	;# 
   323   000FB0                     SPBRGH          equ	4016	;# 
   324   000FB1                     T3CON           equ	4017	;# 
   325   000FB2                     TMR3            equ	4018	;# 
   326   000FB2                     TMR3L           equ	4018	;# 
   327   000FB3                     TMR3H           equ	4019	;# 
   328   000FB4                     CMCON           equ	4020	;# 
   329   000FB5                     CVRCON          equ	4021	;# 
   330   000FB6                     ECCP1AS         equ	4022	;# 
   331   000FB7                     PWM1CON         equ	4023	;# 
   332   000FB8                     BAUDCON         equ	4024	;# 
   333   000FB8                     BAUDCTL         equ	4024	;# 
   334   000FBA                     CCP2CON         equ	4026	;# 
   335   000FBB                     CCPR2           equ	4027	;# 
   336   000FBB                     CCPR2L          equ	4027	;# 
   337   000FBC                     CCPR2H          equ	4028	;# 
   338   000FBD                     CCP1CON         equ	4029	;# 
   339   000FBE                     CCPR1           equ	4030	;# 
   340   000FBE                     CCPR1L          equ	4030	;# 
   341   000FBF                     CCPR1H          equ	4031	;# 
   342   000FC0                     ADCON2          equ	4032	;# 
   343   000FC1                     ADCON1          equ	4033	;# 
   344   000FC2                     ADCON0          equ	4034	;# 
   345   000FC3                     ADRES           equ	4035	;# 
   346   000FC3                     ADRESL          equ	4035	;# 
   347   000FC4                     ADRESH          equ	4036	;# 
   348   000FC5                     SSPCON2         equ	4037	;# 
   349   000FC6                     SSPCON1         equ	4038	;# 
   350   000FC7                     SSPSTAT         equ	4039	;# 
   351   000FC8                     SSPADD          equ	4040	;# 
   352   000FC9                     SSPBUF          equ	4041	;# 
   353   000FCA                     T2CON           equ	4042	;# 
   354   000FCB                     PR2             equ	4043	;# 
   355   000FCB                     MEMCON          equ	4043	;# 
   356   000FCC                     TMR2            equ	4044	;# 
   357   000FCD                     T1CON           equ	4045	;# 
   358   000FCE                     TMR1            equ	4046	;# 
   359   000FCE                     TMR1L           equ	4046	;# 
   360   000FCF                     TMR1H           equ	4047	;# 
   361   000FD0                     RCON            equ	4048	;# 
   362   000FD1                     WDTCON          equ	4049	;# 
   363   000FD2                     HLVDCON         equ	4050	;# 
   364   000FD2                     LVDCON          equ	4050	;# 
   365   000FD3                     OSCCON          equ	4051	;# 
   366   000FD5                     T0CON           equ	4053	;# 
   367   000FD6                     TMR0            equ	4054	;# 
   368   000FD6                     TMR0L           equ	4054	;# 
   369   000FD7                     TMR0H           equ	4055	;# 
   370   000FD8                     STATUS          equ	4056	;# 
   371   000FD9                     FSR2            equ	4057	;# 
   372   000FD9                     FSR2L           equ	4057	;# 
   373   000FDA                     FSR2H           equ	4058	;# 
   374   000FDB                     PLUSW2          equ	4059	;# 
   375   000FDC                     PREINC2         equ	4060	;# 
   376   000FDD                     POSTDEC2        equ	4061	;# 
   377   000FDE                     POSTINC2        equ	4062	;# 
   378   000FDF                     INDF2           equ	4063	;# 
   379   000FE0                     BSR             equ	4064	;# 
   380   000FE1                     FSR1            equ	4065	;# 
   381   000FE1                     FSR1L           equ	4065	;# 
   382   000FE2                     FSR1H           equ	4066	;# 
   383   000FE3                     PLUSW1          equ	4067	;# 
   384   000FE4                     PREINC1         equ	4068	;# 
   385   000FE5                     POSTDEC1        equ	4069	;# 
   386   000FE6                     POSTINC1        equ	4070	;# 
   387   000FE7                     INDF1           equ	4071	;# 
   388   000FE8                     WREG            equ	4072	;# 
   389   000FE9                     FSR0            equ	4073	;# 
   390   000FE9                     FSR0L           equ	4073	;# 
   391   000FEA                     FSR0H           equ	4074	;# 
   392   000FEB                     PLUSW0          equ	4075	;# 
   393   000FEC                     PREINC0         equ	4076	;# 
   394   000FED                     POSTDEC0        equ	4077	;# 
   395   000FEE                     POSTINC0        equ	4078	;# 
   396   000FEF                     INDF0           equ	4079	;# 
   397   000FF0                     INTCON3         equ	4080	;# 
   398   000FF1                     INTCON2         equ	4081	;# 
   399   000FF2                     INTCON          equ	4082	;# 
   400   000FF3                     PROD            equ	4083	;# 
   401   000FF3                     PRODL           equ	4083	;# 
   402   000FF4                     PRODH           equ	4084	;# 
   403   000FF5                     TABLAT          equ	4085	;# 
   404   000FF6                     TBLPTR          equ	4086	;# 
   405   000FF6                     TBLPTRL         equ	4086	;# 
   406   000FF7                     TBLPTRH         equ	4087	;# 
   407   000FF8                     TBLPTRU         equ	4088	;# 
   408   000FF9                     PCLAT           equ	4089	;# 
   409   000FF9                     PC              equ	4089	;# 
   410   000FF9                     PCL             equ	4089	;# 
   411   000FFA                     PCLATH          equ	4090	;# 
   412   000FFB                     PCLATU          equ	4091	;# 
   413   000FFC                     STKPTR          equ	4092	;# 
   414   000FFD                     TOS             equ	4093	;# 
   415   000FFD                     TOSL            equ	4093	;# 
   416   000FFE                     TOSH            equ	4094	;# 
   417   000FFF                     TOSU            equ	4095	;# 
   418   000F80                     PORTA           equ	3968	;# 
   419   000F81                     PORTB           equ	3969	;# 
   420   000F82                     PORTC           equ	3970	;# 
   421   000F83                     PORTD           equ	3971	;# 
   422   000F84                     PORTE           equ	3972	;# 
   423   000F89                     LATA            equ	3977	;# 
   424   000F8A                     LATB            equ	3978	;# 
   425   000F8B                     LATC            equ	3979	;# 
   426   000F8C                     LATD            equ	3980	;# 
   427   000F8D                     LATE            equ	3981	;# 
   428   000F92                     TRISA           equ	3986	;# 
   429   000F92                     DDRA            equ	3986	;# 
   430   000F93                     TRISB           equ	3987	;# 
   431   000F93                     DDRB            equ	3987	;# 
   432   000F94                     TRISC           equ	3988	;# 
   433   000F94                     DDRC            equ	3988	;# 
   434   000F95                     TRISD           equ	3989	;# 
   435   000F95                     DDRD            equ	3989	;# 
   436   000F96                     TRISE           equ	3990	;# 
   437   000F96                     DDRE            equ	3990	;# 
   438   000F9B                     OSCTUNE         equ	3995	;# 
   439   000F9D                     PIE1            equ	3997	;# 
   440   000F9E                     PIR1            equ	3998	;# 
   441   000F9F                     IPR1            equ	3999	;# 
   442   000FA0                     PIE2            equ	4000	;# 
   443   000FA1                     PIR2            equ	4001	;# 
   444   000FA2                     IPR2            equ	4002	;# 
   445   000FA6                     EECON1          equ	4006	;# 
   446   000FA7                     EECON2          equ	4007	;# 
   447   000FA8                     EEDATA          equ	4008	;# 
   448   000FA9                     EEADR           equ	4009	;# 
   449   000FAA                     EEADRH          equ	4010	;# 
   450   000FAB                     RCSTA           equ	4011	;# 
   451   000FAB                     RCSTA1          equ	4011	;# 
   452   000FAC                     TXSTA           equ	4012	;# 
   453   000FAC                     TXSTA1          equ	4012	;# 
   454   000FAD                     TXREG           equ	4013	;# 
   455   000FAD                     TXREG1          equ	4013	;# 
   456   000FAE                     RCREG           equ	4014	;# 
   457   000FAE                     RCREG1          equ	4014	;# 
   458   000FAF                     SPBRG           equ	4015	;# 
   459   000FAF                     SPBRG1          equ	4015	;# 
   460   000FB0                     SPBRGH          equ	4016	;# 
   461   000FB1                     T3CON           equ	4017	;# 
   462   000FB2                     TMR3            equ	4018	;# 
   463   000FB2                     TMR3L           equ	4018	;# 
   464   000FB3                     TMR3H           equ	4019	;# 
   465   000FB4                     CMCON           equ	4020	;# 
   466   000FB5                     CVRCON          equ	4021	;# 
   467   000FB6                     ECCP1AS         equ	4022	;# 
   468   000FB7                     PWM1CON         equ	4023	;# 
   469   000FB8                     BAUDCON         equ	4024	;# 
   470   000FB8                     BAUDCTL         equ	4024	;# 
   471   000FBA                     CCP2CON         equ	4026	;# 
   472   000FBB                     CCPR2           equ	4027	;# 
   473   000FBB                     CCPR2L          equ	4027	;# 
   474   000FBC                     CCPR2H          equ	4028	;# 
   475   000FBD                     CCP1CON         equ	4029	;# 
   476   000FBE                     CCPR1           equ	4030	;# 
   477   000FBE                     CCPR1L          equ	4030	;# 
   478   000FBF                     CCPR1H          equ	4031	;# 
   479   000FC0                     ADCON2          equ	4032	;# 
   480   000FC1                     ADCON1          equ	4033	;# 
   481   000FC2                     ADCON0          equ	4034	;# 
   482   000FC3                     ADRES           equ	4035	;# 
   483   000FC3                     ADRESL          equ	4035	;# 
   484   000FC4                     ADRESH          equ	4036	;# 
   485   000FC5                     SSPCON2         equ	4037	;# 
   486   000FC6                     SSPCON1         equ	4038	;# 
   487   000FC7                     SSPSTAT         equ	4039	;# 
   488   000FC8                     SSPADD          equ	4040	;# 
   489   000FC9                     SSPBUF          equ	4041	;# 
   490   000FCA                     T2CON           equ	4042	;# 
   491   000FCB                     PR2             equ	4043	;# 
   492   000FCB                     MEMCON          equ	4043	;# 
   493   000FCC                     TMR2            equ	4044	;# 
   494   000FCD                     T1CON           equ	4045	;# 
   495   000FCE                     TMR1            equ	4046	;# 
   496   000FCE                     TMR1L           equ	4046	;# 
   497   000FCF                     TMR1H           equ	4047	;# 
   498   000FD0                     RCON            equ	4048	;# 
   499   000FD1                     WDTCON          equ	4049	;# 
   500   000FD2                     HLVDCON         equ	4050	;# 
   501   000FD2                     LVDCON          equ	4050	;# 
   502   000FD3                     OSCCON          equ	4051	;# 
   503   000FD5                     T0CON           equ	4053	;# 
   504   000FD6                     TMR0            equ	4054	;# 
   505   000FD6                     TMR0L           equ	4054	;# 
   506   000FD7                     TMR0H           equ	4055	;# 
   507   000FD8                     STATUS          equ	4056	;# 
   508   000FD9                     FSR2            equ	4057	;# 
   509   000FD9                     FSR2L           equ	4057	;# 
   510   000FDA                     FSR2H           equ	4058	;# 
   511   000FDB                     PLUSW2          equ	4059	;# 
   512   000FDC                     PREINC2         equ	4060	;# 
   513   000FDD                     POSTDEC2        equ	4061	;# 
   514   000FDE                     POSTINC2        equ	4062	;# 
   515   000FDF                     INDF2           equ	4063	;# 
   516   000FE0                     BSR             equ	4064	;# 
   517   000FE1                     FSR1            equ	4065	;# 
   518   000FE1                     FSR1L           equ	4065	;# 
   519   000FE2                     FSR1H           equ	4066	;# 
   520   000FE3                     PLUSW1          equ	4067	;# 
   521   000FE4                     PREINC1         equ	4068	;# 
   522   000FE5                     POSTDEC1        equ	4069	;# 
   523   000FE6                     POSTINC1        equ	4070	;# 
   524   000FE7                     INDF1           equ	4071	;# 
   525   000FE8                     WREG            equ	4072	;# 
   526   000FE9                     FSR0            equ	4073	;# 
   527   000FE9                     FSR0L           equ	4073	;# 
   528   000FEA                     FSR0H           equ	4074	;# 
   529   000FEB                     PLUSW0          equ	4075	;# 
   530   000FEC                     PREINC0         equ	4076	;# 
   531   000FED                     POSTDEC0        equ	4077	;# 
   532   000FEE                     POSTINC0        equ	4078	;# 
   533   000FEF                     INDF0           equ	4079	;# 
   534   000FF0                     INTCON3         equ	4080	;# 
   535   000FF1                     INTCON2         equ	4081	;# 
   536   000FF2                     INTCON          equ	4082	;# 
   537   000FF3                     PROD            equ	4083	;# 
   538   000FF3                     PRODL           equ	4083	;# 
   539   000FF4                     PRODH           equ	4084	;# 
   540   000FF5                     TABLAT          equ	4085	;# 
   541   000FF6                     TBLPTR          equ	4086	;# 
   542   000FF6                     TBLPTRL         equ	4086	;# 
   543   000FF7                     TBLPTRH         equ	4087	;# 
   544   000FF8                     TBLPTRU         equ	4088	;# 
   545   000FF9                     PCLAT           equ	4089	;# 
   546   000FF9                     PC              equ	4089	;# 
   547   000FF9                     PCL             equ	4089	;# 
   548   000FFA                     PCLATH          equ	4090	;# 
   549   000FFB                     PCLATU          equ	4091	;# 
   550   000FFC                     STKPTR          equ	4092	;# 
   551   000FFD                     TOS             equ	4093	;# 
   552   000FFD                     TOSL            equ	4093	;# 
   553   000FFE                     TOSH            equ	4094	;# 
   554   000FFF                     TOSU            equ	4095	;# 
   555   000F80                     PORTA           equ	3968	;# 
   556   000F81                     PORTB           equ	3969	;# 
   557   000F82                     PORTC           equ	3970	;# 
   558   000F83                     PORTD           equ	3971	;# 
   559   000F84                     PORTE           equ	3972	;# 
   560   000F89                     LATA            equ	3977	;# 
   561   000F8A                     LATB            equ	3978	;# 
   562   000F8B                     LATC            equ	3979	;# 
   563   000F8C                     LATD            equ	3980	;# 
   564   000F8D                     LATE            equ	3981	;# 
   565   000F92                     TRISA           equ	3986	;# 
   566   000F92                     DDRA            equ	3986	;# 
   567   000F93                     TRISB           equ	3987	;# 
   568   000F93                     DDRB            equ	3987	;# 
   569   000F94                     TRISC           equ	3988	;# 
   570   000F94                     DDRC            equ	3988	;# 
   571   000F95                     TRISD           equ	3989	;# 
   572   000F95                     DDRD            equ	3989	;# 
   573   000F96                     TRISE           equ	3990	;# 
   574   000F96                     DDRE            equ	3990	;# 
   575   000F9B                     OSCTUNE         equ	3995	;# 
   576   000F9D                     PIE1            equ	3997	;# 
   577   000F9E                     PIR1            equ	3998	;# 
   578   000F9F                     IPR1            equ	3999	;# 
   579   000FA0                     PIE2            equ	4000	;# 
   580   000FA1                     PIR2            equ	4001	;# 
   581   000FA2                     IPR2            equ	4002	;# 
   582   000FA6                     EECON1          equ	4006	;# 
   583   000FA7                     EECON2          equ	4007	;# 
   584   000FA8                     EEDATA          equ	4008	;# 
   585   000FA9                     EEADR           equ	4009	;# 
   586   000FAA                     EEADRH          equ	4010	;# 
   587   000FAB                     RCSTA           equ	4011	;# 
   588   000FAB                     RCSTA1          equ	4011	;# 
   589   000FAC                     TXSTA           equ	4012	;# 
   590   000FAC                     TXSTA1          equ	4012	;# 
   591   000FAD                     TXREG           equ	4013	;# 
   592   000FAD                     TXREG1          equ	4013	;# 
   593   000FAE                     RCREG           equ	4014	;# 
   594   000FAE                     RCREG1          equ	4014	;# 
   595   000FAF                     SPBRG           equ	4015	;# 
   596   000FAF                     SPBRG1          equ	4015	;# 
   597   000FB0                     SPBRGH          equ	4016	;# 
   598   000FB1                     T3CON           equ	4017	;# 
   599   000FB2                     TMR3            equ	4018	;# 
   600   000FB2                     TMR3L           equ	4018	;# 
   601   000FB3                     TMR3H           equ	4019	;# 
   602   000FB4                     CMCON           equ	4020	;# 
   603   000FB5                     CVRCON          equ	4021	;# 
   604   000FB6                     ECCP1AS         equ	4022	;# 
   605   000FB7                     PWM1CON         equ	4023	;# 
   606   000FB8                     BAUDCON         equ	4024	;# 
   607   000FB8                     BAUDCTL         equ	4024	;# 
   608   000FBA                     CCP2CON         equ	4026	;# 
   609   000FBB                     CCPR2           equ	4027	;# 
   610   000FBB                     CCPR2L          equ	4027	;# 
   611   000FBC                     CCPR2H          equ	4028	;# 
   612   000FBD                     CCP1CON         equ	4029	;# 
   613   000FBE                     CCPR1           equ	4030	;# 
   614   000FBE                     CCPR1L          equ	4030	;# 
   615   000FBF                     CCPR1H          equ	4031	;# 
   616   000FC0                     ADCON2          equ	4032	;# 
   617   000FC1                     ADCON1          equ	4033	;# 
   618   000FC2                     ADCON0          equ	4034	;# 
   619   000FC3                     ADRES           equ	4035	;# 
   620   000FC3                     ADRESL          equ	4035	;# 
   621   000FC4                     ADRESH          equ	4036	;# 
   622   000FC5                     SSPCON2         equ	4037	;# 
   623   000FC6                     SSPCON1         equ	4038	;# 
   624   000FC7                     SSPSTAT         equ	4039	;# 
   625   000FC8                     SSPADD          equ	4040	;# 
   626   000FC9                     SSPBUF          equ	4041	;# 
   627   000FCA                     T2CON           equ	4042	;# 
   628   000FCB                     PR2             equ	4043	;# 
   629   000FCB                     MEMCON          equ	4043	;# 
   630   000FCC                     TMR2            equ	4044	;# 
   631   000FCD                     T1CON           equ	4045	;# 
   632   000FCE                     TMR1            equ	4046	;# 
   633   000FCE                     TMR1L           equ	4046	;# 
   634   000FCF                     TMR1H           equ	4047	;# 
   635   000FD0                     RCON            equ	4048	;# 
   636   000FD1                     WDTCON          equ	4049	;# 
   637   000FD2                     HLVDCON         equ	4050	;# 
   638   000FD2                     LVDCON          equ	4050	;# 
   639   000FD3                     OSCCON          equ	4051	;# 
   640   000FD5                     T0CON           equ	4053	;# 
   641   000FD6                     TMR0            equ	4054	;# 
   642   000FD6                     TMR0L           equ	4054	;# 
   643   000FD7                     TMR0H           equ	4055	;# 
   644   000FD8                     STATUS          equ	4056	;# 
   645   000FD9                     FSR2            equ	4057	;# 
   646   000FD9                     FSR2L           equ	4057	;# 
   647   000FDA                     FSR2H           equ	4058	;# 
   648   000FDB                     PLUSW2          equ	4059	;# 
   649   000FDC                     PREINC2         equ	4060	;# 
   650   000FDD                     POSTDEC2        equ	4061	;# 
   651   000FDE                     POSTINC2        equ	4062	;# 
   652   000FDF                     INDF2           equ	4063	;# 
   653   000FE0                     BSR             equ	4064	;# 
   654   000FE1                     FSR1            equ	4065	;# 
   655   000FE1                     FSR1L           equ	4065	;# 
   656   000FE2                     FSR1H           equ	4066	;# 
   657   000FE3                     PLUSW1          equ	4067	;# 
   658   000FE4                     PREINC1         equ	4068	;# 
   659   000FE5                     POSTDEC1        equ	4069	;# 
   660   000FE6                     POSTINC1        equ	4070	;# 
   661   000FE7                     INDF1           equ	4071	;# 
   662   000FE8                     WREG            equ	4072	;# 
   663   000FE9                     FSR0            equ	4073	;# 
   664   000FE9                     FSR0L           equ	4073	;# 
   665   000FEA                     FSR0H           equ	4074	;# 
   666   000FEB                     PLUSW0          equ	4075	;# 
   667   000FEC                     PREINC0         equ	4076	;# 
   668   000FED                     POSTDEC0        equ	4077	;# 
   669   000FEE                     POSTINC0        equ	4078	;# 
   670   000FEF                     INDF0           equ	4079	;# 
   671   000FF0                     INTCON3         equ	4080	;# 
   672   000FF1                     INTCON2         equ	4081	;# 
   673   000FF2                     INTCON          equ	4082	;# 
   674   000FF3                     PROD            equ	4083	;# 
   675   000FF3                     PRODL           equ	4083	;# 
   676   000FF4                     PRODH           equ	4084	;# 
   677   000FF5                     TABLAT          equ	4085	;# 
   678   000FF6                     TBLPTR          equ	4086	;# 
   679   000FF6                     TBLPTRL         equ	4086	;# 
   680   000FF7                     TBLPTRH         equ	4087	;# 
   681   000FF8                     TBLPTRU         equ	4088	;# 
   682   000FF9                     PCLAT           equ	4089	;# 
   683   000FF9                     PC              equ	4089	;# 
   684   000FF9                     PCL             equ	4089	;# 
   685   000FFA                     PCLATH          equ	4090	;# 
   686   000FFB                     PCLATU          equ	4091	;# 
   687   000FFC                     STKPTR          equ	4092	;# 
   688   000FFD                     TOS             equ	4093	;# 
   689   000FFD                     TOSL            equ	4093	;# 
   690   000FFE                     TOSH            equ	4094	;# 
   691   000FFF                     TOSU            equ	4095	;# 
   692   000F80                     PORTA           equ	3968	;# 
   693   000F81                     PORTB           equ	3969	;# 
   694   000F82                     PORTC           equ	3970	;# 
   695   000F83                     PORTD           equ	3971	;# 
   696   000F84                     PORTE           equ	3972	;# 
   697   000F89                     LATA            equ	3977	;# 
   698   000F8A                     LATB            equ	3978	;# 
   699   000F8B                     LATC            equ	3979	;# 
   700   000F8C                     LATD            equ	3980	;# 
   701   000F8D                     LATE            equ	3981	;# 
   702   000F92                     TRISA           equ	3986	;# 
   703   000F92                     DDRA            equ	3986	;# 
   704   000F93                     TRISB           equ	3987	;# 
   705   000F93                     DDRB            equ	3987	;# 
   706   000F94                     TRISC           equ	3988	;# 
   707   000F94                     DDRC            equ	3988	;# 
   708   000F95                     TRISD           equ	3989	;# 
   709   000F95                     DDRD            equ	3989	;# 
   710   000F96                     TRISE           equ	3990	;# 
   711   000F96                     DDRE            equ	3990	;# 
   712   000F9B                     OSCTUNE         equ	3995	;# 
   713   000F9D                     PIE1            equ	3997	;# 
   714   000F9E                     PIR1            equ	3998	;# 
   715   000F9F                     IPR1            equ	3999	;# 
   716   000FA0                     PIE2            equ	4000	;# 
   717   000FA1                     PIR2            equ	4001	;# 
   718   000FA2                     IPR2            equ	4002	;# 
   719   000FA6                     EECON1          equ	4006	;# 
   720   000FA7                     EECON2          equ	4007	;# 
   721   000FA8                     EEDATA          equ	4008	;# 
   722   000FA9                     EEADR           equ	4009	;# 
   723   000FAA                     EEADRH          equ	4010	;# 
   724   000FAB                     RCSTA           equ	4011	;# 
   725   000FAB                     RCSTA1          equ	4011	;# 
   726   000FAC                     TXSTA           equ	4012	;# 
   727   000FAC                     TXSTA1          equ	4012	;# 
   728   000FAD                     TXREG           equ	4013	;# 
   729   000FAD                     TXREG1          equ	4013	;# 
   730   000FAE                     RCREG           equ	4014	;# 
   731   000FAE                     RCREG1          equ	4014	;# 
   732   000FAF                     SPBRG           equ	4015	;# 
   733   000FAF                     SPBRG1          equ	4015	;# 
   734   000FB0                     SPBRGH          equ	4016	;# 
   735   000FB1                     T3CON           equ	4017	;# 
   736   000FB2                     TMR3            equ	4018	;# 
   737   000FB2                     TMR3L           equ	4018	;# 
   738   000FB3                     TMR3H           equ	4019	;# 
   739   000FB4                     CMCON           equ	4020	;# 
   740   000FB5                     CVRCON          equ	4021	;# 
   741   000FB6                     ECCP1AS         equ	4022	;# 
   742   000FB7                     PWM1CON         equ	4023	;# 
   743   000FB8                     BAUDCON         equ	4024	;# 
   744   000FB8                     BAUDCTL         equ	4024	;# 
   745   000FBA                     CCP2CON         equ	4026	;# 
   746   000FBB                     CCPR2           equ	4027	;# 
   747   000FBB                     CCPR2L          equ	4027	;# 
   748   000FBC                     CCPR2H          equ	4028	;# 
   749   000FBD                     CCP1CON         equ	4029	;# 
   750   000FBE                     CCPR1           equ	4030	;# 
   751   000FBE                     CCPR1L          equ	4030	;# 
   752   000FBF                     CCPR1H          equ	4031	;# 
   753   000FC0                     ADCON2          equ	4032	;# 
   754   000FC1                     ADCON1          equ	4033	;# 
   755   000FC2                     ADCON0          equ	4034	;# 
   756   000FC3                     ADRES           equ	4035	;# 
   757   000FC3                     ADRESL          equ	4035	;# 
   758   000FC4                     ADRESH          equ	4036	;# 
   759   000FC5                     SSPCON2         equ	4037	;# 
   760   000FC6                     SSPCON1         equ	4038	;# 
   761   000FC7                     SSPSTAT         equ	4039	;# 
   762   000FC8                     SSPADD          equ	4040	;# 
   763   000FC9                     SSPBUF          equ	4041	;# 
   764   000FCA                     T2CON           equ	4042	;# 
   765   000FCB                     PR2             equ	4043	;# 
   766   000FCB                     MEMCON          equ	4043	;# 
   767   000FCC                     TMR2            equ	4044	;# 
   768   000FCD                     T1CON           equ	4045	;# 
   769   000FCE                     TMR1            equ	4046	;# 
   770   000FCE                     TMR1L           equ	4046	;# 
   771   000FCF                     TMR1H           equ	4047	;# 
   772   000FD0                     RCON            equ	4048	;# 
   773   000FD1                     WDTCON          equ	4049	;# 
   774   000FD2                     HLVDCON         equ	4050	;# 
   775   000FD2                     LVDCON          equ	4050	;# 
   776   000FD3                     OSCCON          equ	4051	;# 
   777   000FD5                     T0CON           equ	4053	;# 
   778   000FD6                     TMR0            equ	4054	;# 
   779   000FD6                     TMR0L           equ	4054	;# 
   780   000FD7                     TMR0H           equ	4055	;# 
   781   000FD8                     STATUS          equ	4056	;# 
   782   000FD9                     FSR2            equ	4057	;# 
   783   000FD9                     FSR2L           equ	4057	;# 
   784   000FDA                     FSR2H           equ	4058	;# 
   785   000FDB                     PLUSW2          equ	4059	;# 
   786   000FDC                     PREINC2         equ	4060	;# 
   787   000FDD                     POSTDEC2        equ	4061	;# 
   788   000FDE                     POSTINC2        equ	4062	;# 
   789   000FDF                     INDF2           equ	4063	;# 
   790   000FE0                     BSR             equ	4064	;# 
   791   000FE1                     FSR1            equ	4065	;# 
   792   000FE1                     FSR1L           equ	4065	;# 
   793   000FE2                     FSR1H           equ	4066	;# 
   794   000FE3                     PLUSW1          equ	4067	;# 
   795   000FE4                     PREINC1         equ	4068	;# 
   796   000FE5                     POSTDEC1        equ	4069	;# 
   797   000FE6                     POSTINC1        equ	4070	;# 
   798   000FE7                     INDF1           equ	4071	;# 
   799   000FE8                     WREG            equ	4072	;# 
   800   000FE9                     FSR0            equ	4073	;# 
   801   000FE9                     FSR0L           equ	4073	;# 
   802   000FEA                     FSR0H           equ	4074	;# 
   803   000FEB                     PLUSW0          equ	4075	;# 
   804   000FEC                     PREINC0         equ	4076	;# 
   805   000FED                     POSTDEC0        equ	4077	;# 
   806   000FEE                     POSTINC0        equ	4078	;# 
   807   000FEF                     INDF0           equ	4079	;# 
   808   000FF0                     INTCON3         equ	4080	;# 
   809   000FF1                     INTCON2         equ	4081	;# 
   810   000FF2                     INTCON          equ	4082	;# 
   811   000FF3                     PROD            equ	4083	;# 
   812   000FF3                     PRODL           equ	4083	;# 
   813   000FF4                     PRODH           equ	4084	;# 
   814   000FF5                     TABLAT          equ	4085	;# 
   815   000FF6                     TBLPTR          equ	4086	;# 
   816   000FF6                     TBLPTRL         equ	4086	;# 
   817   000FF7                     TBLPTRH         equ	4087	;# 
   818   000FF8                     TBLPTRU         equ	4088	;# 
   819   000FF9                     PCLAT           equ	4089	;# 
   820   000FF9                     PC              equ	4089	;# 
   821   000FF9                     PCL             equ	4089	;# 
   822   000FFA                     PCLATH          equ	4090	;# 
   823   000FFB                     PCLATU          equ	4091	;# 
   824   000FFC                     STKPTR          equ	4092	;# 
   825   000FFD                     TOS             equ	4093	;# 
   826   000FFD                     TOSL            equ	4093	;# 
   827   000FFE                     TOSH            equ	4094	;# 
   828   000FFF                     TOSU            equ	4095	;# 
   829   000F80                     PORTA           equ	3968	;# 
   830   000F81                     PORTB           equ	3969	;# 
   831   000F82                     PORTC           equ	3970	;# 
   832   000F83                     PORTD           equ	3971	;# 
   833   000F84                     PORTE           equ	3972	;# 
   834   000F89                     LATA            equ	3977	;# 
   835   000F8A                     LATB            equ	3978	;# 
   836   000F8B                     LATC            equ	3979	;# 
   837   000F8C                     LATD            equ	3980	;# 
   838   000F8D                     LATE            equ	3981	;# 
   839   000F92                     TRISA           equ	3986	;# 
   840   000F92                     DDRA            equ	3986	;# 
   841   000F93                     TRISB           equ	3987	;# 
   842   000F93                     DDRB            equ	3987	;# 
   843   000F94                     TRISC           equ	3988	;# 
   844   000F94                     DDRC            equ	3988	;# 
   845   000F95                     TRISD           equ	3989	;# 
   846   000F95                     DDRD            equ	3989	;# 
   847   000F96                     TRISE           equ	3990	;# 
   848   000F96                     DDRE            equ	3990	;# 
   849   000F9B                     OSCTUNE         equ	3995	;# 
   850   000F9D                     PIE1            equ	3997	;# 
   851   000F9E                     PIR1            equ	3998	;# 
   852   000F9F                     IPR1            equ	3999	;# 
   853   000FA0                     PIE2            equ	4000	;# 
   854   000FA1                     PIR2            equ	4001	;# 
   855   000FA2                     IPR2            equ	4002	;# 
   856   000FA6                     EECON1          equ	4006	;# 
   857   000FA7                     EECON2          equ	4007	;# 
   858   000FA8                     EEDATA          equ	4008	;# 
   859   000FA9                     EEADR           equ	4009	;# 
   860   000FAA                     EEADRH          equ	4010	;# 
   861   000FAB                     RCSTA           equ	4011	;# 
   862   000FAB                     RCSTA1          equ	4011	;# 
   863   000FAC                     TXSTA           equ	4012	;# 
   864   000FAC                     TXSTA1          equ	4012	;# 
   865   000FAD                     TXREG           equ	4013	;# 
   866   000FAD                     TXREG1          equ	4013	;# 
   867   000FAE                     RCREG           equ	4014	;# 
   868   000FAE                     RCREG1          equ	4014	;# 
   869   000FAF                     SPBRG           equ	4015	;# 
   870   000FAF                     SPBRG1          equ	4015	;# 
   871   000FB0                     SPBRGH          equ	4016	;# 
   872   000FB1                     T3CON           equ	4017	;# 
   873   000FB2                     TMR3            equ	4018	;# 
   874   000FB2                     TMR3L           equ	4018	;# 
   875   000FB3                     TMR3H           equ	4019	;# 
   876   000FB4                     CMCON           equ	4020	;# 
   877   000FB5                     CVRCON          equ	4021	;# 
   878   000FB6                     ECCP1AS         equ	4022	;# 
   879   000FB7                     PWM1CON         equ	4023	;# 
   880   000FB8                     BAUDCON         equ	4024	;# 
   881   000FB8                     BAUDCTL         equ	4024	;# 
   882   000FBA                     CCP2CON         equ	4026	;# 
   883   000FBB                     CCPR2           equ	4027	;# 
   884   000FBB                     CCPR2L          equ	4027	;# 
   885   000FBC                     CCPR2H          equ	4028	;# 
   886   000FBD                     CCP1CON         equ	4029	;# 
   887   000FBE                     CCPR1           equ	4030	;# 
   888   000FBE                     CCPR1L          equ	4030	;# 
   889   000FBF                     CCPR1H          equ	4031	;# 
   890   000FC0                     ADCON2          equ	4032	;# 
   891   000FC1                     ADCON1          equ	4033	;# 
   892   000FC2                     ADCON0          equ	4034	;# 
   893   000FC3                     ADRES           equ	4035	;# 
   894   000FC3                     ADRESL          equ	4035	;# 
   895   000FC4                     ADRESH          equ	4036	;# 
   896   000FC5                     SSPCON2         equ	4037	;# 
   897   000FC6                     SSPCON1         equ	4038	;# 
   898   000FC7                     SSPSTAT         equ	4039	;# 
   899   000FC8                     SSPADD          equ	4040	;# 
   900   000FC9                     SSPBUF          equ	4041	;# 
   901   000FCA                     T2CON           equ	4042	;# 
   902   000FCB                     PR2             equ	4043	;# 
   903   000FCB                     MEMCON          equ	4043	;# 
   904   000FCC                     TMR2            equ	4044	;# 
   905   000FCD                     T1CON           equ	4045	;# 
   906   000FCE                     TMR1            equ	4046	;# 
   907   000FCE                     TMR1L           equ	4046	;# 
   908   000FCF                     TMR1H           equ	4047	;# 
   909   000FD0                     RCON            equ	4048	;# 
   910   000FD1                     WDTCON          equ	4049	;# 
   911   000FD2                     HLVDCON         equ	4050	;# 
   912   000FD2                     LVDCON          equ	4050	;# 
   913   000FD3                     OSCCON          equ	4051	;# 
   914   000FD5                     T0CON           equ	4053	;# 
   915   000FD6                     TMR0            equ	4054	;# 
   916   000FD6                     TMR0L           equ	4054	;# 
   917   000FD7                     TMR0H           equ	4055	;# 
   918   000FD8                     STATUS          equ	4056	;# 
   919   000FD9                     FSR2            equ	4057	;# 
   920   000FD9                     FSR2L           equ	4057	;# 
   921   000FDA                     FSR2H           equ	4058	;# 
   922   000FDB                     PLUSW2          equ	4059	;# 
   923   000FDC                     PREINC2         equ	4060	;# 
   924   000FDD                     POSTDEC2        equ	4061	;# 
   925   000FDE                     POSTINC2        equ	4062	;# 
   926   000FDF                     INDF2           equ	4063	;# 
   927   000FE0                     BSR             equ	4064	;# 
   928   000FE1                     FSR1            equ	4065	;# 
   929   000FE1                     FSR1L           equ	4065	;# 
   930   000FE2                     FSR1H           equ	4066	;# 
   931   000FE3                     PLUSW1          equ	4067	;# 
   932   000FE4                     PREINC1         equ	4068	;# 
   933   000FE5                     POSTDEC1        equ	4069	;# 
   934   000FE6                     POSTINC1        equ	4070	;# 
   935   000FE7                     INDF1           equ	4071	;# 
   936   000FE8                     WREG            equ	4072	;# 
   937   000FE9                     FSR0            equ	4073	;# 
   938   000FE9                     FSR0L           equ	4073	;# 
   939   000FEA                     FSR0H           equ	4074	;# 
   940   000FEB                     PLUSW0          equ	4075	;# 
   941   000FEC                     PREINC0         equ	4076	;# 
   942   000FED                     POSTDEC0        equ	4077	;# 
   943   000FEE                     POSTINC0        equ	4078	;# 
   944   000FEF                     INDF0           equ	4079	;# 
   945   000FF0                     INTCON3         equ	4080	;# 
   946   000FF1                     INTCON2         equ	4081	;# 
   947   000FF2                     INTCON          equ	4082	;# 
   948   000FF3                     PROD            equ	4083	;# 
   949   000FF3                     PRODL           equ	4083	;# 
   950   000FF4                     PRODH           equ	4084	;# 
   951   000FF5                     TABLAT          equ	4085	;# 
   952   000FF6                     TBLPTR          equ	4086	;# 
   953   000FF6                     TBLPTRL         equ	4086	;# 
   954   000FF7                     TBLPTRH         equ	4087	;# 
   955   000FF8                     TBLPTRU         equ	4088	;# 
   956   000FF9                     PCLAT           equ	4089	;# 
   957   000FF9                     PC              equ	4089	;# 
   958   000FF9                     PCL             equ	4089	;# 
   959   000FFA                     PCLATH          equ	4090	;# 
   960   000FFB                     PCLATU          equ	4091	;# 
   961   000FFC                     STKPTR          equ	4092	;# 
   962   000FFD                     TOS             equ	4093	;# 
   963   000FFD                     TOSL            equ	4093	;# 
   964   000FFE                     TOSH            equ	4094	;# 
   965   000FFF                     TOSU            equ	4095	;# 
   966   000F80                     PORTA           equ	3968	;# 
   967   000F81                     PORTB           equ	3969	;# 
   968   000F82                     PORTC           equ	3970	;# 
   969   000F83                     PORTD           equ	3971	;# 
   970   000F84                     PORTE           equ	3972	;# 
   971   000F89                     LATA            equ	3977	;# 
   972   000F8A                     LATB            equ	3978	;# 
   973   000F8B                     LATC            equ	3979	;# 
   974   000F8C                     LATD            equ	3980	;# 
   975   000F8D                     LATE            equ	3981	;# 
   976   000F92                     TRISA           equ	3986	;# 
   977   000F92                     DDRA            equ	3986	;# 
   978   000F93                     TRISB           equ	3987	;# 
   979   000F93                     DDRB            equ	3987	;# 
   980   000F94                     TRISC           equ	3988	;# 
   981   000F94                     DDRC            equ	3988	;# 
   982   000F95                     TRISD           equ	3989	;# 
   983   000F95                     DDRD            equ	3989	;# 
   984   000F96                     TRISE           equ	3990	;# 
   985   000F96                     DDRE            equ	3990	;# 
   986   000F9B                     OSCTUNE         equ	3995	;# 
   987   000F9D                     PIE1            equ	3997	;# 
   988   000F9E                     PIR1            equ	3998	;# 
   989   000F9F                     IPR1            equ	3999	;# 
   990   000FA0                     PIE2            equ	4000	;# 
   991   000FA1                     PIR2            equ	4001	;# 
   992   000FA2                     IPR2            equ	4002	;# 
   993   000FA6                     EECON1          equ	4006	;# 
   994   000FA7                     EECON2          equ	4007	;# 
   995   000FA8                     EEDATA          equ	4008	;# 
   996   000FA9                     EEADR           equ	4009	;# 
   997   000FAA                     EEADRH          equ	4010	;# 
   998   000FAB                     RCSTA           equ	4011	;# 
   999   000FAB                     RCSTA1          equ	4011	;# 
  1000   000FAC                     TXSTA           equ	4012	;# 
  1001   000FAC                     TXSTA1          equ	4012	;# 
  1002   000FAD                     TXREG           equ	4013	;# 
  1003   000FAD                     TXREG1          equ	4013	;# 
  1004   000FAE                     RCREG           equ	4014	;# 
  1005   000FAE                     RCREG1          equ	4014	;# 
  1006   000FAF                     SPBRG           equ	4015	;# 
  1007   000FAF                     SPBRG1          equ	4015	;# 
  1008   000FB0                     SPBRGH          equ	4016	;# 
  1009   000FB1                     T3CON           equ	4017	;# 
  1010   000FB2                     TMR3            equ	4018	;# 
  1011   000FB2                     TMR3L           equ	4018	;# 
  1012   000FB3                     TMR3H           equ	4019	;# 
  1013   000FB4                     CMCON           equ	4020	;# 
  1014   000FB5                     CVRCON          equ	4021	;# 
  1015   000FB6                     ECCP1AS         equ	4022	;# 
  1016   000FB7                     PWM1CON         equ	4023	;# 
  1017   000FB8                     BAUDCON         equ	4024	;# 
  1018   000FB8                     BAUDCTL         equ	4024	;# 
  1019   000FBA                     CCP2CON         equ	4026	;# 
  1020   000FBB                     CCPR2           equ	4027	;# 
  1021   000FBB                     CCPR2L          equ	4027	;# 
  1022   000FBC                     CCPR2H          equ	4028	;# 
  1023   000FBD                     CCP1CON         equ	4029	;# 
  1024   000FBE                     CCPR1           equ	4030	;# 
  1025   000FBE                     CCPR1L          equ	4030	;# 
  1026   000FBF                     CCPR1H          equ	4031	;# 
  1027   000FC0                     ADCON2          equ	4032	;# 
  1028   000FC1                     ADCON1          equ	4033	;# 
  1029   000FC2                     ADCON0          equ	4034	;# 
  1030   000FC3                     ADRES           equ	4035	;# 
  1031   000FC3                     ADRESL          equ	4035	;# 
  1032   000FC4                     ADRESH          equ	4036	;# 
  1033   000FC5                     SSPCON2         equ	4037	;# 
  1034   000FC6                     SSPCON1         equ	4038	;# 
  1035   000FC7                     SSPSTAT         equ	4039	;# 
  1036   000FC8                     SSPADD          equ	4040	;# 
  1037   000FC9                     SSPBUF          equ	4041	;# 
  1038   000FCA                     T2CON           equ	4042	;# 
  1039   000FCB                     PR2             equ	4043	;# 
  1040   000FCB                     MEMCON          equ	4043	;# 
  1041   000FCC                     TMR2            equ	4044	;# 
  1042   000FCD                     T1CON           equ	4045	;# 
  1043   000FCE                     TMR1            equ	4046	;# 
  1044   000FCE                     TMR1L           equ	4046	;# 
  1045   000FCF                     TMR1H           equ	4047	;# 
  1046   000FD0                     RCON            equ	4048	;# 
  1047   000FD1                     WDTCON          equ	4049	;# 
  1048   000FD2                     HLVDCON         equ	4050	;# 
  1049   000FD2                     LVDCON          equ	4050	;# 
  1050   000FD3                     OSCCON          equ	4051	;# 
  1051   000FD5                     T0CON           equ	4053	;# 
  1052   000FD6                     TMR0            equ	4054	;# 
  1053   000FD6                     TMR0L           equ	4054	;# 
  1054   000FD7                     TMR0H           equ	4055	;# 
  1055   000FD8                     STATUS          equ	4056	;# 
  1056   000FD9                     FSR2            equ	4057	;# 
  1057   000FD9                     FSR2L           equ	4057	;# 
  1058   000FDA                     FSR2H           equ	4058	;# 
  1059   000FDB                     PLUSW2          equ	4059	;# 
  1060   000FDC                     PREINC2         equ	4060	;# 
  1061   000FDD                     POSTDEC2        equ	4061	;# 
  1062   000FDE                     POSTINC2        equ	4062	;# 
  1063   000FDF                     INDF2           equ	4063	;# 
  1064   000FE0                     BSR             equ	4064	;# 
  1065   000FE1                     FSR1            equ	4065	;# 
  1066   000FE1                     FSR1L           equ	4065	;# 
  1067   000FE2                     FSR1H           equ	4066	;# 
  1068   000FE3                     PLUSW1          equ	4067	;# 
  1069   000FE4                     PREINC1         equ	4068	;# 
  1070   000FE5                     POSTDEC1        equ	4069	;# 
  1071   000FE6                     POSTINC1        equ	4070	;# 
  1072   000FE7                     INDF1           equ	4071	;# 
  1073   000FE8                     WREG            equ	4072	;# 
  1074   000FE9                     FSR0            equ	4073	;# 
  1075   000FE9                     FSR0L           equ	4073	;# 
  1076   000FEA                     FSR0H           equ	4074	;# 
  1077   000FEB                     PLUSW0          equ	4075	;# 
  1078   000FEC                     PREINC0         equ	4076	;# 
  1079   000FED                     POSTDEC0        equ	4077	;# 
  1080   000FEE                     POSTINC0        equ	4078	;# 
  1081   000FEF                     INDF0           equ	4079	;# 
  1082   000FF0                     INTCON3         equ	4080	;# 
  1083   000FF1                     INTCON2         equ	4081	;# 
  1084   000FF2                     INTCON          equ	4082	;# 
  1085   000FF3                     PROD            equ	4083	;# 
  1086   000FF3                     PRODL           equ	4083	;# 
  1087   000FF4                     PRODH           equ	4084	;# 
  1088   000FF5                     TABLAT          equ	4085	;# 
  1089   000FF6                     TBLPTR          equ	4086	;# 
  1090   000FF6                     TBLPTRL         equ	4086	;# 
  1091   000FF7                     TBLPTRH         equ	4087	;# 
  1092   000FF8                     TBLPTRU         equ	4088	;# 
  1093   000FF9                     PCLAT           equ	4089	;# 
  1094   000FF9                     PC              equ	4089	;# 
  1095   000FF9                     PCL             equ	4089	;# 
  1096   000FFA                     PCLATH          equ	4090	;# 
  1097   000FFB                     PCLATU          equ	4091	;# 
  1098   000FFC                     STKPTR          equ	4092	;# 
  1099   000FFD                     TOS             equ	4093	;# 
  1100   000FFD                     TOSL            equ	4093	;# 
  1101   000FFE                     TOSH            equ	4094	;# 
  1102   000FFF                     TOSU            equ	4095	;# 
  1103   000F80                     PORTA           equ	3968	;# 
  1104   000F81                     PORTB           equ	3969	;# 
  1105   000F82                     PORTC           equ	3970	;# 
  1106   000F83                     PORTD           equ	3971	;# 
  1107   000F84                     PORTE           equ	3972	;# 
  1108   000F89                     LATA            equ	3977	;# 
  1109   000F8A                     LATB            equ	3978	;# 
  1110   000F8B                     LATC            equ	3979	;# 
  1111   000F8C                     LATD            equ	3980	;# 
  1112   000F8D                     LATE            equ	3981	;# 
  1113   000F92                     TRISA           equ	3986	;# 
  1114   000F92                     DDRA            equ	3986	;# 
  1115   000F93                     TRISB           equ	3987	;# 
  1116   000F93                     DDRB            equ	3987	;# 
  1117   000F94                     TRISC           equ	3988	;# 
  1118   000F94                     DDRC            equ	3988	;# 
  1119   000F95                     TRISD           equ	3989	;# 
  1120   000F95                     DDRD            equ	3989	;# 
  1121   000F96                     TRISE           equ	3990	;# 
  1122   000F96                     DDRE            equ	3990	;# 
  1123   000F9B                     OSCTUNE         equ	3995	;# 
  1124   000F9D                     PIE1            equ	3997	;# 
  1125   000F9E                     PIR1            equ	3998	;# 
  1126   000F9F                     IPR1            equ	3999	;# 
  1127   000FA0                     PIE2            equ	4000	;# 
  1128   000FA1                     PIR2            equ	4001	;# 
  1129   000FA2                     IPR2            equ	4002	;# 
  1130   000FA6                     EECON1          equ	4006	;# 
  1131   000FA7                     EECON2          equ	4007	;# 
  1132   000FA8                     EEDATA          equ	4008	;# 
  1133   000FA9                     EEADR           equ	4009	;# 
  1134   000FAA                     EEADRH          equ	4010	;# 
  1135   000FAB                     RCSTA           equ	4011	;# 
  1136   000FAB                     RCSTA1          equ	4011	;# 
  1137   000FAC                     TXSTA           equ	4012	;# 
  1138   000FAC                     TXSTA1          equ	4012	;# 
  1139   000FAD                     TXREG           equ	4013	;# 
  1140   000FAD                     TXREG1          equ	4013	;# 
  1141   000FAE                     RCREG           equ	4014	;# 
  1142   000FAE                     RCREG1          equ	4014	;# 
  1143   000FAF                     SPBRG           equ	4015	;# 
  1144   000FAF                     SPBRG1          equ	4015	;# 
  1145   000FB0                     SPBRGH          equ	4016	;# 
  1146   000FB1                     T3CON           equ	4017	;# 
  1147   000FB2                     TMR3            equ	4018	;# 
  1148   000FB2                     TMR3L           equ	4018	;# 
  1149   000FB3                     TMR3H           equ	4019	;# 
  1150   000FB4                     CMCON           equ	4020	;# 
  1151   000FB5                     CVRCON          equ	4021	;# 
  1152   000FB6                     ECCP1AS         equ	4022	;# 
  1153   000FB7                     PWM1CON         equ	4023	;# 
  1154   000FB8                     BAUDCON         equ	4024	;# 
  1155   000FB8                     BAUDCTL         equ	4024	;# 
  1156   000FBA                     CCP2CON         equ	4026	;# 
  1157   000FBB                     CCPR2           equ	4027	;# 
  1158   000FBB                     CCPR2L          equ	4027	;# 
  1159   000FBC                     CCPR2H          equ	4028	;# 
  1160   000FBD                     CCP1CON         equ	4029	;# 
  1161   000FBE                     CCPR1           equ	4030	;# 
  1162   000FBE                     CCPR1L          equ	4030	;# 
  1163   000FBF                     CCPR1H          equ	4031	;# 
  1164   000FC0                     ADCON2          equ	4032	;# 
  1165   000FC1                     ADCON1          equ	4033	;# 
  1166   000FC2                     ADCON0          equ	4034	;# 
  1167   000FC3                     ADRES           equ	4035	;# 
  1168   000FC3                     ADRESL          equ	4035	;# 
  1169   000FC4                     ADRESH          equ	4036	;# 
  1170   000FC5                     SSPCON2         equ	4037	;# 
  1171   000FC6                     SSPCON1         equ	4038	;# 
  1172   000FC7                     SSPSTAT         equ	4039	;# 
  1173   000FC8                     SSPADD          equ	4040	;# 
  1174   000FC9                     SSPBUF          equ	4041	;# 
  1175   000FCA                     T2CON           equ	4042	;# 
  1176   000FCB                     PR2             equ	4043	;# 
  1177   000FCB                     MEMCON          equ	4043	;# 
  1178   000FCC                     TMR2            equ	4044	;# 
  1179   000FCD                     T1CON           equ	4045	;# 
  1180   000FCE                     TMR1            equ	4046	;# 
  1181   000FCE                     TMR1L           equ	4046	;# 
  1182   000FCF                     TMR1H           equ	4047	;# 
  1183   000FD0                     RCON            equ	4048	;# 
  1184   000FD1                     WDTCON          equ	4049	;# 
  1185   000FD2                     HLVDCON         equ	4050	;# 
  1186   000FD2                     LVDCON          equ	4050	;# 
  1187   000FD3                     OSCCON          equ	4051	;# 
  1188   000FD5                     T0CON           equ	4053	;# 
  1189   000FD6                     TMR0            equ	4054	;# 
  1190   000FD6                     TMR0L           equ	4054	;# 
  1191   000FD7                     TMR0H           equ	4055	;# 
  1192   000FD8                     STATUS          equ	4056	;# 
  1193   000FD9                     FSR2            equ	4057	;# 
  1194   000FD9                     FSR2L           equ	4057	;# 
  1195   000FDA                     FSR2H           equ	4058	;# 
  1196   000FDB                     PLUSW2          equ	4059	;# 
  1197   000FDC                     PREINC2         equ	4060	;# 
  1198   000FDD                     POSTDEC2        equ	4061	;# 
  1199   000FDE                     POSTINC2        equ	4062	;# 
  1200   000FDF                     INDF2           equ	4063	;# 
  1201   000FE0                     BSR             equ	4064	;# 
  1202   000FE1                     FSR1            equ	4065	;# 
  1203   000FE1                     FSR1L           equ	4065	;# 
  1204   000FE2                     FSR1H           equ	4066	;# 
  1205   000FE3                     PLUSW1          equ	4067	;# 
  1206   000FE4                     PREINC1         equ	4068	;# 
  1207   000FE5                     POSTDEC1        equ	4069	;# 
  1208   000FE6                     POSTINC1        equ	4070	;# 
  1209   000FE7                     INDF1           equ	4071	;# 
  1210   000FE8                     WREG            equ	4072	;# 
  1211   000FE9                     FSR0            equ	4073	;# 
  1212   000FE9                     FSR0L           equ	4073	;# 
  1213   000FEA                     FSR0H           equ	4074	;# 
  1214   000FEB                     PLUSW0          equ	4075	;# 
  1215   000FEC                     PREINC0         equ	4076	;# 
  1216   000FED                     POSTDEC0        equ	4077	;# 
  1217   000FEE                     POSTINC0        equ	4078	;# 
  1218   000FEF                     INDF0           equ	4079	;# 
  1219   000FF0                     INTCON3         equ	4080	;# 
  1220   000FF1                     INTCON2         equ	4081	;# 
  1221   000FF2                     INTCON          equ	4082	;# 
  1222   000FF3                     PROD            equ	4083	;# 
  1223   000FF3                     PRODL           equ	4083	;# 
  1224   000FF4                     PRODH           equ	4084	;# 
  1225   000FF5                     TABLAT          equ	4085	;# 
  1226   000FF6                     TBLPTR          equ	4086	;# 
  1227   000FF6                     TBLPTRL         equ	4086	;# 
  1228   000FF7                     TBLPTRH         equ	4087	;# 
  1229   000FF8                     TBLPTRU         equ	4088	;# 
  1230   000FF9                     PCLAT           equ	4089	;# 
  1231   000FF9                     PC              equ	4089	;# 
  1232   000FF9                     PCL             equ	4089	;# 
  1233   000FFA                     PCLATH          equ	4090	;# 
  1234   000FFB                     PCLATU          equ	4091	;# 
  1235   000FFC                     STKPTR          equ	4092	;# 
  1236   000FFD                     TOS             equ	4093	;# 
  1237   000FFD                     TOSL            equ	4093	;# 
  1238   000FFE                     TOSH            equ	4094	;# 
  1239   000FFF                     TOSU            equ	4095	;# 
  1240   000F80                     PORTA           equ	3968	;# 
  1241   000F81                     PORTB           equ	3969	;# 
  1242   000F82                     PORTC           equ	3970	;# 
  1243   000F83                     PORTD           equ	3971	;# 
  1244   000F84                     PORTE           equ	3972	;# 
  1245   000F89                     LATA            equ	3977	;# 
  1246   000F8A                     LATB            equ	3978	;# 
  1247   000F8B                     LATC            equ	3979	;# 
  1248   000F8C                     LATD            equ	3980	;# 
  1249   000F8D                     LATE            equ	3981	;# 
  1250   000F92                     TRISA           equ	3986	;# 
  1251   000F92                     DDRA            equ	3986	;# 
  1252   000F93                     TRISB           equ	3987	;# 
  1253   000F93                     DDRB            equ	3987	;# 
  1254   000F94                     TRISC           equ	3988	;# 
  1255   000F94                     DDRC            equ	3988	;# 
  1256   000F95                     TRISD           equ	3989	;# 
  1257   000F95                     DDRD            equ	3989	;# 
  1258   000F96                     TRISE           equ	3990	;# 
  1259   000F96                     DDRE            equ	3990	;# 
  1260   000F9B                     OSCTUNE         equ	3995	;# 
  1261   000F9D                     PIE1            equ	3997	;# 
  1262   000F9E                     PIR1            equ	3998	;# 
  1263   000F9F                     IPR1            equ	3999	;# 
  1264   000FA0                     PIE2            equ	4000	;# 
  1265   000FA1                     PIR2            equ	4001	;# 
  1266   000FA2                     IPR2            equ	4002	;# 
  1267   000FA6                     EECON1          equ	4006	;# 
  1268   000FA7                     EECON2          equ	4007	;# 
  1269   000FA8                     EEDATA          equ	4008	;# 
  1270   000FA9                     EEADR           equ	4009	;# 
  1271   000FAA                     EEADRH          equ	4010	;# 
  1272   000FAB                     RCSTA           equ	4011	;# 
  1273   000FAB                     RCSTA1          equ	4011	;# 
  1274   000FAC                     TXSTA           equ	4012	;# 
  1275   000FAC                     TXSTA1          equ	4012	;# 
  1276   000FAD                     TXREG           equ	4013	;# 
  1277   000FAD                     TXREG1          equ	4013	;# 
  1278   000FAE                     RCREG           equ	4014	;# 
  1279   000FAE                     RCREG1          equ	4014	;# 
  1280   000FAF                     SPBRG           equ	4015	;# 
  1281   000FAF                     SPBRG1          equ	4015	;# 
  1282   000FB0                     SPBRGH          equ	4016	;# 
  1283   000FB1                     T3CON           equ	4017	;# 
  1284   000FB2                     TMR3            equ	4018	;# 
  1285   000FB2                     TMR3L           equ	4018	;# 
  1286   000FB3                     TMR3H           equ	4019	;# 
  1287   000FB4                     CMCON           equ	4020	;# 
  1288   000FB5                     CVRCON          equ	4021	;# 
  1289   000FB6                     ECCP1AS         equ	4022	;# 
  1290   000FB7                     PWM1CON         equ	4023	;# 
  1291   000FB8                     BAUDCON         equ	4024	;# 
  1292   000FB8                     BAUDCTL         equ	4024	;# 
  1293   000FBA                     CCP2CON         equ	4026	;# 
  1294   000FBB                     CCPR2           equ	4027	;# 
  1295   000FBB                     CCPR2L          equ	4027	;# 
  1296   000FBC                     CCPR2H          equ	4028	;# 
  1297   000FBD                     CCP1CON         equ	4029	;# 
  1298   000FBE                     CCPR1           equ	4030	;# 
  1299   000FBE                     CCPR1L          equ	4030	;# 
  1300   000FBF                     CCPR1H          equ	4031	;# 
  1301   000FC0                     ADCON2          equ	4032	;# 
  1302   000FC1                     ADCON1          equ	4033	;# 
  1303   000FC2                     ADCON0          equ	4034	;# 
  1304   000FC3                     ADRES           equ	4035	;# 
  1305   000FC3                     ADRESL          equ	4035	;# 
  1306   000FC4                     ADRESH          equ	4036	;# 
  1307   000FC5                     SSPCON2         equ	4037	;# 
  1308   000FC6                     SSPCON1         equ	4038	;# 
  1309   000FC7                     SSPSTAT         equ	4039	;# 
  1310   000FC8                     SSPADD          equ	4040	;# 
  1311   000FC9                     SSPBUF          equ	4041	;# 
  1312   000FCA                     T2CON           equ	4042	;# 
  1313   000FCB                     PR2             equ	4043	;# 
  1314   000FCB                     MEMCON          equ	4043	;# 
  1315   000FCC                     TMR2            equ	4044	;# 
  1316   000FCD                     T1CON           equ	4045	;# 
  1317   000FCE                     TMR1            equ	4046	;# 
  1318   000FCE                     TMR1L           equ	4046	;# 
  1319   000FCF                     TMR1H           equ	4047	;# 
  1320   000FD0                     RCON            equ	4048	;# 
  1321   000FD1                     WDTCON          equ	4049	;# 
  1322   000FD2                     HLVDCON         equ	4050	;# 
  1323   000FD2                     LVDCON          equ	4050	;# 
  1324   000FD3                     OSCCON          equ	4051	;# 
  1325   000FD5                     T0CON           equ	4053	;# 
  1326   000FD6                     TMR0            equ	4054	;# 
  1327   000FD6                     TMR0L           equ	4054	;# 
  1328   000FD7                     TMR0H           equ	4055	;# 
  1329   000FD8                     STATUS          equ	4056	;# 
  1330   000FD9                     FSR2            equ	4057	;# 
  1331   000FD9                     FSR2L           equ	4057	;# 
  1332   000FDA                     FSR2H           equ	4058	;# 
  1333   000FDB                     PLUSW2          equ	4059	;# 
  1334   000FDC                     PREINC2         equ	4060	;# 
  1335   000FDD                     POSTDEC2        equ	4061	;# 
  1336   000FDE                     POSTINC2        equ	4062	;# 
  1337   000FDF                     INDF2           equ	4063	;# 
  1338   000FE0                     BSR             equ	4064	;# 
  1339   000FE1                     FSR1            equ	4065	;# 
  1340   000FE1                     FSR1L           equ	4065	;# 
  1341   000FE2                     FSR1H           equ	4066	;# 
  1342   000FE3                     PLUSW1          equ	4067	;# 
  1343   000FE4                     PREINC1         equ	4068	;# 
  1344   000FE5                     POSTDEC1        equ	4069	;# 
  1345   000FE6                     POSTINC1        equ	4070	;# 
  1346   000FE7                     INDF1           equ	4071	;# 
  1347   000FE8                     WREG            equ	4072	;# 
  1348   000FE9                     FSR0            equ	4073	;# 
  1349   000FE9                     FSR0L           equ	4073	;# 
  1350   000FEA                     FSR0H           equ	4074	;# 
  1351   000FEB                     PLUSW0          equ	4075	;# 
  1352   000FEC                     PREINC0         equ	4076	;# 
  1353   000FED                     POSTDEC0        equ	4077	;# 
  1354   000FEE                     POSTINC0        equ	4078	;# 
  1355   000FEF                     INDF0           equ	4079	;# 
  1356   000FF0                     INTCON3         equ	4080	;# 
  1357   000FF1                     INTCON2         equ	4081	;# 
  1358   000FF2                     INTCON          equ	4082	;# 
  1359   000FF3                     PROD            equ	4083	;# 
  1360   000FF3                     PRODL           equ	4083	;# 
  1361   000FF4                     PRODH           equ	4084	;# 
  1362   000FF5                     TABLAT          equ	4085	;# 
  1363   000FF6                     TBLPTR          equ	4086	;# 
  1364   000FF6                     TBLPTRL         equ	4086	;# 
  1365   000FF7                     TBLPTRH         equ	4087	;# 
  1366   000FF8                     TBLPTRU         equ	4088	;# 
  1367   000FF9                     PCLAT           equ	4089	;# 
  1368   000FF9                     PC              equ	4089	;# 
  1369   000FF9                     PCL             equ	4089	;# 
  1370   000FFA                     PCLATH          equ	4090	;# 
  1371   000FFB                     PCLATU          equ	4091	;# 
  1372   000FFC                     STKPTR          equ	4092	;# 
  1373   000FFD                     TOS             equ	4093	;# 
  1374   000FFD                     TOSL            equ	4093	;# 
  1375   000FFE                     TOSH            equ	4094	;# 
  1376   000FFF                     TOSU            equ	4095	;# 
  1377   000F80                     PORTA           equ	3968	;# 
  1378   000F81                     PORTB           equ	3969	;# 
  1379   000F82                     PORTC           equ	3970	;# 
  1380   000F83                     PORTD           equ	3971	;# 
  1381   000F84                     PORTE           equ	3972	;# 
  1382   000F89                     LATA            equ	3977	;# 
  1383   000F8A                     LATB            equ	3978	;# 
  1384   000F8B                     LATC            equ	3979	;# 
  1385   000F8C                     LATD            equ	3980	;# 
  1386   000F8D                     LATE            equ	3981	;# 
  1387   000F92                     TRISA           equ	3986	;# 
  1388   000F92                     DDRA            equ	3986	;# 
  1389   000F93                     TRISB           equ	3987	;# 
  1390   000F93                     DDRB            equ	3987	;# 
  1391   000F94                     TRISC           equ	3988	;# 
  1392   000F94                     DDRC            equ	3988	;# 
  1393   000F95                     TRISD           equ	3989	;# 
  1394   000F95                     DDRD            equ	3989	;# 
  1395   000F96                     TRISE           equ	3990	;# 
  1396   000F96                     DDRE            equ	3990	;# 
  1397   000F9B                     OSCTUNE         equ	3995	;# 
  1398   000F9D                     PIE1            equ	3997	;# 
  1399   000F9E                     PIR1            equ	3998	;# 
  1400   000F9F                     IPR1            equ	3999	;# 
  1401   000FA0                     PIE2            equ	4000	;# 
  1402   000FA1                     PIR2            equ	4001	;# 
  1403   000FA2                     IPR2            equ	4002	;# 
  1404   000FA6                     EECON1          equ	4006	;# 
  1405   000FA7                     EECON2          equ	4007	;# 
  1406   000FA8                     EEDATA          equ	4008	;# 
  1407   000FA9                     EEADR           equ	4009	;# 
  1408   000FAA                     EEADRH          equ	4010	;# 
  1409   000FAB                     RCSTA           equ	4011	;# 
  1410   000FAB                     RCSTA1          equ	4011	;# 
  1411   000FAC                     TXSTA           equ	4012	;# 
  1412   000FAC                     TXSTA1          equ	4012	;# 
  1413   000FAD                     TXREG           equ	4013	;# 
  1414   000FAD                     TXREG1          equ	4013	;# 
  1415   000FAE                     RCREG           equ	4014	;# 
  1416   000FAE                     RCREG1          equ	4014	;# 
  1417   000FAF                     SPBRG           equ	4015	;# 
  1418   000FAF                     SPBRG1          equ	4015	;# 
  1419   000FB0                     SPBRGH          equ	4016	;# 
  1420   000FB1                     T3CON           equ	4017	;# 
  1421   000FB2                     TMR3            equ	4018	;# 
  1422   000FB2                     TMR3L           equ	4018	;# 
  1423   000FB3                     TMR3H           equ	4019	;# 
  1424   000FB4                     CMCON           equ	4020	;# 
  1425   000FB5                     CVRCON          equ	4021	;# 
  1426   000FB6                     ECCP1AS         equ	4022	;# 
  1427   000FB7                     PWM1CON         equ	4023	;# 
  1428   000FB8                     BAUDCON         equ	4024	;# 
  1429   000FB8                     BAUDCTL         equ	4024	;# 
  1430   000FBA                     CCP2CON         equ	4026	;# 
  1431   000FBB                     CCPR2           equ	4027	;# 
  1432   000FBB                     CCPR2L          equ	4027	;# 
  1433   000FBC                     CCPR2H          equ	4028	;# 
  1434   000FBD                     CCP1CON         equ	4029	;# 
  1435   000FBE                     CCPR1           equ	4030	;# 
  1436   000FBE                     CCPR1L          equ	4030	;# 
  1437   000FBF                     CCPR1H          equ	4031	;# 
  1438   000FC0                     ADCON2          equ	4032	;# 
  1439   000FC1                     ADCON1          equ	4033	;# 
  1440   000FC2                     ADCON0          equ	4034	;# 
  1441   000FC3                     ADRES           equ	4035	;# 
  1442   000FC3                     ADRESL          equ	4035	;# 
  1443   000FC4                     ADRESH          equ	4036	;# 
  1444   000FC5                     SSPCON2         equ	4037	;# 
  1445   000FC6                     SSPCON1         equ	4038	;# 
  1446   000FC7                     SSPSTAT         equ	4039	;# 
  1447   000FC8                     SSPADD          equ	4040	;# 
  1448   000FC9                     SSPBUF          equ	4041	;# 
  1449   000FCA                     T2CON           equ	4042	;# 
  1450   000FCB                     PR2             equ	4043	;# 
  1451   000FCB                     MEMCON          equ	4043	;# 
  1452   000FCC                     TMR2            equ	4044	;# 
  1453   000FCD                     T1CON           equ	4045	;# 
  1454   000FCE                     TMR1            equ	4046	;# 
  1455   000FCE                     TMR1L           equ	4046	;# 
  1456   000FCF                     TMR1H           equ	4047	;# 
  1457   000FD0                     RCON            equ	4048	;# 
  1458   000FD1                     WDTCON          equ	4049	;# 
  1459   000FD2                     HLVDCON         equ	4050	;# 
  1460   000FD2                     LVDCON          equ	4050	;# 
  1461   000FD3                     OSCCON          equ	4051	;# 
  1462   000FD5                     T0CON           equ	4053	;# 
  1463   000FD6                     TMR0            equ	4054	;# 
  1464   000FD6                     TMR0L           equ	4054	;# 
  1465   000FD7                     TMR0H           equ	4055	;# 
  1466   000FD8                     STATUS          equ	4056	;# 
  1467   000FD9                     FSR2            equ	4057	;# 
  1468   000FD9                     FSR2L           equ	4057	;# 
  1469   000FDA                     FSR2H           equ	4058	;# 
  1470   000FDB                     PLUSW2          equ	4059	;# 
  1471   000FDC                     PREINC2         equ	4060	;# 
  1472   000FDD                     POSTDEC2        equ	4061	;# 
  1473   000FDE                     POSTINC2        equ	4062	;# 
  1474   000FDF                     INDF2           equ	4063	;# 
  1475   000FE0                     BSR             equ	4064	;# 
  1476   000FE1                     FSR1            equ	4065	;# 
  1477   000FE1                     FSR1L           equ	4065	;# 
  1478   000FE2                     FSR1H           equ	4066	;# 
  1479   000FE3                     PLUSW1          equ	4067	;# 
  1480   000FE4                     PREINC1         equ	4068	;# 
  1481   000FE5                     POSTDEC1        equ	4069	;# 
  1482   000FE6                     POSTINC1        equ	4070	;# 
  1483   000FE7                     INDF1           equ	4071	;# 
  1484   000FE8                     WREG            equ	4072	;# 
  1485   000FE9                     FSR0            equ	4073	;# 
  1486   000FE9                     FSR0L           equ	4073	;# 
  1487   000FEA                     FSR0H           equ	4074	;# 
  1488   000FEB                     PLUSW0          equ	4075	;# 
  1489   000FEC                     PREINC0         equ	4076	;# 
  1490   000FED                     POSTDEC0        equ	4077	;# 
  1491   000FEE                     POSTINC0        equ	4078	;# 
  1492   000FEF                     INDF0           equ	4079	;# 
  1493   000FF0                     INTCON3         equ	4080	;# 
  1494   000FF1                     INTCON2         equ	4081	;# 
  1495   000FF2                     INTCON          equ	4082	;# 
  1496   000FF3                     PROD            equ	4083	;# 
  1497   000FF3                     PRODL           equ	4083	;# 
  1498   000FF4                     PRODH           equ	4084	;# 
  1499   000FF5                     TABLAT          equ	4085	;# 
  1500   000FF6                     TBLPTR          equ	4086	;# 
  1501   000FF6                     TBLPTRL         equ	4086	;# 
  1502   000FF7                     TBLPTRH         equ	4087	;# 
  1503   000FF8                     TBLPTRU         equ	4088	;# 
  1504   000FF9                     PCLAT           equ	4089	;# 
  1505   000FF9                     PC              equ	4089	;# 
  1506   000FF9                     PCL             equ	4089	;# 
  1507   000FFA                     PCLATH          equ	4090	;# 
  1508   000FFB                     PCLATU          equ	4091	;# 
  1509   000FFC                     STKPTR          equ	4092	;# 
  1510   000FFD                     TOS             equ	4093	;# 
  1511   000FFD                     TOSL            equ	4093	;# 
  1512   000FFE                     TOSH            equ	4094	;# 
  1513   000FFF                     TOSU            equ	4095	;# 
  1514   000F80                     PORTA           equ	3968	;# 
  1515   000F81                     PORTB           equ	3969	;# 
  1516   000F82                     PORTC           equ	3970	;# 
  1517   000F83                     PORTD           equ	3971	;# 
  1518   000F84                     PORTE           equ	3972	;# 
  1519   000F89                     LATA            equ	3977	;# 
  1520   000F8A                     LATB            equ	3978	;# 
  1521   000F8B                     LATC            equ	3979	;# 
  1522   000F8C                     LATD            equ	3980	;# 
  1523   000F8D                     LATE            equ	3981	;# 
  1524   000F92                     TRISA           equ	3986	;# 
  1525   000F92                     DDRA            equ	3986	;# 
  1526   000F93                     TRISB           equ	3987	;# 
  1527   000F93                     DDRB            equ	3987	;# 
  1528   000F94                     TRISC           equ	3988	;# 
  1529   000F94                     DDRC            equ	3988	;# 
  1530   000F95                     TRISD           equ	3989	;# 
  1531   000F95                     DDRD            equ	3989	;# 
  1532   000F96                     TRISE           equ	3990	;# 
  1533   000F96                     DDRE            equ	3990	;# 
  1534   000F9B                     OSCTUNE         equ	3995	;# 
  1535   000F9D                     PIE1            equ	3997	;# 
  1536   000F9E                     PIR1            equ	3998	;# 
  1537   000F9F                     IPR1            equ	3999	;# 
  1538   000FA0                     PIE2            equ	4000	;# 
  1539   000FA1                     PIR2            equ	4001	;# 
  1540   000FA2                     IPR2            equ	4002	;# 
  1541   000FA6                     EECON1          equ	4006	;# 
  1542   000FA7                     EECON2          equ	4007	;# 
  1543   000FA8                     EEDATA          equ	4008	;# 
  1544   000FA9                     EEADR           equ	4009	;# 
  1545   000FAA                     EEADRH          equ	4010	;# 
  1546   000FAB                     RCSTA           equ	4011	;# 
  1547   000FAB                     RCSTA1          equ	4011	;# 
  1548   000FAC                     TXSTA           equ	4012	;# 
  1549   000FAC                     TXSTA1          equ	4012	;# 
  1550   000FAD                     TXREG           equ	4013	;# 
  1551   000FAD                     TXREG1          equ	4013	;# 
  1552   000FAE                     RCREG           equ	4014	;# 
  1553   000FAE                     RCREG1          equ	4014	;# 
  1554   000FAF                     SPBRG           equ	4015	;# 
  1555   000FAF                     SPBRG1          equ	4015	;# 
  1556   000FB0                     SPBRGH          equ	4016	;# 
  1557   000FB1                     T3CON           equ	4017	;# 
  1558   000FB2                     TMR3            equ	4018	;# 
  1559   000FB2                     TMR3L           equ	4018	;# 
  1560   000FB3                     TMR3H           equ	4019	;# 
  1561   000FB4                     CMCON           equ	4020	;# 
  1562   000FB5                     CVRCON          equ	4021	;# 
  1563   000FB6                     ECCP1AS         equ	4022	;# 
  1564   000FB7                     PWM1CON         equ	4023	;# 
  1565   000FB8                     BAUDCON         equ	4024	;# 
  1566   000FB8                     BAUDCTL         equ	4024	;# 
  1567   000FBA                     CCP2CON         equ	4026	;# 
  1568   000FBB                     CCPR2           equ	4027	;# 
  1569   000FBB                     CCPR2L          equ	4027	;# 
  1570   000FBC                     CCPR2H          equ	4028	;# 
  1571   000FBD                     CCP1CON         equ	4029	;# 
  1572   000FBE                     CCPR1           equ	4030	;# 
  1573   000FBE                     CCPR1L          equ	4030	;# 
  1574   000FBF                     CCPR1H          equ	4031	;# 
  1575   000FC0                     ADCON2          equ	4032	;# 
  1576   000FC1                     ADCON1          equ	4033	;# 
  1577   000FC2                     ADCON0          equ	4034	;# 
  1578   000FC3                     ADRES           equ	4035	;# 
  1579   000FC3                     ADRESL          equ	4035	;# 
  1580   000FC4                     ADRESH          equ	4036	;# 
  1581   000FC5                     SSPCON2         equ	4037	;# 
  1582   000FC6                     SSPCON1         equ	4038	;# 
  1583   000FC7                     SSPSTAT         equ	4039	;# 
  1584   000FC8                     SSPADD          equ	4040	;# 
  1585   000FC9                     SSPBUF          equ	4041	;# 
  1586   000FCA                     T2CON           equ	4042	;# 
  1587   000FCB                     PR2             equ	4043	;# 
  1588   000FCB                     MEMCON          equ	4043	;# 
  1589   000FCC                     TMR2            equ	4044	;# 
  1590   000FCD                     T1CON           equ	4045	;# 
  1591   000FCE                     TMR1            equ	4046	;# 
  1592   000FCE                     TMR1L           equ	4046	;# 
  1593   000FCF                     TMR1H           equ	4047	;# 
  1594   000FD0                     RCON            equ	4048	;# 
  1595   000FD1                     WDTCON          equ	4049	;# 
  1596   000FD2                     HLVDCON         equ	4050	;# 
  1597   000FD2                     LVDCON          equ	4050	;# 
  1598   000FD3                     OSCCON          equ	4051	;# 
  1599   000FD5                     T0CON           equ	4053	;# 
  1600   000FD6                     TMR0            equ	4054	;# 
  1601   000FD6                     TMR0L           equ	4054	;# 
  1602   000FD7                     TMR0H           equ	4055	;# 
  1603   000FD8                     STATUS          equ	4056	;# 
  1604   000FD9                     FSR2            equ	4057	;# 
  1605   000FD9                     FSR2L           equ	4057	;# 
  1606   000FDA                     FSR2H           equ	4058	;# 
  1607   000FDB                     PLUSW2          equ	4059	;# 
  1608   000FDC                     PREINC2         equ	4060	;# 
  1609   000FDD                     POSTDEC2        equ	4061	;# 
  1610   000FDE                     POSTINC2        equ	4062	;# 
  1611   000FDF                     INDF2           equ	4063	;# 
  1612   000FE0                     BSR             equ	4064	;# 
  1613   000FE1                     FSR1            equ	4065	;# 
  1614   000FE1                     FSR1L           equ	4065	;# 
  1615   000FE2                     FSR1H           equ	4066	;# 
  1616   000FE3                     PLUSW1          equ	4067	;# 
  1617   000FE4                     PREINC1         equ	4068	;# 
  1618   000FE5                     POSTDEC1        equ	4069	;# 
  1619   000FE6                     POSTINC1        equ	4070	;# 
  1620   000FE7                     INDF1           equ	4071	;# 
  1621   000FE8                     WREG            equ	4072	;# 
  1622   000FE9                     FSR0            equ	4073	;# 
  1623   000FE9                     FSR0L           equ	4073	;# 
  1624   000FEA                     FSR0H           equ	4074	;# 
  1625   000FEB                     PLUSW0          equ	4075	;# 
  1626   000FEC                     PREINC0         equ	4076	;# 
  1627   000FED                     POSTDEC0        equ	4077	;# 
  1628   000FEE                     POSTINC0        equ	4078	;# 
  1629   000FEF                     INDF0           equ	4079	;# 
  1630   000FF0                     INTCON3         equ	4080	;# 
  1631   000FF1                     INTCON2         equ	4081	;# 
  1632   000FF2                     INTCON          equ	4082	;# 
  1633   000FF3                     PROD            equ	4083	;# 
  1634   000FF3                     PRODL           equ	4083	;# 
  1635   000FF4                     PRODH           equ	4084	;# 
  1636   000FF5                     TABLAT          equ	4085	;# 
  1637   000FF6                     TBLPTR          equ	4086	;# 
  1638   000FF6                     TBLPTRL         equ	4086	;# 
  1639   000FF7                     TBLPTRH         equ	4087	;# 
  1640   000FF8                     TBLPTRU         equ	4088	;# 
  1641   000FF9                     PCLAT           equ	4089	;# 
  1642   000FF9                     PC              equ	4089	;# 
  1643   000FF9                     PCL             equ	4089	;# 
  1644   000FFA                     PCLATH          equ	4090	;# 
  1645   000FFB                     PCLATU          equ	4091	;# 
  1646   000FFC                     STKPTR          equ	4092	;# 
  1647   000FFD                     TOS             equ	4093	;# 
  1648   000FFD                     TOSL            equ	4093	;# 
  1649   000FFE                     TOSH            equ	4094	;# 
  1650   000FFF                     TOSU            equ	4095	;# 
  1651   000F80                     PORTA           equ	3968	;# 
  1652   000F81                     PORTB           equ	3969	;# 
  1653   000F82                     PORTC           equ	3970	;# 
  1654   000F83                     PORTD           equ	3971	;# 
  1655   000F84                     PORTE           equ	3972	;# 
  1656   000F89                     LATA            equ	3977	;# 
  1657   000F8A                     LATB            equ	3978	;# 
  1658   000F8B                     LATC            equ	3979	;# 
  1659   000F8C                     LATD            equ	3980	;# 
  1660   000F8D                     LATE            equ	3981	;# 
  1661   000F92                     TRISA           equ	3986	;# 
  1662   000F92                     DDRA            equ	3986	;# 
  1663   000F93                     TRISB           equ	3987	;# 
  1664   000F93                     DDRB            equ	3987	;# 
  1665   000F94                     TRISC           equ	3988	;# 
  1666   000F94                     DDRC            equ	3988	;# 
  1667   000F95                     TRISD           equ	3989	;# 
  1668   000F95                     DDRD            equ	3989	;# 
  1669   000F96                     TRISE           equ	3990	;# 
  1670   000F96                     DDRE            equ	3990	;# 
  1671   000F9B                     OSCTUNE         equ	3995	;# 
  1672   000F9D                     PIE1            equ	3997	;# 
  1673   000F9E                     PIR1            equ	3998	;# 
  1674   000F9F                     IPR1            equ	3999	;# 
  1675   000FA0                     PIE2            equ	4000	;# 
  1676   000FA1                     PIR2            equ	4001	;# 
  1677   000FA2                     IPR2            equ	4002	;# 
  1678   000FA6                     EECON1          equ	4006	;# 
  1679   000FA7                     EECON2          equ	4007	;# 
  1680   000FA8                     EEDATA          equ	4008	;# 
  1681   000FA9                     EEADR           equ	4009	;# 
  1682   000FAA                     EEADRH          equ	4010	;# 
  1683   000FAB                     RCSTA           equ	4011	;# 
  1684   000FAB                     RCSTA1          equ	4011	;# 
  1685   000FAC                     TXSTA           equ	4012	;# 
  1686   000FAC                     TXSTA1          equ	4012	;# 
  1687   000FAD                     TXREG           equ	4013	;# 
  1688   000FAD                     TXREG1          equ	4013	;# 
  1689   000FAE                     RCREG           equ	4014	;# 
  1690   000FAE                     RCREG1          equ	4014	;# 
  1691   000FAF                     SPBRG           equ	4015	;# 
  1692   000FAF                     SPBRG1          equ	4015	;# 
  1693   000FB0                     SPBRGH          equ	4016	;# 
  1694   000FB1                     T3CON           equ	4017	;# 
  1695   000FB2                     TMR3            equ	4018	;# 
  1696   000FB2                     TMR3L           equ	4018	;# 
  1697   000FB3                     TMR3H           equ	4019	;# 
  1698   000FB4                     CMCON           equ	4020	;# 
  1699   000FB5                     CVRCON          equ	4021	;# 
  1700   000FB6                     ECCP1AS         equ	4022	;# 
  1701   000FB7                     PWM1CON         equ	4023	;# 
  1702   000FB8                     BAUDCON         equ	4024	;# 
  1703   000FB8                     BAUDCTL         equ	4024	;# 
  1704   000FBA                     CCP2CON         equ	4026	;# 
  1705   000FBB                     CCPR2           equ	4027	;# 
  1706   000FBB                     CCPR2L          equ	4027	;# 
  1707   000FBC                     CCPR2H          equ	4028	;# 
  1708   000FBD                     CCP1CON         equ	4029	;# 
  1709   000FBE                     CCPR1           equ	4030	;# 
  1710   000FBE                     CCPR1L          equ	4030	;# 
  1711   000FBF                     CCPR1H          equ	4031	;# 
  1712   000FC0                     ADCON2          equ	4032	;# 
  1713   000FC1                     ADCON1          equ	4033	;# 
  1714   000FC2                     ADCON0          equ	4034	;# 
  1715   000FC3                     ADRES           equ	4035	;# 
  1716   000FC3                     ADRESL          equ	4035	;# 
  1717   000FC4                     ADRESH          equ	4036	;# 
  1718   000FC5                     SSPCON2         equ	4037	;# 
  1719   000FC6                     SSPCON1         equ	4038	;# 
  1720   000FC7                     SSPSTAT         equ	4039	;# 
  1721   000FC8                     SSPADD          equ	4040	;# 
  1722   000FC9                     SSPBUF          equ	4041	;# 
  1723   000FCA                     T2CON           equ	4042	;# 
  1724   000FCB                     PR2             equ	4043	;# 
  1725   000FCB                     MEMCON          equ	4043	;# 
  1726   000FCC                     TMR2            equ	4044	;# 
  1727   000FCD                     T1CON           equ	4045	;# 
  1728   000FCE                     TMR1            equ	4046	;# 
  1729   000FCE                     TMR1L           equ	4046	;# 
  1730   000FCF                     TMR1H           equ	4047	;# 
  1731   000FD0                     RCON            equ	4048	;# 
  1732   000FD1                     WDTCON          equ	4049	;# 
  1733   000FD2                     HLVDCON         equ	4050	;# 
  1734   000FD2                     LVDCON          equ	4050	;# 
  1735   000FD3                     OSCCON          equ	4051	;# 
  1736   000FD5                     T0CON           equ	4053	;# 
  1737   000FD6                     TMR0            equ	4054	;# 
  1738   000FD6                     TMR0L           equ	4054	;# 
  1739   000FD7                     TMR0H           equ	4055	;# 
  1740   000FD8                     STATUS          equ	4056	;# 
  1741   000FD9                     FSR2            equ	4057	;# 
  1742   000FD9                     FSR2L           equ	4057	;# 
  1743   000FDA                     FSR2H           equ	4058	;# 
  1744   000FDB                     PLUSW2          equ	4059	;# 
  1745   000FDC                     PREINC2         equ	4060	;# 
  1746   000FDD                     POSTDEC2        equ	4061	;# 
  1747   000FDE                     POSTINC2        equ	4062	;# 
  1748   000FDF                     INDF2           equ	4063	;# 
  1749   000FE0                     BSR             equ	4064	;# 
  1750   000FE1                     FSR1            equ	4065	;# 
  1751   000FE1                     FSR1L           equ	4065	;# 
  1752   000FE2                     FSR1H           equ	4066	;# 
  1753   000FE3                     PLUSW1          equ	4067	;# 
  1754   000FE4                     PREINC1         equ	4068	;# 
  1755   000FE5                     POSTDEC1        equ	4069	;# 
  1756   000FE6                     POSTINC1        equ	4070	;# 
  1757   000FE7                     INDF1           equ	4071	;# 
  1758   000FE8                     WREG            equ	4072	;# 
  1759   000FE9                     FSR0            equ	4073	;# 
  1760   000FE9                     FSR0L           equ	4073	;# 
  1761   000FEA                     FSR0H           equ	4074	;# 
  1762   000FEB                     PLUSW0          equ	4075	;# 
  1763   000FEC                     PREINC0         equ	4076	;# 
  1764   000FED                     POSTDEC0        equ	4077	;# 
  1765   000FEE                     POSTINC0        equ	4078	;# 
  1766   000FEF                     INDF0           equ	4079	;# 
  1767   000FF0                     INTCON3         equ	4080	;# 
  1768   000FF1                     INTCON2         equ	4081	;# 
  1769   000FF2                     INTCON          equ	4082	;# 
  1770   000FF3                     PROD            equ	4083	;# 
  1771   000FF3                     PRODL           equ	4083	;# 
  1772   000FF4                     PRODH           equ	4084	;# 
  1773   000FF5                     TABLAT          equ	4085	;# 
  1774   000FF6                     TBLPTR          equ	4086	;# 
  1775   000FF6                     TBLPTRL         equ	4086	;# 
  1776   000FF7                     TBLPTRH         equ	4087	;# 
  1777   000FF8                     TBLPTRU         equ	4088	;# 
  1778   000FF9                     PCLAT           equ	4089	;# 
  1779   000FF9                     PC              equ	4089	;# 
  1780   000FF9                     PCL             equ	4089	;# 
  1781   000FFA                     PCLATH          equ	4090	;# 
  1782   000FFB                     PCLATU          equ	4091	;# 
  1783   000FFC                     STKPTR          equ	4092	;# 
  1784   000FFD                     TOS             equ	4093	;# 
  1785   000FFD                     TOSL            equ	4093	;# 
  1786   000FFE                     TOSH            equ	4094	;# 
  1787   000FFF                     TOSU            equ	4095	;# 
  1788   000F80                     PORTA           equ	3968	;# 
  1789   000F81                     PORTB           equ	3969	;# 
  1790   000F82                     PORTC           equ	3970	;# 
  1791   000F83                     PORTD           equ	3971	;# 
  1792   000F84                     PORTE           equ	3972	;# 
  1793   000F89                     LATA            equ	3977	;# 
  1794   000F8A                     LATB            equ	3978	;# 
  1795   000F8B                     LATC            equ	3979	;# 
  1796   000F8C                     LATD            equ	3980	;# 
  1797   000F8D                     LATE            equ	3981	;# 
  1798   000F92                     TRISA           equ	3986	;# 
  1799   000F92                     DDRA            equ	3986	;# 
  1800   000F93                     TRISB           equ	3987	;# 
  1801   000F93                     DDRB            equ	3987	;# 
  1802   000F94                     TRISC           equ	3988	;# 
  1803   000F94                     DDRC            equ	3988	;# 
  1804   000F95                     TRISD           equ	3989	;# 
  1805   000F95                     DDRD            equ	3989	;# 
  1806   000F96                     TRISE           equ	3990	;# 
  1807   000F96                     DDRE            equ	3990	;# 
  1808   000F9B                     OSCTUNE         equ	3995	;# 
  1809   000F9D                     PIE1            equ	3997	;# 
  1810   000F9E                     PIR1            equ	3998	;# 
  1811   000F9F                     IPR1            equ	3999	;# 
  1812   000FA0                     PIE2            equ	4000	;# 
  1813   000FA1                     PIR2            equ	4001	;# 
  1814   000FA2                     IPR2            equ	4002	;# 
  1815   000FA6                     EECON1          equ	4006	;# 
  1816   000FA7                     EECON2          equ	4007	;# 
  1817   000FA8                     EEDATA          equ	4008	;# 
  1818   000FA9                     EEADR           equ	4009	;# 
  1819   000FAA                     EEADRH          equ	4010	;# 
  1820   000FAB                     RCSTA           equ	4011	;# 
  1821   000FAB                     RCSTA1          equ	4011	;# 
  1822   000FAC                     TXSTA           equ	4012	;# 
  1823   000FAC                     TXSTA1          equ	4012	;# 
  1824   000FAD                     TXREG           equ	4013	;# 
  1825   000FAD                     TXREG1          equ	4013	;# 
  1826   000FAE                     RCREG           equ	4014	;# 
  1827   000FAE                     RCREG1          equ	4014	;# 
  1828   000FAF                     SPBRG           equ	4015	;# 
  1829   000FAF                     SPBRG1          equ	4015	;# 
  1830   000FB0                     SPBRGH          equ	4016	;# 
  1831   000FB1                     T3CON           equ	4017	;# 
  1832   000FB2                     TMR3            equ	4018	;# 
  1833   000FB2                     TMR3L           equ	4018	;# 
  1834   000FB3                     TMR3H           equ	4019	;# 
  1835   000FB4                     CMCON           equ	4020	;# 
  1836   000FB5                     CVRCON          equ	4021	;# 
  1837   000FB6                     ECCP1AS         equ	4022	;# 
  1838   000FB7                     PWM1CON         equ	4023	;# 
  1839   000FB8                     BAUDCON         equ	4024	;# 
  1840   000FB8                     BAUDCTL         equ	4024	;# 
  1841   000FBA                     CCP2CON         equ	4026	;# 
  1842   000FBB                     CCPR2           equ	4027	;# 
  1843   000FBB                     CCPR2L          equ	4027	;# 
  1844   000FBC                     CCPR2H          equ	4028	;# 
  1845   000FBD                     CCP1CON         equ	4029	;# 
  1846   000FBE                     CCPR1           equ	4030	;# 
  1847   000FBE                     CCPR1L          equ	4030	;# 
  1848   000FBF                     CCPR1H          equ	4031	;# 
  1849   000FC0                     ADCON2          equ	4032	;# 
  1850   000FC1                     ADCON1          equ	4033	;# 
  1851   000FC2                     ADCON0          equ	4034	;# 
  1852   000FC3                     ADRES           equ	4035	;# 
  1853   000FC3                     ADRESL          equ	4035	;# 
  1854   000FC4                     ADRESH          equ	4036	;# 
  1855   000FC5                     SSPCON2         equ	4037	;# 
  1856   000FC6                     SSPCON1         equ	4038	;# 
  1857   000FC7                     SSPSTAT         equ	4039	;# 
  1858   000FC8                     SSPADD          equ	4040	;# 
  1859   000FC9                     SSPBUF          equ	4041	;# 
  1860   000FCA                     T2CON           equ	4042	;# 
  1861   000FCB                     PR2             equ	4043	;# 
  1862   000FCB                     MEMCON          equ	4043	;# 
  1863   000FCC                     TMR2            equ	4044	;# 
  1864   000FCD                     T1CON           equ	4045	;# 
  1865   000FCE                     TMR1            equ	4046	;# 
  1866   000FCE                     TMR1L           equ	4046	;# 
  1867   000FCF                     TMR1H           equ	4047	;# 
  1868   000FD0                     RCON            equ	4048	;# 
  1869   000FD1                     WDTCON          equ	4049	;# 
  1870   000FD2                     HLVDCON         equ	4050	;# 
  1871   000FD2                     LVDCON          equ	4050	;# 
  1872   000FD3                     OSCCON          equ	4051	;# 
  1873   000FD5                     T0CON           equ	4053	;# 
  1874   000FD6                     TMR0            equ	4054	;# 
  1875   000FD6                     TMR0L           equ	4054	;# 
  1876   000FD7                     TMR0H           equ	4055	;# 
  1877   000FD8                     STATUS          equ	4056	;# 
  1878   000FD9                     FSR2            equ	4057	;# 
  1879   000FD9                     FSR2L           equ	4057	;# 
  1880   000FDA                     FSR2H           equ	4058	;# 
  1881   000FDB                     PLUSW2          equ	4059	;# 
  1882   000FDC                     PREINC2         equ	4060	;# 
  1883   000FDD                     POSTDEC2        equ	4061	;# 
  1884   000FDE                     POSTINC2        equ	4062	;# 
  1885   000FDF                     INDF2           equ	4063	;# 
  1886   000FE0                     BSR             equ	4064	;# 
  1887   000FE1                     FSR1            equ	4065	;# 
  1888   000FE1                     FSR1L           equ	4065	;# 
  1889   000FE2                     FSR1H           equ	4066	;# 
  1890   000FE3                     PLUSW1          equ	4067	;# 
  1891   000FE4                     PREINC1         equ	4068	;# 
  1892   000FE5                     POSTDEC1        equ	4069	;# 
  1893   000FE6                     POSTINC1        equ	4070	;# 
  1894   000FE7                     INDF1           equ	4071	;# 
  1895   000FE8                     WREG            equ	4072	;# 
  1896   000FE9                     FSR0            equ	4073	;# 
  1897   000FE9                     FSR0L           equ	4073	;# 
  1898   000FEA                     FSR0H           equ	4074	;# 
  1899   000FEB                     PLUSW0          equ	4075	;# 
  1900   000FEC                     PREINC0         equ	4076	;# 
  1901   000FED                     POSTDEC0        equ	4077	;# 
  1902   000FEE                     POSTINC0        equ	4078	;# 
  1903   000FEF                     INDF0           equ	4079	;# 
  1904   000FF0                     INTCON3         equ	4080	;# 
  1905   000FF1                     INTCON2         equ	4081	;# 
  1906   000FF2                     INTCON          equ	4082	;# 
  1907   000FF3                     PROD            equ	4083	;# 
  1908   000FF3                     PRODL           equ	4083	;# 
  1909   000FF4                     PRODH           equ	4084	;# 
  1910   000FF5                     TABLAT          equ	4085	;# 
  1911   000FF6                     TBLPTR          equ	4086	;# 
  1912   000FF6                     TBLPTRL         equ	4086	;# 
  1913   000FF7                     TBLPTRH         equ	4087	;# 
  1914   000FF8                     TBLPTRU         equ	4088	;# 
  1915   000FF9                     PCLAT           equ	4089	;# 
  1916   000FF9                     PC              equ	4089	;# 
  1917   000FF9                     PCL             equ	4089	;# 
  1918   000FFA                     PCLATH          equ	4090	;# 
  1919   000FFB                     PCLATU          equ	4091	;# 
  1920   000FFC                     STKPTR          equ	4092	;# 
  1921   000FFD                     TOS             equ	4093	;# 
  1922   000FFD                     TOSL            equ	4093	;# 
  1923   000FFE                     TOSH            equ	4094	;# 
  1924   000FFF                     TOSU            equ	4095	;# 
  1925   000F80                     PORTA           equ	3968	;# 
  1926   000F81                     PORTB           equ	3969	;# 
  1927   000F82                     PORTC           equ	3970	;# 
  1928   000F83                     PORTD           equ	3971	;# 
  1929   000F84                     PORTE           equ	3972	;# 
  1930   000F89                     LATA            equ	3977	;# 
  1931   000F8A                     LATB            equ	3978	;# 
  1932   000F8B                     LATC            equ	3979	;# 
  1933   000F8C                     LATD            equ	3980	;# 
  1934   000F8D                     LATE            equ	3981	;# 
  1935   000F92                     TRISA           equ	3986	;# 
  1936   000F92                     DDRA            equ	3986	;# 
  1937   000F93                     TRISB           equ	3987	;# 
  1938   000F93                     DDRB            equ	3987	;# 
  1939   000F94                     TRISC           equ	3988	;# 
  1940   000F94                     DDRC            equ	3988	;# 
  1941   000F95                     TRISD           equ	3989	;# 
  1942   000F95                     DDRD            equ	3989	;# 
  1943   000F96                     TRISE           equ	3990	;# 
  1944   000F96                     DDRE            equ	3990	;# 
  1945   000F9B                     OSCTUNE         equ	3995	;# 
  1946   000F9D                     PIE1            equ	3997	;# 
  1947   000F9E                     PIR1            equ	3998	;# 
  1948   000F9F                     IPR1            equ	3999	;# 
  1949   000FA0                     PIE2            equ	4000	;# 
  1950   000FA1                     PIR2            equ	4001	;# 
  1951   000FA2                     IPR2            equ	4002	;# 
  1952   000FA6                     EECON1          equ	4006	;# 
  1953   000FA7                     EECON2          equ	4007	;# 
  1954   000FA8                     EEDATA          equ	4008	;# 
  1955   000FA9                     EEADR           equ	4009	;# 
  1956   000FAA                     EEADRH          equ	4010	;# 
  1957   000FAB                     RCSTA           equ	4011	;# 
  1958   000FAB                     RCSTA1          equ	4011	;# 
  1959   000FAC                     TXSTA           equ	4012	;# 
  1960   000FAC                     TXSTA1          equ	4012	;# 
  1961   000FAD                     TXREG           equ	4013	;# 
  1962   000FAD                     TXREG1          equ	4013	;# 
  1963   000FAE                     RCREG           equ	4014	;# 
  1964   000FAE                     RCREG1          equ	4014	;# 
  1965   000FAF                     SPBRG           equ	4015	;# 
  1966   000FAF                     SPBRG1          equ	4015	;# 
  1967   000FB0                     SPBRGH          equ	4016	;# 
  1968   000FB1                     T3CON           equ	4017	;# 
  1969   000FB2                     TMR3            equ	4018	;# 
  1970   000FB2                     TMR3L           equ	4018	;# 
  1971   000FB3                     TMR3H           equ	4019	;# 
  1972   000FB4                     CMCON           equ	4020	;# 
  1973   000FB5                     CVRCON          equ	4021	;# 
  1974   000FB6                     ECCP1AS         equ	4022	;# 
  1975   000FB7                     PWM1CON         equ	4023	;# 
  1976   000FB8                     BAUDCON         equ	4024	;# 
  1977   000FB8                     BAUDCTL         equ	4024	;# 
  1978   000FBA                     CCP2CON         equ	4026	;# 
  1979   000FBB                     CCPR2           equ	4027	;# 
  1980   000FBB                     CCPR2L          equ	4027	;# 
  1981   000FBC                     CCPR2H          equ	4028	;# 
  1982   000FBD                     CCP1CON         equ	4029	;# 
  1983   000FBE                     CCPR1           equ	4030	;# 
  1984   000FBE                     CCPR1L          equ	4030	;# 
  1985   000FBF                     CCPR1H          equ	4031	;# 
  1986   000FC0                     ADCON2          equ	4032	;# 
  1987   000FC1                     ADCON1          equ	4033	;# 
  1988   000FC2                     ADCON0          equ	4034	;# 
  1989   000FC3                     ADRES           equ	4035	;# 
  1990   000FC3                     ADRESL          equ	4035	;# 
  1991   000FC4                     ADRESH          equ	4036	;# 
  1992   000FC5                     SSPCON2         equ	4037	;# 
  1993   000FC6                     SSPCON1         equ	4038	;# 
  1994   000FC7                     SSPSTAT         equ	4039	;# 
  1995   000FC8                     SSPADD          equ	4040	;# 
  1996   000FC9                     SSPBUF          equ	4041	;# 
  1997   000FCA                     T2CON           equ	4042	;# 
  1998   000FCB                     PR2             equ	4043	;# 
  1999   000FCB                     MEMCON          equ	4043	;# 
  2000   000FCC                     TMR2            equ	4044	;# 
  2001   000FCD                     T1CON           equ	4045	;# 
  2002   000FCE                     TMR1            equ	4046	;# 
  2003   000FCE                     TMR1L           equ	4046	;# 
  2004   000FCF                     TMR1H           equ	4047	;# 
  2005   000FD0                     RCON            equ	4048	;# 
  2006   000FD1                     WDTCON          equ	4049	;# 
  2007   000FD2                     HLVDCON         equ	4050	;# 
  2008   000FD2                     LVDCON          equ	4050	;# 
  2009   000FD3                     OSCCON          equ	4051	;# 
  2010   000FD5                     T0CON           equ	4053	;# 
  2011   000FD6                     TMR0            equ	4054	;# 
  2012   000FD6                     TMR0L           equ	4054	;# 
  2013   000FD7                     TMR0H           equ	4055	;# 
  2014   000FD8                     STATUS          equ	4056	;# 
  2015   000FD9                     FSR2            equ	4057	;# 
  2016   000FD9                     FSR2L           equ	4057	;# 
  2017   000FDA                     FSR2H           equ	4058	;# 
  2018   000FDB                     PLUSW2          equ	4059	;# 
  2019   000FDC                     PREINC2         equ	4060	;# 
  2020   000FDD                     POSTDEC2        equ	4061	;# 
  2021   000FDE                     POSTINC2        equ	4062	;# 
  2022   000FDF                     INDF2           equ	4063	;# 
  2023   000FE0                     BSR             equ	4064	;# 
  2024   000FE1                     FSR1            equ	4065	;# 
  2025   000FE1                     FSR1L           equ	4065	;# 
  2026   000FE2                     FSR1H           equ	4066	;# 
  2027   000FE3                     PLUSW1          equ	4067	;# 
  2028   000FE4                     PREINC1         equ	4068	;# 
  2029   000FE5                     POSTDEC1        equ	4069	;# 
  2030   000FE6                     POSTINC1        equ	4070	;# 
  2031   000FE7                     INDF1           equ	4071	;# 
  2032   000FE8                     WREG            equ	4072	;# 
  2033   000FE9                     FSR0            equ	4073	;# 
  2034   000FE9                     FSR0L           equ	4073	;# 
  2035   000FEA                     FSR0H           equ	4074	;# 
  2036   000FEB                     PLUSW0          equ	4075	;# 
  2037   000FEC                     PREINC0         equ	4076	;# 
  2038   000FED                     POSTDEC0        equ	4077	;# 
  2039   000FEE                     POSTINC0        equ	4078	;# 
  2040   000FEF                     INDF0           equ	4079	;# 
  2041   000FF0                     INTCON3         equ	4080	;# 
  2042   000FF1                     INTCON2         equ	4081	;# 
  2043   000FF2                     INTCON          equ	4082	;# 
  2044   000FF3                     PROD            equ	4083	;# 
  2045   000FF3                     PRODL           equ	4083	;# 
  2046   000FF4                     PRODH           equ	4084	;# 
  2047   000FF5                     TABLAT          equ	4085	;# 
  2048   000FF6                     TBLPTR          equ	4086	;# 
  2049   000FF6                     TBLPTRL         equ	4086	;# 
  2050   000FF7                     TBLPTRH         equ	4087	;# 
  2051   000FF8                     TBLPTRU         equ	4088	;# 
  2052   000FF9                     PCLAT           equ	4089	;# 
  2053   000FF9                     PC              equ	4089	;# 
  2054   000FF9                     PCL             equ	4089	;# 
  2055   000FFA                     PCLATH          equ	4090	;# 
  2056   000FFB                     PCLATU          equ	4091	;# 
  2057   000FFC                     STKPTR          equ	4092	;# 
  2058   000FFD                     TOS             equ	4093	;# 
  2059   000FFD                     TOSL            equ	4093	;# 
  2060   000FFE                     TOSH            equ	4094	;# 
  2061   000FFF                     TOSU            equ	4095	;# 
  2062   000F80                     PORTA           equ	3968	;# 
  2063   000F81                     PORTB           equ	3969	;# 
  2064   000F82                     PORTC           equ	3970	;# 
  2065   000F83                     PORTD           equ	3971	;# 
  2066   000F84                     PORTE           equ	3972	;# 
  2067   000F89                     LATA            equ	3977	;# 
  2068   000F8A                     LATB            equ	3978	;# 
  2069   000F8B                     LATC            equ	3979	;# 
  2070   000F8C                     LATD            equ	3980	;# 
  2071   000F8D                     LATE            equ	3981	;# 
  2072   000F92                     TRISA           equ	3986	;# 
  2073   000F92                     DDRA            equ	3986	;# 
  2074   000F93                     TRISB           equ	3987	;# 
  2075   000F93                     DDRB            equ	3987	;# 
  2076   000F94                     TRISC           equ	3988	;# 
  2077   000F94                     DDRC            equ	3988	;# 
  2078   000F95                     TRISD           equ	3989	;# 
  2079   000F95                     DDRD            equ	3989	;# 
  2080   000F96                     TRISE           equ	3990	;# 
  2081   000F96                     DDRE            equ	3990	;# 
  2082   000F9B                     OSCTUNE         equ	3995	;# 
  2083   000F9D                     PIE1            equ	3997	;# 
  2084   000F9E                     PIR1            equ	3998	;# 
  2085   000F9F                     IPR1            equ	3999	;# 
  2086   000FA0                     PIE2            equ	4000	;# 
  2087   000FA1                     PIR2            equ	4001	;# 
  2088   000FA2                     IPR2            equ	4002	;# 
  2089   000FA6                     EECON1          equ	4006	;# 
  2090   000FA7                     EECON2          equ	4007	;# 
  2091   000FA8                     EEDATA          equ	4008	;# 
  2092   000FA9                     EEADR           equ	4009	;# 
  2093   000FAA                     EEADRH          equ	4010	;# 
  2094   000FAB                     RCSTA           equ	4011	;# 
  2095   000FAB                     RCSTA1          equ	4011	;# 
  2096   000FAC                     TXSTA           equ	4012	;# 
  2097   000FAC                     TXSTA1          equ	4012	;# 
  2098   000FAD                     TXREG           equ	4013	;# 
  2099   000FAD                     TXREG1          equ	4013	;# 
  2100   000FAE                     RCREG           equ	4014	;# 
  2101   000FAE                     RCREG1          equ	4014	;# 
  2102   000FAF                     SPBRG           equ	4015	;# 
  2103   000FAF                     SPBRG1          equ	4015	;# 
  2104   000FB0                     SPBRGH          equ	4016	;# 
  2105   000FB1                     T3CON           equ	4017	;# 
  2106   000FB2                     TMR3            equ	4018	;# 
  2107   000FB2                     TMR3L           equ	4018	;# 
  2108   000FB3                     TMR3H           equ	4019	;# 
  2109   000FB4                     CMCON           equ	4020	;# 
  2110   000FB5                     CVRCON          equ	4021	;# 
  2111   000FB6                     ECCP1AS         equ	4022	;# 
  2112   000FB7                     PWM1CON         equ	4023	;# 
  2113   000FB8                     BAUDCON         equ	4024	;# 
  2114   000FB8                     BAUDCTL         equ	4024	;# 
  2115   000FBA                     CCP2CON         equ	4026	;# 
  2116   000FBB                     CCPR2           equ	4027	;# 
  2117   000FBB                     CCPR2L          equ	4027	;# 
  2118   000FBC                     CCPR2H          equ	4028	;# 
  2119   000FBD                     CCP1CON         equ	4029	;# 
  2120   000FBE                     CCPR1           equ	4030	;# 
  2121   000FBE                     CCPR1L          equ	4030	;# 
  2122   000FBF                     CCPR1H          equ	4031	;# 
  2123   000FC0                     ADCON2          equ	4032	;# 
  2124   000FC1                     ADCON1          equ	4033	;# 
  2125   000FC2                     ADCON0          equ	4034	;# 
  2126   000FC3                     ADRES           equ	4035	;# 
  2127   000FC3                     ADRESL          equ	4035	;# 
  2128   000FC4                     ADRESH          equ	4036	;# 
  2129   000FC5                     SSPCON2         equ	4037	;# 
  2130   000FC6                     SSPCON1         equ	4038	;# 
  2131   000FC7                     SSPSTAT         equ	4039	;# 
  2132   000FC8                     SSPADD          equ	4040	;# 
  2133   000FC9                     SSPBUF          equ	4041	;# 
  2134   000FCA                     T2CON           equ	4042	;# 
  2135   000FCB                     PR2             equ	4043	;# 
  2136   000FCB                     MEMCON          equ	4043	;# 
  2137   000FCC                     TMR2            equ	4044	;# 
  2138   000FCD                     T1CON           equ	4045	;# 
  2139   000FCE                     TMR1            equ	4046	;# 
  2140   000FCE                     TMR1L           equ	4046	;# 
  2141   000FCF                     TMR1H           equ	4047	;# 
  2142   000FD0                     RCON            equ	4048	;# 
  2143   000FD1                     WDTCON          equ	4049	;# 
  2144   000FD2                     HLVDCON         equ	4050	;# 
  2145   000FD2                     LVDCON          equ	4050	;# 
  2146   000FD3                     OSCCON          equ	4051	;# 
  2147   000FD5                     T0CON           equ	4053	;# 
  2148   000FD6                     TMR0            equ	4054	;# 
  2149   000FD6                     TMR0L           equ	4054	;# 
  2150   000FD7                     TMR0H           equ	4055	;# 
  2151   000FD8                     STATUS          equ	4056	;# 
  2152   000FD9                     FSR2            equ	4057	;# 
  2153   000FD9                     FSR2L           equ	4057	;# 
  2154   000FDA                     FSR2H           equ	4058	;# 
  2155   000FDB                     PLUSW2          equ	4059	;# 
  2156   000FDC                     PREINC2         equ	4060	;# 
  2157   000FDD                     POSTDEC2        equ	4061	;# 
  2158   000FDE                     POSTINC2        equ	4062	;# 
  2159   000FDF                     INDF2           equ	4063	;# 
  2160   000FE0                     BSR             equ	4064	;# 
  2161   000FE1                     FSR1            equ	4065	;# 
  2162   000FE1                     FSR1L           equ	4065	;# 
  2163   000FE2                     FSR1H           equ	4066	;# 
  2164   000FE3                     PLUSW1          equ	4067	;# 
  2165   000FE4                     PREINC1         equ	4068	;# 
  2166   000FE5                     POSTDEC1        equ	4069	;# 
  2167   000FE6                     POSTINC1        equ	4070	;# 
  2168   000FE7                     INDF1           equ	4071	;# 
  2169   000FE8                     WREG            equ	4072	;# 
  2170   000FE9                     FSR0            equ	4073	;# 
  2171   000FE9                     FSR0L           equ	4073	;# 
  2172   000FEA                     FSR0H           equ	4074	;# 
  2173   000FEB                     PLUSW0          equ	4075	;# 
  2174   000FEC                     PREINC0         equ	4076	;# 
  2175   000FED                     POSTDEC0        equ	4077	;# 
  2176   000FEE                     POSTINC0        equ	4078	;# 
  2177   000FEF                     INDF0           equ	4079	;# 
  2178   000FF0                     INTCON3         equ	4080	;# 
  2179   000FF1                     INTCON2         equ	4081	;# 
  2180   000FF2                     INTCON          equ	4082	;# 
  2181   000FF3                     PROD            equ	4083	;# 
  2182   000FF3                     PRODL           equ	4083	;# 
  2183   000FF4                     PRODH           equ	4084	;# 
  2184   000FF5                     TABLAT          equ	4085	;# 
  2185   000FF6                     TBLPTR          equ	4086	;# 
  2186   000FF6                     TBLPTRL         equ	4086	;# 
  2187   000FF7                     TBLPTRH         equ	4087	;# 
  2188   000FF8                     TBLPTRU         equ	4088	;# 
  2189   000FF9                     PCLAT           equ	4089	;# 
  2190   000FF9                     PC              equ	4089	;# 
  2191   000FF9                     PCL             equ	4089	;# 
  2192   000FFA                     PCLATH          equ	4090	;# 
  2193   000FFB                     PCLATU          equ	4091	;# 
  2194   000FFC                     STKPTR          equ	4092	;# 
  2195   000FFD                     TOS             equ	4093	;# 
  2196   000FFD                     TOSL            equ	4093	;# 
  2197   000FFE                     TOSH            equ	4094	;# 
  2198   000FFF                     TOSU            equ	4095	;# 
  2199   000F80                     PORTA           equ	3968	;# 
  2200   000F81                     PORTB           equ	3969	;# 
  2201   000F82                     PORTC           equ	3970	;# 
  2202   000F83                     PORTD           equ	3971	;# 
  2203   000F84                     PORTE           equ	3972	;# 
  2204   000F89                     LATA            equ	3977	;# 
  2205   000F8A                     LATB            equ	3978	;# 
  2206   000F8B                     LATC            equ	3979	;# 
  2207   000F8C                     LATD            equ	3980	;# 
  2208   000F8D                     LATE            equ	3981	;# 
  2209   000F92                     TRISA           equ	3986	;# 
  2210   000F92                     DDRA            equ	3986	;# 
  2211   000F93                     TRISB           equ	3987	;# 
  2212   000F93                     DDRB            equ	3987	;# 
  2213   000F94                     TRISC           equ	3988	;# 
  2214   000F94                     DDRC            equ	3988	;# 
  2215   000F95                     TRISD           equ	3989	;# 
  2216   000F95                     DDRD            equ	3989	;# 
  2217   000F96                     TRISE           equ	3990	;# 
  2218   000F96                     DDRE            equ	3990	;# 
  2219   000F9B                     OSCTUNE         equ	3995	;# 
  2220   000F9D                     PIE1            equ	3997	;# 
  2221   000F9E                     PIR1            equ	3998	;# 
  2222   000F9F                     IPR1            equ	3999	;# 
  2223   000FA0                     PIE2            equ	4000	;# 
  2224   000FA1                     PIR2            equ	4001	;# 
  2225   000FA2                     IPR2            equ	4002	;# 
  2226   000FA6                     EECON1          equ	4006	;# 
  2227   000FA7                     EECON2          equ	4007	;# 
  2228   000FA8                     EEDATA          equ	4008	;# 
  2229   000FA9                     EEADR           equ	4009	;# 
  2230   000FAA                     EEADRH          equ	4010	;# 
  2231   000FAB                     RCSTA           equ	4011	;# 
  2232   000FAB                     RCSTA1          equ	4011	;# 
  2233   000FAC                     TXSTA           equ	4012	;# 
  2234   000FAC                     TXSTA1          equ	4012	;# 
  2235   000FAD                     TXREG           equ	4013	;# 
  2236   000FAD                     TXREG1          equ	4013	;# 
  2237   000FAE                     RCREG           equ	4014	;# 
  2238   000FAE                     RCREG1          equ	4014	;# 
  2239   000FAF                     SPBRG           equ	4015	;# 
  2240   000FAF                     SPBRG1          equ	4015	;# 
  2241   000FB0                     SPBRGH          equ	4016	;# 
  2242   000FB1                     T3CON           equ	4017	;# 
  2243   000FB2                     TMR3            equ	4018	;# 
  2244   000FB2                     TMR3L           equ	4018	;# 
  2245   000FB3                     TMR3H           equ	4019	;# 
  2246   000FB4                     CMCON           equ	4020	;# 
  2247   000FB5                     CVRCON          equ	4021	;# 
  2248   000FB6                     ECCP1AS         equ	4022	;# 
  2249   000FB7                     PWM1CON         equ	4023	;# 
  2250   000FB8                     BAUDCON         equ	4024	;# 
  2251   000FB8                     BAUDCTL         equ	4024	;# 
  2252   000FBA                     CCP2CON         equ	4026	;# 
  2253   000FBB                     CCPR2           equ	4027	;# 
  2254   000FBB                     CCPR2L          equ	4027	;# 
  2255   000FBC                     CCPR2H          equ	4028	;# 
  2256   000FBD                     CCP1CON         equ	4029	;# 
  2257   000FBE                     CCPR1           equ	4030	;# 
  2258   000FBE                     CCPR1L          equ	4030	;# 
  2259   000FBF                     CCPR1H          equ	4031	;# 
  2260   000FC0                     ADCON2          equ	4032	;# 
  2261   000FC1                     ADCON1          equ	4033	;# 
  2262   000FC2                     ADCON0          equ	4034	;# 
  2263   000FC3                     ADRES           equ	4035	;# 
  2264   000FC3                     ADRESL          equ	4035	;# 
  2265   000FC4                     ADRESH          equ	4036	;# 
  2266   000FC5                     SSPCON2         equ	4037	;# 
  2267   000FC6                     SSPCON1         equ	4038	;# 
  2268   000FC7                     SSPSTAT         equ	4039	;# 
  2269   000FC8                     SSPADD          equ	4040	;# 
  2270   000FC9                     SSPBUF          equ	4041	;# 
  2271   000FCA                     T2CON           equ	4042	;# 
  2272   000FCB                     PR2             equ	4043	;# 
  2273   000FCB                     MEMCON          equ	4043	;# 
  2274   000FCC                     TMR2            equ	4044	;# 
  2275   000FCD                     T1CON           equ	4045	;# 
  2276   000FCE                     TMR1            equ	4046	;# 
  2277   000FCE                     TMR1L           equ	4046	;# 
  2278   000FCF                     TMR1H           equ	4047	;# 
  2279   000FD0                     RCON            equ	4048	;# 
  2280   000FD1                     WDTCON          equ	4049	;# 
  2281   000FD2                     HLVDCON         equ	4050	;# 
  2282   000FD2                     LVDCON          equ	4050	;# 
  2283   000FD3                     OSCCON          equ	4051	;# 
  2284   000FD5                     T0CON           equ	4053	;# 
  2285   000FD6                     TMR0            equ	4054	;# 
  2286   000FD6                     TMR0L           equ	4054	;# 
  2287   000FD7                     TMR0H           equ	4055	;# 
  2288   000FD8                     STATUS          equ	4056	;# 
  2289   000FD9                     FSR2            equ	4057	;# 
  2290   000FD9                     FSR2L           equ	4057	;# 
  2291   000FDA                     FSR2H           equ	4058	;# 
  2292   000FDB                     PLUSW2          equ	4059	;# 
  2293   000FDC                     PREINC2         equ	4060	;# 
  2294   000FDD                     POSTDEC2        equ	4061	;# 
  2295   000FDE                     POSTINC2        equ	4062	;# 
  2296   000FDF                     INDF2           equ	4063	;# 
  2297   000FE0                     BSR             equ	4064	;# 
  2298   000FE1                     FSR1            equ	4065	;# 
  2299   000FE1                     FSR1L           equ	4065	;# 
  2300   000FE2                     FSR1H           equ	4066	;# 
  2301   000FE3                     PLUSW1          equ	4067	;# 
  2302   000FE4                     PREINC1         equ	4068	;# 
  2303   000FE5                     POSTDEC1        equ	4069	;# 
  2304   000FE6                     POSTINC1        equ	4070	;# 
  2305   000FE7                     INDF1           equ	4071	;# 
  2306   000FE8                     WREG            equ	4072	;# 
  2307   000FE9                     FSR0            equ	4073	;# 
  2308   000FE9                     FSR0L           equ	4073	;# 
  2309   000FEA                     FSR0H           equ	4074	;# 
  2310   000FEB                     PLUSW0          equ	4075	;# 
  2311   000FEC                     PREINC0         equ	4076	;# 
  2312   000FED                     POSTDEC0        equ	4077	;# 
  2313   000FEE                     POSTINC0        equ	4078	;# 
  2314   000FEF                     INDF0           equ	4079	;# 
  2315   000FF0                     INTCON3         equ	4080	;# 
  2316   000FF1                     INTCON2         equ	4081	;# 
  2317   000FF2                     INTCON          equ	4082	;# 
  2318   000FF3                     PROD            equ	4083	;# 
  2319   000FF3                     PRODL           equ	4083	;# 
  2320   000FF4                     PRODH           equ	4084	;# 
  2321   000FF5                     TABLAT          equ	4085	;# 
  2322   000FF6                     TBLPTR          equ	4086	;# 
  2323   000FF6                     TBLPTRL         equ	4086	;# 
  2324   000FF7                     TBLPTRH         equ	4087	;# 
  2325   000FF8                     TBLPTRU         equ	4088	;# 
  2326   000FF9                     PCLAT           equ	4089	;# 
  2327   000FF9                     PC              equ	4089	;# 
  2328   000FF9                     PCL             equ	4089	;# 
  2329   000FFA                     PCLATH          equ	4090	;# 
  2330   000FFB                     PCLATU          equ	4091	;# 
  2331   000FFC                     STKPTR          equ	4092	;# 
  2332   000FFD                     TOS             equ	4093	;# 
  2333   000FFD                     TOSL            equ	4093	;# 
  2334   000FFE                     TOSH            equ	4094	;# 
  2335   000FFF                     TOSU            equ	4095	;# 
  2336                           
  2337                           	psect	idataCOMRAM
  2338   002872                     __pidataCOMRAM:
  2339                           	callstack 0
  2340                           
  2341                           ;initializer for _Motor2
  2342   002872  21                 	db	33
  2343   002873  31                 	db	49
  2344                           
  2345                           ;initializer for _Motor1
  2346   002874  01                 	db	1
  2347   002875  11                 	db	17
  2348                           
  2349                           ;initializer for _RB7_Flag
  2350   002876  01                 	db	1
  2351                           
  2352                           ;initializer for _RB6_Flag
  2353   002877  01                 	db	1
  2354                           
  2355                           ;initializer for _RB5_Flag
  2356   002878  01                 	db	1
  2357                           
  2358                           ;initializer for _RB4_Flag
  2359   002879  01                 	db	1
  2360                           
  2361                           ;initializer for _Led3
  2362   00287A  22                 	db	34
  2363                           
  2364                           ;initializer for _Led2
  2365   00287B  12                 	db	18
  2366                           
  2367                           ;initializer for _Led1
  2368   00287C  02                 	db	2
  2369                           
  2370                           	psect	idataBANK0
  2371   0022F4                     __pidataBANK0:
  2372                           	callstack 0
  2373                           
  2374                           ;initializer for _LCD1_8Bit
  2375   0022F4  42                 	db	66
  2376   0022F5  4A                 	db	74
  2377   0022F6  43                 	db	67
  2378   0022F7  4B                 	db	75
  2379   0022F8  53                 	db	83
  2380   0022F9  5B                 	db	91
  2381   0022FA  63                 	db	99
  2382   0022FB  6B                 	db	107
  2383   0022FC  73                 	db	115
  2384   0022FD  7B                 	db	123
  2385                           
  2386                           ;initializer for _KeyPad1
  2387   0022FE  42                 	db	66
  2388   0022FF  4A                 	db	74
  2389   002300  52                 	db	82
  2390   002301  5A                 	db	90
  2391   002302  22                 	db	34
  2392   002303  2A                 	db	42
  2393   002304  32                 	db	50
  2394   002305  3A                 	db	58
  2395                           
  2396                           ;initializer for _RB_7
  2397   002306  86                 	db	low _RB7_isr
  2398   002307  28                 	db	high _RB7_isr
  2399   002308  00                 	db	0
  2400   002309  00                 	db	0
  2401   00230A  39                 	db	57
  2402   00230B  01                 	db	1
  2403                           
  2404                           ;initializer for _RB_6
  2405   00230C  80                 	db	low _RB6_isr
  2406   00230D  28                 	db	high _RB6_isr
  2407   00230E  00                 	db	0
  2408   00230F  00                 	db	0
  2409   002310  31                 	db	49
  2410   002311  01                 	db	1
  2411                           
  2412                           ;initializer for _RB_5
  2413   002312  82                 	db	low _RB5_isr
  2414   002313  28                 	db	high _RB5_isr
  2415   002314  00                 	db	0
  2416   002315  00                 	db	0
  2417   002316  29                 	db	41
  2418   002317  01                 	db	1
  2419                           
  2420                           ;initializer for _RB_4
  2421   002318  84                 	db	low _RB4_isr
  2422   002319  28                 	db	high _RB4_isr
  2423   00231A  00                 	db	0
  2424   00231B  00                 	db	0
  2425   00231C  21                 	db	33
  2426   00231D  01                 	db	1
  2427                           
  2428                           ;initializer for _EX_INT2
  2429   00231E  8C                 	db	low _INT2_isr
  2430   00231F  28                 	db	high _INT2_isr
  2431   002320  11                 	db	17
  2432   002321  01                 	db	1
  2433   002322  02                 	db	2
  2434   002323  01                 	db	1
  2435                           
  2436                           ;initializer for _EX_INT1
  2437   002324  88                 	db	low _INT1_isr
  2438   002325  28                 	db	high _INT1_isr
  2439   002326  09                 	db	9
  2440   002327  01                 	db	1
  2441   002328  01                 	db	1
  2442   002329  01                 	db	1
  2443                           
  2444                           ;initializer for _EX_INT0
  2445   00232A  8A                 	db	low _INT0_isr
  2446   00232B  28                 	db	high _INT0_isr
  2447   00232C  01                 	db	1
  2448   00232D  01                 	db	1
  2449   00232E  00                 	db	0
  2450   00232F  01                 	db	1
  2451                           
  2452                           ;initializer for _Seg1
  2453   002330  41                 	db	65
  2454   002331  49                 	db	73
  2455   002332  51                 	db	81
  2456   002333  59                 	db	89
  2457   002334  00                 	db	0
  2458                           
  2459                           ;initializer for _BTN1
  2460   002335  01                 	db	1
  2461   002336  01                 	db	1
  2462   002337  00                 	db	0
  2463                           
  2464                           ;initializer for _adc4
  2465   002338  5C                 	db	low _ADC_isr
  2466   002339  28                 	db	high _ADC_isr
  2467   00233A  00                 	db	0
  2468   00233B  05                 	db	5
  2469   00233C  00                 	db	0
  2470   00233D  03                 	db	3
  2471   00233E  02                 	db	2
  2472                           
  2473                           ;initializer for _adc3
  2474   00233F  5C                 	db	low _ADC_isr
  2475   002340  28                 	db	high _ADC_isr
  2476   002341  00                 	db	0
  2477   002342  05                 	db	5
  2478   002343  00                 	db	0
  2479   002344  02                 	db	2
  2480   002345  02                 	db	2
  2481                           
  2482                           ;initializer for _adc2
  2483   002346  5C                 	db	low _ADC_isr
  2484   002347  28                 	db	high _ADC_isr
  2485   002348  00                 	db	0
  2486   002349  05                 	db	5
  2487   00234A  00                 	db	0
  2488   00234B  01                 	db	1
  2489   00234C  02                 	db	2
  2490                           
  2491                           ;initializer for _adc1
  2492   00234D  5C                 	db	low _ADC_isr
  2493   00234E  28                 	db	high _ADC_isr
  2494   00234F  00                 	db	0
  2495   002350  05                 	db	5
  2496   002351  00                 	db	0
  2497   002352  00                 	db	0
  2498   002353  02                 	db	2
  2499                           
  2500                           ;initializer for _LCD1_4Bit
  2501   002354  43                 	db	67
  2502   002355  4B                 	db	75
  2503   002356  53                 	db	83
  2504   002357  5B                 	db	91
  2505   002358  63                 	db	99
  2506   002359  6B                 	db	107
  2507                           
  2508                           	psect	smallconst
  2509   001000                     __psmallconst:
  2510                           	callstack 0
  2511   001000  00                 	db	0
  2512   001001                     _btn_Value:
  2513                           	callstack 0
  2514   001001  07                 	db	7
  2515   001002  08                 	db	8
  2516   001003  09                 	db	9
  2517   001004  2F                 	db	47
  2518   001005  04                 	db	4
  2519   001006  05                 	db	5
  2520   001007  06                 	db	6
  2521   001008  2A                 	db	42
  2522   001009  01                 	db	1
  2523   00100A  02                 	db	2
  2524   00100B  03                 	db	3
  2525   00100C  2D                 	db	45
  2526   00100D  23                 	db	35
  2527   00100E  00                 	db	0
  2528   00100F  3D                 	db	61
  2529   001010  2B                 	db	43
  2530   001011                     __end_of_btn_Value:
  2531                           	callstack 0
  2532   000F81                     _PORTBbits      set	3969
  2533   000FF1                     _INTCON2bits    set	4081
  2534   000FF0                     _INTCON3bits    set	4080
  2535   000F84                     _PORTE          set	3972
  2536   000F83                     _PORTD          set	3971
  2537   000F82                     _PORTC          set	3970
  2538   000F81                     _PORTB          set	3969
  2539   000F80                     _PORTA          set	3968
  2540   000F8D                     _LATE           set	3981
  2541   000F8C                     _LATD           set	3980
  2542   000F8B                     _LATC           set	3979
  2543   000F8A                     _LATB           set	3978
  2544   000F89                     _LATA           set	3977
  2545   000F95                     _TRISD          set	3989
  2546   000F94                     _TRISC          set	3988
  2547   000FA7                     _EECON2         set	4007
  2548   000FA6                     _EECON1bits     set	4006
  2549   000FA8                     _EEDATA         set	4008
  2550   000FA9                     _EEADR          set	4009
  2551   000FAA                     _EEADRH         set	4010
  2552   000FC1                     _ADCON1bits     set	4033
  2553   000F93                     _TRISB          set	3987
  2554   000F96                     _TRISE          set	3990
  2555   000F92                     _TRISA          set	3986
  2556   000FC3                     _ADRESL         set	4035
  2557   000FC4                     _ADRESH         set	4036
  2558   000F9F                     _IPR1bits       set	3999
  2559   000F9E                     _PIR1bits       set	3998
  2560   000F9D                     _PIE1bits       set	3997
  2561   000FF2                     _INTCONbits     set	4082
  2562   000FC0                     _ADCON2bits     set	4032
  2563   000FC2                     _ADCON0bits     set	4034
  2564   001011                     STR_1:
  2565   001011  50                 	db	80	;'P'
  2566   001012  4F                 	db	79	;'O'
  2567   001013  54                 	db	84	;'T'
  2568   001014  31                 	db	49	;'1'
  2569   001015  3A                 	db	58	;':'
  2570   001016  20                 	db	32
  2571   001017  00                 	db	0
  2572   001018                     STR_2:
  2573   001018  50                 	db	80	;'P'
  2574   001019  4F                 	db	79	;'O'
  2575   00101A  54                 	db	84	;'T'
  2576   00101B  32                 	db	50	;'2'
  2577   00101C  3A                 	db	58	;':'
  2578   00101D  20                 	db	32
  2579   00101E  00                 	db	0
  2580   00101F                     STR_3:
  2581   00101F  50                 	db	80	;'P'
  2582   001020  4F                 	db	79	;'O'
  2583   001021  54                 	db	84	;'T'
  2584   001022  33                 	db	51	;'3'
  2585   001023  3A                 	db	58	;':'
  2586   001024  20                 	db	32
  2587   001025  00                 	db	0
  2588   001026                     STR_4:
  2589   001026  50                 	db	80	;'P'
  2590   001027  4F                 	db	79	;'O'
  2591   001028  54                 	db	84	;'T'
  2592   001029  34                 	db	52	;'4'
  2593   00102A  3A                 	db	58	;':'
  2594   00102B  20                 	db	32
  2595   00102C  00                 	db	0
  2596   00102D                     STR_5:
  2597   00102D  25                 	db	37
  2598   00102E  69                 	db	105	;'i'
  2599   00102F  00                 	db	0
  2600   00102D                     STR_6           equ	STR_5
  2601   00102D                     STR_7           equ	STR_5
  2602   001030  00                 	db	0	; dummy byte at the end
  2603   000003                     __activetblptr  equ	3
  2604                           
  2605                           ; #config settings
  2606                           
  2607                           	psect	cinit
  2608   002286                     __pcinit:
  2609                           	callstack 0
  2610   002286                     start_initialization:
  2611                           	callstack 0
  2612   002286                     __initialization:
  2613                           	callstack 0
  2614                           
  2615                           ; Initialize objects allocated to BANK0 (102 bytes)
  2616                           ; load TBLPTR registers with __pidataBANK0
  2617   002286  0EF4               	movlw	low __pidataBANK0
  2618   002288  6EF6               	movwf	tblptrl,c
  2619   00228A  0E22               	movlw	high __pidataBANK0
  2620   00228C  6EF7               	movwf	tblptrh,c
  2621   00228E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2622   002290  6EF8               	movwf	tblptru,c
  2623   002292  EE00  F080         	lfsr	0,__pdataBANK0
  2624   002296  EE10 F066          	lfsr	1,102
  2625   00229A                     copy_data0:
  2626   00229A  0009               	tblrd		*+
  2627   00229C  CFF5 FFEE          	movff	tablat,postinc0
  2628   0022A0  50E5               	movf	postdec1,w,c
  2629   0022A2  50E1               	movf	fsr1l,w,c
  2630   0022A4  E1FA               	bnz	copy_data0
  2631                           
  2632                           ; Initialize objects allocated to COMRAM (11 bytes)
  2633                           ; load TBLPTR registers with __pidataCOMRAM
  2634   0022A6  0E72               	movlw	low __pidataCOMRAM
  2635   0022A8  6EF6               	movwf	tblptrl,c
  2636   0022AA  0E28               	movlw	high __pidataCOMRAM
  2637   0022AC  6EF7               	movwf	tblptrh,c
  2638   0022AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2639   0022B0  6EF8               	movwf	tblptru,c
  2640   0022B2  EE00  F069         	lfsr	0,__pdataCOMRAM
  2641   0022B6  EE10 F00B          	lfsr	1,11
  2642   0022BA                     copy_data1:
  2643   0022BA  0009               	tblrd		*+
  2644   0022BC  CFF5 FFEE          	movff	tablat,postinc0
  2645   0022C0  50E5               	movf	postdec1,w,c
  2646   0022C2  50E1               	movf	fsr1l,w,c
  2647   0022C4  E1FA               	bnz	copy_data1
  2648                           
  2649                           ; Clear objects allocated to BANK1 (32 bytes)
  2650   0022C6  EE01  F000         	lfsr	0,__pbssBANK1
  2651   0022CA  0E20               	movlw	32
  2652   0022CC                     clear_0:
  2653   0022CC  6AEE               	clrf	postinc0,c
  2654   0022CE  06E8               	decf	wreg,f,c
  2655   0022D0  E1FD               	bnz	clear_0
  2656                           
  2657                           ; Clear objects allocated to BANK0 (18 bytes)
  2658   0022D2  EE00  F0E6         	lfsr	0,__pbssBANK0
  2659   0022D6  0E12               	movlw	18
  2660   0022D8                     clear_1:
  2661   0022D8  6AEE               	clrf	postinc0,c
  2662   0022DA  06E8               	decf	wreg,f,c
  2663   0022DC  E1FD               	bnz	clear_1
  2664                           
  2665                           ; Clear objects allocated to COMRAM (52 bytes)
  2666   0022DE  EE00  F001         	lfsr	0,__pbssCOMRAM
  2667   0022E2  0E34               	movlw	52
  2668   0022E4                     clear_2:
  2669   0022E4  6AEE               	clrf	postinc0,c
  2670   0022E6  06E8               	decf	wreg,f,c
  2671   0022E8  E1FD               	bnz	clear_2
  2672   0022EA                     end_of_initialization:
  2673                           	callstack 0
  2674   0022EA                     __end_of__initialization:
  2675                           	callstack 0
  2676   0022EA  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2677   0022EC  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2678   0022EE  0100               	movlb	0
  2679   0022F0  EF9A  F00E         	goto	_main	;jump to C main() function
  2680                           
  2681                           	psect	bssCOMRAM
  2682   000001                     __pbssCOMRAM:
  2683                           	callstack 0
  2684   000001                     _width:
  2685                           	callstack 0
  2686   000001                     	ds	2
  2687   000003                     _prec:
  2688                           	callstack 0
  2689   000003                     	ds	2
  2690   000005                     _RB7_interruptHandler_Low:
  2691                           	callstack 0
  2692   000005                     	ds	2
  2693   000007                     _RB7_interruptHandler_High:
  2694                           	callstack 0
  2695   000007                     	ds	2
  2696   000009                     _RB6_interruptHandler_Low:
  2697                           	callstack 0
  2698   000009                     	ds	2
  2699   00000B                     _RB6_interruptHandler_High:
  2700                           	callstack 0
  2701   00000B                     	ds	2
  2702   00000D                     _RB5_interruptHandler_Low:
  2703                           	callstack 0
  2704   00000D                     	ds	2
  2705   00000F                     _RB5_interruptHandler_High:
  2706                           	callstack 0
  2707   00000F                     	ds	2
  2708   000011                     _RB4_interruptHandler_Low:
  2709                           	callstack 0
  2710   000011                     	ds	2
  2711   000013                     _RB4_interruptHandler_High:
  2712                           	callstack 0
  2713   000013                     	ds	2
  2714   000015                     _INT2_interruptHandler:
  2715                           	callstack 0
  2716   000015                     	ds	2
  2717   000017                     _INT1_interruptHandler:
  2718                           	callstack 0
  2719   000017                     	ds	2
  2720   000019                     _INT0_interruptHandler:
  2721                           	callstack 0
  2722   000019                     	ds	2
  2723   00001B                     _ADC_interruptHandler:
  2724                           	callstack 0
  2725   00001B                     	ds	2
  2726   00001D                     _RetValue_BTN:
  2727                           	callstack 0
  2728   00001D                     	ds	2
  2729   00001F                     _RetValue_KeyPad:
  2730                           	callstack 0
  2731   00001F                     	ds	2
  2732   000021                     _retADC4:
  2733                           	callstack 0
  2734   000021                     	ds	2
  2735   000023                     _retADC3:
  2736                           	callstack 0
  2737   000023                     	ds	2
  2738   000025                     _retADC2:
  2739                           	callstack 0
  2740   000025                     	ds	2
  2741   000027                     _retADC1:
  2742                           	callstack 0
  2743   000027                     	ds	2
  2744   000029                     _flags:
  2745                           	callstack 0
  2746   000029                     	ds	1
  2747   00002A                     HALL_Relay_turnOFF@F3210:
  2748                           	callstack 0
  2749   00002A                     	ds	1
  2750   00002B                     HALL_Relay_turnON@F3205:
  2751                           	callstack 0
  2752   00002B                     	ds	1
  2753   00002C                     HALL_Relay_init@F3200:
  2754                           	callstack 0
  2755   00002C                     	ds	1
  2756   00002D                     HALL_Led_trunToggle@F3221:
  2757                           	callstack 0
  2758   00002D                     	ds	1
  2759   00002E                     HALL_Led_trunOFF@F3216:
  2760                           	callstack 0
  2761   00002E                     	ds	1
  2762   00002F                     HALL_Led_trunON@F3211:
  2763                           	callstack 0
  2764   00002F                     	ds	1
  2765   000030                     HALL_Led_init@F3206:
  2766                           	callstack 0
  2767   000030                     	ds	1
  2768   000031                     _retValu1:
  2769                           	callstack 0
  2770   000031                     	ds	2
  2771   000033                     _objPin_motor_2:
  2772                           	callstack 0
  2773   000033                     	ds	1
  2774   000034                     _objPin_motor_1:
  2775                           	callstack 0
  2776   000034                     	ds	1
  2777                           
  2778                           	psect	dataCOMRAM
  2779   000069                     __pdataCOMRAM:
  2780                           	callstack 0
  2781   000069                     _Motor2:
  2782                           	callstack 0
  2783   000069                     	ds	2
  2784   00006B                     _Motor1:
  2785                           	callstack 0
  2786   00006B                     	ds	2
  2787   00006D                     _RB7_Flag:
  2788                           	callstack 0
  2789   00006D                     	ds	1
  2790   00006E                     _RB6_Flag:
  2791                           	callstack 0
  2792   00006E                     	ds	1
  2793   00006F                     _RB5_Flag:
  2794                           	callstack 0
  2795   00006F                     	ds	1
  2796   000070                     _RB4_Flag:
  2797                           	callstack 0
  2798   000070                     	ds	1
  2799   000071                     _Led3:
  2800                           	callstack 0
  2801   000071                     	ds	1
  2802   000072                     _Led2:
  2803                           	callstack 0
  2804   000072                     	ds	1
  2805   000073                     _Led1:
  2806                           	callstack 0
  2807   000073                     	ds	1
  2808                           
  2809                           	psect	bssBANK0
  2810   0000E6                     __pbssBANK0:
  2811                           	callstack 0
  2812   0000E6                     	ds	6
  2813   0000EC                     _retLCD_Num:
  2814                           	callstack 0
  2815   0000EC                     	ds	12
  2816                           
  2817                           	psect	dataBANK0
  2818   000080                     __pdataBANK0:
  2819                           	callstack 0
  2820   000080                     _LCD1_8Bit:
  2821                           	callstack 0
  2822   000080                     	ds	10
  2823   00008A                     _KeyPad1:
  2824                           	callstack 0
  2825   00008A                     	ds	8
  2826   000092                     _RB_7:
  2827                           	callstack 0
  2828   000092                     	ds	6
  2829   000098                     _RB_6:
  2830                           	callstack 0
  2831   000098                     	ds	6
  2832   00009E                     _RB_5:
  2833                           	callstack 0
  2834   00009E                     	ds	6
  2835   0000A4                     _RB_4:
  2836                           	callstack 0
  2837   0000A4                     	ds	6
  2838   0000AA                     _EX_INT2:
  2839                           	callstack 0
  2840   0000AA                     	ds	6
  2841   0000B0                     _EX_INT1:
  2842                           	callstack 0
  2843   0000B0                     	ds	6
  2844   0000B6                     _EX_INT0:
  2845                           	callstack 0
  2846   0000B6                     	ds	6
  2847   0000BC                     _Seg1:
  2848                           	callstack 0
  2849   0000BC                     	ds	5
  2850   0000C1                     _BTN1:
  2851                           	callstack 0
  2852   0000C1                     	ds	3
  2853   0000C4                     _adc4:
  2854                           	callstack 0
  2855   0000C4                     	ds	7
  2856   0000CB                     _adc3:
  2857                           	callstack 0
  2858   0000CB                     	ds	7
  2859   0000D2                     _adc2:
  2860                           	callstack 0
  2861   0000D2                     	ds	7
  2862   0000D9                     _adc1:
  2863                           	callstack 0
  2864   0000D9                     	ds	7
  2865   0000E0                     _LCD1_4Bit:
  2866                           	callstack 0
  2867   0000E0                     	ds	6
  2868                           
  2869                           	psect	bssBANK1
  2870   000100                     __pbssBANK1:
  2871                           	callstack 0
  2872   000100                     _dbuf:
  2873                           	callstack 0
  2874   000100                     	ds	32
  2875                           
  2876                           	psect	cstackBANK1
  2877   000120                     __pcstackBANK1:
  2878                           	callstack 0
  2879   000120                     sprintf@ap:
  2880                           	callstack 0
  2881                           
  2882                           ; 1 bytes @ 0x0
  2883   000120                     	ds	1
  2884   000121                     sprintf@f:
  2885                           	callstack 0
  2886                           
  2887                           ; 11 bytes @ 0x1
  2888   000121                     	ds	11
  2889                           
  2890                           	psect	cstackBANK0
  2891   0000F8                     __pcstackBANK0:
  2892                           	callstack 0
  2893   0000F8                     HALL_LCD_convertU16toSTR@copyValue:
  2894                           	callstack 0
  2895                           
  2896                           ; 2 bytes @ 0x0
  2897   0000F8                     	ds	2
  2898   0000FA                     HALL_LCD_convertU16toSTR@copySTR:
  2899                           	callstack 0
  2900                           
  2901                           ; 1 bytes @ 0x2
  2902   0000FA                     	ds	1
  2903                           
  2904                           	psect	cstackCOMRAM
  2905   000035                     __pcstackCOMRAM:
  2906                           	callstack 0
  2907   000035                     MCAL_ADC_getConversionResult@copyADC:
  2908                           	callstack 0
  2909   000035                     RB4_ISR@copySource:
  2910                           	callstack 0
  2911   000035                     RB5_ISR@copySource:
  2912                           	callstack 0
  2913   000035                     RB6_ISR@copySource:
  2914                           	callstack 0
  2915   000035                     RB7_ISR@copySource:
  2916                           	callstack 0
  2917   000035                     
  2918                           ; 1 bytes @ 0x0
  2919   000035                     	ds	1
  2920   000036                     MCAL_ADC_getConversionResult@copyConversionResult:
  2921                           	callstack 0
  2922                           
  2923                           ; 1 bytes @ 0x1
  2924   000036                     	ds	1
  2925   000037                     ??_MCAL_ADC_getConversionResult:
  2926                           
  2927                           ; 1 bytes @ 0x2
  2928   000037                     	ds	3
  2929   00003A                     MCAL_ADC_getConversionResult@retValue:
  2930                           	callstack 0
  2931                           
  2932                           ; 1 bytes @ 0x5
  2933   00003A                     	ds	1
  2934   00003B                     ??_MCAL_InterruptManager:
  2935                           
  2936                           ; 1 bytes @ 0x6
  2937   00003B                     	ds	4
  2938   00003F                     ?___awdiv:
  2939                           	callstack 0
  2940   00003F                     ?___awmod:
  2941                           	callstack 0
  2942   00003F                     MCAL_ADC_StartConversion@copyADC:
  2943                           	callstack 0
  2944   00003F                     ADC_SelectResultFormat@copyADC:
  2945                           	callstack 0
  2946   00003F                     ADC_VolatgeReferance@copyADC:
  2947                           	callstack 0
  2948   00003F                     Mcal_GPIO_initPinDirection@copyPinCFG:
  2949                           	callstack 0
  2950   00003F                     MCAL_GPIO_writePinStatus@copyPinCFG:
  2951                           	callstack 0
  2952   00003F                     memset@dest:
  2953                           	callstack 0
  2954   00003F                     ___awdiv@dividend:
  2955                           	callstack 0
  2956   00003F                     ___awmod@dividend:
  2957                           	callstack 0
  2958   00003F                     fputc@c:
  2959                           	callstack 0
  2960   00003F                     ??_ADC_input_chanal_configuration:
  2961   00003F                     
  2962                           ; 1 bytes @ 0xA
  2963   00003F                     	ds	1
  2964   000040                     MCAL_ADC_StartConversion@retValue:
  2965                           	callstack 0
  2966   000040                     MCAL_GPIO_writePinStatus@copyStatusPin:
  2967                           	callstack 0
  2968   000040                     memset@c:
  2969                           	callstack 0
  2970   000040                     ??_Mcal_GPIO_initPinDirection:
  2971   000040                     
  2972                           ; 1 bytes @ 0xB
  2973   000040                     	ds	1
  2974   000041                     ADC_input_chanal_configuration@copyChanal:
  2975                           	callstack 0
  2976   000041                     ___awdiv@divisor:
  2977                           	callstack 0
  2978   000041                     ___awmod@divisor:
  2979                           	callstack 0
  2980   000041                     fputc@fp:
  2981                           	callstack 0
  2982   000041                     ??_MCAL_GPIO_writePinStatus:
  2983                           
  2984                           ; 1 bytes @ 0xC
  2985   000041                     	ds	1
  2986   000042                     MCAL_ADC_init@copyADC:
  2987                           	callstack 0
  2988   000042                     MCAL_ADC_SelectChanal@copyADC:
  2989                           	callstack 0
  2990   000042                     Mcal_GPIO_initPinDirection@retVal:
  2991                           	callstack 0
  2992   000042                     memset@n:
  2993                           	callstack 0
  2994                           
  2995                           ; 2 bytes @ 0xD
  2996   000042                     	ds	1
  2997   000043                     MCAL_ADC_SelectChanal@copyChanal:
  2998                           	callstack 0
  2999   000043                     MCAL_GPIO_writePinStatus@retVal:
  3000                           	callstack 0
  3001   000043                     ___awdiv@counter:
  3002                           	callstack 0
  3003   000043                     ___awmod@counter:
  3004                           	callstack 0
  3005   000043                     ??_MCAL_ADC_init:
  3006   000043                     ??_fputc:
  3007   000043                     
  3008                           ; 1 bytes @ 0xE
  3009   000043                     	ds	1
  3010   000044                     LCD_send4Bits@copyLCD:
  3011                           	callstack 0
  3012   000044                     LCD_sendEnableSignal4Bits@copyLCD:
  3013                           	callstack 0
  3014   000044                     MCAL_GPIO_init@copyPinCFG:
  3015                           	callstack 0
  3016   000044                     ___awdiv@sign:
  3017                           	callstack 0
  3018   000044                     ___awmod@sign:
  3019                           	callstack 0
  3020   000044                     memset@p:
  3021                           	callstack 0
  3022   000044                     ??_MCAL_ADC_SelectChanal:
  3023                           
  3024                           ; 1 bytes @ 0xF
  3025   000044                     	ds	1
  3026   000045                     ?_abs:
  3027                           	callstack 0
  3028   000045                     LCD_send4Bits@copyData:
  3029                           	callstack 0
  3030   000045                     MCAL_ADC_SelectChanal@retValue:
  3031                           	callstack 0
  3032   000045                     MCAL_GPIO_init@retVal:
  3033                           	callstack 0
  3034   000045                     ___awdiv@quotient:
  3035                           	callstack 0
  3036   000045                     abs@a:
  3037                           	callstack 0
  3038   000045                     
  3039                           ; 1 bytes @ 0x10
  3040   000045                     	ds	1
  3041   000046                     HALL_LCD_4bit_sendCMD@copyLCD:
  3042                           	callstack 0
  3043   000046                     HALL_LCD_4bit_sendChar@copyLCD:
  3044                           	callstack 0
  3045   000046                     MCAL_ADC_startConversion_Interrupt@copyADC:
  3046                           	callstack 0
  3047   000046                     
  3048                           ; 1 bytes @ 0x11
  3049   000046                     	ds	1
  3050   000047                     HALL_LCD_4bit_sendCMD@copyCMD:
  3051                           	callstack 0
  3052   000047                     HALL_LCD_4bit_sendChar@copyData:
  3053                           	callstack 0
  3054   000047                     MCAL_ADC_startConversion_Interrupt@copyChanal:
  3055                           	callstack 0
  3056   000047                     ??_abs:
  3057                           
  3058                           ; 1 bytes @ 0x12
  3059   000047                     	ds	1
  3060   000048                     HALL_LCD_4bit_init@copyLCD:
  3061                           	callstack 0
  3062   000048                     HALL_LCD_4bit_goto@copyLCD:
  3063                           	callstack 0
  3064   000048                     
  3065                           ; 1 bytes @ 0x13
  3066   000048                     	ds	1
  3067   000049                     HALL_LCD_4bit_goto@copyRow:
  3068                           	callstack 0
  3069   000049                     vfpfcnvrt@fp:
  3070                           	callstack 0
  3071   000049                     ??_HALL_LCD_4bit_init:
  3072                           
  3073                           ; 1 bytes @ 0x14
  3074   000049                     	ds	1
  3075   00004A                     HALL_LCD_4bit_init@Counter:
  3076                           	callstack 0
  3077   00004A                     HALL_LCD_4bit_goto@copyColumn:
  3078                           	callstack 0
  3079                           
  3080                           ; 1 bytes @ 0x15
  3081   00004A                     	ds	1
  3082   00004B                     HALL_LCD_4bit_sendSTRPos@copyLCD:
  3083                           	callstack 0
  3084   00004B                     vfpfcnvrt@fmt:
  3085                           	callstack 0
  3086   00004B                     
  3087                           ; 1 bytes @ 0x16
  3088   00004B                     	ds	1
  3089   00004C                     HALL_LCD_4bit_sendSTRPos@copyRow:
  3090                           	callstack 0
  3091   00004C                     vfpfcnvrt@ap:
  3092                           	callstack 0
  3093                           
  3094                           ; 2 bytes @ 0x17
  3095   00004C                     	ds	1
  3096   00004D                     HALL_LCD_4bit_sendSTRPos@copyColumn:
  3097                           	callstack 0
  3098                           
  3099                           ; 1 bytes @ 0x18
  3100   00004D                     	ds	1
  3101   00004E                     HALL_LCD_4bit_sendSTRPos@copyData:
  3102                           	callstack 0
  3103   00004E                     ??_vfpfcnvrt:
  3104                           
  3105                           ; 1 bytes @ 0x19
  3106   00004E                     	ds	1
  3107   00004F                     vfpfcnvrt@done:
  3108                           	callstack 0
  3109                           
  3110                           ; 1 bytes @ 0x1A
  3111   00004F                     	ds	1
  3112   000050                     vfpfcnvrt@cp:
  3113                           	callstack 0
  3114   000050                     
  3115                           ; 1 bytes @ 0x1B
  3116   000050                     	ds	1
  3117   000051                     vfpfcnvrt@convarg:
  3118                           	callstack 0
  3119                           
  3120                           ; 4 bytes @ 0x1C
  3121   000051                     	ds	4
  3122   000055                     vfpfcnvrt@c:
  3123                           	callstack 0
  3124                           
  3125                           ; 1 bytes @ 0x20
  3126   000055                     	ds	1
  3127   000056                     ?_vfprintf:
  3128                           	callstack 0
  3129   000056                     vfprintf@fp:
  3130                           	callstack 0
  3131                           
  3132                           ; 2 bytes @ 0x21
  3133   000056                     	ds	2
  3134   000058                     vfprintf@fmt:
  3135                           	callstack 0
  3136                           
  3137                           ; 1 bytes @ 0x23
  3138   000058                     	ds	1
  3139   000059                     vfprintf@ap:
  3140                           	callstack 0
  3141                           
  3142                           ; 2 bytes @ 0x24
  3143   000059                     	ds	2
  3144   00005B                     vfprintf@cfmt:
  3145                           	callstack 0
  3146   00005B                     
  3147                           ; 1 bytes @ 0x26
  3148   00005B                     	ds	1
  3149   00005C                     ?_sprintf:
  3150                           	callstack 0
  3151   00005C                     sprintf@s:
  3152                           	callstack 0
  3153                           
  3154                           ; 1 bytes @ 0x27
  3155   00005C                     	ds	1
  3156   00005D                     sprintf@fmt:
  3157                           	callstack 0
  3158                           
  3159                           ; 1 bytes @ 0x28
  3160   00005D                     	ds	5
  3161   000062                     HALL_LCD_convertU16toSTR@tempString:
  3162                           	callstack 0
  3163   000062                     
  3164                           ; 1 bytes @ 0x2D
  3165   000062                     	ds	6
  3166   000068                     HALL_LCD_convertU16toSTR@DataCounter:
  3167                           	callstack 0
  3168                           
  3169                           ; 1 bytes @ 0x33
  3170   000068                     	ds	1
  3171   000069                     
  3172                           ; 1 bytes @ 0x34
  3173 ;;
  3174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3175 ;;
  3176 ;; *************** function _main *****************
  3177 ;; Defined at:
  3178 ;;		line 12 in file "App/Main.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  2   74[None  ] int 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;Total ram usage:        0 bytes
  3197 ;; Hardware stack levels required when called: 10
  3198 ;; This function calls:
  3199 ;;		_HALL_LCD_4bit_init
  3200 ;;		_HALL_LCD_4bit_sendSTRPos
  3201 ;;		_HALL_LCD_convertU16toSTR
  3202 ;;		_MCAL_ADC_init
  3203 ;;		_MCAL_ADC_startConversion_Interrupt
  3204 ;; This function is called by:
  3205 ;;		Startup code after reset
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text0
  3210   001D34                     __ptext0:
  3211                           	callstack 0
  3212   001D34                     _main:
  3213                           	callstack 21
  3214   001D34                     
  3215                           ;App/Main.c: 14:     MCAL_ADC_init(&adc1);
  3216   001D34  0ED9               	movlw	low _adc1
  3217   001D36  6E42               	movwf	MCAL_ADC_init@copyADC^0,c
  3218   001D38  EC4F  F00D         	call	_MCAL_ADC_init	;wreg free
  3219                           
  3220                           ;App/Main.c: 15:     MCAL_ADC_init(&adc2);
  3221   001D3C  0ED2               	movlw	low _adc2
  3222   001D3E  6E42               	movwf	MCAL_ADC_init@copyADC^0,c
  3223   001D40  EC4F  F00D         	call	_MCAL_ADC_init	;wreg free
  3224                           
  3225                           ;App/Main.c: 16:     MCAL_ADC_init(&adc3);
  3226   001D44  0ECB               	movlw	low _adc3
  3227   001D46  6E42               	movwf	MCAL_ADC_init@copyADC^0,c
  3228   001D48  EC4F  F00D         	call	_MCAL_ADC_init	;wreg free
  3229                           
  3230                           ;App/Main.c: 17:     MCAL_ADC_init(&adc4);
  3231   001D4C  0EC4               	movlw	low _adc4
  3232   001D4E  6E42               	movwf	MCAL_ADC_init@copyADC^0,c
  3233   001D50  EC4F  F00D         	call	_MCAL_ADC_init	;wreg free
  3234                           
  3235                           ;App/Main.c: 18:     HALL_LCD_4bit_init(&LCD1_4Bit);
  3236   001D54  0EE0               	movlw	low _LCD1_4Bit
  3237   001D56  6E48               	movwf	HALL_LCD_4bit_init@copyLCD^0,c
  3238   001D58  EC2E  F00E         	call	_HALL_LCD_4bit_init	;wreg free
  3239   001D5C                     
  3240                           ;App/Main.c: 19:     HALL_LCD_4bit_sendSTRPos(&LCD1_4Bit, 1, 1, "POT1: ");
  3241   001D5C  0EE0               	movlw	low _LCD1_4Bit
  3242   001D5E  6E4B               	movwf	HALL_LCD_4bit_sendSTRPos@copyLCD^0,c
  3243   001D60  0E01               	movlw	1
  3244   001D62  6E4C               	movwf	HALL_LCD_4bit_sendSTRPos@copyRow^0,c
  3245   001D64  0E01               	movlw	1
  3246   001D66  6E4D               	movwf	HALL_LCD_4bit_sendSTRPos@copyColumn^0,c
  3247   001D68  0E11               	movlw	low STR_1
  3248   001D6A  6E4E               	movwf	HALL_LCD_4bit_sendSTRPos@copyData^0,c
  3249   001D6C  504E               	movf	HALL_LCD_4bit_sendSTRPos@copyData^0,w,c
  3250   001D6E  A4D8               	btfss	status,2,c
  3251   001D70  0E10               	movlw	high __smallconst
  3252   001D72  6E4F               	movwf	(HALL_LCD_4bit_sendSTRPos@copyData+1)^0,c
  3253   001D74  EC76  F010         	call	_HALL_LCD_4bit_sendSTRPos	;wreg free
  3254   001D78                     
  3255                           ;App/Main.c: 20:     HALL_LCD_4bit_sendSTRPos(&LCD1_4Bit, 2, 1, "POT2: ");
  3256   001D78  0EE0               	movlw	low _LCD1_4Bit
  3257   001D7A  6E4B               	movwf	HALL_LCD_4bit_sendSTRPos@copyLCD^0,c
  3258   001D7C  0E02               	movlw	2
  3259   001D7E  6E4C               	movwf	HALL_LCD_4bit_sendSTRPos@copyRow^0,c
  3260   001D80  0E01               	movlw	1
  3261   001D82  6E4D               	movwf	HALL_LCD_4bit_sendSTRPos@copyColumn^0,c
  3262   001D84  0E18               	movlw	low STR_2
  3263   001D86  6E4E               	movwf	HALL_LCD_4bit_sendSTRPos@copyData^0,c
  3264   001D88  504E               	movf	HALL_LCD_4bit_sendSTRPos@copyData^0,w,c
  3265   001D8A  A4D8               	btfss	status,2,c
  3266   001D8C  0E10               	movlw	high __smallconst
  3267   001D8E  6E4F               	movwf	(HALL_LCD_4bit_sendSTRPos@copyData+1)^0,c
  3268   001D90  EC76  F010         	call	_HALL_LCD_4bit_sendSTRPos	;wreg free
  3269   001D94                     
  3270                           ;App/Main.c: 21:     HALL_LCD_4bit_sendSTRPos(&LCD1_4Bit, 3, 1, "POT3: ");
  3271   001D94  0EE0               	movlw	low _LCD1_4Bit
  3272   001D96  6E4B               	movwf	HALL_LCD_4bit_sendSTRPos@copyLCD^0,c
  3273   001D98  0E03               	movlw	3
  3274   001D9A  6E4C               	movwf	HALL_LCD_4bit_sendSTRPos@copyRow^0,c
  3275   001D9C  0E01               	movlw	1
  3276   001D9E  6E4D               	movwf	HALL_LCD_4bit_sendSTRPos@copyColumn^0,c
  3277   001DA0  0E1F               	movlw	low STR_3
  3278   001DA2  6E4E               	movwf	HALL_LCD_4bit_sendSTRPos@copyData^0,c
  3279   001DA4  504E               	movf	HALL_LCD_4bit_sendSTRPos@copyData^0,w,c
  3280   001DA6  A4D8               	btfss	status,2,c
  3281   001DA8  0E10               	movlw	high __smallconst
  3282   001DAA  6E4F               	movwf	(HALL_LCD_4bit_sendSTRPos@copyData+1)^0,c
  3283   001DAC  EC76  F010         	call	_HALL_LCD_4bit_sendSTRPos	;wreg free
  3284   001DB0                     
  3285                           ;App/Main.c: 22:     HALL_LCD_4bit_sendSTRPos(&LCD1_4Bit, 4, 1, "POT4: ");
  3286   001DB0  0EE0               	movlw	low _LCD1_4Bit
  3287   001DB2  6E4B               	movwf	HALL_LCD_4bit_sendSTRPos@copyLCD^0,c
  3288   001DB4  0E04               	movlw	4
  3289   001DB6  6E4C               	movwf	HALL_LCD_4bit_sendSTRPos@copyRow^0,c
  3290   001DB8  0E01               	movlw	1
  3291   001DBA  6E4D               	movwf	HALL_LCD_4bit_sendSTRPos@copyColumn^0,c
  3292   001DBC  0E26               	movlw	low STR_4
  3293   001DBE  6E4E               	movwf	HALL_LCD_4bit_sendSTRPos@copyData^0,c
  3294   001DC0  504E               	movf	HALL_LCD_4bit_sendSTRPos@copyData^0,w,c
  3295   001DC2  A4D8               	btfss	status,2,c
  3296   001DC4  0E10               	movlw	high __smallconst
  3297   001DC6  6E4F               	movwf	(HALL_LCD_4bit_sendSTRPos@copyData+1)^0,c
  3298   001DC8  EC76  F010         	call	_HALL_LCD_4bit_sendSTRPos	;wreg free
  3299   001DCC                     l75:
  3300                           
  3301                           ;App/Main.c: 25:         MCAL_ADC_startConversion_Interrupt(&adc1, ADC_CHANAL_AN1);
  3302   001DCC  0ED9               	movlw	low _adc1
  3303   001DCE  6E46               	movwf	MCAL_ADC_startConversion_Interrupt@copyADC^0,c
  3304   001DD0  0E00               	movlw	0
  3305   001DD2  6E47               	movwf	MCAL_ADC_startConversion_Interrupt@copyChanal^0,c
  3306   001DD4  ECF9  F013         	call	_MCAL_ADC_startConversion_Interrupt	;wreg free
  3307   001DD8                     
  3308                           ;App/Main.c: 26:         HALL_LCD_convertU16toSTR(retValu1,&retLCD_Num);
  3309   001DD8  C031  F0F8         	movff	_retValu1,HALL_LCD_convertU16toSTR@copyValue
  3310   001DDC  C032  F0F9         	movff	_retValu1+1,HALL_LCD_convertU16toSTR@copyValue+1
  3311   001DE0  0EEC               	movlw	low _retLCD_Num
  3312   001DE2  0100               	movlb	0	; () banked
  3313   001DE4  6FFA               	movwf	HALL_LCD_convertU16toSTR@copySTR& (0+255),b
  3314   001DE6  EC00  F011         	call	_HALL_LCD_convertU16toSTR	;wreg free
  3315   001DEA                     
  3316                           ;App/Main.c: 27:         HALL_LCD_4bit_sendSTRPos(&LCD1_4Bit, 1, 7, retLCD_Num);
  3317   001DEA  0EE0               	movlw	low _LCD1_4Bit
  3318   001DEC  6E4B               	movwf	HALL_LCD_4bit_sendSTRPos@copyLCD^0,c
  3319   001DEE  0E01               	movlw	1
  3320   001DF0  6E4C               	movwf	HALL_LCD_4bit_sendSTRPos@copyRow^0,c
  3321   001DF2  0E07               	movlw	7
  3322   001DF4  6E4D               	movwf	HALL_LCD_4bit_sendSTRPos@copyColumn^0,c
  3323   001DF6  0EEC               	movlw	low _retLCD_Num
  3324   001DF8  6E4E               	movwf	HALL_LCD_4bit_sendSTRPos@copyData^0,c
  3325   001DFA  6A4F               	clrf	(HALL_LCD_4bit_sendSTRPos@copyData+1)^0,c
  3326   001DFC  EC76  F010         	call	_HALL_LCD_4bit_sendSTRPos	;wreg free
  3327   001E00  EFE6  F00E         	goto	l75
  3328   001E04  EF07  F000         	goto	start
  3329   001E08                     __end_of_main:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _MCAL_ADC_startConversion_Interrupt *****************
  3333 ;; Defined at:
  3334 ;;		line 155 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  copyADC         1   17[COMRAM] PTR const struct .
  3337 ;;		 -> adc1(7), 
  3338 ;;  copyChanal      1   18[COMRAM] enum E3044
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  retValue        1    0        unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      unsigned char 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;Total ram usage:        2 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 6
  3357 ;; This function calls:
  3358 ;;		_MCAL_ADC_SelectChanal
  3359 ;;		_MCAL_ADC_StartConversion
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text1
  3366   0027F2                     __ptext1:
  3367                           	callstack 0
  3368   0027F2                     _MCAL_ADC_startConversion_Interrupt:
  3369                           	callstack 24
  3370   0027F2                     
  3371                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 157:     if(copyADC == ((void*)0)) {
  3372   0027F2  5046               	movf	MCAL_ADC_startConversion_Interrupt@copyADC^0,w,c
  3373   0027F4  A4D8               	btfss	status,2,c
  3374   0027F6  EFFF  F013         	goto	u3421
  3375   0027FA  EF01  F014         	goto	u3420
  3376   0027FE                     u3421:
  3377   0027FE  EF03  F014         	goto	l4703
  3378   002802                     u3420:
  3379   002802  EF0D  F014         	goto	l782
  3380   002806                     l4703:
  3381   002806  C046  F042         	movff	MCAL_ADC_startConversion_Interrupt@copyADC,MCAL_ADC_SelectChanal@copyADC
  3382   00280A  C047  F043         	movff	MCAL_ADC_startConversion_Interrupt@copyChanal,MCAL_ADC_SelectChanal@copyChanal
  3383   00280E  EC0F  F013         	call	_MCAL_ADC_SelectChanal	;wreg free
  3384   002812  C046  F03F         	movff	MCAL_ADC_startConversion_Interrupt@copyADC,MCAL_ADC_StartConversion@copyADC
  3385   002816  EC0E  F014         	call	_MCAL_ADC_StartConversion	;wreg free
  3386   00281A                     l782:
  3387   00281A  0012               	return		;funcret
  3388   00281C                     __end_of_MCAL_ADC_startConversion_Interrupt:
  3389                           	callstack 0
  3390                           
  3391 ;; *************** function _MCAL_ADC_StartConversion *****************
  3392 ;; Defined at:
  3393 ;;		line 101 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  copyADC         1   10[COMRAM] PTR const struct .
  3396 ;;		 -> adc1(7), 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  retValue        1   11[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      unsigned char 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;Total ram usage:        2 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 4
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_MCAL_ADC_startConversion_Interrupt
  3419 ;;		_MCAL_ADC_getConversion_Blocking
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text2
  3424   00281C                     __ptext2:
  3425                           	callstack 0
  3426   00281C                     _MCAL_ADC_StartConversion:
  3427                           	callstack 25
  3428   00281C                     
  3429                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 102:     uint8_t retValue = (Std_Return)0;
  3430   00281C  6A40               	clrf	MCAL_ADC_StartConversion@retValue^0,c
  3431   00281E                     
  3432                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 103:     if(copyADC == ((void*)0)) {
  3433   00281E  503F               	movf	MCAL_ADC_StartConversion@copyADC^0,w,c
  3434   002820  A4D8               	btfss	status,2,c
  3435   002822  EF15  F014         	goto	u3341
  3436   002826  EF17  F014         	goto	u3340
  3437   00282A                     u3341:
  3438   00282A  EF19  F014         	goto	l753
  3439   00282E                     u3340:
  3440   00282E  EF1C  F014         	goto	l754
  3441   002832                     l753:
  3442                           
  3443                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 107:         (ADCON0bits.GODONE = 1);
  3444   002832  82C2               	bsf	194,1,c	;volatile
  3445   002834                     
  3446                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 108:         retValue = (Std_Return)1;
  3447   002834  0E01               	movlw	1
  3448   002836  6E40               	movwf	MCAL_ADC_StartConversion@retValue^0,c
  3449   002838                     l754:
  3450                           
  3451                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 110:     return retValue;
  3452   002838  5040               	movf	MCAL_ADC_StartConversion@retValue^0,w,c
  3453   00283A  0012               	return		;funcret
  3454   00283C                     __end_of_MCAL_ADC_StartConversion:
  3455                           	callstack 0
  3456                           
  3457 ;; *************** function _MCAL_ADC_SelectChanal *****************
  3458 ;; Defined at:
  3459 ;;		line 86 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  copyADC         1   13[COMRAM] PTR const struct .
  3462 ;;		 -> adc1(7), 
  3463 ;;  copyChanal      1   14[COMRAM] enum E3044
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  retValue        1   16[COMRAM] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      unsigned char 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        4 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 5
  3482 ;; This function calls:
  3483 ;;		_ADC_input_chanal_configuration
  3484 ;; This function is called by:
  3485 ;;		_MCAL_ADC_startConversion_Interrupt
  3486 ;;		_MCAL_ADC_getConversion_Blocking
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text3
  3491   00261E                     __ptext3:
  3492                           	callstack 0
  3493   00261E                     _MCAL_ADC_SelectChanal:
  3494                           	callstack 24
  3495   00261E                     
  3496                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 87:     uint8_t retValue = (Std_Return)0;
  3497   00261E  6A45               	clrf	MCAL_ADC_SelectChanal@retValue^0,c
  3498   002620                     
  3499                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 88:     if(copyADC == ((void*)0)) {
  3500   002620  5042               	movf	MCAL_ADC_SelectChanal@copyADC^0,w,c
  3501   002622  A4D8               	btfss	status,2,c
  3502   002624  EF16  F013         	goto	u3331
  3503   002628  EF18  F013         	goto	u3330
  3504   00262C                     u3331:
  3505   00262C  EF1A  F013         	goto	l4575
  3506   002630                     u3330:
  3507   002630  EF2D  F013         	goto	l4581
  3508   002634                     l4575:
  3509                           
  3510                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 93:         ADCON0bits.CHS = copyADC->AdcChanall;
  3511   002634  5042               	movf	MCAL_ADC_SelectChanal@copyADC^0,w,c
  3512   002636  6ED9               	movwf	fsr2l,c
  3513   002638  6ADA               	clrf	fsr2h,c
  3514   00263A  0E05               	movlw	5
  3515   00263C  26D9               	addwf	fsr2l,f,c
  3516   00263E  50DF               	movf	indf2,w,c
  3517   002640  6E44               	movwf	??_MCAL_ADC_SelectChanal^0,c
  3518   002642  4644               	rlncf	??_MCAL_ADC_SelectChanal^0,f,c
  3519   002644  4644               	rlncf	??_MCAL_ADC_SelectChanal^0,f,c
  3520   002646  50C2               	movf	194,w,c	;volatile
  3521   002648  1844               	xorwf	??_MCAL_ADC_SelectChanal^0,w,c
  3522   00264A  0BC3               	andlw	-61
  3523   00264C  1844               	xorwf	??_MCAL_ADC_SelectChanal^0,w,c
  3524   00264E  6EC2               	movwf	194,c	;volatile
  3525   002650                     
  3526                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 94:         ADC_input_chanal_configuration(copyChanal);
  3527   002650  5043               	movf	MCAL_ADC_SelectChanal@copyChanal^0,w,c
  3528   002652  ECC2  F00D         	call	_ADC_input_chanal_configuration
  3529   002656                     
  3530                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 96:         retValue = (Std_Return)1;
  3531   002656  0E01               	movlw	1
  3532   002658  6E45               	movwf	MCAL_ADC_SelectChanal@retValue^0,c
  3533   00265A                     l4581:
  3534                           
  3535                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 98:     return retValue;
  3536   00265A  5045               	movf	MCAL_ADC_SelectChanal@retValue^0,w,c
  3537   00265C  0012               	return		;funcret
  3538   00265E                     __end_of_MCAL_ADC_SelectChanal:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _MCAL_ADC_init *****************
  3542 ;; Defined at:
  3543 ;;		line 19 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  copyADC         1   13[COMRAM] PTR const struct .
  3546 ;;		 -> adc4(7), adc3(7), adc2(7), adc1(7), 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  retValue        1    0        unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      unsigned char 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;Total ram usage:        3 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 5
  3565 ;; This function calls:
  3566 ;;		_ADC_SelectResultFormat
  3567 ;;		_ADC_VolatgeReferance
  3568 ;;		_ADC_input_chanal_configuration
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text4
  3575   001A9E                     __ptext4:
  3576                           	callstack 0
  3577   001A9E                     _MCAL_ADC_init:
  3578                           	callstack 25
  3579   001A9E                     
  3580                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 21:     if(copyADC == ((void*)0)) {
  3581   001A9E  5042               	movf	MCAL_ADC_init@copyADC^0,w,c
  3582   001AA0  A4D8               	btfss	status,2,c
  3583   001AA2  EF55  F00D         	goto	u3351
  3584   001AA6  EF57  F00D         	goto	u3350
  3585   001AAA                     u3351:
  3586   001AAA  EF59  F00D         	goto	l734
  3587   001AAE                     u3350:
  3588   001AAE  EFC1  F00D         	goto	l740
  3589   001AB2                     l734:
  3590                           
  3591                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 26:         (ADCON0bits.ADON = 0);
  3592   001AB2  90C2               	bcf	194,0,c	;volatile
  3593   001AB4                     
  3594                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 29:         ADCON2bits.ACQT = copyADC->AcquisitionClock;
  3595   001AB4  5042               	movf	MCAL_ADC_init@copyADC^0,w,c
  3596   001AB6  6ED9               	movwf	fsr2l,c
  3597   001AB8  6ADA               	clrf	fsr2h,c
  3598   001ABA  0E03               	movlw	3
  3599   001ABC  26D9               	addwf	fsr2l,f,c
  3600   001ABE  50DF               	movf	indf2,w,c
  3601   001AC0  6E43               	movwf	??_MCAL_ADC_init^0,c
  3602   001AC2  4643               	rlncf	??_MCAL_ADC_init^0,f,c
  3603   001AC4  4643               	rlncf	??_MCAL_ADC_init^0,f,c
  3604   001AC6  4643               	rlncf	??_MCAL_ADC_init^0,f,c
  3605   001AC8  50C0               	movf	192,w,c	;volatile
  3606   001ACA  1843               	xorwf	??_MCAL_ADC_init^0,w,c
  3607   001ACC  0BC7               	andlw	-57
  3608   001ACE  1843               	xorwf	??_MCAL_ADC_init^0,w,c
  3609   001AD0  6EC0               	movwf	192,c	;volatile
  3610                           
  3611                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 32:         ADCON2bits.ADCS = copyADC->ConversionClock;
  3612   001AD2  5042               	movf	MCAL_ADC_init@copyADC^0,w,c
  3613   001AD4  6ED9               	movwf	fsr2l,c
  3614   001AD6  6ADA               	clrf	fsr2h,c
  3615   001AD8  0E04               	movlw	4
  3616   001ADA  26D9               	addwf	fsr2l,f,c
  3617   001ADC  50DF               	movf	indf2,w,c
  3618   001ADE  6E43               	movwf	??_MCAL_ADC_init^0,c
  3619   001AE0  50C0               	movf	192,w,c	;volatile
  3620   001AE2  1843               	xorwf	??_MCAL_ADC_init^0,w,c
  3621   001AE4  0BF8               	andlw	-8
  3622   001AE6  1843               	xorwf	??_MCAL_ADC_init^0,w,c
  3623   001AE8  6EC0               	movwf	192,c	;volatile
  3624                           
  3625                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 35:         ADCON0bits.CHS = copyADC->AdcChanall;
  3626   001AEA  5042               	movf	MCAL_ADC_init@copyADC^0,w,c
  3627   001AEC  6ED9               	movwf	fsr2l,c
  3628   001AEE  6ADA               	clrf	fsr2h,c
  3629   001AF0  0E05               	movlw	5
  3630   001AF2  26D9               	addwf	fsr2l,f,c
  3631   001AF4  50DF               	movf	indf2,w,c
  3632   001AF6  6E43               	movwf	??_MCAL_ADC_init^0,c
  3633   001AF8  4643               	rlncf	??_MCAL_ADC_init^0,f,c
  3634   001AFA  4643               	rlncf	??_MCAL_ADC_init^0,f,c
  3635   001AFC  50C2               	movf	194,w,c	;volatile
  3636   001AFE  1843               	xorwf	??_MCAL_ADC_init^0,w,c
  3637   001B00  0BC3               	andlw	-61
  3638   001B02  1843               	xorwf	??_MCAL_ADC_init^0,w,c
  3639   001B04  6EC2               	movwf	194,c	;volatile
  3640   001B06                     
  3641                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 36:         ADC_input_chanal_configuration(copyADC->AdcC
      +                          hanall);
  3642   001B06  5042               	movf	MCAL_ADC_init@copyADC^0,w,c
  3643   001B08  6ED9               	movwf	fsr2l,c
  3644   001B0A  6ADA               	clrf	fsr2h,c
  3645   001B0C  0E05               	movlw	5
  3646   001B0E  26D9               	addwf	fsr2l,f,c
  3647   001B10  50DF               	movf	indf2,w,c
  3648   001B12  ECC2  F00D         	call	_ADC_input_chanal_configuration
  3649   001B16                     
  3650                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 40:             (INTCONbits.GIE = 1);
  3651   001B16  8EF2               	bsf	242,7,c	;volatile
  3652   001B18                     
  3653                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 41:             (INTCONbits.PEIE = 1);
  3654   001B18  8CF2               	bsf	242,6,c	;volatile
  3655   001B1A                     
  3656                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 42:             (PIE1bits.ADIE = 1);
  3657   001B1A  8C9D               	bsf	157,6,c	;volatile
  3658   001B1C                     
  3659                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 43:             (PIR1bits.ADIF = 0);
  3660   001B1C  9C9E               	bcf	158,6,c	;volatile
  3661                           
  3662                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 44:             switch(copyADC->Priorety) {
  3663   001B1E  EF97  F00D         	goto	l4615
  3664   001B22                     l737:
  3665   001B22  8C9F               	bsf	159,6,c	;volatile
  3666   001B24  EFB1  F00D         	goto	l4617
  3667   001B28                     l739:
  3668   001B28  9C9F               	bcf	159,6,c	;volatile
  3669   001B2A  EFB1  F00D         	goto	l4617
  3670   001B2E                     l4615:
  3671   001B2E  5042               	movf	MCAL_ADC_init@copyADC^0,w,c
  3672   001B30  6ED9               	movwf	fsr2l,c
  3673   001B32  6ADA               	clrf	fsr2h,c
  3674   001B34  0E02               	movlw	2
  3675   001B36  26D9               	addwf	fsr2l,f,c
  3676   001B38  50DF               	movf	indf2,w,c
  3677   001B3A  6E43               	movwf	??_MCAL_ADC_init^0,c
  3678   001B3C  6A44               	clrf	(??_MCAL_ADC_init+1)^0,c
  3679                           
  3680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3681                           ; Switch size 1, requested type "simple"
  3682                           ; Number of cases is 1, Range of values is 0 to 0
  3683                           ; switch strategies available:
  3684                           ; Name         Instructions Cycles
  3685                           ; simple_byte            4     3 (average)
  3686                           ;	Chosen strategy is simple_byte
  3687   001B3E  5044               	movf	(??_MCAL_ADC_init+1)^0,w,c
  3688   001B40  0A00               	xorlw	0	; case 0
  3689   001B42  B4D8               	btfsc	status,2,c
  3690   001B44  EFA6  F00D         	goto	l6313
  3691   001B48  EFB1  F00D         	goto	l4617
  3692   001B4C                     l6313:
  3693                           
  3694                           ; Switch size 1, requested type "simple"
  3695                           ; Number of cases is 2, Range of values is 0 to 1
  3696                           ; switch strategies available:
  3697                           ; Name         Instructions Cycles
  3698                           ; simple_byte            7     4 (average)
  3699                           ;	Chosen strategy is simple_byte
  3700   001B4C  5043               	movf	??_MCAL_ADC_init^0,w,c
  3701   001B4E  0A00               	xorlw	0	; case 0
  3702   001B50  B4D8               	btfsc	status,2,c
  3703   001B52  EF94  F00D         	goto	l739
  3704   001B56  0A01               	xorlw	1	; case 1
  3705   001B58  B4D8               	btfsc	status,2,c
  3706   001B5A  EF91  F00D         	goto	l737
  3707   001B5E  EFB1  F00D         	goto	l4617
  3708   001B62                     l4617:
  3709                           
  3710                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 48:             ADC_interruptHandler = copyADC->ADCinter
      +                          ruptHandler;
  3711   001B62  5042               	movf	MCAL_ADC_init@copyADC^0,w,c
  3712   001B64  6ED9               	movwf	fsr2l,c
  3713   001B66  6ADA               	clrf	fsr2h,c
  3714   001B68  CFDE F01B          	movff	postinc2,_ADC_interruptHandler
  3715   001B6C  CFDD F01C          	movff	postdec2,_ADC_interruptHandler+1
  3716   001B70                     
  3717                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 54:         ADC_SelectResultFormat(copyADC);
  3718   001B70  C042  F03F         	movff	MCAL_ADC_init@copyADC,ADC_SelectResultFormat@copyADC
  3719   001B74  ECEE  F012         	call	_ADC_SelectResultFormat	;wreg free
  3720   001B78                     
  3721                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 57:         ADC_VolatgeReferance(copyADC);
  3722   001B78  C042  F03F         	movff	MCAL_ADC_init@copyADC,ADC_VolatgeReferance@copyADC
  3723   001B7C  EC43  F012         	call	_ADC_VolatgeReferance	;wreg free
  3724   001B80                     
  3725                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 59:         (ADCON0bits.ADON = 1);
  3726   001B80  80C2               	bsf	194,0,c	;volatile
  3727   001B82                     l740:
  3728   001B82  0012               	return		;funcret
  3729   001B84                     __end_of_MCAL_ADC_init:
  3730                           	callstack 0
  3731                           
  3732 ;; *************** function _ADC_input_chanal_configuration *****************
  3733 ;; Defined at:
  3734 ;;		line 168 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  copyChanal      1    wreg     enum E3044
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  copyChanal      1   12[COMRAM] enum E3044
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;Total ram usage:        3 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: 4
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_MCAL_ADC_init
  3759 ;;		_MCAL_ADC_SelectChanal
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text5
  3764   001B84                     __ptext5:
  3765                           	callstack 0
  3766   001B84                     _ADC_input_chanal_configuration:
  3767                           	callstack 24
  3768                           
  3769                           ;incstack = 0
  3770                           ;ADC_input_chanal_configuration@copyChanal stored from wreg
  3771   001B84  6E41               	movwf	ADC_input_chanal_configuration@copyChanal^0,c
  3772   001B86                     
  3773                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 169:     switch(copyChanal) {
  3774   001B86  EFEC  F00D         	goto	l4475
  3775   001B8A                     l4447:
  3776   001B8A  8092               	bsf	146,0,c	;volatile
  3777   001B8C  EF2D  F00E         	goto	l800
  3778   001B90                     l4449:
  3779   001B90  8292               	bsf	146,1,c	;volatile
  3780   001B92  EF2D  F00E         	goto	l800
  3781   001B96                     l4451:
  3782   001B96  8492               	bsf	146,2,c	;volatile
  3783   001B98  EF2D  F00E         	goto	l800
  3784   001B9C                     l4453:
  3785   001B9C  8692               	bsf	146,3,c	;volatile
  3786   001B9E  EF2D  F00E         	goto	l800
  3787   001BA2                     l4455:
  3788   001BA2  8A92               	bsf	146,5,c	;volatile
  3789   001BA4  EF2D  F00E         	goto	l800
  3790   001BA8                     l4457:
  3791   001BA8  8096               	bsf	150,0,c	;volatile
  3792   001BAA  EF2D  F00E         	goto	l800
  3793   001BAE                     l4459:
  3794   001BAE  8296               	bsf	150,1,c	;volatile
  3795   001BB0  EF2D  F00E         	goto	l800
  3796   001BB4                     l4461:
  3797   001BB4  8496               	bsf	150,2,c	;volatile
  3798   001BB6  EF2D  F00E         	goto	l800
  3799   001BBA                     l4463:
  3800   001BBA  8493               	bsf	147,2,c	;volatile
  3801   001BBC  EF2D  F00E         	goto	l800
  3802   001BC0                     l4465:
  3803   001BC0  8693               	bsf	147,3,c	;volatile
  3804   001BC2  EF2D  F00E         	goto	l800
  3805   001BC6                     l4467:
  3806   001BC6  8293               	bsf	147,1,c	;volatile
  3807   001BC8  EF2D  F00E         	goto	l800
  3808   001BCC                     l4469:
  3809   001BCC  8893               	bsf	147,4,c	;volatile
  3810   001BCE  EF2D  F00E         	goto	l800
  3811   001BD2                     l4471:
  3812   001BD2  8093               	bsf	147,0,c	;volatile
  3813   001BD4  EF2D  F00E         	goto	l800
  3814   001BD8                     l4475:
  3815   001BD8  5041               	movf	ADC_input_chanal_configuration@copyChanal^0,w,c
  3816   001BDA  6E3F               	movwf	??_ADC_input_chanal_configuration^0,c
  3817   001BDC  6A40               	clrf	(??_ADC_input_chanal_configuration+1)^0,c
  3818                           
  3819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3820                           ; Switch size 1, requested type "simple"
  3821                           ; Number of cases is 1, Range of values is 0 to 0
  3822                           ; switch strategies available:
  3823                           ; Name         Instructions Cycles
  3824                           ; simple_byte            4     3 (average)
  3825                           ;	Chosen strategy is simple_byte
  3826   001BDE  5040               	movf	(??_ADC_input_chanal_configuration+1)^0,w,c
  3827   001BE0  0A00               	xorlw	0	; case 0
  3828   001BE2  B4D8               	btfsc	status,2,c
  3829   001BE4  EFF6  F00D         	goto	l6315
  3830   001BE8  EF2D  F00E         	goto	l800
  3831   001BEC                     l6315:
  3832                           
  3833                           ; Switch size 1, requested type "simple"
  3834                           ; Number of cases is 13, Range of values is 0 to 12
  3835                           ; switch strategies available:
  3836                           ; Name         Instructions Cycles
  3837                           ; simple_byte           40    21 (average)
  3838                           ;	Chosen strategy is simple_byte
  3839   001BEC  503F               	movf	??_ADC_input_chanal_configuration^0,w,c
  3840   001BEE  0A00               	xorlw	0	; case 0
  3841   001BF0  B4D8               	btfsc	status,2,c
  3842   001BF2  EFC5  F00D         	goto	l4447
  3843   001BF6  0A01               	xorlw	1	; case 1
  3844   001BF8  B4D8               	btfsc	status,2,c
  3845   001BFA  EFC8  F00D         	goto	l4449
  3846   001BFE  0A03               	xorlw	3	; case 2
  3847   001C00  B4D8               	btfsc	status,2,c
  3848   001C02  EFCB  F00D         	goto	l4451
  3849   001C06  0A01               	xorlw	1	; case 3
  3850   001C08  B4D8               	btfsc	status,2,c
  3851   001C0A  EFCE  F00D         	goto	l4453
  3852   001C0E  0A07               	xorlw	7	; case 4
  3853   001C10  B4D8               	btfsc	status,2,c
  3854   001C12  EFD1  F00D         	goto	l4455
  3855   001C16  0A01               	xorlw	1	; case 5
  3856   001C18  B4D8               	btfsc	status,2,c
  3857   001C1A  EFD4  F00D         	goto	l4457
  3858   001C1E  0A03               	xorlw	3	; case 6
  3859   001C20  B4D8               	btfsc	status,2,c
  3860   001C22  EFD7  F00D         	goto	l4459
  3861   001C26  0A01               	xorlw	1	; case 7
  3862   001C28  B4D8               	btfsc	status,2,c
  3863   001C2A  EFDA  F00D         	goto	l4461
  3864   001C2E  0A0F               	xorlw	15	; case 8
  3865   001C30  B4D8               	btfsc	status,2,c
  3866   001C32  EFDD  F00D         	goto	l4463
  3867   001C36  0A01               	xorlw	1	; case 9
  3868   001C38  B4D8               	btfsc	status,2,c
  3869   001C3A  EFE0  F00D         	goto	l4465
  3870   001C3E  0A03               	xorlw	3	; case 10
  3871   001C40  B4D8               	btfsc	status,2,c
  3872   001C42  EFE3  F00D         	goto	l4467
  3873   001C46  0A01               	xorlw	1	; case 11
  3874   001C48  B4D8               	btfsc	status,2,c
  3875   001C4A  EFE6  F00D         	goto	l4469
  3876   001C4E  0A07               	xorlw	7	; case 12
  3877   001C50  B4D8               	btfsc	status,2,c
  3878   001C52  EFE9  F00D         	goto	l4471
  3879   001C56  EF2D  F00E         	goto	l800
  3880   001C5A                     l800:
  3881   001C5A  0012               	return		;funcret
  3882   001C5C                     __end_of_ADC_input_chanal_configuration:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _ADC_VolatgeReferance *****************
  3886 ;; Defined at:
  3887 ;;		line 193 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  copyADC         1   10[COMRAM] PTR const struct .
  3890 ;;		 -> adc4(7), adc3(7), adc2(7), adc1(7), 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:        1 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 4
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_MCAL_ADC_init
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text6
  3917   002486                     __ptext6:
  3918                           	callstack 0
  3919   002486                     _ADC_VolatgeReferance:
  3920                           	callstack 25
  3921   002486                     
  3922                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 194:     switch(copyADC->VolatageRefrance) {
  3923   002486  EF4D  F012         	goto	l4567
  3924   00248A                     l812:
  3925   00248A  8AC1               	bsf	193,5,c	;volatile
  3926   00248C  88C1               	bsf	193,4,c	;volatile
  3927   00248E  EF65  F012         	goto	l818
  3928   002492                     l816:
  3929   002492  9AC1               	bcf	193,5,c	;volatile
  3930   002494  98C1               	bcf	193,4,c	;volatile
  3931   002496  EF65  F012         	goto	l818
  3932   00249A                     l4567:
  3933   00249A  503F               	movf	ADC_VolatgeReferance@copyADC^0,w,c
  3934   00249C  6ED9               	movwf	fsr2l,c
  3935   00249E  6ADA               	clrf	fsr2h,c
  3936   0024A0  0E06               	movlw	6
  3937   0024A2  26D9               	addwf	fsr2l,f,c
  3938   0024A4  B0DF               	btfsc	indf2,0,c
  3939   0024A6  EF57  F012         	goto	u3321
  3940   0024AA  EF5A  F012         	goto	u3320
  3941   0024AE                     u3321:
  3942   0024AE  0E01               	movlw	1
  3943   0024B0  EF5B  F012         	goto	u3326
  3944   0024B4                     u3320:
  3945   0024B4  0E00               	movlw	0
  3946   0024B6                     u3326:
  3947                           
  3948                           ; Switch size 1, requested type "simple"
  3949                           ; Number of cases is 2, Range of values is 0 to 1
  3950                           ; switch strategies available:
  3951                           ; Name         Instructions Cycles
  3952                           ; simple_byte            7     4 (average)
  3953                           ;	Chosen strategy is simple_byte
  3954   0024B6  0A00               	xorlw	0	; case 0
  3955   0024B8  B4D8               	btfsc	status,2,c
  3956   0024BA  EF49  F012         	goto	l816
  3957   0024BE  0A01               	xorlw	1	; case 1
  3958   0024C0  B4D8               	btfsc	status,2,c
  3959   0024C2  EF45  F012         	goto	l812
  3960   0024C6  EF65  F012         	goto	l818
  3961   0024CA                     l818:
  3962   0024CA  0012               	return		;funcret
  3963   0024CC                     __end_of_ADC_VolatgeReferance:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _ADC_SelectResultFormat *****************
  3967 ;; Defined at:
  3968 ;;		line 186 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  copyADC         1   10[COMRAM] PTR const struct .
  3971 ;;		 -> adc4(7), adc3(7), adc2(7), adc1(7), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:        1 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 4
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_MCAL_ADC_init
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text7
  3998   0025DC                     __ptext7:
  3999                           	callstack 0
  4000   0025DC                     _ADC_SelectResultFormat:
  4001                           	callstack 25
  4002   0025DC                     
  4003                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 187:     switch(copyADC->ResultFormat) {
  4004   0025DC  EFF6  F012         	goto	l4561
  4005   0025E0                     l804:
  4006   0025E0  8EC0               	bsf	192,7,c	;volatile
  4007   0025E2  EF0E  F013         	goto	l807
  4008   0025E6                     l806:
  4009   0025E6  9EC0               	bcf	192,7,c	;volatile
  4010   0025E8  EF0E  F013         	goto	l807
  4011   0025EC                     l4561:
  4012   0025EC  503F               	movf	ADC_SelectResultFormat@copyADC^0,w,c
  4013   0025EE  6ED9               	movwf	fsr2l,c
  4014   0025F0  6ADA               	clrf	fsr2h,c
  4015   0025F2  0E06               	movlw	6
  4016   0025F4  26D9               	addwf	fsr2l,f,c
  4017   0025F6  B2DF               	btfsc	indf2,1,c
  4018   0025F8  EF00  F013         	goto	u3311
  4019   0025FC  EF03  F013         	goto	u3310
  4020   002600                     u3311:
  4021   002600  0E01               	movlw	1
  4022   002602  EF04  F013         	goto	u3316
  4023   002606                     u3310:
  4024   002606  0E00               	movlw	0
  4025   002608                     u3316:
  4026                           
  4027                           ; Switch size 1, requested type "simple"
  4028                           ; Number of cases is 2, Range of values is 0 to 1
  4029                           ; switch strategies available:
  4030                           ; Name         Instructions Cycles
  4031                           ; simple_byte            7     4 (average)
  4032                           ;	Chosen strategy is simple_byte
  4033   002608  0A00               	xorlw	0	; case 0
  4034   00260A  B4D8               	btfsc	status,2,c
  4035   00260C  EFF3  F012         	goto	l806
  4036   002610  0A01               	xorlw	1	; case 1
  4037   002612  B4D8               	btfsc	status,2,c
  4038   002614  EFF0  F012         	goto	l804
  4039   002618  EF0E  F013         	goto	l807
  4040   00261C                     l807:
  4041   00261C  0012               	return		;funcret
  4042   00261E                     __end_of_ADC_SelectResultFormat:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _HALL_LCD_convertU16toSTR *****************
  4046 ;; Defined at:
  4047 ;;		line 258 in file "Hall/LCD/Hall_lcd_prog.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  copyValue       2    0[BANK0 ] unsigned short 
  4050 ;;  copySTR         1    2[BANK0 ] PTR unsigned char 
  4051 ;;		 -> retLCD_Num(12), 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  tempString      6   45[COMRAM] unsigned char [6]
  4054 ;;  DataCounter     1   51[COMRAM] unsigned char 
  4055 ;;  RetValue        1    0        unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      unsigned char 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         7       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:       10 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 9
  4072 ;; This function calls:
  4073 ;;		_memset
  4074 ;;		_sprintf
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text8
  4081   002200                     __ptext8:
  4082                           	callstack 0
  4083   002200                     _HALL_LCD_convertU16toSTR:
  4084                           	callstack 21
  4085   002200                     
  4086                           ;Hall/LCD/Hall_lcd_prog.c: 260:     uint8_t tempString[6] = {0};
  4087   002200  EE20  F062         	lfsr	2,HALL_LCD_convertU16toSTR@tempString
  4088   002204  0E05               	movlw	5
  4089   002206                     u5111:
  4090   002206  6ADE               	clrf	postinc2,c
  4091   002208  06E8               	decf	wreg,f,c
  4092   00220A  E2FD               	bc	u5111
  4093   00220C                     
  4094                           ;Hall/LCD/Hall_lcd_prog.c: 261:     uint8_t DataCounter = 0;
  4095   00220C  6A68               	clrf	HALL_LCD_convertU16toSTR@DataCounter^0,c
  4096   00220E                     
  4097                           ;Hall/LCD/Hall_lcd_prog.c: 262:     if(copySTR == ((void*)0)) {
  4098   00220E  0100               	movlb	0	; () banked
  4099   002210  51FA               	movf	HALL_LCD_convertU16toSTR@copySTR& (0+255),w,b
  4100   002212  A4D8               	btfss	status,2,c
  4101   002214  EF0E  F011         	goto	u5121
  4102   002218  EF10  F011         	goto	u5120
  4103   00221C                     u5121:
  4104   00221C  EF12  F011         	goto	l6117
  4105   002220                     u5120:
  4106   002220                     
  4107                           ; BSR set to: 0
  4108                           ;Hall/LCD/Hall_lcd_prog.c: 264:     }
  4109   002220  EF42  F011         	goto	l448
  4110   002224                     l6117:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;Hall/LCD/Hall_lcd_prog.c: 266:         memset(copySTR, ' ', 5);
  4114   002224  C0FA  F03F         	movff	HALL_LCD_convertU16toSTR@copySTR,memset@dest
  4115   002228  0E00               	movlw	0
  4116   00222A  6E41               	movwf	(memset@c+1)^0,c
  4117   00222C  0E20               	movlw	32
  4118   00222E  6E40               	movwf	memset@c^0,c
  4119   002230  0E00               	movlw	0
  4120   002232  6E43               	movwf	(memset@n+1)^0,c
  4121   002234  0E05               	movlw	5
  4122   002236  6E42               	movwf	memset@n^0,c
  4123   002238  EC85  F013         	call	_memset	;wreg free
  4124   00223C                     
  4125                           ;Hall/LCD/Hall_lcd_prog.c: 267:         sprintf(tempString, "%i", copyValue);
  4126   00223C  0E62               	movlw	low HALL_LCD_convertU16toSTR@tempString
  4127   00223E  6E5C               	movwf	sprintf@s^0,c
  4128   002240  0E2D               	movlw	low STR_5
  4129   002242  6E5D               	movwf	sprintf@fmt^0,c
  4130   002244  C0F8  F05E         	movff	HALL_LCD_convertU16toSTR@copyValue,?_sprintf+2
  4131   002248  C0F9  F05F         	movff	HALL_LCD_convertU16toSTR@copyValue+1,?_sprintf+3
  4132   00224C  EC2F  F013         	call	_sprintf	;wreg free
  4133                           
  4134                           ;Hall/LCD/Hall_lcd_prog.c: 268:         while(tempString[DataCounter] != '\0') {
  4135   002250  EF36  F011         	goto	l6125
  4136   002254                     l6121:
  4137                           
  4138                           ;Hall/LCD/Hall_lcd_prog.c: 269:             copySTR[DataCounter] = tempString[DataCounte
      +                          r];
  4139   002254  5068               	movf	HALL_LCD_convertU16toSTR@DataCounter^0,w,c
  4140   002256  0F62               	addlw	low HALL_LCD_convertU16toSTR@tempString
  4141   002258  6ED9               	movwf	fsr2l,c
  4142   00225A  6ADA               	clrf	fsr2h,c
  4143   00225C  0100               	movlb	0	; () banked
  4144   00225E  51FA               	movf	HALL_LCD_convertU16toSTR@copySTR& (0+255),w,b
  4145   002260  2468               	addwf	HALL_LCD_convertU16toSTR@DataCounter^0,w,c
  4146   002262  6EE1               	movwf	fsr1l,c
  4147   002264  6AE2               	clrf	fsr1h,c
  4148   002266  CFDF FFE7          	movff	indf2,indf1
  4149   00226A                     
  4150                           ; BSR set to: 0
  4151                           ;Hall/LCD/Hall_lcd_prog.c: 270:             DataCounter++;
  4152   00226A  2A68               	incf	HALL_LCD_convertU16toSTR@DataCounter^0,f,c
  4153   00226C                     l6125:
  4154                           
  4155                           ;Hall/LCD/Hall_lcd_prog.c: 268:         while(tempString[DataCounter] != '\0') {
  4156   00226C  5068               	movf	HALL_LCD_convertU16toSTR@DataCounter^0,w,c
  4157   00226E  0F62               	addlw	low HALL_LCD_convertU16toSTR@tempString
  4158   002270  6ED9               	movwf	fsr2l,c
  4159   002272  6ADA               	clrf	fsr2h,c
  4160   002274  50DF               	movf	indf2,w,c
  4161   002276  A4D8               	btfss	status,2,c
  4162   002278  EF40  F011         	goto	u5131
  4163   00227C  EF42  F011         	goto	u5130
  4164   002280                     u5131:
  4165   002280  EF2A  F011         	goto	l6121
  4166   002284                     u5130:
  4167   002284                     l448:
  4168   002284  0012               	return		;funcret
  4169   002286                     __end_of_HALL_LCD_convertU16toSTR:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _sprintf *****************
  4173 ;; Defined at:
  4174 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  s               1   39[COMRAM] PTR unsigned char 
  4177 ;;		 -> HALL_LCD_convertU16toSTR@tempString(6), 
  4178 ;;  fmt             1   40[COMRAM] PTR const unsigned char 
  4179 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  f              11    1[BANK1 ] struct _IO_FILE
  4182 ;;  ret             2    0        int 
  4183 ;;  ap              1    0[BANK1 ] PTR void [1]
  4184 ;;		 -> ?_sprintf(2), 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  2   39[COMRAM] int 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Totals:         6       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;Total ram usage:       18 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 8
  4201 ;; This function calls:
  4202 ;;		_vfprintf
  4203 ;; This function is called by:
  4204 ;;		_HALL_LCD_convertU16toSTR
  4205 ;;		_HALL_LCD_convertU8toSTR
  4206 ;;		_HALL_LCD_convertU32toSTR
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text9
  4211   00265E                     __ptext9:
  4212                           	callstack 0
  4213   00265E                     _sprintf:
  4214                           	callstack 21
  4215   00265E  0E5E               	movlw	low (?_sprintf+2)
  4216   002660  0101               	movlb	1	; () banked
  4217   002662  6F20               	movwf	sprintf@ap& (0+255),b
  4218   002664  C05C  F121         	movff	sprintf@s,sprintf@f
  4219   002668                     
  4220                           ; BSR set to: 1
  4221   002668  0E00               	movlw	0
  4222   00266A  6F24               	movwf	(sprintf@f+3)& (0+255),b
  4223   00266C  0E00               	movlw	0
  4224   00266E  6F23               	movwf	(sprintf@f+2)& (0+255),b
  4225   002670                     
  4226                           ; BSR set to: 1
  4227   002670  0E00               	movlw	0
  4228   002672  6F2B               	movwf	(sprintf@f+10)& (0+255),b
  4229   002674  0E00               	movlw	0
  4230   002676  6F2A               	movwf	(sprintf@f+9)& (0+255),b
  4231   002678                     
  4232                           ; BSR set to: 1
  4233   002678  0E21               	movlw	low sprintf@f
  4234   00267A  6E56               	movwf	vfprintf@fp^0,c
  4235   00267C  0E01               	movlw	high sprintf@f
  4236   00267E  6E57               	movwf	(vfprintf@fp+1)^0,c
  4237   002680  C05D  F058         	movff	sprintf@fmt,vfprintf@fmt
  4238   002684  0E20               	movlw	low sprintf@ap
  4239   002686  6E59               	movwf	vfprintf@ap^0,c
  4240   002688  0E01               	movlw	high sprintf@ap
  4241   00268A  6E5A               	movwf	(vfprintf@ap+1)^0,c
  4242   00268C  EC1F  F012         	call	_vfprintf	;wreg free
  4243   002690  505C               	movf	sprintf@s^0,w,c
  4244   002692  0101               	movlb	1	; () banked
  4245   002694  2523               	addwf	(sprintf@f+2)& (0+255),w,b
  4246   002696  6ED9               	movwf	fsr2l,c
  4247   002698  6ADA               	clrf	fsr2h,c
  4248   00269A  6ADF               	clrf	indf2,c
  4249   00269C                     
  4250                           ; BSR set to: 1
  4251   00269C  0012               	return		;funcret
  4252   00269E                     __end_of_sprintf:
  4253                           	callstack 0
  4254                           
  4255 ;; *************** function _vfprintf *****************
  4256 ;; Defined at:
  4257 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4260 ;;		 -> sprintf@f(11), 
  4261 ;;  fmt             1   35[COMRAM] PTR const unsigned char 
  4262 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
  4263 ;;  ap              2   36[COMRAM] PTR PTR void 
  4264 ;;		 -> sprintf@ap(1), 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  cfmt            1   38[COMRAM] PTR unsigned char 
  4267 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  2   33[COMRAM] int 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4277 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;Total ram usage:        6 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 7
  4284 ;; This function calls:
  4285 ;;		_vfpfcnvrt
  4286 ;; This function is called by:
  4287 ;;		_sprintf
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text10
  4292   00243E                     __ptext10:
  4293                           	callstack 0
  4294   00243E                     _vfprintf:
  4295                           	callstack 21
  4296   00243E                     
  4297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4298   00243E  C058  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4301   002442  EF2F  F012         	goto	l6081
  4302   002446                     l6079:
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4305   002446  C056  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  4306   00244A  C057  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4307   00244E  0E5B               	movlw	low vfprintf@cfmt
  4308   002450  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  4309   002452  C059  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  4310   002456  C05A  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4311   00245A  EC64  F00C         	call	_vfpfcnvrt	;wreg free
  4312   00245E                     l6081:
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4315   00245E  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  4316   002462                     	if	1	;There is more than 1 active tblptr byte
  4317   002462  0E10               	movlw	high __smallconst
  4318   002464  6EF7               	movwf	tblptrh,c
  4319   002466                     	endif
  4320   002466                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4321   002466  6AF8               	clrf	tblptru,c
  4322   002468                     	endif
  4323   002468                     	if	0	;tblptru may be non-zero
  4324   002468                     	endif
  4325   002468  0008               	tblrd		*
  4326   00246A  50F5               	movf	tablat,w,c
  4327   00246C  0900               	iorlw	0
  4328   00246E  A4D8               	btfss	status,2,c
  4329   002470  EF3C  F012         	goto	u5091
  4330   002474  EF3E  F012         	goto	u5090
  4331   002478                     u5091:
  4332   002478  EF23  F012         	goto	l6079
  4333   00247C                     u5090:
  4334   00247C                     
  4335                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4336   00247C  0E00               	movlw	0
  4337   00247E  6E57               	movwf	(?_vfprintf+1)^0,c
  4338   002480  0E00               	movlw	0
  4339   002482  6E56               	movwf	?_vfprintf^0,c
  4340   002484  0012               	return		;funcret
  4341   002486                     __end_of_vfprintf:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _vfpfcnvrt *****************
  4345 ;; Defined at:
  4346 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4349 ;;		 -> sprintf@f(11), 
  4350 ;;  fmt             1   22[COMRAM] PTR PTR unsigned char 
  4351 ;;		 -> vfprintf@cfmt(1), 
  4352 ;;  ap              2   23[COMRAM] PTR PTR void 
  4353 ;;		 -> sprintf@ap(1), 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  convarg         4   28[COMRAM] struct .
  4356 ;;  c               1   32[COMRAM] unsigned char 
  4357 ;;  cp              1   27[COMRAM] PTR unsigned char 
  4358 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
  4359 ;;  done            1   26[COMRAM] _Bool 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4369 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;Total ram usage:       13 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 6
  4376 ;; This function calls:
  4377 ;;		___awdiv
  4378 ;;		___awmod
  4379 ;;		_abs
  4380 ;;		_fputc
  4381 ;; This function is called by:
  4382 ;;		_vfprintf
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text11
  4387   0018C8                     __ptext11:
  4388                           	callstack 0
  4389   0018C8                     _vfpfcnvrt:
  4390                           	callstack 21
  4391   0018C8                     
  4392                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4393   0018C8  504B               	movf	vfpfcnvrt@fmt^0,w,c
  4394   0018CA  6ED9               	movwf	fsr2l,c
  4395   0018CC  6ADA               	clrf	fsr2h,c
  4396   0018CE  CFDF FFF6          	movff	indf2,tblptrl
  4397   0018D2                     	if	1	;There is more than 1 active tblptr byte
  4398   0018D2  0E10               	movlw	high __smallconst
  4399   0018D4  6EF7               	movwf	tblptrh,c
  4400   0018D6                     	endif
  4401   0018D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4402   0018D6  6AF8               	clrf	tblptru,c
  4403   0018D8                     	endif
  4404   0018D8                     	if	0	;tblptru may be non-zero
  4405   0018D8                     	endif
  4406   0018D8  0008               	tblrd		*
  4407   0018DA  50F5               	movf	tablat,w,c
  4408   0018DC  0A25               	xorlw	37
  4409   0018DE  A4D8               	btfss	status,2,c
  4410   0018E0  EF74  F00C         	goto	u4991
  4411   0018E4  EF76  F00C         	goto	u4990
  4412   0018E8                     u4991:
  4413   0018E8  EF3A  F00D         	goto	l6071
  4414   0018EC                     u4990:
  4415   0018EC                     
  4416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4417   0018EC  504B               	movf	vfpfcnvrt@fmt^0,w,c
  4418   0018EE  6ED9               	movwf	fsr2l,c
  4419   0018F0  6ADA               	clrf	fsr2h,c
  4420   0018F2  2ADF               	incf	indf2,f,c
  4421   0018F4                     
  4422                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4423   0018F4  0E00               	movlw	0
  4424   0018F6  6E02               	movwf	(_width+1)^0,c
  4425   0018F8  0E00               	movlw	0
  4426   0018FA  6E01               	movwf	_width^0,c
  4427   0018FC  C001  F029         	movff	_width,_flags
  4428   001900                     
  4429                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4430   001900  6803               	setf	_prec^0,c
  4431   001902  6804               	setf	(_prec+1)^0,c
  4432   001904                     
  4433                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4434   001904  504B               	movf	vfpfcnvrt@fmt^0,w,c
  4435   001906  6ED9               	movwf	fsr2l,c
  4436   001908  6ADA               	clrf	fsr2h,c
  4437   00190A  50DF               	movf	indf2,w,c
  4438   00190C  6E50               	movwf	vfpfcnvrt@cp^0,c
  4439   00190E                     
  4440                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4441   00190E  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4442   001912                     	if	1	;There is more than 1 active tblptr byte
  4443   001912  0E10               	movlw	high __smallconst
  4444   001914  6EF7               	movwf	tblptrh,c
  4445   001916                     	endif
  4446   001916                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4447   001916  6AF8               	clrf	tblptru,c
  4448   001918                     	endif
  4449   001918                     	if	0	;tblptru may be non-zero
  4450   001918                     	endif
  4451   001918  0008               	tblrd		*
  4452   00191A  50F5               	movf	tablat,w,c
  4453   00191C  0A64               	xorlw	100
  4454   00191E  B4D8               	btfsc	status,2,c
  4455   001920  EF94  F00C         	goto	u5001
  4456   001924  EF96  F00C         	goto	u5000
  4457   001928                     u5001:
  4458   001928  EFA5  F00C         	goto	l6039
  4459   00192C                     u5000:
  4460   00192C  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4461   001930                     	if	1	;There is more than 1 active tblptr byte
  4462   001930  0E10               	movlw	high __smallconst
  4463   001932  6EF7               	movwf	tblptrh,c
  4464   001934                     	endif
  4465   001934                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4466   001934  6AF8               	clrf	tblptru,c
  4467   001936                     	endif
  4468   001936                     	if	0	;tblptru may be non-zero
  4469   001936                     	endif
  4470   001936  0008               	tblrd		*
  4471   001938  50F5               	movf	tablat,w,c
  4472   00193A  0A69               	xorlw	105
  4473   00193C  A4D8               	btfss	status,2,c
  4474   00193E  EFA3  F00C         	goto	u5011
  4475   001942  EFA5  F00C         	goto	u5010
  4476   001946                     u5011:
  4477   001946  EF34  F00D         	goto	l6067
  4478   00194A                     u5010:
  4479   00194A                     l6039:
  4480                           
  4481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4482   00194A  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4483   00194E  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4484   001952  0E02               	movlw	2
  4485   001954  26DF               	addwf	indf2,f,c
  4486   001956  5CDF               	subwf	indf2,w,c
  4487   001958  6ED9               	movwf	fsr2l,c
  4488   00195A  6ADA               	clrf	fsr2h,c
  4489   00195C  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg
  4490   001960  CFDE F052          	movff	postinc2,vfpfcnvrt@convarg+1
  4491   001964                     
  4492                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4493   001964  504B               	movf	vfpfcnvrt@fmt^0,w,c
  4494   001966  6ED9               	movwf	fsr2l,c
  4495   001968  6ADA               	clrf	fsr2h,c
  4496   00196A  2850               	incf	vfpfcnvrt@cp^0,w,c
  4497   00196C  6EDF               	movwf	indf2,c
  4498   00196E                     
  4499                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4500   00196E  0E20               	movlw	32
  4501   001970  6E55               	movwf	vfpfcnvrt@c^0,c
  4502   001972                     
  4503                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4504   001972  BE52               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  4505   001974  EFBE  F00C         	goto	u5021
  4506   001978  EFC1  F00C         	goto	u5020
  4507   00197C                     u5021:
  4508   00197C  0E01               	movlw	1
  4509   00197E  EFC2  F00C         	goto	u5030
  4510   001982                     u5020:
  4511   001982  0E00               	movlw	0
  4512   001984                     u5030:
  4513   001984  6E4F               	movwf	vfpfcnvrt@done^0,c
  4514   001986                     l6047:
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4517   001986  0655               	decf	vfpfcnvrt@c^0,f,c
  4518   001988  0E00               	movlw	low _dbuf
  4519   00198A  2455               	addwf	vfpfcnvrt@c^0,w,c
  4520   00198C  6ED9               	movwf	fsr2l,c
  4521   00198E  6ADA               	clrf	fsr2h,c
  4522   001990  0E01               	movlw	high _dbuf
  4523   001992  22DA               	addwfc	fsr2h,f,c
  4524   001994  C051  F03F         	movff	vfpfcnvrt@convarg,___awmod@dividend
  4525   001998  C052  F040         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  4526   00199C  0E00               	movlw	0
  4527   00199E  6E42               	movwf	(___awmod@divisor+1)^0,c
  4528   0019A0  0E0A               	movlw	10
  4529   0019A2  6E41               	movwf	___awmod@divisor^0,c
  4530   0019A4  EC1F  F010         	call	___awmod	;wreg free
  4531   0019A8  C03F  F045         	movff	?___awmod,abs@a
  4532   0019AC  C040  F046         	movff	?___awmod+1,abs@a+1
  4533   0019B0  EC6B  F013         	call	_abs	;wreg free
  4534   0019B4  5045               	movf	?_abs^0,w,c
  4535   0019B6  0F30               	addlw	48
  4536   0019B8  6EDF               	movwf	indf2,c
  4537   0019BA                     
  4538                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4539   0019BA  C051  F03F         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  4540   0019BE  C052  F040         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  4541   0019C2  0E00               	movlw	0
  4542   0019C4  6E42               	movwf	(___awdiv@divisor+1)^0,c
  4543   0019C6  0E0A               	movlw	10
  4544   0019C8  6E41               	movwf	___awdiv@divisor^0,c
  4545   0019CA  EC04  F00F         	call	___awdiv	;wreg free
  4546   0019CE  C03F  F051         	movff	?___awdiv,vfpfcnvrt@convarg
  4547   0019D2  C040  F052         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  4548   0019D6                     
  4549                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4550   0019D6  5051               	movf	vfpfcnvrt@convarg^0,w,c
  4551   0019D8  1052               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  4552   0019DA  B4D8               	btfsc	status,2,c
  4553   0019DC  EFF2  F00C         	goto	u5041
  4554   0019E0  EFF4  F00C         	goto	u5040
  4555   0019E4                     u5041:
  4556   0019E4  EFFC  F00C         	goto	l6055
  4557   0019E8                     u5040:
  4558   0019E8  5055               	movf	vfpfcnvrt@c^0,w,c
  4559   0019EA  A4D8               	btfss	status,2,c
  4560   0019EC  EFFA  F00C         	goto	u5051
  4561   0019F0  EFFC  F00C         	goto	u5050
  4562   0019F4                     u5051:
  4563   0019F4  EFC3  F00C         	goto	l6047
  4564   0019F8                     u5050:
  4565   0019F8                     l6055:
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4568   0019F8  5055               	movf	vfpfcnvrt@c^0,w,c
  4569   0019FA  B4D8               	btfsc	status,2,c
  4570   0019FC  EF02  F00D         	goto	u5061
  4571   001A00  EF04  F00D         	goto	u5060
  4572   001A04                     u5061:
  4573   001A04  EF29  F00D         	goto	l6065
  4574   001A08                     u5060:
  4575   001A08  504F               	movf	vfpfcnvrt@done^0,w,c
  4576   001A0A  B4D8               	btfsc	status,2,c
  4577   001A0C  EF0A  F00D         	goto	u5071
  4578   001A10  EF0C  F00D         	goto	u5070
  4579   001A14                     u5071:
  4580   001A14  EF29  F00D         	goto	l6065
  4581   001A18                     u5070:
  4582   001A18                     
  4583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4584   001A18  0655               	decf	vfpfcnvrt@c^0,f,c
  4585   001A1A  0E00               	movlw	low _dbuf
  4586   001A1C  2455               	addwf	vfpfcnvrt@c^0,w,c
  4587   001A1E  6ED9               	movwf	fsr2l,c
  4588   001A20  6ADA               	clrf	fsr2h,c
  4589   001A22  0E01               	movlw	high _dbuf
  4590   001A24  22DA               	addwfc	fsr2h,f,c
  4591   001A26  0E2D               	movlw	45
  4592   001A28  6EDF               	movwf	indf2,c
  4593   001A2A  EF29  F00D         	goto	l6065
  4594   001A2E                     l6061:
  4595                           
  4596                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4597   001A2E  0E00               	movlw	low _dbuf
  4598   001A30  2455               	addwf	vfpfcnvrt@c^0,w,c
  4599   001A32  6ED9               	movwf	fsr2l,c
  4600   001A34  6ADA               	clrf	fsr2h,c
  4601   001A36  0E01               	movlw	high _dbuf
  4602   001A38  22DA               	addwfc	fsr2h,f,c
  4603   001A3A  50DF               	movf	indf2,w,c
  4604   001A3C  6E4E               	movwf	??_vfpfcnvrt^0,c
  4605   001A3E  504E               	movf	??_vfpfcnvrt^0,w,c
  4606   001A40  6E3F               	movwf	fputc@c^0,c
  4607   001A42  6A40               	clrf	(fputc@c+1)^0,c
  4608   001A44  C049  F041         	movff	vfpfcnvrt@fp,fputc@fp
  4609   001A48  C04A  F042         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4610   001A4C  EC65  F00F         	call	_fputc	;wreg free
  4611   001A50  2A55               	incf	vfpfcnvrt@c^0,f,c
  4612   001A52                     l6065:
  4613                           
  4614                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4615   001A52  0E20               	movlw	32
  4616   001A54  1855               	xorwf	vfpfcnvrt@c^0,w,c
  4617   001A56  A4D8               	btfss	status,2,c
  4618   001A58  EF30  F00D         	goto	u5081
  4619   001A5C  EF32  F00D         	goto	u5080
  4620   001A60                     u5081:
  4621   001A60  EF17  F00D         	goto	l6061
  4622   001A64                     u5080:
  4623   001A64  EF4E  F00D         	goto	l2109
  4624   001A68                     l6067:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4627   001A68  504B               	movf	vfpfcnvrt@fmt^0,w,c
  4628   001A6A  6ED9               	movwf	fsr2l,c
  4629   001A6C  6ADA               	clrf	fsr2h,c
  4630   001A6E  2ADF               	incf	indf2,f,c
  4631   001A70  EF4E  F00D         	goto	l2109
  4632   001A74                     l6071:
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4635   001A74  504B               	movf	vfpfcnvrt@fmt^0,w,c
  4636   001A76  6ED9               	movwf	fsr2l,c
  4637   001A78  6ADA               	clrf	fsr2h,c
  4638   001A7A  CFDF FFF6          	movff	indf2,tblptrl
  4639   001A7E                     	if	1	;There is more than 1 active tblptr byte
  4640   001A7E  0E10               	movlw	high __smallconst
  4641   001A80  6EF7               	movwf	tblptrh,c
  4642   001A82                     	endif
  4643   001A82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4644   001A82  6AF8               	clrf	tblptru,c
  4645   001A84                     	endif
  4646   001A84                     	if	0	;tblptru may be non-zero
  4647   001A84                     	endif
  4648   001A84  0008               	tblrd		*
  4649   001A86  50F5               	movf	tablat,w,c
  4650   001A88  6E3F               	movwf	fputc@c^0,c
  4651   001A8A  6A40               	clrf	(fputc@c+1)^0,c
  4652   001A8C  C049  F041         	movff	vfpfcnvrt@fp,fputc@fp
  4653   001A90  C04A  F042         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4654   001A94  EC65  F00F         	call	_fputc	;wreg free
  4655   001A98  EF34  F00D         	goto	l6067
  4656   001A9C                     l2109:
  4657   001A9C  0012               	return		;funcret
  4658   001A9E                     __end_of_vfpfcnvrt:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function _fputc *****************
  4662 ;; Defined at:
  4663 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  c               2   10[COMRAM] int 
  4666 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  4667 ;;		 -> sprintf@f(11), 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  2   10[COMRAM] int 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        9 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 5
  4686 ;; This function calls:
  4687 ;;		_putch
  4688 ;; This function is called by:
  4689 ;;		_vfpfcnvrt
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text12
  4694   001ECA                     __ptext12:
  4695                           	callstack 0
  4696   001ECA                     _fputc:
  4697                           	callstack 21
  4698   001ECA  5041               	movf	fputc@fp^0,w,c
  4699   001ECC  1042               	iorwf	(fputc@fp+1)^0,w,c
  4700   001ECE  B4D8               	btfsc	status,2,c
  4701   001ED0  EF6C  F00F         	goto	u4941
  4702   001ED4  EF6E  F00F         	goto	u4940
  4703   001ED8                     u4941:
  4704   001ED8  EF77  F00F         	goto	l6011
  4705   001EDC                     u4940:
  4706   001EDC  5041               	movf	fputc@fp^0,w,c
  4707   001EDE  1042               	iorwf	(fputc@fp+1)^0,w,c
  4708   001EE0  A4D8               	btfss	status,2,c
  4709   001EE2  EF75  F00F         	goto	u4951
  4710   001EE6  EF77  F00F         	goto	u4950
  4711   001EEA                     u4951:
  4712   001EEA  EF7C  F00F         	goto	l6013
  4713   001EEE                     u4950:
  4714   001EEE                     l6011:
  4715   001EEE  503F               	movf	fputc@c^0,w,c
  4716   001EF0  EC3F  F014         	call	_putch
  4717   001EF4  EFC1  F00F         	goto	l2134
  4718   001EF8                     l6013:
  4719   001EF8  EE20 F009          	lfsr	2,9
  4720   001EFC  5041               	movf	fputc@fp^0,w,c
  4721   001EFE  26D9               	addwf	fsr2l,f,c
  4722   001F00  5042               	movf	(fputc@fp+1)^0,w,c
  4723   001F02  22DA               	addwfc	fsr2h,f,c
  4724   001F04  50DE               	movf	postinc2,w,c
  4725   001F06  10DE               	iorwf	postinc2,w,c
  4726   001F08  B4D8               	btfsc	status,2,c
  4727   001F0A  EF89  F00F         	goto	u4961
  4728   001F0E  EF8B  F00F         	goto	u4960
  4729   001F12                     u4961:
  4730   001F12  EFA6  F00F         	goto	l6017
  4731   001F16                     u4960:
  4732   001F16  EE20 F009          	lfsr	2,9
  4733   001F1A  5041               	movf	fputc@fp^0,w,c
  4734   001F1C  26D9               	addwf	fsr2l,f,c
  4735   001F1E  5042               	movf	(fputc@fp+1)^0,w,c
  4736   001F20  22DA               	addwfc	fsr2h,f,c
  4737   001F22  EE10 F002          	lfsr	1,2
  4738   001F26  5041               	movf	fputc@fp^0,w,c
  4739   001F28  26E1               	addwf	fsr1l,f,c
  4740   001F2A  5042               	movf	(fputc@fp+1)^0,w,c
  4741   001F2C  22E2               	addwfc	fsr1h,f,c
  4742   001F2E  50DE               	movf	postinc2,w,c
  4743   001F30  5CE6               	subwf	postinc1,w,c
  4744   001F32  50E6               	movf	postinc1,w,c
  4745   001F34  0A80               	xorlw	128
  4746   001F36  6E47               	movwf	(??_fputc+4)^0,c
  4747   001F38  50DE               	movf	postinc2,w,c
  4748   001F3A  0A80               	xorlw	128
  4749   001F3C  5847               	subwfb	(??_fputc+4)^0,w,c
  4750   001F3E  B0D8               	btfsc	status,0,c
  4751   001F40  EFA4  F00F         	goto	u4971
  4752   001F44  EFA6  F00F         	goto	u4970
  4753   001F48                     u4971:
  4754   001F48  EFC1  F00F         	goto	l2134
  4755   001F4C                     u4970:
  4756   001F4C                     l6017:
  4757   001F4C  EE20 F002          	lfsr	2,2
  4758   001F50  5041               	movf	fputc@fp^0,w,c
  4759   001F52  26D9               	addwf	fsr2l,f,c
  4760   001F54  5042               	movf	(fputc@fp+1)^0,w,c
  4761   001F56  22DA               	addwfc	fsr2h,f,c
  4762   001F58  50DF               	movf	indf2,w,c
  4763   001F5A  6E43               	movwf	??_fputc^0,c
  4764   001F5C  C041  FFD9         	movff	fputc@fp,fsr2l
  4765   001F60  C042  FFDA         	movff	fputc@fp+1,fsr2h
  4766   001F64  50DF               	movf	indf2,w,c
  4767   001F66  2443               	addwf	??_fputc^0,w,c
  4768   001F68  6ED9               	movwf	fsr2l,c
  4769   001F6A  6ADA               	clrf	fsr2h,c
  4770   001F6C  C03F  FFDF         	movff	fputc@c,indf2
  4771   001F70  EE20 F002          	lfsr	2,2
  4772   001F74  5041               	movf	fputc@fp^0,w,c
  4773   001F76  26D9               	addwf	fsr2l,f,c
  4774   001F78  5042               	movf	(fputc@fp+1)^0,w,c
  4775   001F7A  22DA               	addwfc	fsr2h,f,c
  4776   001F7C  2ADE               	incf	postinc2,f,c
  4777   001F7E  0E00               	movlw	0
  4778   001F80  22DD               	addwfc	postdec2,f,c
  4779   001F82                     l2134:
  4780   001F82  0012               	return		;funcret
  4781   001F84                     __end_of_fputc:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function _putch *****************
  4785 ;; Defined at:
  4786 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  c               1    wreg     unsigned char 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  c               1    0[COMRAM] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; Hardware stack levels required when called: 4
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_fputc
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text13
  4815   00287E                     __ptext13:
  4816                           	callstack 0
  4817   00287E                     _putch:
  4818                           	callstack 21
  4819   00287E  0012               	return		;funcret
  4820   002880                     __end_of_putch:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function _abs *****************
  4824 ;; Defined at:
  4825 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  a               2   16[COMRAM] int 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  2   16[COMRAM] int 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;Total ram usage:        4 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; Hardware stack levels required when called: 4
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_vfpfcnvrt
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text14
  4854   0026D6                     __ptext14:
  4855                           	callstack 0
  4856   0026D6                     _abs:
  4857                           	callstack 22
  4858   0026D6  BE46               	btfsc	(abs@a+1)^0,7,c
  4859   0026D8  EF70  F013         	goto	u4981
  4860   0026DC  EF72  F013         	goto	u4980
  4861   0026E0                     u4981:
  4862   0026E0  EF78  F013         	goto	l2119
  4863   0026E4                     u4980:
  4864   0026E4  C045  F045         	movff	abs@a,?_abs
  4865   0026E8  C046  F046         	movff	abs@a+1,?_abs+1
  4866   0026EC  EF84  F013         	goto	l2122
  4867   0026F0                     l2119:
  4868   0026F0  C045  F047         	movff	abs@a,??_abs
  4869   0026F4  C046  F048         	movff	abs@a+1,??_abs+1
  4870   0026F8  1E47               	comf	??_abs^0,f,c
  4871   0026FA  1E48               	comf	(??_abs+1)^0,f,c
  4872   0026FC  4A47               	infsnz	??_abs^0,f,c
  4873   0026FE  2A48               	incf	(??_abs+1)^0,f,c
  4874   002700  C047  F045         	movff	??_abs,?_abs
  4875   002704  C048  F046         	movff	??_abs+1,?_abs+1
  4876   002708                     l2122:
  4877   002708  0012               	return		;funcret
  4878   00270A                     __end_of_abs:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function ___awmod *****************
  4882 ;; Defined at:
  4883 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  dividend        2   10[COMRAM] int 
  4886 ;;  divisor         2   12[COMRAM] int 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  sign            1   15[COMRAM] unsigned char 
  4889 ;;  counter         1   14[COMRAM] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  2   10[COMRAM] int 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;Total ram usage:        6 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; Hardware stack levels required when called: 4
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_vfpfcnvrt
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text15
  4914   00203E                     __ptext15:
  4915                           	callstack 0
  4916   00203E                     ___awmod:
  4917                           	callstack 22
  4918   00203E  6A44               	clrf	___awmod@sign^0,c
  4919   002040  BE40               	btfsc	(___awmod@dividend+1)^0,7,c
  4920   002042  EF27  F010         	goto	u4880
  4921   002046  EF25  F010         	goto	u4881
  4922   00204A                     u4881:
  4923   00204A  EF2D  F010         	goto	l5979
  4924   00204E                     u4880:
  4925   00204E  6C3F               	negf	___awmod@dividend^0,c
  4926   002050  1E40               	comf	(___awmod@dividend+1)^0,f,c
  4927   002052  B0D8               	btfsc	status,0,c
  4928   002054  2A40               	incf	(___awmod@dividend+1)^0,f,c
  4929   002056  0E01               	movlw	1
  4930   002058  6E44               	movwf	___awmod@sign^0,c
  4931   00205A                     l5979:
  4932   00205A  BE42               	btfsc	(___awmod@divisor+1)^0,7,c
  4933   00205C  EF34  F010         	goto	u4890
  4934   002060  EF32  F010         	goto	u4891
  4935   002064                     u4891:
  4936   002064  EF38  F010         	goto	l5983
  4937   002068                     u4890:
  4938   002068  6C41               	negf	___awmod@divisor^0,c
  4939   00206A  1E42               	comf	(___awmod@divisor+1)^0,f,c
  4940   00206C  B0D8               	btfsc	status,0,c
  4941   00206E  2A42               	incf	(___awmod@divisor+1)^0,f,c
  4942   002070                     l5983:
  4943   002070  5041               	movf	___awmod@divisor^0,w,c
  4944   002072  1042               	iorwf	(___awmod@divisor+1)^0,w,c
  4945   002074  B4D8               	btfsc	status,2,c
  4946   002076  EF3F  F010         	goto	u4901
  4947   00207A  EF41  F010         	goto	u4900
  4948   00207E                     u4901:
  4949   00207E  EF65  F010         	goto	l5999
  4950   002082                     u4900:
  4951   002082  0E01               	movlw	1
  4952   002084  6E43               	movwf	___awmod@counter^0,c
  4953   002086  EF49  F010         	goto	l5989
  4954   00208A                     l5987:
  4955   00208A  90D8               	bcf	status,0,c
  4956   00208C  3641               	rlcf	___awmod@divisor^0,f,c
  4957   00208E  3642               	rlcf	(___awmod@divisor+1)^0,f,c
  4958   002090  2A43               	incf	___awmod@counter^0,f,c
  4959   002092                     l5989:
  4960   002092  AE42               	btfss	(___awmod@divisor+1)^0,7,c
  4961   002094  EF4E  F010         	goto	u4911
  4962   002098  EF50  F010         	goto	u4910
  4963   00209C                     u4911:
  4964   00209C  EF45  F010         	goto	l5987
  4965   0020A0                     u4910:
  4966   0020A0                     l5991:
  4967   0020A0  5041               	movf	___awmod@divisor^0,w,c
  4968   0020A2  5C3F               	subwf	___awmod@dividend^0,w,c
  4969   0020A4  5042               	movf	(___awmod@divisor+1)^0,w,c
  4970   0020A6  5840               	subwfb	(___awmod@dividend+1)^0,w,c
  4971   0020A8  A0D8               	btfss	status,0,c
  4972   0020AA  EF59  F010         	goto	u4921
  4973   0020AE  EF5B  F010         	goto	u4920
  4974   0020B2                     u4921:
  4975   0020B2  EF5F  F010         	goto	l5995
  4976   0020B6                     u4920:
  4977   0020B6  5041               	movf	___awmod@divisor^0,w,c
  4978   0020B8  5E3F               	subwf	___awmod@dividend^0,f,c
  4979   0020BA  5042               	movf	(___awmod@divisor+1)^0,w,c
  4980   0020BC  5A40               	subwfb	(___awmod@dividend+1)^0,f,c
  4981   0020BE                     l5995:
  4982   0020BE  90D8               	bcf	status,0,c
  4983   0020C0  3242               	rrcf	(___awmod@divisor+1)^0,f,c
  4984   0020C2  3241               	rrcf	___awmod@divisor^0,f,c
  4985   0020C4  2E43               	decfsz	___awmod@counter^0,f,c
  4986   0020C6  EF50  F010         	goto	l5991
  4987   0020CA                     l5999:
  4988   0020CA  5044               	movf	___awmod@sign^0,w,c
  4989   0020CC  B4D8               	btfsc	status,2,c
  4990   0020CE  EF6B  F010         	goto	u4931
  4991   0020D2  EF6D  F010         	goto	u4930
  4992   0020D6                     u4931:
  4993   0020D6  EF71  F010         	goto	l6003
  4994   0020DA                     u4930:
  4995   0020DA  6C3F               	negf	___awmod@dividend^0,c
  4996   0020DC  1E40               	comf	(___awmod@dividend+1)^0,f,c
  4997   0020DE  B0D8               	btfsc	status,0,c
  4998   0020E0  2A40               	incf	(___awmod@dividend+1)^0,f,c
  4999   0020E2                     l6003:
  5000   0020E2  C03F  F03F         	movff	___awmod@dividend,?___awmod
  5001   0020E6  C040  F040         	movff	___awmod@dividend+1,?___awmod+1
  5002   0020EA  0012               	return		;funcret
  5003   0020EC                     __end_of___awmod:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function ___awdiv *****************
  5007 ;; Defined at:
  5008 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  dividend        2   10[COMRAM] int 
  5011 ;;  divisor         2   12[COMRAM] int 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  quotient        2   16[COMRAM] int 
  5014 ;;  sign            1   15[COMRAM] unsigned char 
  5015 ;;  counter         1   14[COMRAM] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  2   10[COMRAM] int 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        8 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 4
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_vfpfcnvrt
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text16
  5040   001E08                     __ptext16:
  5041                           	callstack 0
  5042   001E08                     ___awdiv:
  5043                           	callstack 22
  5044   001E08  6A44               	clrf	___awdiv@sign^0,c
  5045   001E0A  BE42               	btfsc	(___awdiv@divisor+1)^0,7,c
  5046   001E0C  EF0C  F00F         	goto	u4820
  5047   001E10  EF0A  F00F         	goto	u4821
  5048   001E14                     u4821:
  5049   001E14  EF12  F00F         	goto	l5935
  5050   001E18                     u4820:
  5051   001E18  6C41               	negf	___awdiv@divisor^0,c
  5052   001E1A  1E42               	comf	(___awdiv@divisor+1)^0,f,c
  5053   001E1C  B0D8               	btfsc	status,0,c
  5054   001E1E  2A42               	incf	(___awdiv@divisor+1)^0,f,c
  5055   001E20  0E01               	movlw	1
  5056   001E22  6E44               	movwf	___awdiv@sign^0,c
  5057   001E24                     l5935:
  5058   001E24  BE40               	btfsc	(___awdiv@dividend+1)^0,7,c
  5059   001E26  EF19  F00F         	goto	u4830
  5060   001E2A  EF17  F00F         	goto	u4831
  5061   001E2E                     u4831:
  5062   001E2E  EF1F  F00F         	goto	l5941
  5063   001E32                     u4830:
  5064   001E32  6C3F               	negf	___awdiv@dividend^0,c
  5065   001E34  1E40               	comf	(___awdiv@dividend+1)^0,f,c
  5066   001E36  B0D8               	btfsc	status,0,c
  5067   001E38  2A40               	incf	(___awdiv@dividend+1)^0,f,c
  5068   001E3A  0E01               	movlw	1
  5069   001E3C  1A44               	xorwf	___awdiv@sign^0,f,c
  5070   001E3E                     l5941:
  5071   001E3E  0E00               	movlw	0
  5072   001E40  6E46               	movwf	(___awdiv@quotient+1)^0,c
  5073   001E42  0E00               	movlw	0
  5074   001E44  6E45               	movwf	___awdiv@quotient^0,c
  5075   001E46  5041               	movf	___awdiv@divisor^0,w,c
  5076   001E48  1042               	iorwf	(___awdiv@divisor+1)^0,w,c
  5077   001E4A  B4D8               	btfsc	status,2,c
  5078   001E4C  EF2A  F00F         	goto	u4841
  5079   001E50  EF2C  F00F         	goto	u4840
  5080   001E54                     u4841:
  5081   001E54  EF54  F00F         	goto	l5963
  5082   001E58                     u4840:
  5083   001E58  0E01               	movlw	1
  5084   001E5A  6E43               	movwf	___awdiv@counter^0,c
  5085   001E5C  EF34  F00F         	goto	l5949
  5086   001E60                     l5947:
  5087   001E60  90D8               	bcf	status,0,c
  5088   001E62  3641               	rlcf	___awdiv@divisor^0,f,c
  5089   001E64  3642               	rlcf	(___awdiv@divisor+1)^0,f,c
  5090   001E66  2A43               	incf	___awdiv@counter^0,f,c
  5091   001E68                     l5949:
  5092   001E68  AE42               	btfss	(___awdiv@divisor+1)^0,7,c
  5093   001E6A  EF39  F00F         	goto	u4851
  5094   001E6E  EF3B  F00F         	goto	u4850
  5095   001E72                     u4851:
  5096   001E72  EF30  F00F         	goto	l5947
  5097   001E76                     u4850:
  5098   001E76                     l5951:
  5099   001E76  90D8               	bcf	status,0,c
  5100   001E78  3645               	rlcf	___awdiv@quotient^0,f,c
  5101   001E7A  3646               	rlcf	(___awdiv@quotient+1)^0,f,c
  5102   001E7C  5041               	movf	___awdiv@divisor^0,w,c
  5103   001E7E  5C3F               	subwf	___awdiv@dividend^0,w,c
  5104   001E80  5042               	movf	(___awdiv@divisor+1)^0,w,c
  5105   001E82  5840               	subwfb	(___awdiv@dividend+1)^0,w,c
  5106   001E84  A0D8               	btfss	status,0,c
  5107   001E86  EF47  F00F         	goto	u4861
  5108   001E8A  EF49  F00F         	goto	u4860
  5109   001E8E                     u4861:
  5110   001E8E  EF4E  F00F         	goto	l5959
  5111   001E92                     u4860:
  5112   001E92  5041               	movf	___awdiv@divisor^0,w,c
  5113   001E94  5E3F               	subwf	___awdiv@dividend^0,f,c
  5114   001E96  5042               	movf	(___awdiv@divisor+1)^0,w,c
  5115   001E98  5A40               	subwfb	(___awdiv@dividend+1)^0,f,c
  5116   001E9A  8045               	bsf	___awdiv@quotient^0,0,c
  5117   001E9C                     l5959:
  5118   001E9C  90D8               	bcf	status,0,c
  5119   001E9E  3242               	rrcf	(___awdiv@divisor+1)^0,f,c
  5120   001EA0  3241               	rrcf	___awdiv@divisor^0,f,c
  5121   001EA2  2E43               	decfsz	___awdiv@counter^0,f,c
  5122   001EA4  EF3B  F00F         	goto	l5951
  5123   001EA8                     l5963:
  5124   001EA8  5044               	movf	___awdiv@sign^0,w,c
  5125   001EAA  B4D8               	btfsc	status,2,c
  5126   001EAC  EF5A  F00F         	goto	u4871
  5127   001EB0  EF5C  F00F         	goto	u4870
  5128   001EB4                     u4871:
  5129   001EB4  EF60  F00F         	goto	l5967
  5130   001EB8                     u4870:
  5131   001EB8  6C45               	negf	___awdiv@quotient^0,c
  5132   001EBA  1E46               	comf	(___awdiv@quotient+1)^0,f,c
  5133   001EBC  B0D8               	btfsc	status,0,c
  5134   001EBE  2A46               	incf	(___awdiv@quotient+1)^0,f,c
  5135   001EC0                     l5967:
  5136   001EC0  C045  F03F         	movff	___awdiv@quotient,?___awdiv
  5137   001EC4  C046  F040         	movff	___awdiv@quotient+1,?___awdiv+1
  5138   001EC8  0012               	return		;funcret
  5139   001ECA                     __end_of___awdiv:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _memset *****************
  5143 ;; Defined at:
  5144 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  dest            1   10[COMRAM] PTR void 
  5147 ;;		 -> retLCD_Num(12), 
  5148 ;;  c               2   11[COMRAM] int 
  5149 ;;  n               2   13[COMRAM] unsigned int 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  p               1   15[COMRAM] PTR unsigned char 
  5152 ;;		 -> retLCD_Num(12), 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1   10[COMRAM] PTR void 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:        6 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 4
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_HALL_LCD_convertU16toSTR
  5173 ;;		_HALL_LCD_convertU8toSTR
  5174 ;;		_HALL_LCD_convertU32toSTR
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text17
  5179   00270A                     __ptext17:
  5180                           	callstack 0
  5181   00270A                     _memset:
  5182                           	callstack 25
  5183   00270A  C03F  F044         	movff	memset@dest,memset@p
  5184   00270E  EF8F  F013         	goto	l6093
  5185   002712                     l6089:
  5186   002712  5044               	movf	memset@p^0,w,c
  5187   002714  6ED9               	movwf	fsr2l,c
  5188   002716  6ADA               	clrf	fsr2h,c
  5189   002718  C040  FFDF         	movff	memset@c,indf2
  5190   00271C  2A44               	incf	memset@p^0,f,c
  5191   00271E                     l6093:
  5192   00271E  0642               	decf	memset@n^0,f,c
  5193   002720  A0D8               	btfss	status,0,c
  5194   002722  0643               	decf	(memset@n+1)^0,f,c
  5195   002724  2842               	incf	memset@n^0,w,c
  5196   002726  E106               	bnz	u5101
  5197   002728  2843               	incf	(memset@n+1)^0,w,c
  5198   00272A  A4D8               	btfss	status,2,c
  5199   00272C  EF9A  F013         	goto	u5101
  5200   002730  EF9C  F013         	goto	u5100
  5201   002734                     u5101:
  5202   002734  EF89  F013         	goto	l6089
  5203   002738                     u5100:
  5204   002738  0012               	return		;funcret
  5205   00273A                     __end_of_memset:
  5206                           	callstack 0
  5207                           
  5208 ;; *************** function _HALL_LCD_4bit_sendSTRPos *****************
  5209 ;; Defined at:
  5210 ;;		line 97 in file "Hall/LCD/Hall_lcd_prog.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  copyLCD         1   22[COMRAM] PTR const struct .
  5213 ;;		 -> LCD1_4Bit(6), 
  5214 ;;  copyRow         1   23[COMRAM] unsigned char 
  5215 ;;  copyColumn      1   24[COMRAM] unsigned char 
  5216 ;;  copyData        2   25[COMRAM] PTR unsigned char 
  5217 ;;		 -> retLCD_Num(12), STR_4(7), STR_3(7), STR_2(7), 
  5218 ;;		 -> STR_1(7), 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  RetValue        1    0        unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      unsigned char 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5230 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;Total ram usage:        5 bytes
  5235 ;; Hardware stack levels used: 1
  5236 ;; Hardware stack levels required when called: 8
  5237 ;; This function calls:
  5238 ;;		_HALL_LCD_4bit_goto
  5239 ;;		_HALL_LCD_4bit_sendChar
  5240 ;; This function is called by:
  5241 ;;		_main
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text18
  5246   0020EC                     __ptext18:
  5247                           	callstack 0
  5248   0020EC                     _HALL_LCD_4bit_sendSTRPos:
  5249                           	callstack 22
  5250   0020EC                     
  5251                           ;Hall/LCD/Hall_lcd_prog.c: 99:     if(copyLCD == ((void*)0)) {
  5252   0020EC  504B               	movf	HALL_LCD_4bit_sendSTRPos@copyLCD^0,w,c
  5253   0020EE  A4D8               	btfss	status,2,c
  5254   0020F0  EF7C  F010         	goto	u3381
  5255   0020F4  EF7E  F010         	goto	u3380
  5256   0020F8                     u3381:
  5257   0020F8  EF80  F010         	goto	l4685
  5258   0020FC                     u3380:
  5259   0020FC                     
  5260                           ;Hall/LCD/Hall_lcd_prog.c: 101:     }
  5261   0020FC  EFBB  F010         	goto	l367
  5262   002100                     l4685:
  5263                           
  5264                           ;Hall/LCD/Hall_lcd_prog.c: 103:         HALL_LCD_4bit_goto(copyLCD,copyRow, copyColumn);
  5265   002100  C04B  F048         	movff	HALL_LCD_4bit_sendSTRPos@copyLCD,HALL_LCD_4bit_goto@copyLCD
  5266   002104  C04C  F049         	movff	HALL_LCD_4bit_sendSTRPos@copyRow,HALL_LCD_4bit_goto@copyRow
  5267   002108  C04D  F04A         	movff	HALL_LCD_4bit_sendSTRPos@copyColumn,HALL_LCD_4bit_goto@copyColumn
  5268   00210C  ECBC  F010         	call	_HALL_LCD_4bit_goto	;wreg free
  5269                           
  5270                           ;Hall/LCD/Hall_lcd_prog.c: 104:         while(*copyData) {
  5271   002110  EFA2  F010         	goto	l4691
  5272   002114                     l4687:
  5273                           
  5274                           ;Hall/LCD/Hall_lcd_prog.c: 105:            HALL_LCD_4bit_sendChar(copyLCD, *copyData++);
  5275   002114  C04B  F046         	movff	HALL_LCD_4bit_sendSTRPos@copyLCD,HALL_LCD_4bit_sendChar@copyLCD
  5276   002118  C04E  FFF6         	movff	HALL_LCD_4bit_sendSTRPos@copyData,tblptrl
  5277   00211C  C04F  FFF7         	movff	HALL_LCD_4bit_sendSTRPos@copyData+1,tblptrh
  5278   002120  0E00               	movlw	low (__smallconst shr (0+16))
  5279   002122  6EF8               	movwf	tblptru,c
  5280   002124  0E0F               	movlw	(high __ramtop+-1)
  5281   002126  64F7               	cpfsgt	tblptrh,c
  5282   002128  D003               	bra	u3397
  5283   00212A  0008               	tblrd		*
  5284   00212C  50F5               	movf	tablat,w,c
  5285   00212E  D005               	bra	u3390
  5286   002130                     u3397:
  5287   002130  CFF6 FFE9          	movff	tblptrl,fsr0l
  5288   002134  CFF7 FFEA          	movff	tblptrh,fsr0h
  5289   002138  50EF               	movf	indf0,w,c
  5290   00213A                     u3390:
  5291   00213A  6E47               	movwf	HALL_LCD_4bit_sendChar@copyData^0,c
  5292   00213C  ECAD  F011         	call	_HALL_LCD_4bit_sendChar	;wreg free
  5293   002140  4A4E               	infsnz	HALL_LCD_4bit_sendSTRPos@copyData^0,f,c
  5294   002142  2A4F               	incf	(HALL_LCD_4bit_sendSTRPos@copyData+1)^0,f,c
  5295   002144                     l4691:
  5296                           
  5297                           ;Hall/LCD/Hall_lcd_prog.c: 104:         while(*copyData) {
  5298   002144  C04E  FFF6         	movff	HALL_LCD_4bit_sendSTRPos@copyData,tblptrl
  5299   002148  C04F  FFF7         	movff	HALL_LCD_4bit_sendSTRPos@copyData+1,tblptrh
  5300   00214C  0E00               	movlw	low (__smallconst shr (0+16))
  5301   00214E  6EF8               	movwf	tblptru,c
  5302   002150  0E0F               	movlw	(high __ramtop+-1)
  5303   002152  64F7               	cpfsgt	tblptrh,c
  5304   002154  D003               	bra	u3407
  5305   002156  0008               	tblrd		*
  5306   002158  50F5               	movf	tablat,w,c
  5307   00215A  D005               	bra	u3400
  5308   00215C                     u3407:
  5309   00215C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5310   002160  CFF7 FFEA          	movff	tblptrh,fsr0h
  5311   002164  50EF               	movf	indf0,w,c
  5312   002166                     u3400:
  5313   002166  0900               	iorlw	0
  5314   002168  A4D8               	btfss	status,2,c
  5315   00216A  EFB9  F010         	goto	u3411
  5316   00216E  EFBB  F010         	goto	u3410
  5317   002172                     u3411:
  5318   002172  EF8A  F010         	goto	l4687
  5319   002176                     u3410:
  5320   002176                     l367:
  5321   002176  0012               	return		;funcret
  5322   002178                     __end_of_HALL_LCD_4bit_sendSTRPos:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function _HALL_LCD_4bit_sendChar *****************
  5326 ;; Defined at:
  5327 ;;		line 57 in file "Hall/LCD/Hall_lcd_prog.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  copyLCD         1   17[COMRAM] PTR const struct .
  5330 ;;		 -> LCD1_4Bit(6), 
  5331 ;;  copyData        1   18[COMRAM] unsigned char 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  RetValue        1    0        unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      unsigned char 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;Total ram usage:        2 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 6
  5350 ;; This function calls:
  5351 ;;		_LCD_send4Bits
  5352 ;;		_LCD_sendEnableSignal4Bits
  5353 ;;		_MCAL_GPIO_writePinStatus
  5354 ;; This function is called by:
  5355 ;;		_HALL_LCD_4bit_sendSTRPos
  5356 ;;		_HALL_LCD_4bit_sendCharPos
  5357 ;;		_HALL_LCD_4bit_sendSTR
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text19
  5362   00235A                     __ptext19:
  5363                           	callstack 0
  5364   00235A                     _HALL_LCD_4bit_sendChar:
  5365                           	callstack 23
  5366   00235A                     
  5367                           ;Hall/LCD/Hall_lcd_prog.c: 59:     if(copyLCD == ((void*)0)) {
  5368   00235A  5046               	movf	HALL_LCD_4bit_sendChar@copyLCD^0,w,c
  5369   00235C  A4D8               	btfss	status,2,c
  5370   00235E  EFB3  F011         	goto	u3281
  5371   002362  EFB5  F011         	goto	u3280
  5372   002366                     u3281:
  5373   002366  EFB7  F011         	goto	l4509
  5374   00236A                     u3280:
  5375   00236A                     
  5376                           ;Hall/LCD/Hall_lcd_prog.c: 61:     }
  5377   00236A  EFD2  F011         	goto	l346
  5378   00236E                     l4509:
  5379                           
  5380                           ;Hall/LCD/Hall_lcd_prog.c: 63:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO_
      +                          Status_High);
  5381   00236E  C046  F03F         	movff	HALL_LCD_4bit_sendChar@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  5382   002372  0E01               	movlw	1
  5383   002374  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  5384   002376  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  5385                           
  5386                           ;Hall/LCD/Hall_lcd_prog.c: 64:         LCD_send4Bits(copyLCD, copyData >> 4);
  5387   00237A  C046  F044         	movff	HALL_LCD_4bit_sendChar@copyLCD,LCD_send4Bits@copyLCD
  5388   00237E  3847               	swapf	HALL_LCD_4bit_sendChar@copyData^0,w,c
  5389   002380  0B0F               	andlw	15
  5390   002382  6E45               	movwf	LCD_send4Bits@copyData^0,c
  5391   002384  ECF9  F011         	call	_LCD_send4Bits	;wreg free
  5392                           
  5393                           ;Hall/LCD/Hall_lcd_prog.c: 65:         LCD_sendEnableSignal4Bits(copyLCD);
  5394   002388  C046  F044         	movff	HALL_LCD_4bit_sendChar@copyLCD,LCD_sendEnableSignal4Bits@copyLCD
  5395   00238C  EC1E  F014         	call	_LCD_sendEnableSignal4Bits	;wreg free
  5396                           
  5397                           ;Hall/LCD/Hall_lcd_prog.c: 66:         LCD_send4Bits(copyLCD, copyData);
  5398   002390  C046  F044         	movff	HALL_LCD_4bit_sendChar@copyLCD,LCD_send4Bits@copyLCD
  5399   002394  C047  F045         	movff	HALL_LCD_4bit_sendChar@copyData,LCD_send4Bits@copyData
  5400   002398  ECF9  F011         	call	_LCD_send4Bits	;wreg free
  5401                           
  5402                           ;Hall/LCD/Hall_lcd_prog.c: 67:         LCD_sendEnableSignal4Bits(copyLCD);
  5403   00239C  C046  F044         	movff	HALL_LCD_4bit_sendChar@copyLCD,LCD_sendEnableSignal4Bits@copyLCD
  5404   0023A0  EC1E  F014         	call	_LCD_sendEnableSignal4Bits	;wreg free
  5405   0023A4                     l346:
  5406   0023A4  0012               	return		;funcret
  5407   0023A6                     __end_of_HALL_LCD_4bit_sendChar:
  5408                           	callstack 0
  5409                           
  5410 ;; *************** function _HALL_LCD_4bit_goto *****************
  5411 ;; Defined at:
  5412 ;;		line 111 in file "Hall/LCD/Hall_lcd_prog.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  copyLCD         1   19[COMRAM] PTR const struct .
  5415 ;;		 -> LCD1_4Bit(6), 
  5416 ;;  copyRow         1   20[COMRAM] unsigned char 
  5417 ;;  copyColumn      1   21[COMRAM] unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  RetValue        1    0        unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      unsigned char 
  5422 ;; Registers used:
  5423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;Total ram usage:        3 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 7
  5436 ;; This function calls:
  5437 ;;		_HALL_LCD_4bit_sendCMD
  5438 ;; This function is called by:
  5439 ;;		_HALL_LCD_4bit_sendSTRPos
  5440 ;;		_HALL_LCD_4bit_sendCharPos
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text20
  5445   002178                     __ptext20:
  5446                           	callstack 0
  5447   002178                     _HALL_LCD_4bit_goto:
  5448                           	callstack 22
  5449   002178                     
  5450                           ;Hall/LCD/Hall_lcd_prog.c: 113:     if(copyLCD == ((void*)0)) {
  5451   002178  5048               	movf	HALL_LCD_4bit_goto@copyLCD^0,w,c
  5452   00217A  A4D8               	btfss	status,2,c
  5453   00217C  EFC2  F010         	goto	u3291
  5454   002180  EFC4  F010         	goto	u3290
  5455   002184                     u3291:
  5456   002184  EFEC  F010         	goto	l4531
  5457   002188                     u3290:
  5458   002188                     
  5459                           ;Hall/LCD/Hall_lcd_prog.c: 115:     }
  5460   002188  EFFF  F010         	goto	l379
  5461   00218C                     l4521:
  5462   00218C  C048  F046         	movff	HALL_LCD_4bit_goto@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5463   002190  504A               	movf	HALL_LCD_4bit_goto@copyColumn^0,w,c
  5464   002192  0F80               	addlw	128
  5465   002194  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5466   002196  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5467   00219A  EFFF  F010         	goto	l4533
  5468   00219E                     l4523:
  5469   00219E  C048  F046         	movff	HALL_LCD_4bit_goto@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5470   0021A2  504A               	movf	HALL_LCD_4bit_goto@copyColumn^0,w,c
  5471   0021A4  0FC0               	addlw	192
  5472   0021A6  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5473   0021A8  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5474   0021AC  EFFF  F010         	goto	l4533
  5475   0021B0                     l4525:
  5476   0021B0  C048  F046         	movff	HALL_LCD_4bit_goto@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5477   0021B4  504A               	movf	HALL_LCD_4bit_goto@copyColumn^0,w,c
  5478   0021B6  0F94               	addlw	148
  5479   0021B8  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5480   0021BA  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5481   0021BE  EFFF  F010         	goto	l4533
  5482   0021C2                     l4527:
  5483   0021C2  C048  F046         	movff	HALL_LCD_4bit_goto@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5484   0021C6  504A               	movf	HALL_LCD_4bit_goto@copyColumn^0,w,c
  5485   0021C8  0FD4               	addlw	212
  5486   0021CA  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5487   0021CC  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5488   0021D0  EFFF  F010         	goto	l4533
  5489   0021D4                     l378:
  5490   0021D4  EFFF  F010         	goto	l4533
  5491   0021D8                     l4531:
  5492   0021D8  5049               	movf	HALL_LCD_4bit_goto@copyRow^0,w,c
  5493                           
  5494                           ; Switch size 1, requested type "simple"
  5495                           ; Number of cases is 4, Range of values is 1 to 4
  5496                           ; switch strategies available:
  5497                           ; Name         Instructions Cycles
  5498                           ; simple_byte           13     7 (average)
  5499                           ;	Chosen strategy is simple_byte
  5500   0021DA  0A01               	xorlw	1	; case 1
  5501   0021DC  B4D8               	btfsc	status,2,c
  5502   0021DE  EFC6  F010         	goto	l4521
  5503   0021E2  0A03               	xorlw	3	; case 2
  5504   0021E4  B4D8               	btfsc	status,2,c
  5505   0021E6  EFCF  F010         	goto	l4523
  5506   0021EA  0A01               	xorlw	1	; case 3
  5507   0021EC  B4D8               	btfsc	status,2,c
  5508   0021EE  EFD8  F010         	goto	l4525
  5509   0021F2  0A07               	xorlw	7	; case 4
  5510   0021F4  B4D8               	btfsc	status,2,c
  5511   0021F6  EFE1  F010         	goto	l4527
  5512   0021FA  EFEA  F010         	goto	l378
  5513   0021FE                     l4533:
  5514   0021FE                     l379:
  5515   0021FE  0012               	return		;funcret
  5516   002200                     __end_of_HALL_LCD_4bit_goto:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _HALL_LCD_4bit_init *****************
  5520 ;; Defined at:
  5521 ;;		line 15 in file "Hall/LCD/Hall_lcd_prog.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  copyLCD         1   19[COMRAM] PTR const struct .
  5524 ;;		 -> LCD1_4Bit(6), 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  Counter         1   21[COMRAM] unsigned char 
  5527 ;;  RetValue        1    0        unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      unsigned char 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:        3 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 7
  5544 ;; This function calls:
  5545 ;;		_HALL_LCD_4bit_sendCMD
  5546 ;;		_MCAL_GPIO_init
  5547 ;; This function is called by:
  5548 ;;		_main
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text21
  5553   001C5C                     __ptext21:
  5554                           	callstack 0
  5555   001C5C                     _HALL_LCD_4bit_init:
  5556                           	callstack 23
  5557   001C5C                     
  5558                           ;Hall/LCD/Hall_lcd_prog.c: 17:     if(copyLCD == ((void*)0)) {
  5559   001C5C  5048               	movf	HALL_LCD_4bit_init@copyLCD^0,w,c
  5560   001C5E  A4D8               	btfss	status,2,c
  5561   001C60  EF34  F00E         	goto	u3361
  5562   001C64  EF36  F00E         	goto	u3360
  5563   001C68                     u3361:
  5564   001C68  EF38  F00E         	goto	l4639
  5565   001C6C                     u3360:
  5566   001C6C                     
  5567                           ;Hall/LCD/Hall_lcd_prog.c: 19:     }
  5568   001C6C  EF99  F00E         	goto	l336
  5569   001C70                     l4639:
  5570                           
  5571                           ;Hall/LCD/Hall_lcd_prog.c: 21:         MCAL_GPIO_init(&(copyLCD->LCD_rs));
  5572   001C70  C048  F044         	movff	HALL_LCD_4bit_init@copyLCD,MCAL_GPIO_init@copyPinCFG
  5573   001C74  EC4F  F013         	call	_MCAL_GPIO_init	;wreg free
  5574                           
  5575                           ;Hall/LCD/Hall_lcd_prog.c: 22:         MCAL_GPIO_init(&(copyLCD->LCD_en));
  5576   001C78  2848               	incf	HALL_LCD_4bit_init@copyLCD^0,w,c
  5577   001C7A  6E44               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  5578   001C7C  EC4F  F013         	call	_MCAL_GPIO_init	;wreg free
  5579   001C80                     
  5580                           ;Hall/LCD/Hall_lcd_prog.c: 23:         for(uint8_t Counter = 0; Counter < 4; Counter++) 
      +                          {
  5581   001C80  6A4A               	clrf	HALL_LCD_4bit_init@Counter^0,c
  5582   001C82                     l4647:
  5583                           
  5584                           ;Hall/LCD/Hall_lcd_prog.c: 24:             MCAL_GPIO_init(&(copyLCD->LCD_D[Counter]));
  5585   001C82  5048               	movf	HALL_LCD_4bit_init@copyLCD^0,w,c
  5586   001C84  244A               	addwf	HALL_LCD_4bit_init@Counter^0,w,c
  5587   001C86  0F02               	addlw	2
  5588   001C88  6E44               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  5589   001C8A  EC4F  F013         	call	_MCAL_GPIO_init	;wreg free
  5590   001C8E                     
  5591                           ;Hall/LCD/Hall_lcd_prog.c: 25:         }
  5592   001C8E  2A4A               	incf	HALL_LCD_4bit_init@Counter^0,f,c
  5593   001C90  0E03               	movlw	3
  5594   001C92  644A               	cpfsgt	HALL_LCD_4bit_init@Counter^0,c
  5595   001C94  EF4E  F00E         	goto	u3371
  5596   001C98  EF50  F00E         	goto	u3370
  5597   001C9C                     u3371:
  5598   001C9C  EF41  F00E         	goto	l4647
  5599   001CA0                     u3370:
  5600   001CA0                     
  5601                           ;Hall/LCD/Hall_lcd_prog.c: 26:         _delay((unsigned long)((20)*(4000000U/4000.0)));
  5602   001CA0  0E1A               	movlw	26
  5603   001CA2  6E49               	movwf	??_HALL_LCD_4bit_init^0,c
  5604   001CA4  0EF8               	movlw	248
  5605   001CA6                     u5167:
  5606   001CA6  2EE8               	decfsz	wreg,f,c
  5607   001CA8  D7FE               	bra	u5167
  5608   001CAA  2E49               	decfsz	??_HALL_LCD_4bit_init^0,f,c
  5609   001CAC  D7FC               	bra	u5167
  5610   001CAE  D000               	nop2	
  5611   001CB0                     
  5612                           ;Hall/LCD/Hall_lcd_prog.c: 27:         HALL_LCD_4bit_sendCMD(copyLCD, 0x38);
  5613   001CB0  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5614   001CB4  0E38               	movlw	56
  5615   001CB6  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5616   001CB8  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5617   001CBC                     
  5618                           ;Hall/LCD/Hall_lcd_prog.c: 28:         _delay((unsigned long)((5)*(4000000U/4000.0)));
  5619   001CBC  0E07               	movlw	7
  5620   001CBE  6E49               	movwf	??_HALL_LCD_4bit_init^0,c
  5621   001CC0  0E7D               	movlw	125
  5622   001CC2                     u5177:
  5623   001CC2  2EE8               	decfsz	wreg,f,c
  5624   001CC4  D7FE               	bra	u5177
  5625   001CC6  2E49               	decfsz	??_HALL_LCD_4bit_init^0,f,c
  5626   001CC8  D7FC               	bra	u5177
  5627   001CCA  0000               	nop	
  5628                           
  5629                           ;Hall/LCD/Hall_lcd_prog.c: 29:         HALL_LCD_4bit_sendCMD(copyLCD, 0x38);
  5630   001CCC  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5631   001CD0  0E38               	movlw	56
  5632   001CD2  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5633   001CD4  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5634   001CD8                     
  5635                           ;Hall/LCD/Hall_lcd_prog.c: 30:         _delay((unsigned long)((150)*(4000000U/4000000.0)
      +                          ));
  5636   001CD8  0E32               	movlw	50
  5637   001CDA                     u5187:
  5638   001CDA  2EE8               	decfsz	wreg,f,c
  5639   001CDC  D7FE               	bra	u5187
  5640   001CDE                     
  5641                           ;Hall/LCD/Hall_lcd_prog.c: 31:         HALL_LCD_4bit_sendCMD(copyLCD, 0x38);
  5642   001CDE  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5643   001CE2  0E38               	movlw	56
  5644   001CE4  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5645   001CE6  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5646   001CEA                     
  5647                           ;Hall/LCD/Hall_lcd_prog.c: 32:         HALL_LCD_4bit_sendCMD(copyLCD, 0x01);
  5648   001CEA  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5649   001CEE  0E01               	movlw	1
  5650   001CF0  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5651   001CF2  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5652   001CF6                     
  5653                           ;Hall/LCD/Hall_lcd_prog.c: 33:         HALL_LCD_4bit_sendCMD(copyLCD, 0x02);
  5654   001CF6  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5655   001CFA  0E02               	movlw	2
  5656   001CFC  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5657   001CFE  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5658   001D02                     
  5659                           ;Hall/LCD/Hall_lcd_prog.c: 34:         HALL_LCD_4bit_sendCMD(copyLCD, 0x06);
  5660   001D02  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5661   001D06  0E06               	movlw	6
  5662   001D08  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5663   001D0A  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5664   001D0E                     
  5665                           ;Hall/LCD/Hall_lcd_prog.c: 35:         HALL_LCD_4bit_sendCMD(copyLCD, 0x0C);
  5666   001D0E  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5667   001D12  0E0C               	movlw	12
  5668   001D14  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5669   001D16  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5670   001D1A                     
  5671                           ;Hall/LCD/Hall_lcd_prog.c: 36:         HALL_LCD_4bit_sendCMD(copyLCD, 0x28);
  5672   001D1A  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5673   001D1E  0E28               	movlw	40
  5674   001D20  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5675   001D22  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5676   001D26                     
  5677                           ;Hall/LCD/Hall_lcd_prog.c: 37:         HALL_LCD_4bit_sendCMD(copyLCD, 0x80);
  5678   001D26  C048  F046         	movff	HALL_LCD_4bit_init@copyLCD,HALL_LCD_4bit_sendCMD@copyLCD
  5679   001D2A  0E80               	movlw	128
  5680   001D2C  6E47               	movwf	HALL_LCD_4bit_sendCMD@copyCMD^0,c
  5681   001D2E  ECD3  F011         	call	_HALL_LCD_4bit_sendCMD	;wreg free
  5682   001D32                     l336:
  5683   001D32  0012               	return		;funcret
  5684   001D34                     __end_of_HALL_LCD_4bit_init:
  5685                           	callstack 0
  5686                           
  5687 ;; *************** function _MCAL_GPIO_init *****************
  5688 ;; Defined at:
  5689 ;;		line 274 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  copyPinCFG      1   15[COMRAM] PTR const struct .
  5692 ;;		 -> LCD1_4Bit$LCD_D(4), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  5693 ;;		 -> objPin_motor_1(1), LCD1_4Bit(6), 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  retVal          1   16[COMRAM] unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      unsigned char 
  5698 ;; Registers used:
  5699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5705 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;Total ram usage:        2 bytes
  5710 ;; Hardware stack levels used: 1
  5711 ;; Hardware stack levels required when called: 5
  5712 ;; This function calls:
  5713 ;;		_MCAL_GPIO_writePinStatus
  5714 ;;		_Mcal_GPIO_initPinDirection
  5715 ;; This function is called by:
  5716 ;;		_HALL_LCD_4bit_init
  5717 ;;		_HALL_DC_MOTOR_init
  5718 ;;		_HALL_KeyPad_init
  5719 ;;		_HALL_LCD_8bit_init
  5720 ;;		_HALL_Led_init
  5721 ;;		_HALL_Relay_init
  5722 ;;		_HALL_SEVEN_SEGEMENT_init
  5723 ;;		_MCAL_INTERRUPT_RBx_init
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text22
  5728   00269E                     __ptext22:
  5729                           	callstack 0
  5730   00269E                     _MCAL_GPIO_init:
  5731                           	callstack 24
  5732   00269E                     
  5733                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 276:     if(copyPinCFG == ((void*)0)) {
  5734   00269E  5044               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  5735   0026A0  A4D8               	btfss	status,2,c
  5736   0026A2  EF55  F013         	goto	u3271
  5737   0026A6  EF57  F013         	goto	u3270
  5738   0026AA                     u3271:
  5739   0026AA  EF59  F013         	goto	l4499
  5740   0026AE                     u3270:
  5741   0026AE                     
  5742                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 278:     }
  5743   0026AE  EF6A  F013         	goto	l994
  5744   0026B2                     l4499:
  5745                           
  5746                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 280:         retVal = Mcal_GPIO_initPinDirection(copyP
      +                          inCFG);
  5747   0026B2  C044  F03F         	movff	MCAL_GPIO_init@copyPinCFG,Mcal_GPIO_initPinDirection@copyPinCFG
  5748   0026B6  EC19  F008         	call	_Mcal_GPIO_initPinDirection	;wreg free
  5749   0026BA  6E45               	movwf	MCAL_GPIO_init@retVal^0,c
  5750                           
  5751                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 281:         retVal = MCAL_GPIO_writePinStatus(copyPin
      +                          CFG,copyPinCFG->Status);
  5752   0026BC  C044  F03F         	movff	MCAL_GPIO_init@copyPinCFG,MCAL_GPIO_writePinStatus@copyPinCFG
  5753   0026C0  5044               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  5754   0026C2  6ED9               	movwf	fsr2l,c
  5755   0026C4  6ADA               	clrf	fsr2h,c
  5756   0026C6  0E00               	movlw	0
  5757   0026C8  BEDF               	btfsc	indf2,7,c
  5758   0026CA  0E01               	movlw	1
  5759   0026CC  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  5760   0026CE  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  5761   0026D2  6E45               	movwf	MCAL_GPIO_init@retVal^0,c
  5762   0026D4                     l994:
  5763   0026D4  0012               	return		;funcret
  5764   0026D6                     __end_of_MCAL_GPIO_init:
  5765                           	callstack 0
  5766                           
  5767 ;; *************** function _Mcal_GPIO_initPinDirection *****************
  5768 ;; Defined at:
  5769 ;;		line 11 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  copyPinCFG      1   10[COMRAM] PTR const struct .
  5772 ;;		 -> MCAL_INTERRUPT_INTx_init@copyINTx(2), LCD1_4Bit$LCD_D(4), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), 
  5773 ;;		 -> objPin_motor_2(1), objPin_motor_1(1), HALL_BTN_init@copyBTN(2), LCD1_4Bit(6), 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  retVal          1   13[COMRAM] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      unsigned char 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5785 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;Total ram usage:        4 bytes
  5790 ;; Hardware stack levels used: 1
  5791 ;; Hardware stack levels required when called: 4
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_MCAL_GPIO_init
  5796 ;;		_HALL_BTN_init
  5797 ;;		_HALL_KeyPad_init
  5798 ;;		_INTERRUPT_INTx_PinInit
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text23
  5803   001032                     __ptext23:
  5804                           	callstack 0
  5805   001032                     _Mcal_GPIO_initPinDirection:
  5806                           	callstack 24
  5807   001032                     
  5808                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 13:     uint8_t retVal = (Std_Return)1;
  5809   001032  0E01               	movlw	1
  5810   001034  6E42               	movwf	Mcal_GPIO_initPinDirection@retVal^0,c
  5811                           
  5812                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 14:     if(copyPinCFG == ((void*)0)) {
  5813   001036  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5814   001038  A4D8               	btfss	status,2,c
  5815   00103A  EF21  F008         	goto	u3091
  5816   00103E  EF23  F008         	goto	u3090
  5817   001042                     u3091:
  5818   001042  EF75  F009         	goto	l4427
  5819   001046                     u3090:
  5820   001046                     l4383:
  5821                           
  5822                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 15:         retVal = (Std_Return)0;
  5823   001046  6A42               	clrf	Mcal_GPIO_initPinDirection@retVal^0,c
  5824                           
  5825                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 16:     }
  5826   001048  EF90  F009         	goto	l4429
  5827   00104C                     l4385:
  5828                           
  5829                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 22:                         TRISA &= ~ (1 << copyPinCF
      +                          G->Pin);
  5830   00104C  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5831   00104E  6ED9               	movwf	fsr2l,c
  5832   001050  6ADA               	clrf	fsr2h,c
  5833   001052  30DF               	rrcf	223,w,c
  5834   001054  32E8               	rrcf	wreg,f,c
  5835   001056  32E8               	rrcf	wreg,f,c
  5836   001058  0B07               	andlw	7
  5837   00105A  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  5838   00105C  0E01               	movlw	1
  5839   00105E  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  5840   001060  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  5841   001062  EF35  F008         	goto	u3104
  5842   001066                     u3105:
  5843   001066  90D8               	bcf	status,0,c
  5844   001068  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  5845   00106A                     u3104:
  5846   00106A  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  5847   00106C  EF33  F008         	goto	u3105
  5848   001070  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  5849   001072  0AFF               	xorlw	255
  5850   001074  1692               	andwf	146,f,c	;volatile
  5851                           
  5852                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 23:                         break;
  5853   001076  EF90  F009         	goto	l4429
  5854   00107A                     l4387:
  5855                           
  5856                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 25:                         TRISA |= (1 << copyPinCFG-
      +                          >Pin);
  5857   00107A  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5858   00107C  6ED9               	movwf	fsr2l,c
  5859   00107E  6ADA               	clrf	fsr2h,c
  5860   001080  30DF               	rrcf	223,w,c
  5861   001082  32E8               	rrcf	wreg,f,c
  5862   001084  32E8               	rrcf	wreg,f,c
  5863   001086  0B07               	andlw	7
  5864   001088  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  5865   00108A  0E01               	movlw	1
  5866   00108C  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  5867   00108E  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  5868   001090  EF4C  F008         	goto	u3114
  5869   001094                     u3115:
  5870   001094  90D8               	bcf	status,0,c
  5871   001096  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  5872   001098                     u3114:
  5873   001098  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  5874   00109A  EF4A  F008         	goto	u3115
  5875   00109E  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  5876   0010A0  1292               	iorwf	146,f,c	;volatile
  5877                           
  5878                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 26:                         break;
  5879   0010A2  EF90  F009         	goto	l4429
  5880   0010A6                     l4391:
  5881   0010A6  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5882   0010A8  6ED9               	movwf	fsr2l,c
  5883   0010AA  6ADA               	clrf	fsr2h,c
  5884   0010AC  BCDF               	btfsc	indf2,6,c
  5885   0010AE  EF5B  F008         	goto	u3121
  5886   0010B2  EF5E  F008         	goto	u3120
  5887   0010B6                     u3121:
  5888   0010B6  0E01               	movlw	1
  5889   0010B8  EF5F  F008         	goto	u3126
  5890   0010BC                     u3120:
  5891   0010BC  0E00               	movlw	0
  5892   0010BE                     u3126:
  5893                           
  5894                           ; Switch size 1, requested type "simple"
  5895                           ; Number of cases is 2, Range of values is 0 to 1
  5896                           ; switch strategies available:
  5897                           ; Name         Instructions Cycles
  5898                           ; simple_byte            7     4 (average)
  5899                           ;	Chosen strategy is simple_byte
  5900   0010BE  0A00               	xorlw	0	; case 0
  5901   0010C0  B4D8               	btfsc	status,2,c
  5902   0010C2  EF3D  F008         	goto	l4387
  5903   0010C6  0A01               	xorlw	1	; case 1
  5904   0010C8  B4D8               	btfsc	status,2,c
  5905   0010CA  EF26  F008         	goto	l4385
  5906   0010CE  EF90  F009         	goto	l4429
  5907   0010D2                     l4393:
  5908                           
  5909                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 33:                         TRISB &= ~ (1 << copyPinCF
      +                          G->Pin);
  5910   0010D2  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5911   0010D4  6ED9               	movwf	fsr2l,c
  5912   0010D6  6ADA               	clrf	fsr2h,c
  5913   0010D8  30DF               	rrcf	223,w,c
  5914   0010DA  32E8               	rrcf	wreg,f,c
  5915   0010DC  32E8               	rrcf	wreg,f,c
  5916   0010DE  0B07               	andlw	7
  5917   0010E0  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  5918   0010E2  0E01               	movlw	1
  5919   0010E4  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  5920   0010E6  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  5921   0010E8  EF78  F008         	goto	u3134
  5922   0010EC                     u3135:
  5923   0010EC  90D8               	bcf	status,0,c
  5924   0010EE  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  5925   0010F0                     u3134:
  5926   0010F0  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  5927   0010F2  EF76  F008         	goto	u3135
  5928   0010F6  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  5929   0010F8  0AFF               	xorlw	255
  5930   0010FA  1693               	andwf	147,f,c	;volatile
  5931                           
  5932                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 34:                         break;
  5933   0010FC  EF90  F009         	goto	l4429
  5934   001100                     l4395:
  5935                           
  5936                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 36:                         TRISB |= (1 << copyPinCFG-
      +                          >Pin);
  5937   001100  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5938   001102  6ED9               	movwf	fsr2l,c
  5939   001104  6ADA               	clrf	fsr2h,c
  5940   001106  30DF               	rrcf	223,w,c
  5941   001108  32E8               	rrcf	wreg,f,c
  5942   00110A  32E8               	rrcf	wreg,f,c
  5943   00110C  0B07               	andlw	7
  5944   00110E  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  5945   001110  0E01               	movlw	1
  5946   001112  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  5947   001114  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  5948   001116  EF8F  F008         	goto	u3144
  5949   00111A                     u3145:
  5950   00111A  90D8               	bcf	status,0,c
  5951   00111C  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  5952   00111E                     u3144:
  5953   00111E  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  5954   001120  EF8D  F008         	goto	u3145
  5955   001124  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  5956   001126  1293               	iorwf	147,f,c	;volatile
  5957                           
  5958                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 37:                         break;
  5959   001128  EF90  F009         	goto	l4429
  5960   00112C                     l4399:
  5961   00112C  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5962   00112E  6ED9               	movwf	fsr2l,c
  5963   001130  6ADA               	clrf	fsr2h,c
  5964   001132  BCDF               	btfsc	indf2,6,c
  5965   001134  EF9E  F008         	goto	u3151
  5966   001138  EFA1  F008         	goto	u3150
  5967   00113C                     u3151:
  5968   00113C  0E01               	movlw	1
  5969   00113E  EFA2  F008         	goto	u3156
  5970   001142                     u3150:
  5971   001142  0E00               	movlw	0
  5972   001144                     u3156:
  5973                           
  5974                           ; Switch size 1, requested type "simple"
  5975                           ; Number of cases is 2, Range of values is 0 to 1
  5976                           ; switch strategies available:
  5977                           ; Name         Instructions Cycles
  5978                           ; simple_byte            7     4 (average)
  5979                           ;	Chosen strategy is simple_byte
  5980   001144  0A00               	xorlw	0	; case 0
  5981   001146  B4D8               	btfsc	status,2,c
  5982   001148  EF80  F008         	goto	l4395
  5983   00114C  0A01               	xorlw	1	; case 1
  5984   00114E  B4D8               	btfsc	status,2,c
  5985   001150  EF69  F008         	goto	l4393
  5986   001154  EF90  F009         	goto	l4429
  5987   001158                     l4401:
  5988                           
  5989                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 44:                         TRISC &= ~ (1 << copyPinCF
      +                          G->Pin);
  5990   001158  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  5991   00115A  6ED9               	movwf	fsr2l,c
  5992   00115C  6ADA               	clrf	fsr2h,c
  5993   00115E  30DF               	rrcf	223,w,c
  5994   001160  32E8               	rrcf	wreg,f,c
  5995   001162  32E8               	rrcf	wreg,f,c
  5996   001164  0B07               	andlw	7
  5997   001166  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  5998   001168  0E01               	movlw	1
  5999   00116A  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  6000   00116C  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  6001   00116E  EFBB  F008         	goto	u3164
  6002   001172                     u3165:
  6003   001172  90D8               	bcf	status,0,c
  6004   001174  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  6005   001176                     u3164:
  6006   001176  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  6007   001178  EFB9  F008         	goto	u3165
  6008   00117C  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  6009   00117E  0AFF               	xorlw	255
  6010   001180  1694               	andwf	148,f,c	;volatile
  6011                           
  6012                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 45:                         break;
  6013   001182  EF90  F009         	goto	l4429
  6014   001186                     l4403:
  6015                           
  6016                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 47:                         TRISC |= (1 << copyPinCFG-
      +                          >Pin);
  6017   001186  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6018   001188  6ED9               	movwf	fsr2l,c
  6019   00118A  6ADA               	clrf	fsr2h,c
  6020   00118C  30DF               	rrcf	223,w,c
  6021   00118E  32E8               	rrcf	wreg,f,c
  6022   001190  32E8               	rrcf	wreg,f,c
  6023   001192  0B07               	andlw	7
  6024   001194  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  6025   001196  0E01               	movlw	1
  6026   001198  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  6027   00119A  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  6028   00119C  EFD2  F008         	goto	u3174
  6029   0011A0                     u3175:
  6030   0011A0  90D8               	bcf	status,0,c
  6031   0011A2  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  6032   0011A4                     u3174:
  6033   0011A4  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  6034   0011A6  EFD0  F008         	goto	u3175
  6035   0011AA  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  6036   0011AC  1294               	iorwf	148,f,c	;volatile
  6037                           
  6038                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 48:                         break;
  6039   0011AE  EF90  F009         	goto	l4429
  6040   0011B2                     l4407:
  6041   0011B2  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6042   0011B4  6ED9               	movwf	fsr2l,c
  6043   0011B6  6ADA               	clrf	fsr2h,c
  6044   0011B8  BCDF               	btfsc	indf2,6,c
  6045   0011BA  EFE1  F008         	goto	u3181
  6046   0011BE  EFE4  F008         	goto	u3180
  6047   0011C2                     u3181:
  6048   0011C2  0E01               	movlw	1
  6049   0011C4  EFE5  F008         	goto	u3186
  6050   0011C8                     u3180:
  6051   0011C8  0E00               	movlw	0
  6052   0011CA                     u3186:
  6053                           
  6054                           ; Switch size 1, requested type "simple"
  6055                           ; Number of cases is 2, Range of values is 0 to 1
  6056                           ; switch strategies available:
  6057                           ; Name         Instructions Cycles
  6058                           ; simple_byte            7     4 (average)
  6059                           ;	Chosen strategy is simple_byte
  6060   0011CA  0A00               	xorlw	0	; case 0
  6061   0011CC  B4D8               	btfsc	status,2,c
  6062   0011CE  EFC3  F008         	goto	l4403
  6063   0011D2  0A01               	xorlw	1	; case 1
  6064   0011D4  B4D8               	btfsc	status,2,c
  6065   0011D6  EFAC  F008         	goto	l4401
  6066   0011DA  EF90  F009         	goto	l4429
  6067   0011DE                     l4409:
  6068                           
  6069                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 55:                         TRISD &= ~ (1 << copyPinCF
      +                          G->Pin);
  6070   0011DE  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6071   0011E0  6ED9               	movwf	fsr2l,c
  6072   0011E2  6ADA               	clrf	fsr2h,c
  6073   0011E4  30DF               	rrcf	223,w,c
  6074   0011E6  32E8               	rrcf	wreg,f,c
  6075   0011E8  32E8               	rrcf	wreg,f,c
  6076   0011EA  0B07               	andlw	7
  6077   0011EC  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  6078   0011EE  0E01               	movlw	1
  6079   0011F0  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  6080   0011F2  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  6081   0011F4  EFFE  F008         	goto	u3194
  6082   0011F8                     u3195:
  6083   0011F8  90D8               	bcf	status,0,c
  6084   0011FA  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  6085   0011FC                     u3194:
  6086   0011FC  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  6087   0011FE  EFFC  F008         	goto	u3195
  6088   001202  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  6089   001204  0AFF               	xorlw	255
  6090   001206  1695               	andwf	149,f,c	;volatile
  6091                           
  6092                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 56:                         break;
  6093   001208  EF90  F009         	goto	l4429
  6094   00120C                     l4411:
  6095                           
  6096                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 58:                         TRISD |= (1 << copyPinCFG-
      +                          >Pin);
  6097   00120C  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6098   00120E  6ED9               	movwf	fsr2l,c
  6099   001210  6ADA               	clrf	fsr2h,c
  6100   001212  30DF               	rrcf	223,w,c
  6101   001214  32E8               	rrcf	wreg,f,c
  6102   001216  32E8               	rrcf	wreg,f,c
  6103   001218  0B07               	andlw	7
  6104   00121A  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  6105   00121C  0E01               	movlw	1
  6106   00121E  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  6107   001220  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  6108   001222  EF15  F009         	goto	u3204
  6109   001226                     u3205:
  6110   001226  90D8               	bcf	status,0,c
  6111   001228  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  6112   00122A                     u3204:
  6113   00122A  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  6114   00122C  EF13  F009         	goto	u3205
  6115   001230  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  6116   001232  1295               	iorwf	149,f,c	;volatile
  6117                           
  6118                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 59:                         break;
  6119   001234  EF90  F009         	goto	l4429
  6120   001238                     l4415:
  6121   001238  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6122   00123A  6ED9               	movwf	fsr2l,c
  6123   00123C  6ADA               	clrf	fsr2h,c
  6124   00123E  BCDF               	btfsc	indf2,6,c
  6125   001240  EF24  F009         	goto	u3211
  6126   001244  EF27  F009         	goto	u3210
  6127   001248                     u3211:
  6128   001248  0E01               	movlw	1
  6129   00124A  EF28  F009         	goto	u3216
  6130   00124E                     u3210:
  6131   00124E  0E00               	movlw	0
  6132   001250                     u3216:
  6133                           
  6134                           ; Switch size 1, requested type "simple"
  6135                           ; Number of cases is 2, Range of values is 0 to 1
  6136                           ; switch strategies available:
  6137                           ; Name         Instructions Cycles
  6138                           ; simple_byte            7     4 (average)
  6139                           ;	Chosen strategy is simple_byte
  6140   001250  0A00               	xorlw	0	; case 0
  6141   001252  B4D8               	btfsc	status,2,c
  6142   001254  EF06  F009         	goto	l4411
  6143   001258  0A01               	xorlw	1	; case 1
  6144   00125A  B4D8               	btfsc	status,2,c
  6145   00125C  EFEF  F008         	goto	l4409
  6146   001260  EF90  F009         	goto	l4429
  6147   001264                     l4417:
  6148                           
  6149                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 66:                         TRISE &= ~ (1 << copyPinCF
      +                          G->Pin);
  6150   001264  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6151   001266  6ED9               	movwf	fsr2l,c
  6152   001268  6ADA               	clrf	fsr2h,c
  6153   00126A  30DF               	rrcf	223,w,c
  6154   00126C  32E8               	rrcf	wreg,f,c
  6155   00126E  32E8               	rrcf	wreg,f,c
  6156   001270  0B07               	andlw	7
  6157   001272  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  6158   001274  0E01               	movlw	1
  6159   001276  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  6160   001278  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  6161   00127A  EF41  F009         	goto	u3224
  6162   00127E                     u3225:
  6163   00127E  90D8               	bcf	status,0,c
  6164   001280  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  6165   001282                     u3224:
  6166   001282  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  6167   001284  EF3F  F009         	goto	u3225
  6168   001288  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  6169   00128A  0AFF               	xorlw	255
  6170   00128C  1696               	andwf	150,f,c	;volatile
  6171                           
  6172                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 67:                         break;
  6173   00128E  EF90  F009         	goto	l4429
  6174   001292                     l4419:
  6175                           
  6176                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 69:                         TRISE |= (1 << copyPinCFG-
      +                          >Pin);
  6177   001292  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6178   001294  6ED9               	movwf	fsr2l,c
  6179   001296  6ADA               	clrf	fsr2h,c
  6180   001298  30DF               	rrcf	223,w,c
  6181   00129A  32E8               	rrcf	wreg,f,c
  6182   00129C  32E8               	rrcf	wreg,f,c
  6183   00129E  0B07               	andlw	7
  6184   0012A0  6E40               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  6185   0012A2  0E01               	movlw	1
  6186   0012A4  6E41               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  6187   0012A6  2A40               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  6188   0012A8  EF58  F009         	goto	u3234
  6189   0012AC                     u3235:
  6190   0012AC  90D8               	bcf	status,0,c
  6191   0012AE  3641               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  6192   0012B0                     u3234:
  6193   0012B0  2E40               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  6194   0012B2  EF56  F009         	goto	u3235
  6195   0012B6  5041               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  6196   0012B8  1296               	iorwf	150,f,c	;volatile
  6197                           
  6198                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 70:                         break;
  6199   0012BA  EF90  F009         	goto	l4429
  6200   0012BE                     l4423:
  6201   0012BE  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6202   0012C0  6ED9               	movwf	fsr2l,c
  6203   0012C2  6ADA               	clrf	fsr2h,c
  6204   0012C4  BCDF               	btfsc	indf2,6,c
  6205   0012C6  EF67  F009         	goto	u3241
  6206   0012CA  EF6A  F009         	goto	u3240
  6207   0012CE                     u3241:
  6208   0012CE  0E01               	movlw	1
  6209   0012D0  EF6B  F009         	goto	u3246
  6210   0012D4                     u3240:
  6211   0012D4  0E00               	movlw	0
  6212   0012D6                     u3246:
  6213                           
  6214                           ; Switch size 1, requested type "simple"
  6215                           ; Number of cases is 2, Range of values is 0 to 1
  6216                           ; switch strategies available:
  6217                           ; Name         Instructions Cycles
  6218                           ; simple_byte            7     4 (average)
  6219                           ;	Chosen strategy is simple_byte
  6220   0012D6  0A00               	xorlw	0	; case 0
  6221   0012D8  B4D8               	btfsc	status,2,c
  6222   0012DA  EF49  F009         	goto	l4419
  6223   0012DE  0A01               	xorlw	1	; case 1
  6224   0012E0  B4D8               	btfsc	status,2,c
  6225   0012E2  EF32  F009         	goto	l4417
  6226   0012E6  EF90  F009         	goto	l4429
  6227   0012EA                     l4427:
  6228   0012EA  503F               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  6229   0012EC  6ED9               	movwf	fsr2l,c
  6230   0012EE  6ADA               	clrf	fsr2h,c
  6231   0012F0  50DF               	movf	223,w,c
  6232   0012F2  0B07               	andlw	7
  6233                           
  6234                           ; Switch size 1, requested type "simple"
  6235                           ; Number of cases is 5, Range of values is 0 to 4
  6236                           ; switch strategies available:
  6237                           ; Name         Instructions Cycles
  6238                           ; simple_byte           16     9 (average)
  6239                           ;	Chosen strategy is simple_byte
  6240   0012F4  0A00               	xorlw	0	; case 0
  6241   0012F6  B4D8               	btfsc	status,2,c
  6242   0012F8  EF53  F008         	goto	l4391
  6243   0012FC  0A01               	xorlw	1	; case 1
  6244   0012FE  B4D8               	btfsc	status,2,c
  6245   001300  EF96  F008         	goto	l4399
  6246   001304  0A03               	xorlw	3	; case 2
  6247   001306  B4D8               	btfsc	status,2,c
  6248   001308  EFD9  F008         	goto	l4407
  6249   00130C  0A01               	xorlw	1	; case 3
  6250   00130E  B4D8               	btfsc	status,2,c
  6251   001310  EF1C  F009         	goto	l4415
  6252   001314  0A07               	xorlw	7	; case 4
  6253   001316  B4D8               	btfsc	status,2,c
  6254   001318  EF5F  F009         	goto	l4423
  6255   00131C  EF23  F008         	goto	l4383
  6256   001320                     l4429:
  6257                           
  6258                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 78:     return retVal;
  6259   001320  5042               	movf	Mcal_GPIO_initPinDirection@retVal^0,w,c
  6260   001322  0012               	return		;funcret
  6261   001324                     __end_of_Mcal_GPIO_initPinDirection:
  6262                           	callstack 0
  6263                           
  6264 ;; *************** function _HALL_LCD_4bit_sendCMD *****************
  6265 ;; Defined at:
  6266 ;;		line 42 in file "Hall/LCD/Hall_lcd_prog.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  copyLCD         1   17[COMRAM] PTR const struct .
  6269 ;;		 -> LCD1_4Bit(6), 
  6270 ;;  copyCMD         1   18[COMRAM] unsigned char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  RetValue        1    0        unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      unsigned char 
  6275 ;; Registers used:
  6276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;Total ram usage:        2 bytes
  6287 ;; Hardware stack levels used: 1
  6288 ;; Hardware stack levels required when called: 6
  6289 ;; This function calls:
  6290 ;;		_LCD_send4Bits
  6291 ;;		_LCD_sendEnableSignal4Bits
  6292 ;;		_MCAL_GPIO_writePinStatus
  6293 ;; This function is called by:
  6294 ;;		_HALL_LCD_4bit_init
  6295 ;;		_HALL_LCD_4bit_goto
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text24
  6300   0023A6                     __ptext24:
  6301                           	callstack 0
  6302   0023A6                     _HALL_LCD_4bit_sendCMD:
  6303                           	callstack 22
  6304   0023A6                     
  6305                           ;Hall/LCD/Hall_lcd_prog.c: 44:     if(copyLCD == ((void*)0)) {
  6306   0023A6  5046               	movf	HALL_LCD_4bit_sendCMD@copyLCD^0,w,c
  6307   0023A8  A4D8               	btfss	status,2,c
  6308   0023AA  EFD9  F011         	goto	u3251
  6309   0023AE  EFDB  F011         	goto	u3250
  6310   0023B2                     u3251:
  6311   0023B2  EFDD  F011         	goto	l4439
  6312   0023B6                     u3250:
  6313   0023B6                     
  6314                           ;Hall/LCD/Hall_lcd_prog.c: 46:     }
  6315   0023B6  EFF8  F011         	goto	l341
  6316   0023BA                     l4439:
  6317                           
  6318                           ;Hall/LCD/Hall_lcd_prog.c: 48:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO_
      +                          Status_Low);
  6319   0023BA  C046  F03F         	movff	HALL_LCD_4bit_sendCMD@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  6320   0023BE  0E00               	movlw	0
  6321   0023C0  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  6322   0023C2  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  6323                           
  6324                           ;Hall/LCD/Hall_lcd_prog.c: 49:         LCD_send4Bits(copyLCD, copyCMD >> 4);
  6325   0023C6  C046  F044         	movff	HALL_LCD_4bit_sendCMD@copyLCD,LCD_send4Bits@copyLCD
  6326   0023CA  3847               	swapf	HALL_LCD_4bit_sendCMD@copyCMD^0,w,c
  6327   0023CC  0B0F               	andlw	15
  6328   0023CE  6E45               	movwf	LCD_send4Bits@copyData^0,c
  6329   0023D0  ECF9  F011         	call	_LCD_send4Bits	;wreg free
  6330                           
  6331                           ;Hall/LCD/Hall_lcd_prog.c: 50:         LCD_sendEnableSignal4Bits(copyLCD);
  6332   0023D4  C046  F044         	movff	HALL_LCD_4bit_sendCMD@copyLCD,LCD_sendEnableSignal4Bits@copyLCD
  6333   0023D8  EC1E  F014         	call	_LCD_sendEnableSignal4Bits	;wreg free
  6334                           
  6335                           ;Hall/LCD/Hall_lcd_prog.c: 51:         LCD_send4Bits(copyLCD, copyCMD);
  6336   0023DC  C046  F044         	movff	HALL_LCD_4bit_sendCMD@copyLCD,LCD_send4Bits@copyLCD
  6337   0023E0  C047  F045         	movff	HALL_LCD_4bit_sendCMD@copyCMD,LCD_send4Bits@copyData
  6338   0023E4  ECF9  F011         	call	_LCD_send4Bits	;wreg free
  6339                           
  6340                           ;Hall/LCD/Hall_lcd_prog.c: 52:         LCD_sendEnableSignal4Bits(copyLCD);
  6341   0023E8  C046  F044         	movff	HALL_LCD_4bit_sendCMD@copyLCD,LCD_sendEnableSignal4Bits@copyLCD
  6342   0023EC  EC1E  F014         	call	_LCD_sendEnableSignal4Bits	;wreg free
  6343   0023F0                     l341:
  6344   0023F0  0012               	return		;funcret
  6345   0023F2                     __end_of_HALL_LCD_4bit_sendCMD:
  6346                           	callstack 0
  6347                           
  6348 ;; *************** function _LCD_sendEnableSignal4Bits *****************
  6349 ;; Defined at:
  6350 ;;		line 298 in file "Hall/LCD/Hall_lcd_prog.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  copyLCD         1   15[COMRAM] PTR const struct .
  6353 ;;		 -> LCD1_4Bit(6), 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  RetValue        1    0        unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      unsigned char 
  6358 ;; Registers used:
  6359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6365 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;Total ram usage:        1 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 5
  6372 ;; This function calls:
  6373 ;;		_MCAL_GPIO_writePinStatus
  6374 ;; This function is called by:
  6375 ;;		_HALL_LCD_4bit_sendCMD
  6376 ;;		_HALL_LCD_4bit_sendChar
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text25
  6381   00283C                     __ptext25:
  6382                           	callstack 0
  6383   00283C                     _LCD_sendEnableSignal4Bits:
  6384                           	callstack 23
  6385   00283C                     
  6386                           ;Hall/LCD/Hall_lcd_prog.c: 300:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_High);
  6387   00283C  2844               	incf	LCD_sendEnableSignal4Bits@copyLCD^0,w,c
  6388   00283E  6E3F               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  6389   002840  0E01               	movlw	1
  6390   002842  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  6391   002844  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  6392   002848                     
  6393                           ;Hall/LCD/Hall_lcd_prog.c: 301:     _delay((unsigned long)((5)*(4000000U/4000000.0)));
  6394   002848  D000               	nop2		;2 cycle nop
  6395   00284A  D000               	nop2		;2 cycle nop
  6396   00284C  0000               	nop	
  6397   00284E                     
  6398                           ;Hall/LCD/Hall_lcd_prog.c: 302:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_Low);
  6399   00284E  2844               	incf	LCD_sendEnableSignal4Bits@copyLCD^0,w,c
  6400   002850  6E3F               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  6401   002852  0E00               	movlw	0
  6402   002854  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  6403   002856  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  6404   00285A  0012               	return		;funcret
  6405   00285C                     __end_of_LCD_sendEnableSignal4Bits:
  6406                           	callstack 0
  6407                           
  6408 ;; *************** function _LCD_send4Bits *****************
  6409 ;; Defined at:
  6410 ;;		line 290 in file "Hall/LCD/Hall_lcd_prog.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  copyLCD         1   15[COMRAM] PTR const struct .
  6413 ;;		 -> LCD1_4Bit(6), 
  6414 ;;  copyData        1   16[COMRAM] unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  RetValue        1    0        unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      unsigned char 
  6419 ;; Registers used:
  6420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;Total ram usage:        2 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; Hardware stack levels required when called: 5
  6433 ;; This function calls:
  6434 ;;		_MCAL_GPIO_writePinStatus
  6435 ;; This function is called by:
  6436 ;;		_HALL_LCD_4bit_sendCMD
  6437 ;;		_HALL_LCD_4bit_sendChar
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text26
  6442   0023F2                     __ptext26:
  6443                           	callstack 0
  6444   0023F2                     _LCD_send4Bits:
  6445                           	callstack 23
  6446   0023F2  5044               	movf	LCD_send4Bits@copyLCD^0,w,c
  6447   0023F4  0F02               	addlw	2
  6448   0023F6  6E3F               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  6449   0023F8  5045               	movf	LCD_send4Bits@copyData^0,w,c
  6450   0023FA  0B01               	andlw	1
  6451   0023FC  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  6452   0023FE  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  6453   002402  5044               	movf	LCD_send4Bits@copyLCD^0,w,c
  6454   002404  0F03               	addlw	3
  6455   002406  6E3F               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  6456   002408  90D8               	bcf	status,0,c
  6457   00240A  3045               	rrcf	LCD_send4Bits@copyData^0,w,c
  6458   00240C  0B01               	andlw	1
  6459   00240E  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  6460   002410  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  6461   002414  5044               	movf	LCD_send4Bits@copyLCD^0,w,c
  6462   002416  0F04               	addlw	4
  6463   002418  6E3F               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  6464   00241A  4045               	rrncf	LCD_send4Bits@copyData^0,w,c
  6465   00241C  42E8               	rrncf	wreg,f,c
  6466   00241E  0B3F               	andlw	63
  6467   002420  0B01               	andlw	1
  6468   002422  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  6469   002424  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  6470   002428  5044               	movf	LCD_send4Bits@copyLCD^0,w,c
  6471   00242A  0F05               	addlw	5
  6472   00242C  6E3F               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  6473   00242E  3845               	swapf	LCD_send4Bits@copyData^0,w,c
  6474   002430  46E8               	rlncf	wreg,f,c
  6475   002432  0B1F               	andlw	31
  6476   002434  0B01               	andlw	1
  6477   002436  6E40               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  6478   002438  EC92  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  6479   00243C  0012               	return		;funcret
  6480   00243E                     __end_of_LCD_send4Bits:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _MCAL_GPIO_writePinStatus *****************
  6484 ;; Defined at:
  6485 ;;		line 117 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  copyPinCFG      1   10[COMRAM] PTR const struct .
  6488 ;;		 -> LCD1_4Bit$LCD_D(4), HALL_Relay_turnOFF@objPin(1), HALL_Relay_turnON@objPin(1), HALL_Relay_init@objPin(1), 
  6489 ;;		 -> HALL_Led_trunOFF@objLed(1), HALL_Led_trunON@objLed(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  6490 ;;		 -> objPin_motor_1(1), LCD1_4Bit(6), 
  6491 ;;  copyStatusPi    1   11[COMRAM] enum E2982
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  retVal          1   14[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      unsigned char 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:        5 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 4
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_HALL_LCD_4bit_sendCMD
  6514 ;;		_HALL_LCD_4bit_sendChar
  6515 ;;		_LCD_send4Bits
  6516 ;;		_LCD_sendEnableSignal4Bits
  6517 ;;		_MCAL_GPIO_init
  6518 ;;		_HALL_DC_MOTOR_right
  6519 ;;		_HALL_DC_MOTOR_left
  6520 ;;		_HALL_DC_MOTOR_stop
  6521 ;;		_HALL_KeyPad_getValue
  6522 ;;		_HALL_LCD_8bit_sendCMD
  6523 ;;		_HALL_LCD_8bit_sendChar
  6524 ;;		_LCD_sendEnableSignal8Bits
  6525 ;;		_HALL_Led_trunON
  6526 ;;		_HALL_Led_trunOFF
  6527 ;;		_HALL_Relay_turnON
  6528 ;;		_HALL_Relay_turnOFF
  6529 ;;		_HALL_SEVEN_SEGEMENT_writeNumber
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text27
  6534   001324                     __ptext27:
  6535                           	callstack 0
  6536   001324                     _MCAL_GPIO_writePinStatus:
  6537                           	callstack 24
  6538   001324                     
  6539                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 118:     uint8_t retVal = (Std_Return)1;
  6540   001324  0E01               	movlw	1
  6541   001326  6E43               	movwf	MCAL_GPIO_writePinStatus@retVal^0,c
  6542                           
  6543                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 119:     if(copyPinCFG == ((void*)0)) {
  6544   001328  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6545   00132A  A4D8               	btfss	status,2,c
  6546   00132C  EF9A  F009         	goto	u2671
  6547   001330  EF9C  F009         	goto	u2670
  6548   001334                     u2671:
  6549   001334  EFE9  F00A         	goto	l4165
  6550   001338                     u2670:
  6551   001338                     l4121:
  6552                           
  6553                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 120:         retVal = (Std_Return)0;
  6554   001338  6A43               	clrf	MCAL_GPIO_writePinStatus@retVal^0,c
  6555                           
  6556                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 121:     }
  6557   00133A  EF04  F00B         	goto	l4167
  6558   00133E                     l4123:
  6559                           
  6560                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 127:                         LATA |= (1 << copyPinCFG-
      +                          >Pin);
  6561   00133E  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6562   001340  6ED9               	movwf	fsr2l,c
  6563   001342  6ADA               	clrf	fsr2h,c
  6564   001344  30DF               	rrcf	223,w,c
  6565   001346  32E8               	rrcf	wreg,f,c
  6566   001348  32E8               	rrcf	wreg,f,c
  6567   00134A  0B07               	andlw	7
  6568   00134C  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6569   00134E  0E01               	movlw	1
  6570   001350  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6571   001352  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6572   001354  EFAE  F009         	goto	u2684
  6573   001358                     u2685:
  6574   001358  90D8               	bcf	status,0,c
  6575   00135A  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6576   00135C                     u2684:
  6577   00135C  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6578   00135E  EFAC  F009         	goto	u2685
  6579   001362  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6580   001364  1289               	iorwf	137,f,c	;volatile
  6581                           
  6582                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 128:                         break;
  6583   001366  EF04  F00B         	goto	l4167
  6584   00136A                     l4125:
  6585                           
  6586                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 130:                         LATA &= ~ (1 << copyPinCF
      +                          G->Pin);
  6587   00136A  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6588   00136C  6ED9               	movwf	fsr2l,c
  6589   00136E  6ADA               	clrf	fsr2h,c
  6590   001370  30DF               	rrcf	223,w,c
  6591   001372  32E8               	rrcf	wreg,f,c
  6592   001374  32E8               	rrcf	wreg,f,c
  6593   001376  0B07               	andlw	7
  6594   001378  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6595   00137A  0E01               	movlw	1
  6596   00137C  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6597   00137E  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6598   001380  EFC4  F009         	goto	u2694
  6599   001384                     u2695:
  6600   001384  90D8               	bcf	status,0,c
  6601   001386  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6602   001388                     u2694:
  6603   001388  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6604   00138A  EFC2  F009         	goto	u2695
  6605   00138E  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6606   001390  0AFF               	xorlw	255
  6607   001392  1689               	andwf	137,f,c	;volatile
  6608                           
  6609                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 131:                         break;
  6610   001394  EF04  F00B         	goto	l4167
  6611   001398                     l4129:
  6612   001398  5040               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  6613   00139A  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6614   00139C  6A42               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6615                           
  6616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6617                           ; Switch size 1, requested type "simple"
  6618                           ; Number of cases is 1, Range of values is 0 to 0
  6619                           ; switch strategies available:
  6620                           ; Name         Instructions Cycles
  6621                           ; simple_byte            4     3 (average)
  6622                           ;	Chosen strategy is simple_byte
  6623   00139E  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6624   0013A0  0A00               	xorlw	0	; case 0
  6625   0013A2  B4D8               	btfsc	status,2,c
  6626   0013A4  EFD6  F009         	goto	l6317
  6627   0013A8  EF9C  F009         	goto	l4121
  6628   0013AC                     l6317:
  6629                           
  6630                           ; Switch size 1, requested type "simple"
  6631                           ; Number of cases is 2, Range of values is 0 to 1
  6632                           ; switch strategies available:
  6633                           ; Name         Instructions Cycles
  6634                           ; simple_byte            7     4 (average)
  6635                           ;	Chosen strategy is simple_byte
  6636   0013AC  5041               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  6637   0013AE  0A00               	xorlw	0	; case 0
  6638   0013B0  B4D8               	btfsc	status,2,c
  6639   0013B2  EFB5  F009         	goto	l4125
  6640   0013B6  0A01               	xorlw	1	; case 1
  6641   0013B8  B4D8               	btfsc	status,2,c
  6642   0013BA  EF9F  F009         	goto	l4123
  6643   0013BE  EF9C  F009         	goto	l4121
  6644   0013C2                     l4131:
  6645                           
  6646                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 141:                         LATB |= (1 << copyPinCFG-
      +                          >Pin);
  6647   0013C2  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6648   0013C4  6ED9               	movwf	fsr2l,c
  6649   0013C6  6ADA               	clrf	fsr2h,c
  6650   0013C8  30DF               	rrcf	223,w,c
  6651   0013CA  32E8               	rrcf	wreg,f,c
  6652   0013CC  32E8               	rrcf	wreg,f,c
  6653   0013CE  0B07               	andlw	7
  6654   0013D0  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6655   0013D2  0E01               	movlw	1
  6656   0013D4  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6657   0013D6  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6658   0013D8  EFF0  F009         	goto	u2704
  6659   0013DC                     u2705:
  6660   0013DC  90D8               	bcf	status,0,c
  6661   0013DE  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6662   0013E0                     u2704:
  6663   0013E0  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6664   0013E2  EFEE  F009         	goto	u2705
  6665   0013E6  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6666   0013E8  128A               	iorwf	138,f,c	;volatile
  6667                           
  6668                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 142:                         break;
  6669   0013EA  EF04  F00B         	goto	l4167
  6670   0013EE                     l4133:
  6671                           
  6672                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 144:                         LATB &= ~ (1 << copyPinCF
      +                          G->Pin);
  6673   0013EE  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6674   0013F0  6ED9               	movwf	fsr2l,c
  6675   0013F2  6ADA               	clrf	fsr2h,c
  6676   0013F4  30DF               	rrcf	223,w,c
  6677   0013F6  32E8               	rrcf	wreg,f,c
  6678   0013F8  32E8               	rrcf	wreg,f,c
  6679   0013FA  0B07               	andlw	7
  6680   0013FC  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6681   0013FE  0E01               	movlw	1
  6682   001400  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6683   001402  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6684   001404  EF06  F00A         	goto	u2714
  6685   001408                     u2715:
  6686   001408  90D8               	bcf	status,0,c
  6687   00140A  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6688   00140C                     u2714:
  6689   00140C  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6690   00140E  EF04  F00A         	goto	u2715
  6691   001412  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6692   001414  0AFF               	xorlw	255
  6693   001416  168A               	andwf	138,f,c	;volatile
  6694                           
  6695                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 145:                         break;
  6696   001418  EF04  F00B         	goto	l4167
  6697   00141C                     l4137:
  6698   00141C  5040               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  6699   00141E  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6700   001420  6A42               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6701                           
  6702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6703                           ; Switch size 1, requested type "simple"
  6704                           ; Number of cases is 1, Range of values is 0 to 0
  6705                           ; switch strategies available:
  6706                           ; Name         Instructions Cycles
  6707                           ; simple_byte            4     3 (average)
  6708                           ;	Chosen strategy is simple_byte
  6709   001422  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6710   001424  0A00               	xorlw	0	; case 0
  6711   001426  B4D8               	btfsc	status,2,c
  6712   001428  EF18  F00A         	goto	l6319
  6713   00142C  EF9C  F009         	goto	l4121
  6714   001430                     l6319:
  6715                           
  6716                           ; Switch size 1, requested type "simple"
  6717                           ; Number of cases is 2, Range of values is 0 to 1
  6718                           ; switch strategies available:
  6719                           ; Name         Instructions Cycles
  6720                           ; simple_byte            7     4 (average)
  6721                           ;	Chosen strategy is simple_byte
  6722   001430  5041               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  6723   001432  0A00               	xorlw	0	; case 0
  6724   001434  B4D8               	btfsc	status,2,c
  6725   001436  EFF7  F009         	goto	l4133
  6726   00143A  0A01               	xorlw	1	; case 1
  6727   00143C  B4D8               	btfsc	status,2,c
  6728   00143E  EFE1  F009         	goto	l4131
  6729   001442  EF9C  F009         	goto	l4121
  6730   001446                     l4139:
  6731                           
  6732                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 155:                         LATC |= (1 << copyPinCFG-
      +                          >Pin);
  6733   001446  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6734   001448  6ED9               	movwf	fsr2l,c
  6735   00144A  6ADA               	clrf	fsr2h,c
  6736   00144C  30DF               	rrcf	223,w,c
  6737   00144E  32E8               	rrcf	wreg,f,c
  6738   001450  32E8               	rrcf	wreg,f,c
  6739   001452  0B07               	andlw	7
  6740   001454  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6741   001456  0E01               	movlw	1
  6742   001458  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6743   00145A  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6744   00145C  EF32  F00A         	goto	u2724
  6745   001460                     u2725:
  6746   001460  90D8               	bcf	status,0,c
  6747   001462  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6748   001464                     u2724:
  6749   001464  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6750   001466  EF30  F00A         	goto	u2725
  6751   00146A  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6752   00146C  128B               	iorwf	139,f,c	;volatile
  6753                           
  6754                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 156:                         break;
  6755   00146E  EF04  F00B         	goto	l4167
  6756   001472                     l4141:
  6757                           
  6758                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 158:                         LATC &= ~ (1 << copyPinCF
      +                          G->Pin);
  6759   001472  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6760   001474  6ED9               	movwf	fsr2l,c
  6761   001476  6ADA               	clrf	fsr2h,c
  6762   001478  30DF               	rrcf	223,w,c
  6763   00147A  32E8               	rrcf	wreg,f,c
  6764   00147C  32E8               	rrcf	wreg,f,c
  6765   00147E  0B07               	andlw	7
  6766   001480  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6767   001482  0E01               	movlw	1
  6768   001484  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6769   001486  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6770   001488  EF48  F00A         	goto	u2734
  6771   00148C                     u2735:
  6772   00148C  90D8               	bcf	status,0,c
  6773   00148E  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6774   001490                     u2734:
  6775   001490  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6776   001492  EF46  F00A         	goto	u2735
  6777   001496  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6778   001498  0AFF               	xorlw	255
  6779   00149A  168B               	andwf	139,f,c	;volatile
  6780                           
  6781                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 159:                         break;
  6782   00149C  EF04  F00B         	goto	l4167
  6783   0014A0                     l4145:
  6784   0014A0  5040               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  6785   0014A2  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6786   0014A4  6A42               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6787                           
  6788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6789                           ; Switch size 1, requested type "simple"
  6790                           ; Number of cases is 1, Range of values is 0 to 0
  6791                           ; switch strategies available:
  6792                           ; Name         Instructions Cycles
  6793                           ; simple_byte            4     3 (average)
  6794                           ;	Chosen strategy is simple_byte
  6795   0014A6  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6796   0014A8  0A00               	xorlw	0	; case 0
  6797   0014AA  B4D8               	btfsc	status,2,c
  6798   0014AC  EF5A  F00A         	goto	l6321
  6799   0014B0  EF9C  F009         	goto	l4121
  6800   0014B4                     l6321:
  6801                           
  6802                           ; Switch size 1, requested type "simple"
  6803                           ; Number of cases is 2, Range of values is 0 to 1
  6804                           ; switch strategies available:
  6805                           ; Name         Instructions Cycles
  6806                           ; simple_byte            7     4 (average)
  6807                           ;	Chosen strategy is simple_byte
  6808   0014B4  5041               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  6809   0014B6  0A00               	xorlw	0	; case 0
  6810   0014B8  B4D8               	btfsc	status,2,c
  6811   0014BA  EF39  F00A         	goto	l4141
  6812   0014BE  0A01               	xorlw	1	; case 1
  6813   0014C0  B4D8               	btfsc	status,2,c
  6814   0014C2  EF23  F00A         	goto	l4139
  6815   0014C6  EF9C  F009         	goto	l4121
  6816   0014CA                     l4147:
  6817                           
  6818                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 170:                         LATD |= (1 << copyPinCFG-
      +                          >Pin);
  6819   0014CA  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6820   0014CC  6ED9               	movwf	fsr2l,c
  6821   0014CE  6ADA               	clrf	fsr2h,c
  6822   0014D0  30DF               	rrcf	223,w,c
  6823   0014D2  32E8               	rrcf	wreg,f,c
  6824   0014D4  32E8               	rrcf	wreg,f,c
  6825   0014D6  0B07               	andlw	7
  6826   0014D8  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6827   0014DA  0E01               	movlw	1
  6828   0014DC  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6829   0014DE  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6830   0014E0  EF74  F00A         	goto	u2744
  6831   0014E4                     u2745:
  6832   0014E4  90D8               	bcf	status,0,c
  6833   0014E6  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6834   0014E8                     u2744:
  6835   0014E8  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6836   0014EA  EF72  F00A         	goto	u2745
  6837   0014EE  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6838   0014F0  128C               	iorwf	140,f,c	;volatile
  6839                           
  6840                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 171:                         break;
  6841   0014F2  EF04  F00B         	goto	l4167
  6842   0014F6                     l4149:
  6843                           
  6844                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 173:                         LATD &= ~ (1 << copyPinCF
      +                          G->Pin);
  6845   0014F6  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6846   0014F8  6ED9               	movwf	fsr2l,c
  6847   0014FA  6ADA               	clrf	fsr2h,c
  6848   0014FC  30DF               	rrcf	223,w,c
  6849   0014FE  32E8               	rrcf	wreg,f,c
  6850   001500  32E8               	rrcf	wreg,f,c
  6851   001502  0B07               	andlw	7
  6852   001504  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6853   001506  0E01               	movlw	1
  6854   001508  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6855   00150A  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6856   00150C  EF8A  F00A         	goto	u2754
  6857   001510                     u2755:
  6858   001510  90D8               	bcf	status,0,c
  6859   001512  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6860   001514                     u2754:
  6861   001514  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6862   001516  EF88  F00A         	goto	u2755
  6863   00151A  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6864   00151C  0AFF               	xorlw	255
  6865   00151E  168C               	andwf	140,f,c	;volatile
  6866                           
  6867                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 174:                         break;
  6868   001520  EF04  F00B         	goto	l4167
  6869   001524                     l4153:
  6870   001524  5040               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  6871   001526  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6872   001528  6A42               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6873                           
  6874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6875                           ; Switch size 1, requested type "simple"
  6876                           ; Number of cases is 1, Range of values is 0 to 0
  6877                           ; switch strategies available:
  6878                           ; Name         Instructions Cycles
  6879                           ; simple_byte            4     3 (average)
  6880                           ;	Chosen strategy is simple_byte
  6881   00152A  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6882   00152C  0A00               	xorlw	0	; case 0
  6883   00152E  B4D8               	btfsc	status,2,c
  6884   001530  EF9C  F00A         	goto	l6323
  6885   001534  EF9C  F009         	goto	l4121
  6886   001538                     l6323:
  6887                           
  6888                           ; Switch size 1, requested type "simple"
  6889                           ; Number of cases is 2, Range of values is 0 to 1
  6890                           ; switch strategies available:
  6891                           ; Name         Instructions Cycles
  6892                           ; simple_byte            7     4 (average)
  6893                           ;	Chosen strategy is simple_byte
  6894   001538  5041               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  6895   00153A  0A00               	xorlw	0	; case 0
  6896   00153C  B4D8               	btfsc	status,2,c
  6897   00153E  EF7B  F00A         	goto	l4149
  6898   001542  0A01               	xorlw	1	; case 1
  6899   001544  B4D8               	btfsc	status,2,c
  6900   001546  EF65  F00A         	goto	l4147
  6901   00154A  EF9C  F009         	goto	l4121
  6902   00154E                     l4155:
  6903                           
  6904                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 185:                         LATE |= (1 << copyPinCFG-
      +                          >Pin);
  6905   00154E  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6906   001550  6ED9               	movwf	fsr2l,c
  6907   001552  6ADA               	clrf	fsr2h,c
  6908   001554  30DF               	rrcf	223,w,c
  6909   001556  32E8               	rrcf	wreg,f,c
  6910   001558  32E8               	rrcf	wreg,f,c
  6911   00155A  0B07               	andlw	7
  6912   00155C  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6913   00155E  0E01               	movlw	1
  6914   001560  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6915   001562  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6916   001564  EFB6  F00A         	goto	u2764
  6917   001568                     u2765:
  6918   001568  90D8               	bcf	status,0,c
  6919   00156A  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6920   00156C                     u2764:
  6921   00156C  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6922   00156E  EFB4  F00A         	goto	u2765
  6923   001572  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6924   001574  128D               	iorwf	141,f,c	;volatile
  6925                           
  6926                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 186:                         break;
  6927   001576  EF04  F00B         	goto	l4167
  6928   00157A                     l4157:
  6929                           
  6930                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 188:                         LATE &= ~ (1 << copyPinCF
      +                          G->Pin);
  6931   00157A  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6932   00157C  6ED9               	movwf	fsr2l,c
  6933   00157E  6ADA               	clrf	fsr2h,c
  6934   001580  30DF               	rrcf	223,w,c
  6935   001582  32E8               	rrcf	wreg,f,c
  6936   001584  32E8               	rrcf	wreg,f,c
  6937   001586  0B07               	andlw	7
  6938   001588  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6939   00158A  0E01               	movlw	1
  6940   00158C  6E42               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6941   00158E  2A41               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  6942   001590  EFCC  F00A         	goto	u2774
  6943   001594                     u2775:
  6944   001594  90D8               	bcf	status,0,c
  6945   001596  3642               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  6946   001598                     u2774:
  6947   001598  2E41               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  6948   00159A  EFCA  F00A         	goto	u2775
  6949   00159E  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6950   0015A0  0AFF               	xorlw	255
  6951   0015A2  168D               	andwf	141,f,c	;volatile
  6952                           
  6953                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 189:                         break;
  6954   0015A4  EF04  F00B         	goto	l4167
  6955   0015A8                     l4161:
  6956   0015A8  5040               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  6957   0015AA  6E41               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  6958   0015AC  6A42               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  6959                           
  6960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6961                           ; Switch size 1, requested type "simple"
  6962                           ; Number of cases is 1, Range of values is 0 to 0
  6963                           ; switch strategies available:
  6964                           ; Name         Instructions Cycles
  6965                           ; simple_byte            4     3 (average)
  6966                           ;	Chosen strategy is simple_byte
  6967   0015AE  5042               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  6968   0015B0  0A00               	xorlw	0	; case 0
  6969   0015B2  B4D8               	btfsc	status,2,c
  6970   0015B4  EFDE  F00A         	goto	l6325
  6971   0015B8  EF9C  F009         	goto	l4121
  6972   0015BC                     l6325:
  6973                           
  6974                           ; Switch size 1, requested type "simple"
  6975                           ; Number of cases is 2, Range of values is 0 to 1
  6976                           ; switch strategies available:
  6977                           ; Name         Instructions Cycles
  6978                           ; simple_byte            7     4 (average)
  6979                           ;	Chosen strategy is simple_byte
  6980   0015BC  5041               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  6981   0015BE  0A00               	xorlw	0	; case 0
  6982   0015C0  B4D8               	btfsc	status,2,c
  6983   0015C2  EFBD  F00A         	goto	l4157
  6984   0015C6  0A01               	xorlw	1	; case 1
  6985   0015C8  B4D8               	btfsc	status,2,c
  6986   0015CA  EFA7  F00A         	goto	l4155
  6987   0015CE  EF9C  F009         	goto	l4121
  6988   0015D2                     l4165:
  6989   0015D2  503F               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  6990   0015D4  6ED9               	movwf	fsr2l,c
  6991   0015D6  6ADA               	clrf	fsr2h,c
  6992   0015D8  50DF               	movf	223,w,c
  6993   0015DA  0B07               	andlw	7
  6994                           
  6995                           ; Switch size 1, requested type "simple"
  6996                           ; Number of cases is 5, Range of values is 0 to 4
  6997                           ; switch strategies available:
  6998                           ; Name         Instructions Cycles
  6999                           ; simple_byte           16     9 (average)
  7000                           ;	Chosen strategy is simple_byte
  7001   0015DC  0A00               	xorlw	0	; case 0
  7002   0015DE  B4D8               	btfsc	status,2,c
  7003   0015E0  EFCC  F009         	goto	l4129
  7004   0015E4  0A01               	xorlw	1	; case 1
  7005   0015E6  B4D8               	btfsc	status,2,c
  7006   0015E8  EF0E  F00A         	goto	l4137
  7007   0015EC  0A03               	xorlw	3	; case 2
  7008   0015EE  B4D8               	btfsc	status,2,c
  7009   0015F0  EF50  F00A         	goto	l4145
  7010   0015F4  0A01               	xorlw	1	; case 3
  7011   0015F6  B4D8               	btfsc	status,2,c
  7012   0015F8  EF92  F00A         	goto	l4153
  7013   0015FC  0A07               	xorlw	7	; case 4
  7014   0015FE  B4D8               	btfsc	status,2,c
  7015   001600  EFD4  F00A         	goto	l4161
  7016   001604  EF9C  F009         	goto	l4121
  7017   001608                     l4167:
  7018                           
  7019                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 200:     return retVal;
  7020   001608  5043               	movf	MCAL_GPIO_writePinStatus@retVal^0,w,c
  7021   00160A  0012               	return		;funcret
  7022   00160C                     __end_of_MCAL_GPIO_writePinStatus:
  7023                           	callstack 0
  7024                           
  7025 ;; *************** function _MCAL_InterruptManager *****************
  7026 ;; Defined at:
  7027 ;;		line 35 in file "Mcal/Mcal_interrupt/Mcal_interrupt_manager.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;		None
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;Total ram usage:        4 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; Hardware stack levels required when called: 3
  7048 ;; This function calls:
  7049 ;;		_ADC_ISR
  7050 ;;		_INT0_ISR
  7051 ;;		_INT1_ISR
  7052 ;;		_INT2_ISR
  7053 ;;		_RB4_ISR
  7054 ;;		_RB5_ISR
  7055 ;;		_RB6_ISR
  7056 ;;		_RB7_ISR
  7057 ;; This function is called by:
  7058 ;;		Interrupt level 2
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	intcode
  7063   000008                     __pintcode:
  7064                           	callstack 0
  7065   000008                     _MCAL_InterruptManager:
  7066                           	callstack 21
  7067                           
  7068                           ;incstack = 0
  7069   000008  8274               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7070   00000A  ED06  F00B         	call	int_func,f	;refresh shadow registers
  7071                           
  7072                           	psect	intcode_body
  7073   00160C                     __pintcode_body:
  7074                           	callstack 21
  7075   00160C                     int_func:
  7076                           	callstack 21
  7077   00160C  0006               	pop		; remove dummy address from shadow register refresh
  7078   00160E  CFFA F03B          	movff	pclath,??_MCAL_InterruptManager
  7079   001612  CFFB F03C          	movff	pclatu,??_MCAL_InterruptManager+1
  7080   001616  CFD9 F03D          	movff	fsr2l,??_MCAL_InterruptManager+2
  7081   00161A  CFDA F03E          	movff	fsr2h,??_MCAL_InterruptManager+3
  7082   00161E                     
  7083                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 37:     if((1 == INTCONbits.INT0IE) && (1
      +                           == INTCONbits.INT0IF)) {
  7084   00161E  A8F2               	btfss	242,4,c	;volatile
  7085   001620  EF14  F00B         	goto	i2u408_41
  7086   001624  EF16  F00B         	goto	i2u408_40
  7087   001628                     i2u408_41:
  7088   001628  EF1F  F00B         	goto	i2l5401
  7089   00162C                     i2u408_40:
  7090   00162C  A2F2               	btfss	242,1,c	;volatile
  7091   00162E  EF1B  F00B         	goto	i2u409_41
  7092   001632  EF1D  F00B         	goto	i2u409_40
  7093   001636                     i2u409_41:
  7094   001636  EF1F  F00B         	goto	i2l5401
  7095   00163A                     i2u409_40:
  7096   00163A                     
  7097                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 38:         INT0_ISR();
  7098   00163A  ECCB  F013         	call	_INT0_ISR	;wreg free
  7099   00163E                     i2l5401:
  7100                           
  7101                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 40:     if((1 == INTCON3bits.INT1IE) && (
      +                          1 == INTCON3bits.INT1IF)) {
  7102   00163E  A6F0               	btfss	240,3,c	;volatile
  7103   001640  EF24  F00B         	goto	i2u410_41
  7104   001644  EF26  F00B         	goto	i2u410_40
  7105   001648                     i2u410_41:
  7106   001648  EF2F  F00B         	goto	i2l5407
  7107   00164C                     i2u410_40:
  7108   00164C  A0F0               	btfss	240,0,c	;volatile
  7109   00164E  EF2B  F00B         	goto	i2u411_41
  7110   001652  EF2D  F00B         	goto	i2u411_40
  7111   001656                     i2u411_41:
  7112   001656  EF2F  F00B         	goto	i2l5407
  7113   00165A                     i2u411_40:
  7114   00165A                     
  7115                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 41:         INT1_ISR();
  7116   00165A  ECB4  F013         	call	_INT1_ISR	;wreg free
  7117   00165E                     i2l5407:
  7118                           
  7119                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 43:     if((1 == INTCON3bits.INT2IE) && (
      +                          1 == INTCON3bits.INT2IF)) {
  7120   00165E  A8F0               	btfss	240,4,c	;volatile
  7121   001660  EF34  F00B         	goto	i2u412_41
  7122   001664  EF36  F00B         	goto	i2u412_40
  7123   001668                     i2u412_41:
  7124   001668  EF3F  F00B         	goto	i2l5413
  7125   00166C                     i2u412_40:
  7126   00166C  A2F0               	btfss	240,1,c	;volatile
  7127   00166E  EF3B  F00B         	goto	i2u413_41
  7128   001672  EF3D  F00B         	goto	i2u413_40
  7129   001676                     i2u413_41:
  7130   001676  EF3F  F00B         	goto	i2l5413
  7131   00167A                     i2u413_40:
  7132   00167A                     
  7133                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 44:         INT2_ISR();
  7134   00167A  EC9D  F013         	call	_INT2_ISR	;wreg free
  7135   00167E                     i2l5413:
  7136                           
  7137                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7138   00167E  A6F2               	btfss	242,3,c	;volatile
  7139   001680  EF44  F00B         	goto	i2u414_41
  7140   001684  EF46  F00B         	goto	i2u414_40
  7141   001688                     i2u414_41:
  7142   001688  EF60  F00B         	goto	i2l5425
  7143   00168C                     i2u414_40:
  7144   00168C  A0F2               	btfss	242,0,c	;volatile
  7145   00168E  EF4B  F00B         	goto	i2u415_41
  7146   001692  EF4D  F00B         	goto	i2u415_40
  7147   001696                     i2u415_41:
  7148   001696  EF60  F00B         	goto	i2l5425
  7149   00169A                     i2u415_40:
  7150   00169A  B881               	btfsc	129,4,c	;volatile
  7151   00169C  EF52  F00B         	goto	i2u416_41
  7152   0016A0  EF54  F00B         	goto	i2u416_40
  7153   0016A4                     i2u416_41:
  7154   0016A4  EF60  F00B         	goto	i2l5425
  7155   0016A8                     i2u416_40:
  7156   0016A8  0470               	decf	_RB4_Flag^0,w,c	;volatile
  7157   0016AA  A4D8               	btfss	status,2,c
  7158   0016AC  EF5A  F00B         	goto	i2u417_41
  7159   0016B0  EF5C  F00B         	goto	i2u417_40
  7160   0016B4                     i2u417_41:
  7161   0016B4  EF60  F00B         	goto	i2l5425
  7162   0016B8                     i2u417_40:
  7163   0016B8                     
  7164                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 50:             (PORTBbits.RB4 == GPIO_St
      +                          atus_Low) && (RB4_Flag == 1)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 51:       
      +                            RB4_Flag = 0;
  7165   0016B8  6A70               	clrf	_RB4_Flag^0,c	;volatile
  7166   0016BA                     
  7167                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 52:         RB4_ISR(0);
  7168   0016BA  0E00               	movlw	0
  7169   0016BC  ECCC  F012         	call	_RB4_ISR
  7170   0016C0                     i2l5425:
  7171                           
  7172                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 54:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7173   0016C0  A6F2               	btfss	242,3,c	;volatile
  7174   0016C2  EF65  F00B         	goto	i2u418_41
  7175   0016C6  EF67  F00B         	goto	i2u418_40
  7176   0016CA                     i2u418_41:
  7177   0016CA  EF82  F00B         	goto	i2l5437
  7178   0016CE                     i2u418_40:
  7179   0016CE  A0F2               	btfss	242,0,c	;volatile
  7180   0016D0  EF6C  F00B         	goto	i2u419_41
  7181   0016D4  EF6E  F00B         	goto	i2u419_40
  7182   0016D8                     i2u419_41:
  7183   0016D8  EF82  F00B         	goto	i2l5437
  7184   0016DC                     i2u419_40:
  7185   0016DC  A881               	btfss	129,4,c	;volatile
  7186   0016DE  EF73  F00B         	goto	i2u420_41
  7187   0016E2  EF75  F00B         	goto	i2u420_40
  7188   0016E6                     i2u420_41:
  7189   0016E6  EF82  F00B         	goto	i2l5437
  7190   0016EA                     i2u420_40:
  7191   0016EA  5070               	movf	_RB4_Flag^0,w,c	;volatile
  7192   0016EC  A4D8               	btfss	status,2,c
  7193   0016EE  EF7B  F00B         	goto	i2u421_41
  7194   0016F2  EF7D  F00B         	goto	i2u421_40
  7195   0016F6                     i2u421_41:
  7196   0016F6  EF82  F00B         	goto	i2l5437
  7197   0016FA                     i2u421_40:
  7198   0016FA                     
  7199                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 55:             (PORTBbits.RB4 == GPIO_St
      +                          atus_High) && (RB4_Flag == 0)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 56:      
      +                             RB4_Flag = 1;
  7200   0016FA  0E01               	movlw	1
  7201   0016FC  6E70               	movwf	_RB4_Flag^0,c	;volatile
  7202   0016FE                     
  7203                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 57:         RB4_ISR(1);
  7204   0016FE  0E01               	movlw	1
  7205   001700  ECCC  F012         	call	_RB4_ISR
  7206   001704                     i2l5437:
  7207                           
  7208                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 60:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7209   001704  A6F2               	btfss	242,3,c	;volatile
  7210   001706  EF87  F00B         	goto	i2u422_41
  7211   00170A  EF89  F00B         	goto	i2u422_40
  7212   00170E                     i2u422_41:
  7213   00170E  EFA3  F00B         	goto	i2l5449
  7214   001712                     i2u422_40:
  7215   001712  A0F2               	btfss	242,0,c	;volatile
  7216   001714  EF8E  F00B         	goto	i2u423_41
  7217   001718  EF90  F00B         	goto	i2u423_40
  7218   00171C                     i2u423_41:
  7219   00171C  EFA3  F00B         	goto	i2l5449
  7220   001720                     i2u423_40:
  7221   001720  BA81               	btfsc	129,5,c	;volatile
  7222   001722  EF95  F00B         	goto	i2u424_41
  7223   001726  EF97  F00B         	goto	i2u424_40
  7224   00172A                     i2u424_41:
  7225   00172A  EFA3  F00B         	goto	i2l5449
  7226   00172E                     i2u424_40:
  7227   00172E  046F               	decf	_RB5_Flag^0,w,c	;volatile
  7228   001730  A4D8               	btfss	status,2,c
  7229   001732  EF9D  F00B         	goto	i2u425_41
  7230   001736  EF9F  F00B         	goto	i2u425_40
  7231   00173A                     i2u425_41:
  7232   00173A  EFA3  F00B         	goto	i2l5449
  7233   00173E                     i2u425_40:
  7234   00173E                     
  7235                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 61:             (PORTBbits.RB5 == GPIO_St
      +                          atus_Low) && (RB5_Flag == 1)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 62:       
      +                            RB5_Flag = 0;
  7236   00173E  6A6F               	clrf	_RB5_Flag^0,c	;volatile
  7237   001740                     
  7238                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 63:         RB5_ISR(0);
  7239   001740  0E00               	movlw	0
  7240   001742  ECAA  F012         	call	_RB5_ISR
  7241   001746                     i2l5449:
  7242                           
  7243                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 65:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7244   001746  A6F2               	btfss	242,3,c	;volatile
  7245   001748  EFA8  F00B         	goto	i2u426_41
  7246   00174C  EFAA  F00B         	goto	i2u426_40
  7247   001750                     i2u426_41:
  7248   001750  EFC4  F00B         	goto	i2l5461
  7249   001754                     i2u426_40:
  7250   001754  A0F2               	btfss	242,0,c	;volatile
  7251   001756  EFAF  F00B         	goto	i2u427_41
  7252   00175A  EFB1  F00B         	goto	i2u427_40
  7253   00175E                     i2u427_41:
  7254   00175E  EFC4  F00B         	goto	i2l5461
  7255   001762                     i2u427_40:
  7256   001762  AA81               	btfss	129,5,c	;volatile
  7257   001764  EFB6  F00B         	goto	i2u428_41
  7258   001768  EFB8  F00B         	goto	i2u428_40
  7259   00176C                     i2u428_41:
  7260   00176C  EFC4  F00B         	goto	i2l5461
  7261   001770                     i2u428_40:
  7262   001770  506F               	movf	_RB5_Flag^0,w,c	;volatile
  7263   001772  A4D8               	btfss	status,2,c
  7264   001774  EFBE  F00B         	goto	i2u429_41
  7265   001778  EFC0  F00B         	goto	i2u429_40
  7266   00177C                     i2u429_41:
  7267   00177C  EFC4  F00B         	goto	i2l5461
  7268   001780                     i2u429_40:
  7269   001780                     
  7270                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 66:             (PORTBbits.RB5 == GPIO_St
      +                          atus_High) && (RB5_Flag == 0)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 67:      
      +                             RB5_Flag = 0;
  7271   001780  6A6F               	clrf	_RB5_Flag^0,c	;volatile
  7272   001782                     
  7273                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 68:         RB5_ISR(1);
  7274   001782  0E01               	movlw	1
  7275   001784  ECAA  F012         	call	_RB5_ISR
  7276   001788                     i2l5461:
  7277                           
  7278                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 71:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7279   001788  A6F2               	btfss	242,3,c	;volatile
  7280   00178A  EFC9  F00B         	goto	i2u430_41
  7281   00178E  EFCB  F00B         	goto	i2u430_40
  7282   001792                     i2u430_41:
  7283   001792  EFE5  F00B         	goto	i2l5473
  7284   001796                     i2u430_40:
  7285   001796  A0F2               	btfss	242,0,c	;volatile
  7286   001798  EFD0  F00B         	goto	i2u431_41
  7287   00179C  EFD2  F00B         	goto	i2u431_40
  7288   0017A0                     i2u431_41:
  7289   0017A0  EFE5  F00B         	goto	i2l5473
  7290   0017A4                     i2u431_40:
  7291   0017A4  BC81               	btfsc	129,6,c	;volatile
  7292   0017A6  EFD7  F00B         	goto	i2u432_41
  7293   0017AA  EFD9  F00B         	goto	i2u432_40
  7294   0017AE                     i2u432_41:
  7295   0017AE  EFE5  F00B         	goto	i2l5473
  7296   0017B2                     i2u432_40:
  7297   0017B2  046E               	decf	_RB6_Flag^0,w,c	;volatile
  7298   0017B4  A4D8               	btfss	status,2,c
  7299   0017B6  EFDF  F00B         	goto	i2u433_41
  7300   0017BA  EFE1  F00B         	goto	i2u433_40
  7301   0017BE                     i2u433_41:
  7302   0017BE  EFE5  F00B         	goto	i2l5473
  7303   0017C2                     i2u433_40:
  7304   0017C2                     
  7305                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 72:             (PORTBbits.RB6 == GPIO_St
      +                          atus_Low) && (RB6_Flag == 1)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 73:       
      +                            RB6_Flag = 0;
  7306   0017C2  6A6E               	clrf	_RB6_Flag^0,c	;volatile
  7307   0017C4                     
  7308                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 74:         RB6_ISR(0);
  7309   0017C4  0E00               	movlw	0
  7310   0017C6  EC88  F012         	call	_RB6_ISR
  7311   0017CA                     i2l5473:
  7312                           
  7313                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 76:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7314   0017CA  A6F2               	btfss	242,3,c	;volatile
  7315   0017CC  EFEA  F00B         	goto	i2u434_41
  7316   0017D0  EFEC  F00B         	goto	i2u434_40
  7317   0017D4                     i2u434_41:
  7318   0017D4  EF07  F00C         	goto	i2l5485
  7319   0017D8                     i2u434_40:
  7320   0017D8  A0F2               	btfss	242,0,c	;volatile
  7321   0017DA  EFF1  F00B         	goto	i2u435_41
  7322   0017DE  EFF3  F00B         	goto	i2u435_40
  7323   0017E2                     i2u435_41:
  7324   0017E2  EF07  F00C         	goto	i2l5485
  7325   0017E6                     i2u435_40:
  7326   0017E6  AC81               	btfss	129,6,c	;volatile
  7327   0017E8  EFF8  F00B         	goto	i2u436_41
  7328   0017EC  EFFA  F00B         	goto	i2u436_40
  7329   0017F0                     i2u436_41:
  7330   0017F0  EF07  F00C         	goto	i2l5485
  7331   0017F4                     i2u436_40:
  7332   0017F4  506E               	movf	_RB6_Flag^0,w,c	;volatile
  7333   0017F6  A4D8               	btfss	status,2,c
  7334   0017F8  EF00  F00C         	goto	i2u437_41
  7335   0017FC  EF02  F00C         	goto	i2u437_40
  7336   001800                     i2u437_41:
  7337   001800  EF07  F00C         	goto	i2l5485
  7338   001804                     i2u437_40:
  7339   001804                     
  7340                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 77:             (PORTBbits.RB6 == GPIO_St
      +                          atus_High) && (RB6_Flag == 0)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 78:      
      +                             RB6_Flag = 1;
  7341   001804  0E01               	movlw	1
  7342   001806  6E6E               	movwf	_RB6_Flag^0,c	;volatile
  7343   001808                     
  7344                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 79:         RB6_ISR(1);
  7345   001808  0E01               	movlw	1
  7346   00180A  EC88  F012         	call	_RB6_ISR
  7347   00180E                     i2l5485:
  7348                           
  7349                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 82:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7350   00180E  A6F2               	btfss	242,3,c	;volatile
  7351   001810  EF0C  F00C         	goto	i2u438_41
  7352   001814  EF0E  F00C         	goto	i2u438_40
  7353   001818                     i2u438_41:
  7354   001818  EF28  F00C         	goto	i2l5497
  7355   00181C                     i2u438_40:
  7356   00181C  A0F2               	btfss	242,0,c	;volatile
  7357   00181E  EF13  F00C         	goto	i2u439_41
  7358   001822  EF15  F00C         	goto	i2u439_40
  7359   001826                     i2u439_41:
  7360   001826  EF28  F00C         	goto	i2l5497
  7361   00182A                     i2u439_40:
  7362   00182A  BE81               	btfsc	129,7,c	;volatile
  7363   00182C  EF1A  F00C         	goto	i2u440_41
  7364   001830  EF1C  F00C         	goto	i2u440_40
  7365   001834                     i2u440_41:
  7366   001834  EF28  F00C         	goto	i2l5497
  7367   001838                     i2u440_40:
  7368   001838  046D               	decf	_RB7_Flag^0,w,c	;volatile
  7369   00183A  A4D8               	btfss	status,2,c
  7370   00183C  EF22  F00C         	goto	i2u441_41
  7371   001840  EF24  F00C         	goto	i2u441_40
  7372   001844                     i2u441_41:
  7373   001844  EF28  F00C         	goto	i2l5497
  7374   001848                     i2u441_40:
  7375   001848                     
  7376                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 83:             (PORTBbits.RB7 == GPIO_St
      +                          atus_Low) && (RB7_Flag == 1)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 84:       
      +                            RB7_Flag = 0;
  7377   001848  6A6D               	clrf	_RB7_Flag^0,c	;volatile
  7378   00184A                     
  7379                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 85:         RB7_ISR(0);
  7380   00184A  0E00               	movlw	0
  7381   00184C  EC66  F012         	call	_RB7_ISR
  7382   001850                     i2l5497:
  7383                           
  7384                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 87:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7385   001850  A6F2               	btfss	242,3,c	;volatile
  7386   001852  EF2D  F00C         	goto	i2u442_41
  7387   001856  EF2F  F00C         	goto	i2u442_40
  7388   00185A                     i2u442_41:
  7389   00185A  EF4A  F00C         	goto	i2l5509
  7390   00185E                     i2u442_40:
  7391   00185E  A0F2               	btfss	242,0,c	;volatile
  7392   001860  EF34  F00C         	goto	i2u443_41
  7393   001864  EF36  F00C         	goto	i2u443_40
  7394   001868                     i2u443_41:
  7395   001868  EF4A  F00C         	goto	i2l5509
  7396   00186C                     i2u443_40:
  7397   00186C  AE81               	btfss	129,7,c	;volatile
  7398   00186E  EF3B  F00C         	goto	i2u444_41
  7399   001872  EF3D  F00C         	goto	i2u444_40
  7400   001876                     i2u444_41:
  7401   001876  EF4A  F00C         	goto	i2l5509
  7402   00187A                     i2u444_40:
  7403   00187A  506D               	movf	_RB7_Flag^0,w,c	;volatile
  7404   00187C  A4D8               	btfss	status,2,c
  7405   00187E  EF43  F00C         	goto	i2u445_41
  7406   001882  EF45  F00C         	goto	i2u445_40
  7407   001886                     i2u445_41:
  7408   001886  EF4A  F00C         	goto	i2l5509
  7409   00188A                     i2u445_40:
  7410   00188A                     
  7411                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 88:             (PORTBbits.RB7 == GPIO_St
      +                          atus_High) && (RB7_Flag == 0)) {;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 89:      
      +                             RB7_Flag = 1;
  7412   00188A  0E01               	movlw	1
  7413   00188C  6E6D               	movwf	_RB7_Flag^0,c	;volatile
  7414   00188E                     
  7415                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 90:         RB7_ISR(1);
  7416   00188E  0E01               	movlw	1
  7417   001890  EC66  F012         	call	_RB7_ISR
  7418   001894                     i2l5509:
  7419                           
  7420                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 95:     if((1 == PIE1bits.ADIE) && (1 == 
      +                          PIR1bits.ADIF)) {
  7421   001894  AC9D               	btfss	157,6,c	;volatile
  7422   001896  EF4F  F00C         	goto	i2u446_41
  7423   00189A  EF51  F00C         	goto	i2u446_40
  7424   00189E                     i2u446_41:
  7425   00189E  EF5A  F00C         	goto	i2l1316
  7426   0018A2                     i2u446_40:
  7427   0018A2  AC9E               	btfss	158,6,c	;volatile
  7428   0018A4  EF56  F00C         	goto	i2u447_41
  7429   0018A8  EF58  F00C         	goto	i2u447_40
  7430   0018AC                     i2u447_41:
  7431   0018AC  EF5A  F00C         	goto	i2l1316
  7432   0018B0                     i2u447_40:
  7433   0018B0                     
  7434                           ;Mcal/Mcal_interrupt/Mcal_interrupt_manager.c: 96:         ADC_ISR();
  7435   0018B0  ECE2  F013         	call	_ADC_ISR	;wreg free
  7436   0018B4                     i2l1316:
  7437   0018B4  C03E  FFDA         	movff	??_MCAL_InterruptManager+3,fsr2h
  7438   0018B8  C03D  FFD9         	movff	??_MCAL_InterruptManager+2,fsr2l
  7439   0018BC  C03C  FFFB         	movff	??_MCAL_InterruptManager+1,pclatu
  7440   0018C0  C03B  FFFA         	movff	??_MCAL_InterruptManager,pclath
  7441   0018C4  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7442   0018C6  0011               	retfie		f
  7443   0018C8                     __end_of_MCAL_InterruptManager:
  7444                           	callstack 0
  7445                           
  7446 ;; *************** function _RB7_ISR *****************
  7447 ;; Defined at:
  7448 ;;		line 189 in file "Mcal/Mcal_interrupt/Mcal_external_interrupt.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  copySource      1    wreg     unsigned char 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;  copySource      1    0[COMRAM] unsigned char 
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;Total ram usage:        1 bytes
  7467 ;; Hardware stack levels used: 1
  7468 ;; Hardware stack levels required when called: 1
  7469 ;; This function calls:
  7470 ;;		NULL
  7471 ;;		_RB4_isr
  7472 ;;		_RB5_isr
  7473 ;;		_RB6_isr
  7474 ;;		_RB7_isr
  7475 ;; This function is called by:
  7476 ;;		_MCAL_InterruptManager
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	text29
  7481   0024CC                     __ptext29:
  7482                           	callstack 0
  7483   0024CC                     _RB7_ISR:
  7484                           	callstack 22
  7485                           
  7486                           ;incstack = 0
  7487                           ;RB7_ISR@copySource stored from wreg
  7488   0024CC  6E35               	movwf	RB7_ISR@copySource^0,c
  7489   0024CE                     
  7490                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 191:     (INTCONbits.RBIF = 0);
  7491   0024CE  90F2               	bcf	242,0,c	;volatile
  7492   0024D0                     
  7493                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 195:     if(copySource == 0) {
  7494   0024D0  5035               	movf	RB7_ISR@copySource^0,w,c
  7495   0024D2  A4D8               	btfss	status,2,c
  7496   0024D4  EF6E  F012         	goto	i2u103_41
  7497   0024D8  EF70  F012         	goto	i2u103_40
  7498   0024DC                     i2u103_41:
  7499   0024DC  EF87  F012         	goto	i2l2889
  7500   0024E0                     i2u103_40:
  7501   0024E0                     
  7502                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 196:         if(RB7_interruptHandler_Hig
      +                          h) {
  7503   0024E0  5007               	movf	_RB7_interruptHandler_High^0,w,c
  7504   0024E2  1008               	iorwf	(_RB7_interruptHandler_High+1)^0,w,c
  7505   0024E4  B4D8               	btfsc	status,2,c
  7506   0024E6  EF77  F012         	goto	i2u104_41
  7507   0024EA  EF79  F012         	goto	i2u104_40
  7508   0024EE                     i2u104_41:
  7509   0024EE  EF87  F012         	goto	i2l1154
  7510   0024F2                     i2u104_40:
  7511   0024F2                     
  7512                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 197:             RB7_interruptHandler_Hi
      +                          gh();
  7513   0024F2  D802               	call	i2u105_48
  7514   0024F4  EF85  F012         	goto	i2u105_49
  7515   0024F8                     i2u105_48:
  7516   0024F8  0005               	push	
  7517   0024FA  6EFA               	movwf	pclath,c
  7518   0024FC  5007               	movf	_RB7_interruptHandler_High^0,w,c
  7519   0024FE  6EFD               	movwf	tosl,c
  7520   002500  5008               	movf	(_RB7_interruptHandler_High+1)^0,w,c
  7521   002502  6EFE               	movwf	tosh,c
  7522   002504  6AFF               	clrf	tosu,c
  7523   002506  50FA               	movf	pclath,w,c
  7524   002508  0012               	return		;indir
  7525   00250A                     i2u105_49:
  7526                           
  7527                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 198:         }
  7528   00250A  EF87  F012         	goto	i2l1154
  7529   00250E                     i2l2889:
  7530   00250E                     i2l1154:
  7531   00250E  0012               	return		;funcret
  7532   002510                     __end_of_RB7_ISR:
  7533                           	callstack 0
  7534                           
  7535 ;; *************** function _RB6_ISR *****************
  7536 ;; Defined at:
  7537 ;;		line 165 in file "Mcal/Mcal_interrupt/Mcal_external_interrupt.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  copySource      1    wreg     unsigned char 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  copySource      1    0[COMRAM] unsigned char 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;Total ram usage:        1 bytes
  7556 ;; Hardware stack levels used: 1
  7557 ;; Hardware stack levels required when called: 1
  7558 ;; This function calls:
  7559 ;;		NULL
  7560 ;;		_RB4_isr
  7561 ;;		_RB5_isr
  7562 ;;		_RB6_isr
  7563 ;;		_RB7_isr
  7564 ;; This function is called by:
  7565 ;;		_MCAL_InterruptManager
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text30
  7570   002510                     __ptext30:
  7571                           	callstack 0
  7572   002510                     _RB6_ISR:
  7573                           	callstack 22
  7574                           
  7575                           ;incstack = 0
  7576                           ;RB6_ISR@copySource stored from wreg
  7577   002510  6E35               	movwf	RB6_ISR@copySource^0,c
  7578   002512                     
  7579                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 167:     (INTCONbits.RBIF = 0);
  7580   002512  90F2               	bcf	242,0,c	;volatile
  7581   002514                     
  7582                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 171:     if(copySource == 0) {
  7583   002514  5035               	movf	RB6_ISR@copySource^0,w,c
  7584   002516  A4D8               	btfss	status,2,c
  7585   002518  EF90  F012         	goto	i2u100_41
  7586   00251C  EF92  F012         	goto	i2u100_40
  7587   002520                     i2u100_41:
  7588   002520  EFA9  F012         	goto	i2l2875
  7589   002524                     i2u100_40:
  7590   002524                     
  7591                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 172:         if(RB6_interruptHandler_Hig
      +                          h) {
  7592   002524  500B               	movf	_RB6_interruptHandler_High^0,w,c
  7593   002526  100C               	iorwf	(_RB6_interruptHandler_High+1)^0,w,c
  7594   002528  B4D8               	btfsc	status,2,c
  7595   00252A  EF99  F012         	goto	i2u101_41
  7596   00252E  EF9B  F012         	goto	i2u101_40
  7597   002532                     i2u101_41:
  7598   002532  EFA9  F012         	goto	i2l1144
  7599   002536                     i2u101_40:
  7600   002536                     
  7601                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 173:             RB6_interruptHandler_Hi
      +                          gh();
  7602   002536  D802               	call	i2u102_48
  7603   002538  EFA7  F012         	goto	i2u102_49
  7604   00253C                     i2u102_48:
  7605   00253C  0005               	push	
  7606   00253E  6EFA               	movwf	pclath,c
  7607   002540  500B               	movf	_RB6_interruptHandler_High^0,w,c
  7608   002542  6EFD               	movwf	tosl,c
  7609   002544  500C               	movf	(_RB6_interruptHandler_High+1)^0,w,c
  7610   002546  6EFE               	movwf	tosh,c
  7611   002548  6AFF               	clrf	tosu,c
  7612   00254A  50FA               	movf	pclath,w,c
  7613   00254C  0012               	return		;indir
  7614   00254E                     i2u102_49:
  7615                           
  7616                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 174:         }
  7617   00254E  EFA9  F012         	goto	i2l1144
  7618   002552                     i2l2875:
  7619   002552                     i2l1144:
  7620   002552  0012               	return		;funcret
  7621   002554                     __end_of_RB6_ISR:
  7622                           	callstack 0
  7623                           
  7624 ;; *************** function _RB5_ISR *****************
  7625 ;; Defined at:
  7626 ;;		line 141 in file "Mcal/Mcal_interrupt/Mcal_external_interrupt.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  copySource      1    wreg     unsigned char 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  copySource      1    0[COMRAM] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1    wreg      void 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;Total ram usage:        1 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 1
  7647 ;; This function calls:
  7648 ;;		NULL
  7649 ;;		_RB4_isr
  7650 ;;		_RB5_isr
  7651 ;;		_RB6_isr
  7652 ;;		_RB7_isr
  7653 ;; This function is called by:
  7654 ;;		_MCAL_InterruptManager
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text31
  7659   002554                     __ptext31:
  7660                           	callstack 0
  7661   002554                     _RB5_ISR:
  7662                           	callstack 22
  7663                           
  7664                           ;incstack = 0
  7665                           ;RB5_ISR@copySource stored from wreg
  7666   002554  6E35               	movwf	RB5_ISR@copySource^0,c
  7667   002556                     
  7668                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 143:     (INTCONbits.RBIF = 0);
  7669   002556  90F2               	bcf	242,0,c	;volatile
  7670   002558                     
  7671                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 147:     if(copySource == 0) {
  7672   002558  5035               	movf	RB5_ISR@copySource^0,w,c
  7673   00255A  A4D8               	btfss	status,2,c
  7674   00255C  EFB2  F012         	goto	i2u97_41
  7675   002560  EFB4  F012         	goto	i2u97_40
  7676   002564                     i2u97_41:
  7677   002564  EFCB  F012         	goto	i2l2861
  7678   002568                     i2u97_40:
  7679   002568                     
  7680                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 148:         if(RB5_interruptHandler_Hig
      +                          h) {
  7681   002568  500F               	movf	_RB5_interruptHandler_High^0,w,c
  7682   00256A  1010               	iorwf	(_RB5_interruptHandler_High+1)^0,w,c
  7683   00256C  B4D8               	btfsc	status,2,c
  7684   00256E  EFBB  F012         	goto	i2u98_41
  7685   002572  EFBD  F012         	goto	i2u98_40
  7686   002576                     i2u98_41:
  7687   002576  EFCB  F012         	goto	i2l1134
  7688   00257A                     i2u98_40:
  7689   00257A                     
  7690                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 149:             RB5_interruptHandler_Hi
      +                          gh();
  7691   00257A  D802               	call	i2u99_48
  7692   00257C  EFC9  F012         	goto	i2u99_49
  7693   002580                     i2u99_48:
  7694   002580  0005               	push	
  7695   002582  6EFA               	movwf	pclath,c
  7696   002584  500F               	movf	_RB5_interruptHandler_High^0,w,c
  7697   002586  6EFD               	movwf	tosl,c
  7698   002588  5010               	movf	(_RB5_interruptHandler_High+1)^0,w,c
  7699   00258A  6EFE               	movwf	tosh,c
  7700   00258C  6AFF               	clrf	tosu,c
  7701   00258E  50FA               	movf	pclath,w,c
  7702   002590  0012               	return		;indir
  7703   002592                     i2u99_49:
  7704                           
  7705                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 150:         }
  7706   002592  EFCB  F012         	goto	i2l1134
  7707   002596                     i2l2861:
  7708   002596                     i2l1134:
  7709   002596  0012               	return		;funcret
  7710   002598                     __end_of_RB5_ISR:
  7711                           	callstack 0
  7712                           
  7713 ;; *************** function _RB4_ISR *****************
  7714 ;; Defined at:
  7715 ;;		line 117 in file "Mcal/Mcal_interrupt/Mcal_external_interrupt.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  copySource      1    wreg     unsigned char 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  copySource      1    0[COMRAM] unsigned char 
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1    wreg      void 
  7722 ;; Registers used:
  7723 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;Total ram usage:        1 bytes
  7734 ;; Hardware stack levels used: 1
  7735 ;; Hardware stack levels required when called: 1
  7736 ;; This function calls:
  7737 ;;		NULL
  7738 ;;		_RB4_isr
  7739 ;;		_RB5_isr
  7740 ;;		_RB6_isr
  7741 ;;		_RB7_isr
  7742 ;; This function is called by:
  7743 ;;		_MCAL_InterruptManager
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text32
  7748   002598                     __ptext32:
  7749                           	callstack 0
  7750   002598                     _RB4_ISR:
  7751                           	callstack 22
  7752                           
  7753                           ;incstack = 0
  7754                           ;RB4_ISR@copySource stored from wreg
  7755   002598  6E35               	movwf	RB4_ISR@copySource^0,c
  7756   00259A                     
  7757                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 119:     (INTCONbits.RBIF = 0);
  7758   00259A  90F2               	bcf	242,0,c	;volatile
  7759   00259C                     
  7760                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 123:     if(copySource == 0) {
  7761   00259C  5035               	movf	RB4_ISR@copySource^0,w,c
  7762   00259E  A4D8               	btfss	status,2,c
  7763   0025A0  EFD4  F012         	goto	i2u94_41
  7764   0025A4  EFD6  F012         	goto	i2u94_40
  7765   0025A8                     i2u94_41:
  7766   0025A8  EFED  F012         	goto	i2l2847
  7767   0025AC                     i2u94_40:
  7768   0025AC                     
  7769                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 124:         if(RB4_interruptHandler_Hig
      +                          h) {
  7770   0025AC  5013               	movf	_RB4_interruptHandler_High^0,w,c
  7771   0025AE  1014               	iorwf	(_RB4_interruptHandler_High+1)^0,w,c
  7772   0025B0  B4D8               	btfsc	status,2,c
  7773   0025B2  EFDD  F012         	goto	i2u95_41
  7774   0025B6  EFDF  F012         	goto	i2u95_40
  7775   0025BA                     i2u95_41:
  7776   0025BA  EFED  F012         	goto	i2l1124
  7777   0025BE                     i2u95_40:
  7778   0025BE                     
  7779                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 125:             RB4_interruptHandler_Hi
      +                          gh();
  7780   0025BE  D802               	call	i2u96_48
  7781   0025C0  EFEB  F012         	goto	i2u96_49
  7782   0025C4                     i2u96_48:
  7783   0025C4  0005               	push	
  7784   0025C6  6EFA               	movwf	pclath,c
  7785   0025C8  5013               	movf	_RB4_interruptHandler_High^0,w,c
  7786   0025CA  6EFD               	movwf	tosl,c
  7787   0025CC  5014               	movf	(_RB4_interruptHandler_High+1)^0,w,c
  7788   0025CE  6EFE               	movwf	tosh,c
  7789   0025D0  6AFF               	clrf	tosu,c
  7790   0025D2  50FA               	movf	pclath,w,c
  7791   0025D4  0012               	return		;indir
  7792   0025D6                     i2u96_49:
  7793                           
  7794                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 126:         }
  7795   0025D6  EFED  F012         	goto	i2l1124
  7796   0025DA                     i2l2847:
  7797   0025DA                     i2l1124:
  7798   0025DA  0012               	return		;funcret
  7799   0025DC                     __end_of_RB4_ISR:
  7800                           	callstack 0
  7801                           
  7802 ;; *************** function _RB6_isr *****************
  7803 ;; Defined at:
  7804 ;;		line 62 in file "App/Main.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		None
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;Total ram usage:        0 bytes
  7823 ;; Hardware stack levels used: 1
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_RB4_ISR
  7828 ;;		_RB5_ISR
  7829 ;;		_RB6_ISR
  7830 ;;		_RB7_ISR
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text33
  7835   002880                     __ptext33:
  7836                           	callstack 0
  7837   002880                     _RB6_isr:
  7838                           	callstack 22
  7839   002880  0012               	return		;funcret
  7840   002882                     __end_of_RB6_isr:
  7841                           	callstack 0
  7842                           
  7843 ;; *************** function _RB5_isr *****************
  7844 ;; Defined at:
  7845 ;;		line 57 in file "App/Main.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		None
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used: 1
  7865 ;; This function calls:
  7866 ;;		Nothing
  7867 ;; This function is called by:
  7868 ;;		_RB4_ISR
  7869 ;;		_RB5_ISR
  7870 ;;		_RB6_ISR
  7871 ;;		_RB7_ISR
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text34
  7876   002882                     __ptext34:
  7877                           	callstack 0
  7878   002882                     _RB5_isr:
  7879                           	callstack 22
  7880   002882  0012               	return		;funcret
  7881   002884                     __end_of_RB5_isr:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function _RB4_isr *****************
  7885 ;; Defined at:
  7886 ;;		line 52 in file "App/Main.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		None
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;Total ram usage:        0 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_RB4_ISR
  7910 ;;		_RB5_ISR
  7911 ;;		_RB6_ISR
  7912 ;;		_RB7_ISR
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text35
  7917   002884                     __ptext35:
  7918                           	callstack 0
  7919   002884                     _RB4_isr:
  7920                           	callstack 22
  7921   002884  0012               	return		;funcret
  7922   002886                     __end_of_RB4_isr:
  7923                           	callstack 0
  7924                           
  7925 ;; *************** function _RB7_isr *****************
  7926 ;; Defined at:
  7927 ;;		line 67 in file "App/Main.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;		None
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;		None
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		None
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;Total ram usage:        0 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_RB4_ISR
  7951 ;;		_RB5_ISR
  7952 ;;		_RB6_ISR
  7953 ;;		_RB7_ISR
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text36
  7958   002886                     __ptext36:
  7959                           	callstack 0
  7960   002886                     _RB7_isr:
  7961                           	callstack 22
  7962   002886  0012               	return		;funcret
  7963   002888                     __end_of_RB7_isr:
  7964                           	callstack 0
  7965                           
  7966 ;; *************** function _INT2_ISR *****************
  7967 ;; Defined at:
  7968 ;;		line 103 in file "Mcal/Mcal_interrupt/Mcal_external_interrupt.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used: 1
  7988 ;; Hardware stack levels required when called: 1
  7989 ;; This function calls:
  7990 ;;		NULL
  7991 ;;		_INT0_isr
  7992 ;;		_INT1_isr
  7993 ;;		_INT2_isr
  7994 ;; This function is called by:
  7995 ;;		_MCAL_InterruptManager
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text37
  8000   00273A                     __ptext37:
  8001                           	callstack 0
  8002   00273A                     _INT2_ISR:
  8003                           	callstack 22
  8004   00273A                     
  8005                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 105:     (INTCON3bits.INT2IF = 0);
  8006   00273A  92F0               	bcf	240,1,c	;volatile
  8007   00273C                     
  8008                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 109:     if(INT2_interruptHandler) {
  8009   00273C  5015               	movf	_INT2_interruptHandler^0,w,c
  8010   00273E  1016               	iorwf	(_INT2_interruptHandler+1)^0,w,c
  8011   002740  B4D8               	btfsc	status,2,c
  8012   002742  EFA5  F013         	goto	i2u92_41
  8013   002746  EFA7  F013         	goto	i2u92_40
  8014   00274A                     i2u92_41:
  8015   00274A  EFB3  F013         	goto	i2l1114
  8016   00274E                     i2u92_40:
  8017   00274E                     
  8018                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 110:         INT2_interruptHandler();
  8019   00274E  D802               	call	i2u93_48
  8020   002750  EFB3  F013         	goto	i2u93_49
  8021   002754                     i2u93_48:
  8022   002754  0005               	push	
  8023   002756  6EFA               	movwf	pclath,c
  8024   002758  5015               	movf	_INT2_interruptHandler^0,w,c
  8025   00275A  6EFD               	movwf	tosl,c
  8026   00275C  5016               	movf	(_INT2_interruptHandler+1)^0,w,c
  8027   00275E  6EFE               	movwf	tosh,c
  8028   002760  6AFF               	clrf	tosu,c
  8029   002762  50FA               	movf	pclath,w,c
  8030   002764  0012               	return		;indir
  8031   002766                     i2u93_49:
  8032   002766                     i2l1114:
  8033   002766  0012               	return		;funcret
  8034   002768                     __end_of_INT2_ISR:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function _INT1_ISR *****************
  8038 ;; Defined at:
  8039 ;;		line 89 in file "Mcal/Mcal_interrupt/Mcal_external_interrupt.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;Total ram usage:        0 bytes
  8058 ;; Hardware stack levels used: 1
  8059 ;; Hardware stack levels required when called: 1
  8060 ;; This function calls:
  8061 ;;		NULL
  8062 ;;		_INT0_isr
  8063 ;;		_INT1_isr
  8064 ;;		_INT2_isr
  8065 ;; This function is called by:
  8066 ;;		_MCAL_InterruptManager
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text38
  8071   002768                     __ptext38:
  8072                           	callstack 0
  8073   002768                     _INT1_ISR:
  8074                           	callstack 22
  8075   002768                     
  8076                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 91:     (INTCON3bits.INT1IF = 0);
  8077   002768  90F0               	bcf	240,0,c	;volatile
  8078   00276A                     
  8079                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 95:     if(INT1_interruptHandler) {
  8080   00276A  5017               	movf	_INT1_interruptHandler^0,w,c
  8081   00276C  1018               	iorwf	(_INT1_interruptHandler+1)^0,w,c
  8082   00276E  B4D8               	btfsc	status,2,c
  8083   002770  EFBC  F013         	goto	i2u90_41
  8084   002774  EFBE  F013         	goto	i2u90_40
  8085   002778                     i2u90_41:
  8086   002778  EFCA  F013         	goto	i2l1109
  8087   00277C                     i2u90_40:
  8088   00277C                     
  8089                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 96:         INT1_interruptHandler();
  8090   00277C  D802               	call	i2u91_48
  8091   00277E  EFCA  F013         	goto	i2u91_49
  8092   002782                     i2u91_48:
  8093   002782  0005               	push	
  8094   002784  6EFA               	movwf	pclath,c
  8095   002786  5017               	movf	_INT1_interruptHandler^0,w,c
  8096   002788  6EFD               	movwf	tosl,c
  8097   00278A  5018               	movf	(_INT1_interruptHandler+1)^0,w,c
  8098   00278C  6EFE               	movwf	tosh,c
  8099   00278E  6AFF               	clrf	tosu,c
  8100   002790  50FA               	movf	pclath,w,c
  8101   002792  0012               	return		;indir
  8102   002794                     i2u91_49:
  8103   002794                     i2l1109:
  8104   002794  0012               	return		;funcret
  8105   002796                     __end_of_INT1_ISR:
  8106                           	callstack 0
  8107                           
  8108 ;; *************** function _INT0_ISR *****************
  8109 ;; Defined at:
  8110 ;;		line 75 in file "Mcal/Mcal_interrupt/Mcal_external_interrupt.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used: 1
  8130 ;; Hardware stack levels required when called: 1
  8131 ;; This function calls:
  8132 ;;		NULL
  8133 ;;		_INT0_isr
  8134 ;;		_INT1_isr
  8135 ;;		_INT2_isr
  8136 ;; This function is called by:
  8137 ;;		_MCAL_InterruptManager
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text39
  8142   002796                     __ptext39:
  8143                           	callstack 0
  8144   002796                     _INT0_ISR:
  8145                           	callstack 22
  8146   002796                     
  8147                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 77:     (INTCONbits.INT0IF = 0);
  8148   002796  92F2               	bcf	242,1,c	;volatile
  8149   002798                     
  8150                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 81:     if(INT0_interruptHandler) {
  8151   002798  5019               	movf	_INT0_interruptHandler^0,w,c
  8152   00279A  101A               	iorwf	(_INT0_interruptHandler+1)^0,w,c
  8153   00279C  B4D8               	btfsc	status,2,c
  8154   00279E  EFD3  F013         	goto	i2u88_41
  8155   0027A2  EFD5  F013         	goto	i2u88_40
  8156   0027A6                     i2u88_41:
  8157   0027A6  EFE1  F013         	goto	i2l1104
  8158   0027AA                     i2u88_40:
  8159   0027AA                     
  8160                           ;Mcal/Mcal_interrupt/Mcal_external_interrupt.c: 82:         INT0_interruptHandler();
  8161   0027AA  D802               	call	i2u89_48
  8162   0027AC  EFE1  F013         	goto	i2u89_49
  8163   0027B0                     i2u89_48:
  8164   0027B0  0005               	push	
  8165   0027B2  6EFA               	movwf	pclath,c
  8166   0027B4  5019               	movf	_INT0_interruptHandler^0,w,c
  8167   0027B6  6EFD               	movwf	tosl,c
  8168   0027B8  501A               	movf	(_INT0_interruptHandler+1)^0,w,c
  8169   0027BA  6EFE               	movwf	tosh,c
  8170   0027BC  6AFF               	clrf	tosu,c
  8171   0027BE  50FA               	movf	pclath,w,c
  8172   0027C0  0012               	return		;indir
  8173   0027C2                     i2u89_49:
  8174   0027C2                     i2l1104:
  8175   0027C2  0012               	return		;funcret
  8176   0027C4                     __end_of_INT0_ISR:
  8177                           	callstack 0
  8178                           
  8179 ;; *************** function _INT1_isr *****************
  8180 ;; Defined at:
  8181 ;;		line 41 in file "App/Main.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;		None
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1    wreg      void 
  8188 ;; Registers used:
  8189 ;;		None
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;Total ram usage:        0 bytes
  8200 ;; Hardware stack levels used: 1
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_INT0_ISR
  8205 ;;		_INT1_ISR
  8206 ;;		_INT2_ISR
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text40
  8211   002888                     __ptext40:
  8212                           	callstack 0
  8213   002888                     _INT1_isr:
  8214                           	callstack 22
  8215   002888  0012               	return		;funcret
  8216   00288A                     __end_of_INT1_isr:
  8217                           	callstack 0
  8218                           
  8219 ;; *************** function _INT0_isr *****************
  8220 ;; Defined at:
  8221 ;;		line 36 in file "App/Main.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		None
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;Total ram usage:        0 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		_INT0_ISR
  8245 ;;		_INT1_ISR
  8246 ;;		_INT2_ISR
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text41
  8251   00288A                     __ptext41:
  8252                           	callstack 0
  8253   00288A                     _INT0_isr:
  8254                           	callstack 22
  8255   00288A  0012               	return		;funcret
  8256   00288C                     __end_of_INT0_isr:
  8257                           	callstack 0
  8258                           
  8259 ;; *************** function _INT2_isr *****************
  8260 ;; Defined at:
  8261 ;;		line 46 in file "App/Main.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		None
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;Total ram usage:        0 bytes
  8280 ;; Hardware stack levels used: 1
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_INT0_ISR
  8285 ;;		_INT1_ISR
  8286 ;;		_INT2_ISR
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text42
  8291   00288C                     __ptext42:
  8292                           	callstack 0
  8293   00288C                     _INT2_isr:
  8294                           	callstack 22
  8295   00288C  0012               	return		;funcret
  8296   00288E                     __end_of_INT2_isr:
  8297                           	callstack 0
  8298                           
  8299 ;; *************** function _ADC_ISR *****************
  8300 ;; Defined at:
  8301 ;;		line 200 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;		None
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;		None
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;Total ram usage:        0 bytes
  8320 ;; Hardware stack levels used: 1
  8321 ;; Hardware stack levels required when called: 2
  8322 ;; This function calls:
  8323 ;;		NULL
  8324 ;;		_ADC_isr
  8325 ;; This function is called by:
  8326 ;;		_MCAL_InterruptManager
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text43
  8331   0027C4                     __ptext43:
  8332                           	callstack 0
  8333   0027C4                     _ADC_ISR:
  8334                           	callstack 21
  8335   0027C4                     
  8336                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 201:     (PIR1bits.ADIF = 0);
  8337   0027C4  9C9E               	bcf	158,6,c	;volatile
  8338   0027C6                     
  8339                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 202:     if(ADC_interruptHandler) {
  8340   0027C6  501B               	movf	_ADC_interruptHandler^0,w,c
  8341   0027C8  101C               	iorwf	(_ADC_interruptHandler+1)^0,w,c
  8342   0027CA  B4D8               	btfsc	status,2,c
  8343   0027CC  EFEA  F013         	goto	i2u352_41
  8344   0027D0  EFEC  F013         	goto	i2u352_40
  8345   0027D4                     i2u352_41:
  8346   0027D4  EFF8  F013         	goto	i2l822
  8347   0027D8                     i2u352_40:
  8348   0027D8                     
  8349                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 203:         ADC_interruptHandler();
  8350   0027D8  D802               	call	i2u353_48
  8351   0027DA  EFF8  F013         	goto	i2u353_49
  8352   0027DE                     i2u353_48:
  8353   0027DE  0005               	push	
  8354   0027E0  6EFA               	movwf	pclath,c
  8355   0027E2  501B               	movf	_ADC_interruptHandler^0,w,c
  8356   0027E4  6EFD               	movwf	tosl,c
  8357   0027E6  501C               	movf	(_ADC_interruptHandler+1)^0,w,c
  8358   0027E8  6EFE               	movwf	tosh,c
  8359   0027EA  6AFF               	clrf	tosu,c
  8360   0027EC  50FA               	movf	pclath,w,c
  8361   0027EE  0012               	return		;indir
  8362   0027F0                     i2u353_49:
  8363   0027F0                     i2l822:
  8364   0027F0  0012               	return		;funcret
  8365   0027F2                     __end_of_ADC_ISR:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _ADC_isr *****************
  8369 ;; Defined at:
  8370 ;;		line 73 in file "App/Main.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 1
  8391 ;; This function calls:
  8392 ;;		_MCAL_ADC_getConversionResult
  8393 ;; This function is called by:
  8394 ;;		_ADC_ISR
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text44
  8399   00285C                     __ptext44:
  8400                           	callstack 0
  8401   00285C                     _ADC_isr:
  8402                           	callstack 21
  8403   00285C                     
  8404                           ;App/Main.c: 74:     retValu1 = 0;
  8405   00285C  0E00               	movlw	0
  8406   00285E  6E32               	movwf	(_retValu1+1)^0,c
  8407   002860  0E00               	movlw	0
  8408   002862  6E31               	movwf	_retValu1^0,c
  8409   002864                     
  8410                           ;App/Main.c: 75:     MCAL_ADC_getConversionResult(&adc1, &retValu1);
  8411   002864  0ED9               	movlw	low _adc1
  8412   002866  6E35               	movwf	MCAL_ADC_getConversionResult@copyADC^0,c
  8413   002868  0E31               	movlw	low _retValu1
  8414   00286A  6E36               	movwf	MCAL_ADC_getConversionResult@copyConversionResult^0,c
  8415   00286C  ECC2  F00F         	call	_MCAL_ADC_getConversionResult	;wreg free
  8416   002870  0012               	return		;funcret
  8417   002872                     __end_of_ADC_isr:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function _MCAL_ADC_getConversionResult *****************
  8421 ;; Defined at:
  8422 ;;		line 125 in file "Mcal/Mcal_ADC/Mcal_ADC_prog.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  copyADC         1    0[COMRAM] PTR const struct .
  8425 ;;		 -> adc1(7), 
  8426 ;;  copyConversi    1    1[COMRAM] PTR unsigned short 
  8427 ;;		 -> retValu1(2), 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  retValue        1    5[COMRAM] unsigned char 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      unsigned char 
  8432 ;; Registers used:
  8433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;Total ram usage:        6 bytes
  8444 ;; Hardware stack levels used: 1
  8445 ;; This function calls:
  8446 ;;		Nothing
  8447 ;; This function is called by:
  8448 ;;		_ADC_isr
  8449 ;;		_MCAL_ADC_getConversion_Blocking
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           	psect	text45
  8454   001F84                     __ptext45:
  8455                           	callstack 0
  8456   001F84                     _MCAL_ADC_getConversionResult:
  8457                           	callstack 21
  8458   001F84                     
  8459                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 126:     uint8_t retValue = (Std_Return)0;
  8460   001F84  6A3A               	clrf	MCAL_ADC_getConversionResult@retValue^0,c
  8461   001F86                     
  8462                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 127:     if((copyADC == ((void*)0)) && (copyConversionRe
      +                          sult ==((void*)0))) {
  8463   001F86  5035               	movf	MCAL_ADC_getConversionResult@copyADC^0,w,c
  8464   001F88  A4D8               	btfss	status,2,c
  8465   001F8A  EFC9  F00F         	goto	i2u305_41
  8466   001F8E  EFCB  F00F         	goto	i2u305_40
  8467   001F92                     i2u305_41:
  8468   001F92  EF03  F010         	goto	i2l4375
  8469   001F96                     i2u305_40:
  8470   001F96  5036               	movf	MCAL_ADC_getConversionResult@copyConversionResult^0,w,c
  8471   001F98  A4D8               	btfss	status,2,c
  8472   001F9A  EFD1  F00F         	goto	i2u306_41
  8473   001F9E  EFD3  F00F         	goto	i2u306_40
  8474   001FA2                     i2u306_41:
  8475   001FA2  EF03  F010         	goto	i2l4375
  8476   001FA6                     i2u306_40:
  8477   001FA6  EF1D  F010         	goto	i2l764
  8478   001FAA                     i2l4369:
  8479   001FAA  50C3               	movf	195,w,c	;volatile
  8480   001FAC  CFC4 F037          	movff	4036,??_MCAL_ADC_getConversionResult	;volatile
  8481   001FB0  6A38               	clrf	(??_MCAL_ADC_getConversionResult+1)^0,c
  8482   001FB2  C037  F038         	movff	??_MCAL_ADC_getConversionResult,??_MCAL_ADC_getConversionResult+1
  8483   001FB6  6A37               	clrf	??_MCAL_ADC_getConversionResult^0,c
  8484   001FB8  2637               	addwf	??_MCAL_ADC_getConversionResult^0,f,c
  8485   001FBA  0E00               	movlw	0
  8486   001FBC  2238               	addwfc	(??_MCAL_ADC_getConversionResult+1)^0,f,c
  8487   001FBE  5036               	movf	MCAL_ADC_getConversionResult@copyConversionResult^0,w,c
  8488   001FC0  6ED9               	movwf	fsr2l,c
  8489   001FC2  6ADA               	clrf	fsr2h,c
  8490   001FC4  C037  FFDE         	movff	??_MCAL_ADC_getConversionResult,postinc2
  8491   001FC8  C038  FFDD         	movff	??_MCAL_ADC_getConversionResult+1,postdec2
  8492   001FCC  EF1B  F010         	goto	i2l4377
  8493   001FD0                     i2l4371:
  8494   001FD0  50C3               	movf	195,w,c	;volatile
  8495   001FD2  CFC4 F037          	movff	4036,??_MCAL_ADC_getConversionResult	;volatile
  8496   001FD6  6A38               	clrf	(??_MCAL_ADC_getConversionResult+1)^0,c
  8497   001FD8  C037  F038         	movff	??_MCAL_ADC_getConversionResult,??_MCAL_ADC_getConversionResult+1
  8498   001FDC  6A37               	clrf	??_MCAL_ADC_getConversionResult^0,c
  8499   001FDE  2637               	addwf	??_MCAL_ADC_getConversionResult^0,f,c
  8500   001FE0  0E00               	movlw	0
  8501   001FE2  2238               	addwfc	(??_MCAL_ADC_getConversionResult+1)^0,f,c
  8502   001FE4  0E06               	movlw	6
  8503   001FE6  6E39               	movwf	(??_MCAL_ADC_getConversionResult+2)^0,c
  8504   001FE8                     i2u307_45:
  8505   001FE8  3438               	rlcf	(??_MCAL_ADC_getConversionResult+1)^0,w,c
  8506   001FEA  3238               	rrcf	(??_MCAL_ADC_getConversionResult+1)^0,f,c
  8507   001FEC  3237               	rrcf	??_MCAL_ADC_getConversionResult^0,f,c
  8508   001FEE  2E39               	decfsz	(??_MCAL_ADC_getConversionResult+2)^0,f,c
  8509   001FF0  EFF4  F00F         	goto	i2u307_45
  8510   001FF4  5036               	movf	MCAL_ADC_getConversionResult@copyConversionResult^0,w,c
  8511   001FF6  6ED9               	movwf	fsr2l,c
  8512   001FF8  6ADA               	clrf	fsr2h,c
  8513   001FFA  C037  FFDE         	movff	??_MCAL_ADC_getConversionResult,postinc2
  8514   001FFE  C038  FFDD         	movff	??_MCAL_ADC_getConversionResult+1,postdec2
  8515   002002  EF1B  F010         	goto	i2l4377
  8516   002006                     i2l4375:
  8517   002006  5035               	movf	MCAL_ADC_getConversionResult@copyADC^0,w,c
  8518   002008  6ED9               	movwf	fsr2l,c
  8519   00200A  6ADA               	clrf	fsr2h,c
  8520   00200C  0E06               	movlw	6
  8521   00200E  26D9               	addwf	fsr2l,f,c
  8522   002010  B2DF               	btfsc	indf2,1,c
  8523   002012  EF0D  F010         	goto	i2u308_41
  8524   002016  EF10  F010         	goto	i2u308_40
  8525   00201A                     i2u308_41:
  8526   00201A  0E01               	movlw	1
  8527   00201C  EF11  F010         	goto	i2u308_46
  8528   002020                     i2u308_40:
  8529   002020  0E00               	movlw	0
  8530   002022                     i2u308_46:
  8531                           
  8532                           ; Switch size 1, requested type "simple"
  8533                           ; Number of cases is 2, Range of values is 0 to 1
  8534                           ; switch strategies available:
  8535                           ; Name         Instructions Cycles
  8536                           ; simple_byte            7     4 (average)
  8537                           ;	Chosen strategy is simple_byte
  8538   002022  0A00               	xorlw	0	; case 0
  8539   002024  B4D8               	btfsc	status,2,c
  8540   002026  EFE8  F00F         	goto	i2l4371
  8541   00202A  0A01               	xorlw	1	; case 1
  8542   00202C  B4D8               	btfsc	status,2,c
  8543   00202E  EFD5  F00F         	goto	i2l4369
  8544   002032  EF1B  F010         	goto	i2l4377
  8545   002036                     i2l4377:
  8546                           
  8547                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 135:         retValue = (Std_Return)1;
  8548   002036  0E01               	movlw	1
  8549   002038  6E3A               	movwf	MCAL_ADC_getConversionResult@retValue^0,c
  8550   00203A                     i2l764:
  8551                           
  8552                           ;Mcal/Mcal_ADC/Mcal_ADC_prog.c: 137:     return retValue;
  8553   00203A  503A               	movf	MCAL_ADC_getConversionResult@retValue^0,w,c
  8554   00203C  0012               	return		;funcret
  8555   00203E                     __end_of_MCAL_ADC_getConversionResult:
  8556                           	callstack 0
  8557                           
  8558                           	psect	rparam
  8559   000001                     ___rparam_used  equ	1
  8560   000000                     ___param_bank   equ	0
  8561   000000                     __Lparam        equ	__Lrparam
  8562   000000                     __Hparam        equ	__Hrparam
  8563                           
  8564                           	psect	temp
  8565   000074                     btemp:
  8566                           	callstack 0
  8567   000074                     	ds	1
  8568   000074                     int$flags       set	btemp
  8569   000075                     wtemp8          set	btemp+1
  8570   000075                     ttemp5          set	btemp+1
  8571   000078                     ttemp6          set	btemp+4
  8572   00007C                     ttemp7          set	btemp+8
  8573                           
  8574                           	psect	config
  8575                           
  8576                           ; Padding undefined space
  8577   300000                     	org	3145728
  8578   300000  FF                 	db	255
  8579                           
  8580                           ;Config register CONFIG1H @ 0x300001
  8581                           ;	Oscillator Selection bits
  8582                           ;	OSC = HS, HS oscillator
  8583                           ;	Fail-Safe Clock Monitor Enable bit
  8584                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8585                           ;	Internal/External Oscillator Switchover bit
  8586                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8587   300001                     	org	3145729
  8588   300001  02                 	db	2
  8589                           
  8590                           ;Config register CONFIG2L @ 0x300002
  8591                           ;	Power-up Timer Enable bit
  8592                           ;	PWRT = OFF, PWRT disabled
  8593                           ;	Brown-out Reset Enable bits
  8594                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8595                           ;	Brown Out Reset Voltage bits
  8596                           ;	BORV = 1, 
  8597   300002                     	org	3145730
  8598   300002  09                 	db	9
  8599                           
  8600                           ;Config register CONFIG2H @ 0x300003
  8601                           ;	Watchdog Timer Enable bit
  8602                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8603                           ;	Watchdog Timer Postscale Select bits
  8604                           ;	WDTPS = 32768, 1:32768
  8605   300003                     	org	3145731
  8606   300003  1E                 	db	30
  8607                           
  8608                           ; Padding undefined space
  8609   300004                     	org	3145732
  8610   300004  FF                 	db	255
  8611                           
  8612                           ;Config register CONFIG3H @ 0x300005
  8613                           ;	CCP2 MUX bit
  8614                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8615                           ;	PORTB A/D Enable bit
  8616                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8617                           ;	Low-Power Timer1 Oscillator Enable bit
  8618                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8619                           ;	MCLR Pin Enable bit
  8620                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8621   300005                     	org	3145733
  8622   300005  81                 	db	129
  8623                           
  8624                           ;Config register CONFIG4L @ 0x300006
  8625                           ;	Stack Full/Underflow Reset Enable bit
  8626                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8627                           ;	Single-Supply ICSP Enable bit
  8628                           ;	LVP = OFF, Single-Supply ICSP disabled
  8629                           ;	Extended Instruction Set Enable bit
  8630                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8631                           ;	Background Debugger Enable bit
  8632                           ;	DEBUG = 0x1, unprogrammed default
  8633   300006                     	org	3145734
  8634   300006  81                 	db	129
  8635                           
  8636                           ; Padding undefined space
  8637   300007                     	org	3145735
  8638   300007  FF                 	db	255
  8639                           
  8640                           ;Config register CONFIG5L @ 0x300008
  8641                           ;	Code Protection bit
  8642                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8643                           ;	Code Protection bit
  8644                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8645                           ;	Code Protection bit
  8646                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8647                           ;	Code Protection bit
  8648                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8649   300008                     	org	3145736
  8650   300008  0F                 	db	15
  8651                           
  8652                           ;Config register CONFIG5H @ 0x300009
  8653                           ;	Boot Block Code Protection bit
  8654                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8655                           ;	Data EEPROM Code Protection bit
  8656                           ;	CPD = OFF, Data EEPROM not code-protected
  8657   300009                     	org	3145737
  8658   300009  C0                 	db	192
  8659                           
  8660                           ;Config register CONFIG6L @ 0x30000A
  8661                           ;	Write Protection bit
  8662                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8663                           ;	Write Protection bit
  8664                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8665                           ;	Write Protection bit
  8666                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8667                           ;	Write Protection bit
  8668                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8669   30000A                     	org	3145738
  8670   30000A  0F                 	db	15
  8671                           
  8672                           ;Config register CONFIG6H @ 0x30000B
  8673                           ;	Configuration Register Write Protection bit
  8674                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8675                           ;	Boot Block Write Protection bit
  8676                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8677                           ;	Data EEPROM Write Protection bit
  8678                           ;	WRTD = OFF, Data EEPROM not write-protected
  8679   30000B                     	org	3145739
  8680   30000B  E0                 	db	224
  8681                           
  8682                           ;Config register CONFIG7L @ 0x30000C
  8683                           ;	Table Read Protection bit
  8684                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8685                           ;	Table Read Protection bit
  8686                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8687                           ;	Table Read Protection bit
  8688                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8689                           ;	Table Read Protection bit
  8690                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8691   30000C                     	org	3145740
  8692   30000C  0F                 	db	15
  8693                           
  8694                           ;Config register CONFIG7H @ 0x30000D
  8695                           ;	Boot Block Table Read Protection bit
  8696                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8697   30000D                     	org	3145741
  8698   30000D  40                 	db	64
  8699                           tosu	equ	0xFFF
  8700                           tosh	equ	0xFFE
  8701                           tosl	equ	0xFFD
  8702                           stkptr	equ	0xFFC
  8703                           pclatu	equ	0xFFB
  8704                           pclath	equ	0xFFA
  8705                           pcl	equ	0xFF9
  8706                           tblptru	equ	0xFF8
  8707                           tblptrh	equ	0xFF7
  8708                           tblptrl	equ	0xFF6
  8709                           tablat	equ	0xFF5
  8710                           prodh	equ	0xFF4
  8711                           prodl	equ	0xFF3
  8712                           indf0	equ	0xFEF
  8713                           postinc0	equ	0xFEE
  8714                           postdec0	equ	0xFED
  8715                           preinc0	equ	0xFEC
  8716                           plusw0	equ	0xFEB
  8717                           fsr0h	equ	0xFEA
  8718                           fsr0l	equ	0xFE9
  8719                           wreg	equ	0xFE8
  8720                           indf1	equ	0xFE7
  8721                           postinc1	equ	0xFE6
  8722                           postdec1	equ	0xFE5
  8723                           preinc1	equ	0xFE4
  8724                           plusw1	equ	0xFE3
  8725                           fsr1h	equ	0xFE2
  8726                           fsr1l	equ	0xFE1
  8727                           bsr	equ	0xFE0
  8728                           indf2	equ	0xFDF
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           preinc2	equ	0xFDC
  8732                           plusw2	equ	0xFDB
  8733                           fsr2h	equ	0xFDA
  8734                           fsr2l	equ	0xFD9
  8735                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    16
    Data        113
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     52     115
    BANK0           128      3     123
    BANK1           256     12      44
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc1$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    adc2$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    adc3$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    adc4$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), NULL(), 

    ADC_SelectResultFormat@copyADC	PTR const struct . size(1) Largest target is 7
		 -> adc1(BANK0[7]), adc2(BANK0[7]), adc3(BANK0[7]), adc4(BANK0[7]), 

    ADC_SelectResultFormat@copyADC$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    ADC_VolatgeReferance@copyADC	PTR const struct . size(1) Largest target is 7
		 -> adc1(BANK0[7]), adc2(BANK0[7]), adc3(BANK0[7]), adc4(BANK0[7]), 

    ADC_VolatgeReferance@copyADC$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    EX_INT0$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    EX_INT1$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    EX_INT2$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> HALL_LCD_convertU16toSTR@tempString(COMRAM[6]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> HALL_LCD_convertU16toSTR@tempString(COMRAM[6]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    HALL_LCD_4bit_goto@copyLCD	PTR const struct . size(1) Largest target is 6
		 -> LCD1_4Bit(BANK0[6]), 

    HALL_LCD_4bit_init@copyLCD	PTR const struct . size(1) Largest target is 6
		 -> LCD1_4Bit(BANK0[6]), 

    HALL_LCD_4bit_sendChar@copyLCD	PTR const struct . size(1) Largest target is 6
		 -> LCD1_4Bit(BANK0[6]), 

    HALL_LCD_4bit_sendCMD@copyLCD	PTR const struct . size(1) Largest target is 6
		 -> LCD1_4Bit(BANK0[6]), 

    HALL_LCD_4bit_sendSTRPos@copyData	PTR unsigned char  size(2) Largest target is 12
		 -> retLCD_Num(BANK0[12]), STR_1(CODE[7]), STR_2(CODE[7]), STR_3(CODE[7]), 
		 -> STR_4(CODE[7]), 

    HALL_LCD_4bit_sendSTRPos@copyLCD	PTR const struct . size(1) Largest target is 6
		 -> LCD1_4Bit(BANK0[6]), 

    HALL_LCD_convertU16toSTR@copySTR	PTR unsigned char  size(1) Largest target is 12
		 -> retLCD_Num(BANK0[12]), 

    INT0_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), NULL(), 

    INT1_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), NULL(), 

    INT2_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), NULL(), 

    INTERRUPT_INTx_ClearFlag@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    INTERRUPT_INTx_Disable@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    INTERRUPT_INTx_EdgInit@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    INTERRUPT_INTx_Enable@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    INTERRUPT_INTx_PinInit@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    INTERRUPT_INTx_setInterruptHandler@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    LCD_send4Bits@copyLCD	PTR const struct . size(1) Largest target is 6
		 -> LCD1_4Bit(BANK0[6]), 

    LCD_sendEnableSignal4Bits@copyLCD	PTR const struct . size(1) Largest target is 6
		 -> LCD1_4Bit(BANK0[6]), 

    MCAL_ADC_getConversionResult@copyADC	PTR const struct . size(1) Largest target is 7
		 -> adc1(BANK0[7]), 

    MCAL_ADC_getConversionResult@copyADC$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    MCAL_ADC_getConversionResult@copyConversionResult	PTR unsigned short  size(1) Largest target is 2
		 -> retValu1(COMRAM[2]), 

    MCAL_ADC_init@copyADC	PTR const struct . size(1) Largest target is 7
		 -> adc1(BANK0[7]), adc2(BANK0[7]), adc3(BANK0[7]), adc4(BANK0[7]), 

    MCAL_ADC_init@copyADC$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    MCAL_ADC_SelectChanal@copyADC	PTR const struct . size(1) Largest target is 7
		 -> adc1(BANK0[7]), 

    MCAL_ADC_SelectChanal@copyADC$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    MCAL_ADC_StartConversion@copyADC	PTR const struct . size(1) Largest target is 7
		 -> adc1(BANK0[7]), 

    MCAL_ADC_startConversion_Interrupt@copyADC	PTR const struct . size(1) Largest target is 7
		 -> adc1(BANK0[7]), 

    MCAL_GPIO_init@copyPinCFG	PTR const struct . size(1) Largest target is 6
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_4Bit(BANK0[6]), LCD1_4Bit$LCD_D(BANK0[4]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    Mcal_GPIO_initPinDirection@copyPinCFG	PTR const struct . size(1) Largest target is 6
		 -> HALL_BTN_init@copyBTN(COMRAM[2]), HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_4Bit(BANK0[6]), 
		 -> LCD1_4Bit$LCD_D(BANK0[4]), MCAL_INTERRUPT_INTx_init@copyINTx(COMRAM[2]), objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    MCAL_GPIO_writePinStatus@copyPinCFG	PTR const struct . size(1) Largest target is 6
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Led_trunOFF@objLed(COMRAM[1]), HALL_Led_trunON@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), 
		 -> HALL_Relay_turnOFF@objPin(COMRAM[1]), HALL_Relay_turnON@objPin(COMRAM[1]), LCD1_4Bit(BANK0[6]), LCD1_4Bit$LCD_D(BANK0[4]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    MCAL_INTERRUPT_INTx_init@copyINTx$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    MCAL_INTERRUPT_RBx_init@copyRBx$EX_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 

    MCAL_INTERRUPT_RBx_init@copyRBx$EX_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    memset@dest	PTR void  size(1) Largest target is 12
		 -> retLCD_Num(BANK0[12]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> retLCD_Num(BANK0[12]), 

    RB4_interruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 
		 -> NULL(), 

    RB4_interruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_interruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 
		 -> NULL(), 

    RB5_interruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_interruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 
		 -> NULL(), 

    RB6_interruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_interruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 
		 -> NULL(), 

    RB7_interruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB_4$EX_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 

    RB_4$EX_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB_5$EX_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 

    RB_5$EX_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB_6$EX_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 

    RB_6$EX_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB_7$EX_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 

    RB_7$EX_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RetValue_BTN	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    RetValue_KeyPad	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3457$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> HALL_LCD_convertU16toSTR@tempString(COMRAM[6]), 

    S3457$source	PTR const unsigned char  size(2) Largest target is 0

    S40$EX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_isr(), INT1_isr(), INT2_isr(), 

    S48$EX_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_isr(), RB5_isr(), RB6_isr(), RB7_isr(), 

    S48$EX_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S85$ADCinterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_isr(), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> retLCD_Num(BANK0[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> HALL_LCD_convertU16toSTR@tempString(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    _main->_HALL_LCD_convertU16toSTR
    _MCAL_ADC_startConversion_Interrupt->_MCAL_ADC_SelectChanal
    _MCAL_ADC_SelectChanal->_ADC_input_chanal_configuration
    _MCAL_ADC_init->_ADC_input_chanal_configuration
    _HALL_LCD_convertU16toSTR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _HALL_LCD_4bit_sendSTRPos->_HALL_LCD_4bit_goto
    _HALL_LCD_4bit_sendChar->_LCD_send4Bits
    _HALL_LCD_4bit_goto->_HALL_LCD_4bit_sendCMD
    _HALL_LCD_4bit_init->_HALL_LCD_4bit_sendCMD
    _MCAL_GPIO_init->_MCAL_GPIO_writePinStatus
    _HALL_LCD_4bit_sendCMD->_LCD_send4Bits
    _LCD_sendEnableSignal4Bits->_MCAL_GPIO_writePinStatus
    _LCD_send4Bits->_MCAL_GPIO_writePinStatus

Critical Paths under _MCAL_InterruptManager in COMRAM

    _ADC_isr->_MCAL_ADC_getConversionResult

Critical Paths under _main in BANK0

    _main->_HALL_LCD_convertU16toSTR

Critical Paths under _MCAL_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _HALL_LCD_convertU16toSTR->_sprintf

Critical Paths under _MCAL_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MCAL_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MCAL_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _MCAL_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _MCAL_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _MCAL_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _MCAL_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _MCAL_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _MCAL_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _MCAL_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _MCAL_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _MCAL_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _MCAL_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _MCAL_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _MCAL_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12322
                 _HALL_LCD_4bit_init
           _HALL_LCD_4bit_sendSTRPos
           _HALL_LCD_convertU16toSTR
                      _MCAL_ADC_init
 _MCAL_ADC_startConversion_Interrupt
 ---------------------------------------------------------------------------------
 (1) _MCAL_ADC_startConversion_Interrupt                   3     1      2     271
                                             17 COMRAM     2     0      2
              _MCAL_ADC_SelectChanal
           _MCAL_ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _MCAL_ADC_StartConversion                             2     1      1      48
                                             10 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _MCAL_ADC_SelectChanal                                4     2      2     123
                                             13 COMRAM     4     2      2
     _ADC_input_chanal_configuration
 ---------------------------------------------------------------------------------
 (1) _MCAL_ADC_init                                        4     3      1     285
                                             13 COMRAM     3     2      1
             _ADC_SelectResultFormat
               _ADC_VolatgeReferance
     _ADC_input_chanal_configuration
 ---------------------------------------------------------------------------------
 (3) _ADC_input_chanal_configuration                       3     3      0      29
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_VolatgeReferance                                 1     0      1      23
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectResultFormat                               1     0      1      23
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_convertU16toSTR                            11     8      3    4442
                                             45 COMRAM     7     7      0
                                              0 BANK0      3     0      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6    3688
                                             39 COMRAM     6     0      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     1      5    3206
                                             33 COMRAM     6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     8      5    2906
                                             20 COMRAM    13     8      5
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     452
                                             10 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     132
                                             16 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     618
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     642
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     242
                                             10 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_4bit_sendSTRPos                             6     1      5    4118
                                             22 COMRAM     5     0      5
                 _HALL_LCD_4bit_goto
             _HALL_LCD_4bit_sendChar
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_4bit_sendChar                               3     1      2    1839
                                             17 COMRAM     2     0      2
                      _LCD_send4Bits
          _LCD_sendEnableSignal4Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_4bit_goto                                   4     1      3    2095
                                             19 COMRAM     3     0      3
              _HALL_LCD_4bit_sendCMD
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_4bit_init                                   4     3      1    3206
                                             19 COMRAM     3     2      1
              _HALL_LCD_4bit_sendCMD
                     _MCAL_GPIO_init
 ---------------------------------------------------------------------------------
 (2) _MCAL_GPIO_init                                       2     1      1     983
                                             15 COMRAM     2     1      1
           _MCAL_GPIO_writePinStatus
         _Mcal_GPIO_initPinDirection
 ---------------------------------------------------------------------------------
 (3) _Mcal_GPIO_initPinDirection                           4     3      1     403
                                             10 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _HALL_LCD_4bit_sendCMD                                3     1      2    1859
                                             17 COMRAM     2     0      2
                      _LCD_send4Bits
          _LCD_sendEnableSignal4Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _LCD_sendEnableSignal4Bits                            2     1      1     521
                                             15 COMRAM     1     0      1
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _LCD_send4Bits                                        3     1      2     661
                                             15 COMRAM     2     0      2
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _MCAL_GPIO_writePinStatus                             5     3      2     466
                                             10 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _MCAL_InterruptManager                                4     4      0     258
                                              6 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
                                NULL *
                            _RB4_isr *
                            _RB5_isr *
                            _RB6_isr *
                            _RB7_isr *
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
                                NULL *
                            _RB4_isr *
                            _RB5_isr *
                            _RB6_isr *
                            _RB7_isr *
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
                                NULL *
                            _RB4_isr *
                            _RB5_isr *
                            _RB6_isr *
                            _RB7_isr *
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
                                NULL *
                            _RB4_isr *
                            _RB5_isr *
                            _RB6_isr *
                            _RB7_isr *
 ---------------------------------------------------------------------------------
 (9) _RB7_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RB6_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RB5_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RB4_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
                                NULL *
                           _INT0_isr *
                           _INT1_isr *
                           _INT2_isr *
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
                                NULL *
                           _INT0_isr *
                           _INT1_isr *
                           _INT2_isr *
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
                                NULL *
                           _INT0_isr *
                           _INT1_isr *
                           _INT2_isr *
 ---------------------------------------------------------------------------------
 (9) _INT2_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _INT1_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _INT0_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0     138
                                NULL *
                            _ADC_isr *
 ---------------------------------------------------------------------------------
 (9) _ADC_isr                                              0     0      0     138
       _MCAL_ADC_getConversionResult
 ---------------------------------------------------------------------------------
 (10) _MCAL_ADC_getConversionResult                        6     4      2     138
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HALL_LCD_4bit_init
     _HALL_LCD_4bit_sendCMD
       _LCD_send4Bits
         _MCAL_GPIO_writePinStatus
       _LCD_sendEnableSignal4Bits
         _MCAL_GPIO_writePinStatus
       _MCAL_GPIO_writePinStatus
     _MCAL_GPIO_init
       _MCAL_GPIO_writePinStatus
       _Mcal_GPIO_initPinDirection
   _HALL_LCD_4bit_sendSTRPos
     _HALL_LCD_4bit_goto
       _HALL_LCD_4bit_sendCMD
     _HALL_LCD_4bit_sendChar
       _LCD_send4Bits
       _LCD_sendEnableSignal4Bits
       _MCAL_GPIO_writePinStatus
   _HALL_LCD_convertU16toSTR
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _MCAL_ADC_init
     _ADC_SelectResultFormat
     _ADC_VolatgeReferance
     _ADC_input_chanal_configuration
   _MCAL_ADC_startConversion_Interrupt
     _MCAL_ADC_SelectChanal
       _ADC_input_chanal_configuration
     _MCAL_ADC_StartConversion

 _MCAL_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_isr *
       _MCAL_ADC_getConversionResult
   _INT0_ISR
     NULL(Fake) *
     _INT0_isr *
     _INT1_isr *
     _INT2_isr *
   _INT1_ISR
     NULL(Fake) *
     _INT0_isr *
     _INT1_isr *
     _INT2_isr *
   _INT2_ISR
     NULL(Fake) *
     _INT0_isr *
     _INT1_isr *
     _INT2_isr *
   _RB4_ISR
     NULL(Fake) *
     _RB4_isr *
     _RB5_isr *
     _RB6_isr *
     _RB7_isr *
   _RB5_ISR
     NULL(Fake) *
     _RB4_isr *
     _RB5_isr *
     _RB6_isr *
     _RB7_isr *
   _RB6_ISR
     NULL(Fake) *
     _RB4_isr *
     _RB5_isr *
     _RB6_isr *
     _RB7_isr *
   _RB7_ISR
     NULL(Fake) *
     _RB4_isr *
     _RB5_isr *
     _RB6_isr *
     _RB7_isr *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     12      44     17.2%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      3     123     96.1%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     52     115     91.3%
BITBIGSFRlh         64      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     278      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Nov 17 07:26:19 2024

                                ??_MCAL_GPIO_init 0045                                                l75 1DCC  
                                    ___awdiv@sign 0044                  HALL_LCD_4bit_sendSTRPos@copyData 004E  
                  HALL_LCD_4bit_sendChar@copyData 0047                                               l341 23F0  
                                             l336 1D32                                               l346 23A4  
                                             l367 2176                                               l456 243C  
                                             l448 2284                                               l800 1C5A  
                                             l378 21D4                                               l459 285A  
                                             l379 21FE                                               l804 25E0  
                                             l812 248A                                               l740 1B82  
                                             l910 1322                                               l806 25E6  
                                             l734 1AB2                                               l750 265C  
                                             l807 261C                                               l816 2492  
                                             l737 1B22                                               l753 2832  
                                             l818 24CA                                               l754 2838  
                                             l739 1B28                                               l755 283A  
                                             l782 281A                                               l961 160A  
                                             l994 26D4                                               _abs 26D6  
                       ?_HALL_LCD_convertU16toSTR 00F8                                   __end_of_ADC_ISR 27F2  
                                    ___awmod@sign 0044                                               tosl 0FFD  
                                             wreg 0FE8                                   __end_of_ADC_isr 2872  
            __end_of_MCAL_ADC_getConversionResult 203E                      _MCAL_ADC_getConversionResult 1F84  
                         ??_MCAL_InterruptManager 003B                                   __end_of_RB4_ISR 25DC  
                                 __end_of_RB5_ISR 2598                                   __end_of_RB6_ISR 2554  
                           ?_ADC_VolatgeReferance 003F                                   __end_of_RB7_ISR 2510  
                                            ?_abs 0045                                              l2122 2708  
                                            l2115 2484                                              l2109 1A9C  
                                            l2134 1F82                                              l2119 26F0  
                                            l2071 269C                                              l2064 2738  
                                            l2145 287E                                              l1631 20EA  
                                            l4121 1338                                              l1618 1EC8  
                                            l4131 13C2                                              l4123 133E  
                                            l4141 1472                                              l4133 13EE  
                                            l4125 136A                                              l4301 283C  
                                            l4119 1324                                              l4303 283C  
                                            l4161 15A8                                              l4153 1524  
                                            l4145 14A0                                              l4137 141C  
                                            l4129 1398                                              l4305 2848  
                                            l4401 1158                                              l6001 20DA  
                                            l4155 154E                                              l4147 14CA  
                                            l4139 1446                                              l4307 284E  
                                            l4411 120C                                              l4403 1186  
                                            l6003 20E2                                              l6011 1EEE  
                                            l4157 157A                                              l4149 14F6  
                                            l4165 15D2                                              l6021 26D6  
                                            l6013 1EF8                                              l6101 2678  
                                            l4167 1608                                              l4423 12BE  
                                            l4415 1238                                              l4407 11B2  
                                            l4511 23A4                                              l4503 235A  
                                            l6023 26E4                                              l6015 1F16  
                                            l6007 1ECA                                              l6031 1900  
                                            l6103 2690                                              l6111 220C  
                                            l4441 23F0                                              l4433 23A6  
                                            l4417 1264                                              l4409 11DE  
                                            l4521 218C                                              l4505 235A  
                                            l6017 1F4C                                              l6009 1EDC  
                                            l6041 1964                                              l6033 1904  
                                            l6025 18C8                                              l6121 2254  
                                            l6113 220E                                              l4601 1AB4  
                                            l4291 23F2                                              l4435 23A6  
                                            l4419 1292                                              l4427 12EA  
                                            l4523 219E                                              l4531 21D8  
                                            l4515 2178                                              l4507 236A  
                                            l6051 19D6                                              l6043 196E  
                                            l6035 190E                                              l6027 18EC  
                                            l6123 226A                                              l6115 2220  
                                            l6107 2200                                              l4451 1B96  
                                            l4611 1B1C                                              l4603 1B06  
                                            l6131 1D34                                              l4293 2402  
                                            l4437 23B6                                              l4429 1320  
                                            l4381 1032                                              l4525 21B0  
                                            l4533 21FE                                              l4517 2178  
                                            l4509 236E                                              l6061 1A2E  
                                            l6053 19E8                                              l6045 1972  
                                            l6037 192C                                              l6029 18F4  
                                            l6125 226C                                              l6117 2224  
                                            l6109 2200                                              l4461 1BB4  
                                            l4453 1B9C                                              l4445 1B86  
                                            l4621 1B78                                              l4605 1B16  
                                            l6141 1DD8                                              l6133 1D5C  
                                            l4295 2414                                              l4439 23BA  
                                            l4391 10A6                                              l4383 1046  
                                            l4527 21C2                                              l4519 2188  
                                            l6063 1A50                                              l6055 19F8  
                                            l6047 1986                                              l6039 194A  
                                            l6071 1A74                                              l6127 2284  
                                            l6119 223C                                              l4471 1BD2  
                                            l4463 1BBA                                              l4455 1BA2  
                                            l4447 1B8A                                              l4623 1B80  
                                            l4615 1B2E                                              l4607 1B18  
                                            l4703 2806                                              l6143 1DEA  
                                            l6135 1D78                                              l6321 14B4  
                                            l4297 2428                                              l4289 23F2  
                                            l4393 10D2                                              l4385 104C  
                                            l4641 1C80                                              l4633 1C5C  
                                            l6057 1A08                                              l6065 1A52  
                                            l6049 19BA                                              l6081 245E  
                                            l4561 25EC                                              l4465 1BC0  
                                            l4457 1BA8                                              l4449 1B90  
                                            l4625 1B82                                              l6313 1B4C  
                                            l4617 1B62                                              l4609 1B1A  
                                            l4705 2812                                              l6137 1D94  
                                            l6323 1538                                              l4395 1100  
                                            l4387 107A                                              l4651 1C90  
                                            l4635 1C5C                                              l6091 271C  
                                            l6059 1A18                                              l6067 1A68  
                                            l6083 247C                                              l4563 2486  
                                            l6315 1BEC                                              l4467 1BC6  
                                            l4459 1BAE                                              l4475 1BD8  
                                            l4619 1B70                                              l4571 2620  
                                            l4707 281A                                              l6139 1DB0  
                                            l6325 15BC                                              l6317 13AC  
                                            l4661 1CDE                                              l4653 1CA0  
                                            l4637 1C6C                                              l6093 271E  
                                            l6077 243E                                              l4557 25DC  
                                            l4469 1BCC                                              l4581 265A  
                                            l6319 1430                                              l4399 112C  
                                            l4495 269E                                              l4671 1D1A  
                                            l4663 1CEA                                              l4655 1CB0  
                                            l4647 1C82                                              l4639 1C70  
                                            l6087 270A                                              l6079 2446  
                                            l6095 265E                                              l4567 249A  
                                            l4575 2634                                              l4591 2834  
                                            l4497 26AE                                              l4673 1D26  
                                            l4665 1CF6                                              l4657 1CBC  
                                            l4649 1C8E                                              l4681 20EC  
                                            l6089 2712                                              l6097 2668  
                                            l4577 2650                                              l4569 261E  
                                            l4585 281C                                              l4499 26B2  
                                            l4675 1D32                                              l4667 1D02  
                                            l4659 1CD8                                              l4691 2144  
                                            l4683 20FC                                              l6099 2670  
                                            l4595 1A9E                                              l4579 2656  
                                            l4587 281E                                              l4669 1D0E  
                                            l4693 2176                                              l4685 2100  
                                            l4597 1A9E                                   __end_of_RB4_isr 2886  
                                            l4687 2114                                              l4679 20EC  
                                            l4689 2140                                              l4697 27F2  
                                            l5931 1E18                                              l4699 27F2  
                                            l5941 1E3E                                              l5933 1E20  
                                            l5951 1E76                                              l5943 1E46  
                                            l5935 1E24                                              l5927 1E08  
                                            l5961 1EA2                                              l5953 1E7C  
                                            l5945 1E58                                              l5937 1E32  
                                            l5929 1E0A                                              l5955 1E92  
                                            l5947 1E60                                              l5963 1EA8  
                                            l5939 1E3A                                              l5971 203E  
                                            l5965 1EB8                                              l5957 1E9A  
                                            l5949 1E68                                              l5981 2068  
                                            l5973 2040                                   __end_of_RB5_isr 2884  
                                            l5967 1EC0                                              l5959 1E9C  
                                            l5991 20A0                                              l5983 2070  
                                            l5975 204E                                              l5993 20B6  
                                            l5985 2082                                              l5977 2056  
                                            l5995 20BE                                              l5987 208A  
                                            l5979 205A                                              l5997 20C4  
                                            l5989 2092                                              l5999 20CA  
                                 __end_of_RB6_isr 2882                                              STR_1 1011  
                                            STR_2 1018                                              STR_3 101F  
                                            STR_4 1026                                              STR_5 102D  
                                            STR_6 102D                                   __end_of_RB7_isr 2888  
                                            _BTN1 00C1                                              _LATA 0F89  
                                            _LATB 0F8A                                              _LATC 0F8B  
                                            u3120 10BC                                              u3104 106A  
                                            _LATD 0F8C                                              u3121 10B6  
                                            u3105 1066                                              _LATE 0F8D  
                                            u3210 124E                                              u3114 1098  
                                            u3211 1248                                              u3115 1094  
                                            u3204 122A                                              u3205 1226  
                                            u3150 1142                                              u3134 10F0  
                                            u3126 10BE                                              u3310 2606  
                                            u3151 113C                                              u3135 10EC  
                                            u3311 2600                                              u3240 12D4  
                                            u3224 1282                                              u3216 1250  
                                            u3144 111E                                              u3400 2166  
                                            u5000 192C                                              u3320 24B4  
                                            u3241 12CE                                              u3225 127E  
                                            u3145 111A                                              u5001 1928  
                                            u3321 24AE                                              u3250 23B6  
                                            u3234 12B0                                              u3090 1046  
                                            u3410 2176                                              u5010 194A  
                                            u3330 2630                                              u3251 23B2  
                                            u3235 12AC                                              u3091 1042  
                                            u3411 2172                                              u5011 1946  
                                            u3331 262C                                              u3180 11C8  
                                            u3164 1176                                              u3156 1144  
                                            u5100 2738                                              u5020 1982  
                                            u3316 2608                                              u3340 282E  
                                            u3420 2802                                              u3181 11C2  
                                            u3165 1172                                              u5101 2734  
                                            u5021 197C                                              u3341 282A  
                                            u3421 27FE                                              u3246 12D6  
                                            u3174 11A4                                              u3270 26AE  
                                            u5030 1984                                              u3326 24B6  
                                            u3350 1AAE                                              u3175 11A0  
                                            u3271 26AA                                              u3407 215C  
                                            u5111 2206                                              u3351 1AAA  
                                            u2704 13E0                                              u3360 1C6C  
                                            u3280 236A                                              u5040 19E8  
                                            u5120 2220                                              u2705 13DC  
                                            u3361 1C68                                              u3281 2366  
                                            u5041 19E4                                              u5121 221C  
                                            u2714 140C                                              u3194 11FC  
                                            u3186 11CA                                              u3370 1CA0  
                                            u3290 2188                                              u5050 19F8  
                                            u5130 2284                                              u2715 1408  
                                            u3195 11F8                                              u3371 1C9C  
                                            u3291 2184                                              u5051 19F4  
                                            u5131 2280                                              u2724 1464  
                                            u3380 20FC                                              u5060 1A08  
                                            u2725 1460                                              u3381 20F8  
                                            u5061 1A04                                              u2734 1490  
                                            u2670 1338                                              u3390 213A  
                                            u5070 1A18                                              u2735 148C  
                                            u2671 1334                                              u5071 1A14  
                                            u2744 14E8                                              u5080 1A64  
                                            u2745 14E4                                              u5081 1A60  
                                            u2754 1514                                              u5090 247C  
                                            u2755 1510                                              u5091 2478  
                                            u2764 156C                                              u2684 135C  
                                            u2765 1568                                              u2685 1358  
                                            u3397 2130                                              u2774 1598  
                                            u2694 1388                                              u2775 1594  
                                            u2695 1384                                              u5167 1CA6  
                                            u5177 1CC2                                              u5187 1CDA  
                                            u4820 1E18                                              u4900 2082  
                                            u4821 1E14                                              u4901 207E  
                                            u4830 1E32                                              u4910 20A0  
                                            u4831 1E2E                                              u4911 209C  
                                            u4840 1E58                                              u4920 20B6  
                                            u4841 1E54                                              u4921 20B2  
                                            u4850 1E76                                              u4930 20DA  
                                            u4851 1E72                                              u4931 20D6  
                                            u4860 1E92                                              u4940 1EDC  
                                            u4861 1E8E                                              u4941 1ED8  
                                            u4870 1EB8                                              u4950 1EEE  
                                            u4871 1EB4                                              u4951 1EEA  
                                            u4880 204E                                              u4960 1F16  
                                            i2l81 288A                                              u4881 204A  
                                            u4961 1F12                                              i2l90 2884  
                                            u4890 2068                                              u4970 1F4C  
                                            u4891 2064                                              u4971 1F48  
                                            i2l84 2888                                              u4980 26E4  
                                            i2l93 2882                                              u4981 26E0  
                                            u4990 18EC                                              i2l87 288C  
                                            u4991 18E8                                              i2l96 2880  
                                            _RB_4 00A4                                              i2l99 2886  
                                            _RB_5 009E                                              _RB_6 0098  
                                            _RB_7 0092                                              _Led1 0073  
                                            _Led2 0072                                              _Led3 0071  
                       _RB6_interruptHandler_High 000B                                              _Seg1 00BC  
                                            _adc1 00D9                                              _adc2 00D2  
                                            _adc3 00CB                                              _adc4 00C4  
                                            abs@a 0045                                              _dbuf 0100  
                                            _main 1D34                                              _prec 0003  
                                            fsr0h 0FEA                                              fsr1h 0FE2  
                                            indf0 0FEF                                              fsr2h 0FDA  
                                            fsr0l 0FE9                                              indf1 0FE7  
                                            indf2 0FDF                                              fsr1l 0FE1  
                                            fsr2l 0FD9                                              btemp 0074  
                                            start 000E                            ?_HALL_LCD_4bit_sendCMD 0046  
                        _RB5_interruptHandler_Low 000D                                      ___param_bank 0000  
                      ??_MCAL_ADC_StartConversion 0040                                             ??_abs 0047  
                                __end_of_INT0_ISR 27C4                                  __end_of_INT1_ISR 2796  
                                __end_of_INT2_ISR 2768                                  __end_of_INT0_isr 288C  
                                __end_of_INT1_isr 288A                                  __end_of_INT2_isr 288E  
                       ?_HALL_LCD_4bit_sendSTRPos 004B                                             ?_main 0035  
                                 __end_of___awdiv 1ECA                                             _EEADR 0FA9  
                                 __end_of___awmod 20EC                                   ___awdiv@divisor 0041  
                                           i2l102 2870                                             i2l822 27F0  
                                           i2l764 203A                                             i2l769 203C  
                                 ___awdiv@counter 0043                                      vfpfcnvrt@fmt 004B  
                                           _PORTA 0F80                                             _PORTB 0F81  
                                           _PORTC 0F82                                             _PORTD 0F83  
                                           _PORTE 0F84                                             _TRISA 0F92  
                                           _TRISB 0F93                                             _TRISC 0F94  
                                           _TRISD 0F95                                             _TRISE 0F96  
                      ?_LCD_sendEnableSignal4Bits 0044                            _ADC_SelectResultFormat 25DC  
                                           _flags 0029                                             _fputc 1ECA  
                   ?_MCAL_ADC_getConversionResult 0035        __end_of_MCAL_ADC_startConversion_Interrupt 281C  
            ??_MCAL_ADC_startConversion_Interrupt 0048               ?_MCAL_ADC_startConversion_Interrupt 0046  
              _MCAL_ADC_startConversion_Interrupt 27F2                                             _width 0001  
                                           _putch 287E                                             pclath 0FFA  
                                           pclatu 0FFB                                             tablat 0FF5  
                           LCD_send4Bits@copyData 0045                                             ttemp5 0075  
                                           ttemp6 0078                                             ttemp7 007C  
                                           status 0FD8                                             wtemp8 0075  
                                 __end_of_sprintf 269E                           ?_HALL_LCD_4bit_sendChar 0046  
                                  _objPin_motor_1 0034                                    _objPin_motor_2 0033  
                                 __initialization 2286                                      __end_of_main 1E08  
                                   _LCD_send4Bits 23F2                  __end_of_MCAL_GPIO_writePinStatus 160C  
                                       ??_ADC_ISR 003B                                         ??_ADC_isr 003B  
                                          ??_main 0069                                     __activetblptr 0003  
                   __end_of_MCAL_ADC_SelectChanal 265E                                         ??_RB4_ISR 0035  
                                       ??_RB5_ISR 0035                                         ??_RB6_ISR 0035  
                                       ??_RB7_ISR 0035                                         ??_RB4_isr 0035  
                                       ??_RB5_isr 0035                                         ??_RB6_isr 0035  
                                       ??_RB7_isr 0035                 __end_of_LCD_sendEnableSignal4Bits 285C  
                          ??_ADC_VolatgeReferance 0040                                            ?_fputc 003F  
                                          _ADRESH 0FC4                                            _EEADRH 0FAA  
                                          _ADRESL 0FC3                                            _EEDATA 0FA8  
                                          _EECON2 0FA7                                  ___awdiv@dividend 003F  
                                          ?_putch 0035                                            i2l1104 27C2  
                                          i2l1114 2766                                            i2l1124 25DA  
                                          i2l1109 2794                                            i2l1134 2596  
                                          i2l1144 2552                                            i2l1154 250E  
                                          i2l1316 18B4                                            i2l2821 2796  
                                          i2l2823 2798                                            i2l2831 277C  
                                          i2l4361 1F84                                            i2l2825 27AA  
                                          i2l2833 273A                                            i2l2841 259C  
                                          i2l5401 163E                                            i2l4371 1FD0  
                                          i2l4363 1F86                                            i2l2827 2768  
                                          i2l2835 273C                                            i2l2843 25AC  
                                          i2l5411 167A                                            i2l5403 164C  
                                          i2l4365 1F96                                            i2l2829 276A  
                                          i2l2837 274E                                            i2l2845 25BE  
                                          i2l2861 2596                                            i2l2853 2556  
                                          i2l5501 186C                                            i2l5421 16B8  
                                          i2l5413 167E                                            i2l5405 165A  
                                          i2l4375 2006                                            i2l2847 25DA  
                                          i2l2839 259A                                            i2l2855 2558  
                                          i2l2871 2524                                            i2l5511 18A2  
                                          i2l5503 187A                                            i2l5431 16EA  
                                          i2l5423 16BA                                            i2l5415 168C  
                                          i2l5407 165E                                            i2l4377 2036  
                                          i2l4369 1FAA                                            i2l2857 2568  
                                          i2l2873 2536                                            i2l2881 24CE  
                                          i2l5513 18B0                                            i2l5505 188A  
                                          i2l5441 1720                                            i2l5433 16FA  
                                          i2l5417 169A                                            i2l5425 16C0  
                                          i2l5409 166C                                            i2l4491 285C  
                                          i2l2859 257A                                            i2l2875 2552  
                                          i2l2867 2512                                            i2l2883 24D0  
                                          i2l5507 188E                                            i2l5451 1754  
                                          i2l5443 172E                                            i2l5435 16FE  
                                          i2l5427 16CE                                            i2l5419 16A8  
                                          i2l4493 2864                                            i2l2869 2514  
                                          i2l2885 24E0                                            i2l5509 1894  
                                          i2l5453 1762                                            i2l5461 1788  
                                          i2l5445 173E                                            i2l5429 16DC  
                                          i2l5437 1704                                            i2l2887 24F2  
                                          i2l5471 17C4                                            i2l5463 1796  
                                          i2l5455 1770                                            i2l5447 1740  
                                          i2l5439 1712                                            i2l2889 250E  
                                          i2l5481 1804                                            i2l5465 17A4  
                                          i2l5473 17CA                                            i2l5457 1780  
                                          i2l5449 1746                                            i2l5491 1838  
                                          i2l5483 1808                                            i2l5475 17D8  
                                          i2l5467 17B2                                            i2l5459 1782  
                                          i2l5395 161E                                            i2l5493 1848  
                                          i2l5477 17E6                                            i2l5485 180E  
                                          i2l5469 17C2                                            i2l5397 162C  
                                          i2l4791 27D8                                            i2l5495 184A  
                                          i2l5487 181C                                            i2l5479 17F4  
                                          i2l5399 163A                                            i2l5489 182A  
                                          i2l5497 1850                                            i2l4787 27C4  
                                          i2l5499 185E                                            i2l4789 27C6  
                  __end_of_HALL_LCD_4bit_sendChar 23A6                                     vfpfcnvrt@done 004F  
            Mcal_GPIO_initPinDirection@copyPinCFG 003F                                            _Motor1 006B  
                                          _Motor2 0069                                      vfprintf@cfmt 005B  
                                  ?_LCD_send4Bits 0044                                         ??___awdiv 0043  
                                       ??___awmod 0043                                 RB4_ISR@copySource 0035  
                   HALL_LCD_4bit_sendChar@copyLCD 0046                                            _memset 270A  
                                          clear_0 22CC                                            clear_1 22D8  
                                          clear_2 22E4                                  ___awdiv@quotient 0045  
                                 ___awmod@divisor 0041                                            isa$std 0001  
                                 ___awmod@counter 0043                      ??_Mcal_GPIO_initPinDirection 0040  
          __end_of_ADC_input_chanal_configuration 1C5C                    _ADC_input_chanal_configuration 1B84  
                                          fputc@c 003F                                      __pdataCOMRAM 0069  
                         HALL_Relay_turnOFF@F3210 002A                                      __mediumconst 0000  
                                          tblptrh 0FF7                                            tblptrl 0FF6  
                                          tblptru 0FF8                                            putch@c 0035  
                                __end_of_vfprintf 2486                                         ??_sprintf 0062  
              HALL_LCD_4bit_sendSTRPos@copyColumn 004D                                        __accesstop 0080  
                         __end_of__initialization 22EA                                         ?_INT0_ISR 0035  
                                       ?_INT1_ISR 0035                                         ?_INT2_ISR 0035  
                  ??_MCAL_ADC_getConversionResult 0037                                         ?_INT0_isr 0035  
                                       ?_INT1_isr 0035                                         ?_INT2_isr 0035  
                     ADC_VolatgeReferance@copyADC 003F                                     ___rparam_used 0001  
                __end_of_HALL_LCD_convertU16toSTR 2286                                    __pcstackCOMRAM 0035  
                                    __pidataBANK0 22F4                                     __end_of_fputc 1F84  
            MCAL_ADC_getConversionResult@retValue 003A                                     __end_of_putch 2880  
                        _MCAL_GPIO_writePinStatus 1324                                 RB6_ISR@copySource 0035  
                                         ??_fputc 0043                                           ??_putch 003F  
                                      __pbssBANK0 00E6                                        __pbssBANK1 0100  
                   __end_of_MCAL_InterruptManager 18C8                           ??_HALL_LCD_4bit_sendCMD 0048  
                                      ??_INT0_ISR 0035                                        ??_INT1_ISR 0035  
                                      ??_INT2_ISR 0035                             __end_of_MCAL_ADC_init 1B84  
                                      ??_INT0_isr 0035                                        ??_INT1_isr 0035  
                                      ??_INT2_isr 0035                  __end_of_HALL_LCD_4bit_sendSTRPos 2178  
           MCAL_GPIO_writePinStatus@copyStatusPin 0040                                   ??_LCD_send4Bits 0046  
             MCAL_ADC_getConversionResult@copyADC 0035                MCAL_GPIO_writePinStatus@copyPinCFG 003F  
                    MCAL_ADC_SelectChanal@copyADC 0042                                           _ADC_ISR 27C4  
                                         ?_memset 003F                                           _ADC_isr 285C  
                         ?_ADC_SelectResultFormat 003F                   MCAL_ADC_StartConversion@copyADC 003F  
                                         _RB4_ISR 2598                                           _RB5_ISR 2554  
                                         _RB6_ISR 2510                                           _RB7_ISR 24CC  
                                         _RB4_isr 2884                                           _RB5_isr 2882  
                                         _RB6_isr 2880                                           _RB7_isr 2886  
                     ??_LCD_sendEnableSignal4Bits 0045                                           _EX_INT0 00B6  
                                         _EX_INT1 00B0                                           _EX_INT2 00AA  
                                         i2u90_40 277C                                           i2u90_41 2778  
                                         i2u91_48 2782                                           i2u92_40 274E  
                                         i2u91_49 2794                                           i2u92_41 274A  
                                         i2u93_48 2754                                           i2u94_40 25AC  
                                         i2u93_49 2766                                           i2u94_41 25A8  
                                         i2u95_40 25BE                                           i2u95_41 25BA  
                                         i2u88_40 27AA                                           i2u88_41 27A6  
                                         i2u96_48 25C4                                           i2u97_40 2568  
                  MCAL_GPIO_writePinStatus@retVal 0043                                           i2u96_49 25D6  
                                         i2u97_41 2564                                           i2u89_48 27B0  
                                         i2u98_40 257A                                           i2u89_49 27C2  
                                         i2u98_41 2576                                           i2u99_48 2580  
                                         i2u99_49 2592                     ADC_SelectResultFormat@copyADC 003F  
                       _RB4_interruptHandler_High 0013                   MCAL_ADC_SelectChanal@copyChanal 0043  
                       _RB7_interruptHandler_High 0007                                           _KeyPad1 008A  
                        _RB4_interruptHandler_Low 0011                      HALL_LCD_4bit_sendCMD@copyCMD 0047  
                    HALL_LCD_4bit_sendCMD@copyLCD 0046                                           __Hparam 0000  
                        _RB7_interruptHandler_Low 0005                                           __Lparam 0000  
                               __end_of_btn_Value 1011                                        _retLCD_Num 00EC  
                                         ___awdiv 1E08                                           ___awmod 203E  
                                       _LCD1_4Bit 00E0                                         _LCD1_8Bit 0080  
                                       ?_vfprintf 0056                                      __psmallconst 1000  
              __end_of_Mcal_GPIO_initPinDirection 1324                        _Mcal_GPIO_initPinDirection 1032  
                        _HALL_LCD_convertU16toSTR 2200                    __end_of_ADC_SelectResultFormat 261E  
                                         __pcinit 2286                                           __ramtop 1000  
                                         __ptext0 1D34                                           __ptext1 27F2  
                                         __ptext2 281C                                           __ptext3 261E  
                                         __ptext4 1A9E                                           __ptext5 1B84  
                                         __ptext6 2486                                           __ptext7 25DC  
                                         __ptext8 2200                                           __ptext9 265E  
                                         _retADC1 0027                                           _retADC2 0025  
                                         _retADC3 0023                                           _retADC4 0021  
                                ___awmod@dividend 003F                         ?_MCAL_ADC_StartConversion 003F  
                                         _sprintf 265E                                    __pintcode_body 160C  
                            end_of_initialization 22EA                  LCD_sendEnableSignal4Bits@copyLCD 0044  
                            HALL_Led_trunON@F3211 002F                        __end_of_HALL_LCD_4bit_init 1D34  
                      __end_of_HALL_LCD_4bit_goto 2200                                           fputc@fp 0041  
                                         memset@c 0040                                           memset@n 0042  
                                         memset@p 0044                                           int_func 160C  
                       _LCD_sendEnableSignal4Bits 283C                                 __end_of_vfpfcnvrt 1A9E  
                                         postdec1 0FE5                                           postdec2 0FDD  
                        _HALL_LCD_4bit_sendSTRPos 20EC                                           postinc0 0FEE  
                                         postinc1 0FE6                                           postinc2 0FDE  
                                vfpfcnvrt@convarg 0051                                        ??_vfprintf 005B  
                   HALL_LCD_convertU16toSTR@F3338 00E6                                         _PORTBbits 0F81  
                           _MCAL_ADC_SelectChanal 261E                          HALL_Led_trunToggle@F3221 002D  
                       HALL_LCD_4bit_init@Counter 004A                        ??_MCAL_GPIO_writePinStatus 0041  
                                     vfpfcnvrt@ap 004C                                       vfpfcnvrt@cp 0050  
                                     vfpfcnvrt@fp 0049                                     __pidataCOMRAM 2872  
                                  __end_of_memset 273A                              LCD_send4Bits@copyLCD 0044  
                Mcal_GPIO_initPinDirection@retVal 0042                               start_initialization 2286  
                       HALL_LCD_4bit_init@copyLCD 0048                                       __end_of_abs 270A  
                                 _RetValue_KeyPad 001F                         HALL_LCD_4bit_goto@copyLCD 0048  
                       HALL_LCD_4bit_goto@copyRow 0049                     __end_of_HALL_LCD_4bit_sendCMD 23F2  
       MCAL_ADC_startConversion_Interrupt@copyADC 0046                                       vfprintf@fmt 0058  
                                     __pdataBANK0 0080                                          ?_ADC_ISR 0035  
                                        ??_memset 0044                                          ?_ADC_isr 0035  
                                      memset@dest 003F                            HALL_Relay_turnON@F3205 002B  
MCAL_ADC_getConversionResult@copyConversionResult 0036                                          ?_RB4_ISR 0035  
                                        ?_RB5_ISR 0035                                          ?_RB6_ISR 0035  
                                        ?_RB7_ISR 0035                                    _MCAL_GPIO_init 269E  
                          ?_MCAL_ADC_SelectChanal 0042                                       __pbssCOMRAM 0001  
                                        ?_RB4_isr 0035                                          ?_RB5_isr 0035  
                                        ?_RB6_isr 0035                                          ?_RB7_isr 0035  
                                   __pcstackBANK0 00F8                                     __pcstackBANK1 0120  
                        ??_HALL_LCD_4bit_sendChar 0048                             _INT0_interruptHandler 0019  
             HALL_LCD_convertU16toSTR@DataCounter 0068                             _MCAL_InterruptManager 0008  
                      ??_HALL_LCD_convertU16toSTR 0062                                         __pintcode 0008  
                           __end_of_LCD_send4Bits 243E                                          ?___awdiv 003F  
                                        ?___awmod 003F                  __end_of_MCAL_ADC_StartConversion 283C  
                                       _btn_Value 1001                       ?_Mcal_GPIO_initPinDirection 003F  
                          __end_of_MCAL_GPIO_init 26D6                                       __smallconst 1000  
                                    _RetValue_BTN 001D                      HALL_LCD_4bit_goto@copyColumn 004A  
                                        ?_sprintf 005C                   HALL_LCD_4bit_sendSTRPos@copyLCD 004B  
                       _RB5_interruptHandler_High 000F                   HALL_LCD_4bit_sendSTRPos@copyRow 004C  
                   MCAL_ADC_SelectChanal@retValue 0045                        ??_HALL_LCD_4bit_sendSTRPos 0050  
                                        _INT0_ISR 2796                                          _INT1_ISR 2768  
                                        _INT2_ISR 273A                                          _RB4_Flag 0070  
                                        _RB5_Flag 006F                                          _RB6_Flag 006E  
                                        _RB7_Flag 006D                                          _INT0_isr 288A  
                                        _INT1_isr 2888                                          _INT2_isr 288C  
                                        _IPR1bits 0F9F                                          _PIE1bits 0F9D  
                                        i2u100_40 2524                                          i2u100_41 2520  
                                        i2u101_40 2536                                          i2u101_41 2532  
                                        i2u102_48 253C                                          i2u103_40 24E0  
                                        i2u102_49 254E                                          i2u103_41 24DC  
                                        i2u104_40 24F2                                          i2u104_41 24EE  
                        _RB6_interruptHandler_Low 0009                              _ADC_interruptHandler 001B  
                                        i2u105_48 24F8                                          i2u105_49 250A  
                                        i2u305_40 1F96                                          i2u305_41 1F92  
                                        i2u306_40 1FA6                                          i2u410_40 164C  
                                        i2u306_41 1FA2                                          i2u410_41 1648  
                                        i2u411_40 165A                                          i2u411_41 1656  
                                        i2u307_45 1FE8                                          i2u308_40 2020  
                                        i2u420_40 16EA                                          i2u412_40 166C  
                                        i2u308_41 201A                                          i2u420_41 16E6  
                                        i2u412_41 1668                                          i2u308_46 2022  
                                        i2u421_40 16FA                                          i2u413_40 167A  
                                        i2u421_41 16F6                                          i2u413_41 1676  
                                        i2u430_40 1796                                          i2u422_40 1712  
                                        i2u414_40 168C                                          i2u430_41 1792  
                                        i2u422_41 170E                                          i2u414_41 1688  
                                        i2u431_40 17A4                                          i2u423_40 1720  
                                        i2u415_40 169A                                          i2u431_41 17A0  
                                        i2u423_41 171C                                          i2u415_41 1696  
                                        i2u352_40 27D8                                          i2u440_40 1838  
                                        i2u432_40 17B2                                          i2u424_40 172E  
                                        i2u416_40 16A8                                          i2u408_40 162C  
                                        i2u352_41 27D4                                          i2u440_41 1834  
                                        i2u432_41 17AE                                          i2u424_41 172A  
                                        i2u416_41 16A4                                          i2u408_41 1628  
                                        i2u441_40 1848                                          i2u433_40 17C2  
                                        i2u425_40 173E                                          i2u417_40 16B8  
                                        i2u409_40 163A                                          i2u441_41 1844  
                                        i2u433_41 17BE                                          i2u425_41 173A  
                                        i2u417_41 16B4                                          i2u409_41 1636  
                                        _PIR1bits 0F9E                                          i2u353_48 27DE  
                                        i2u442_40 185E                                          i2u434_40 17D8  
                                        i2u426_40 1754                                          i2u418_40 16CE  
                                        i2u353_49 27F0                                          i2u442_41 185A  
                                        i2u434_41 17D4                                          i2u426_41 1750  
                                        i2u418_41 16CA                                          i2u443_40 186C  
                                        i2u435_40 17E6                                          i2u427_40 1762  
                                        i2u419_40 16DC                                          i2u443_41 1868  
                                        i2u435_41 17E2                                          i2u427_41 175E  
                                        i2u419_41 16D8                                          i2u444_40 187A  
                                        i2u436_40 17F4                                          i2u428_40 1770  
                                        i2u444_41 1876                                          i2u436_41 17F0  
                                        i2u428_41 176C                                          i2u445_40 188A  
                                        i2u437_40 1804                                          i2u429_40 1780  
                                        i2u445_41 1886                                          i2u437_41 1800  
                                        i2u429_41 177C                                          i2u446_40 18A2  
                                        i2u438_40 181C                                          i2u446_41 189E  
                                        i2u438_41 1818                                          i2u447_40 18B0  
                                        i2u439_40 182A                                          i2u447_41 18AC  
                                        i2u439_41 1826                  MCAL_ADC_StartConversion@retValue 0040  
                              _HALL_LCD_4bit_init 1C5C                                _HALL_LCD_4bit_goto 2178  
                                       _vfpfcnvrt 18C8                                        _ADCON0bits 0FC2  
                                      _ADCON1bits 0FC1                                   ?_MCAL_GPIO_init 0044  
                                      _ADCON2bits 0FC0                                 RB5_ISR@copySource 0035  
                            HALL_Relay_init@F3200 002C                               ?_HALL_LCD_4bit_init 0048  
                             ?_HALL_LCD_4bit_goto 0048          ADC_input_chanal_configuration@copyChanal 0041  
                                      vfpfcnvrt@c 0055                                       _INTCON2bits 0FF1  
                                     _INTCON3bits 0FF0                                         copy_data0 229A  
                                       copy_data1 22BA                            ?_MCAL_InterruptManager 0035  
                            ??_HALL_LCD_4bit_init 0049                              ??_HALL_LCD_4bit_goto 004B  
                 HALL_LCD_convertU16toSTR@copySTR 00FA                                     _MCAL_ADC_init 1A9E  
                                      _EECON1bits 0FA6                                          __Hrparam 0000  
                                      vfprintf@ap 0059                                          __Lrparam 0000  
                                      vfprintf@fp 0056                      __end_of_ADC_VolatgeReferance 24CC  
                            MCAL_GPIO_init@retVal 0045                                        ?_vfpfcnvrt 0049  
                           _INT1_interruptHandler 0017                          _MCAL_ADC_StartConversion 281C  
                                      sprintf@fmt 005D                                 RB7_ISR@copySource 0035  
                                        __ptext10 243E                                          __ptext11 18C8  
                                        __ptext20 2178                                          __ptext12 1ECA  
                                        __ptext21 1C5C                                          __ptext13 287E  
                                        __ptext30 2510                                          __ptext22 269E  
                                        __ptext14 26D6                                          __ptext31 2554  
                                        __ptext23 1032                                          __ptext15 203E  
                                        __ptext40 2888                                          __ptext32 2598  
                                        __ptext24 23A6                                          __ptext16 1E08  
                                        __ptext41 288A                                          __ptext33 2880  
                                        __ptext25 283C                                          __ptext17 270A  
                                        __ptext42 288C                                          __ptext34 2882  
                                        __ptext26 23F2                                          __ptext18 20EC  
                                        __ptext43 27C4                                          __ptext35 2884  
                                        __ptext27 1324                                          __ptext19 235A  
                                        __ptext44 285C                                          __ptext36 2886  
                                        __ptext45 1F84                                          __ptext37 273A  
                                        __ptext29 24CC                                          __ptext38 2768  
                                        __ptext39 2796                                    ?_MCAL_ADC_init 0042  
                                        _retValu1 0031                          ??_ADC_SelectResultFormat 0040  
                          _HALL_LCD_4bit_sendChar 235A                                          isa$xinst 0000  
                                        int$flags 0074                                          _vfprintf 243E  
                         ??_MCAL_ADC_SelectChanal 0044                             HALL_Led_trunOFF@F3216 002E  
                                      _INTCONbits 0FF2                         ?_MCAL_GPIO_writePinStatus 003F  
                                        intlevel2 0000                                         sprintf@ap 0120  
                ??_ADC_input_chanal_configuration 003F                   ?_ADC_input_chanal_configuration 0035  
                           _HALL_LCD_4bit_sendCMD 23A6                              MCAL_ADC_init@copyADC 0042  
               HALL_LCD_convertU16toSTR@copyValue 00F8                                       ??_vfpfcnvrt 004E  
                        MCAL_GPIO_init@copyPinCFG 0044                                          sprintf@f 0121  
                                        sprintf@s 005C                HALL_LCD_convertU16toSTR@tempString 0062  
                              HALL_Led_init@F3206 0030                              _ADC_VolatgeReferance 2486  
                                 ??_MCAL_ADC_init 0043      MCAL_ADC_startConversion_Interrupt@copyChanal 0047  
                           _INT2_interruptHandler 0015  
