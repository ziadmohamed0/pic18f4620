

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Oct 24 01:40:56 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 17/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000FE0                     bsr             equ	4064
    70   000FE9                     fsr0            equ	4073
    71   000FEA                     fsr0h           equ	4074
    72   000FE9                     fsr0l           equ	4073
    73   000FE1                     fsr1            equ	4065
    74   000FE2                     fsr1h           equ	4066
    75   000FE1                     fsr1l           equ	4065
    76   000FD9                     fsr2            equ	4057
    77   000FDA                     fsr2h           equ	4058
    78   000FD9                     fsr2l           equ	4057
    79   000FEF                     indf0           equ	4079
    80   000FE7                     indf1           equ	4071
    81   000FDF                     indf2           equ	4063
    82   000FF2                     intcon          equ	4082
    83   000000                     nvmcon          equ	0
    84   000FF9                     pcl             equ	4089
    85   000FFA                     pclath          equ	4090
    86   000FFB                     pclatu          equ	4091
    87   000FEB                     plusw0          equ	4075
    88   000FE3                     plusw1          equ	4067
    89   000FDB                     plusw2          equ	4059
    90   000FED                     postdec0        equ	4077
    91   000FE5                     postdec1        equ	4069
    92   000FDD                     postdec2        equ	4061
    93   000FEE                     postinc0        equ	4078
    94   000FE6                     postinc1        equ	4070
    95   000FDE                     postinc2        equ	4062
    96   000FEC                     preinc0         equ	4076
    97   000FE4                     preinc1         equ	4068
    98   000FDC                     preinc2         equ	4060
    99   000FF3                     prod            equ	4083
   100   000FF4                     prodh           equ	4084
   101   000FF3                     prodl           equ	4083
   102   000FD8                     status          equ	4056
   103   000FF5                     tablat          equ	4085
   104   000FF6                     tblptr          equ	4086
   105   000FF7                     tblptrh         equ	4087
   106   000FF6                     tblptrl         equ	4086
   107   000FF8                     tblptru         equ	4088
   108   000FFD                     tosl            equ	4093
   109   000FE8                     wreg            equ	4072
   110   000F80                     PORTA           equ	3968	;# 
   111   000F81                     PORTB           equ	3969	;# 
   112   000F82                     PORTC           equ	3970	;# 
   113   000F83                     PORTD           equ	3971	;# 
   114   000F84                     PORTE           equ	3972	;# 
   115   000F89                     LATA            equ	3977	;# 
   116   000F8A                     LATB            equ	3978	;# 
   117   000F8B                     LATC            equ	3979	;# 
   118   000F8C                     LATD            equ	3980	;# 
   119   000F8D                     LATE            equ	3981	;# 
   120   000F92                     TRISA           equ	3986	;# 
   121   000F92                     DDRA            equ	3986	;# 
   122   000F93                     TRISB           equ	3987	;# 
   123   000F93                     DDRB            equ	3987	;# 
   124   000F94                     TRISC           equ	3988	;# 
   125   000F94                     DDRC            equ	3988	;# 
   126   000F95                     TRISD           equ	3989	;# 
   127   000F95                     DDRD            equ	3989	;# 
   128   000F96                     TRISE           equ	3990	;# 
   129   000F96                     DDRE            equ	3990	;# 
   130   000F9B                     OSCTUNE         equ	3995	;# 
   131   000F9D                     PIE1            equ	3997	;# 
   132   000F9E                     PIR1            equ	3998	;# 
   133   000F9F                     IPR1            equ	3999	;# 
   134   000FA0                     PIE2            equ	4000	;# 
   135   000FA1                     PIR2            equ	4001	;# 
   136   000FA2                     IPR2            equ	4002	;# 
   137   000FA6                     EECON1          equ	4006	;# 
   138   000FA7                     EECON2          equ	4007	;# 
   139   000FA8                     EEDATA          equ	4008	;# 
   140   000FA9                     EEADR           equ	4009	;# 
   141   000FAA                     EEADRH          equ	4010	;# 
   142   000FAB                     RCSTA           equ	4011	;# 
   143   000FAB                     RCSTA1          equ	4011	;# 
   144   000FAC                     TXSTA           equ	4012	;# 
   145   000FAC                     TXSTA1          equ	4012	;# 
   146   000FAD                     TXREG           equ	4013	;# 
   147   000FAD                     TXREG1          equ	4013	;# 
   148   000FAE                     RCREG           equ	4014	;# 
   149   000FAE                     RCREG1          equ	4014	;# 
   150   000FAF                     SPBRG           equ	4015	;# 
   151   000FAF                     SPBRG1          equ	4015	;# 
   152   000FB0                     SPBRGH          equ	4016	;# 
   153   000FB1                     T3CON           equ	4017	;# 
   154   000FB2                     TMR3            equ	4018	;# 
   155   000FB2                     TMR3L           equ	4018	;# 
   156   000FB3                     TMR3H           equ	4019	;# 
   157   000FB4                     CMCON           equ	4020	;# 
   158   000FB5                     CVRCON          equ	4021	;# 
   159   000FB6                     ECCP1AS         equ	4022	;# 
   160   000FB7                     PWM1CON         equ	4023	;# 
   161   000FB8                     BAUDCON         equ	4024	;# 
   162   000FB8                     BAUDCTL         equ	4024	;# 
   163   000FBA                     CCP2CON         equ	4026	;# 
   164   000FBB                     CCPR2           equ	4027	;# 
   165   000FBB                     CCPR2L          equ	4027	;# 
   166   000FBC                     CCPR2H          equ	4028	;# 
   167   000FBD                     CCP1CON         equ	4029	;# 
   168   000FBE                     CCPR1           equ	4030	;# 
   169   000FBE                     CCPR1L          equ	4030	;# 
   170   000FBF                     CCPR1H          equ	4031	;# 
   171   000FC0                     ADCON2          equ	4032	;# 
   172   000FC1                     ADCON1          equ	4033	;# 
   173   000FC2                     ADCON0          equ	4034	;# 
   174   000FC3                     ADRES           equ	4035	;# 
   175   000FC3                     ADRESL          equ	4035	;# 
   176   000FC4                     ADRESH          equ	4036	;# 
   177   000FC5                     SSPCON2         equ	4037	;# 
   178   000FC6                     SSPCON1         equ	4038	;# 
   179   000FC7                     SSPSTAT         equ	4039	;# 
   180   000FC8                     SSPADD          equ	4040	;# 
   181   000FC9                     SSPBUF          equ	4041	;# 
   182   000FCA                     T2CON           equ	4042	;# 
   183   000FCB                     PR2             equ	4043	;# 
   184   000FCB                     MEMCON          equ	4043	;# 
   185   000FCC                     TMR2            equ	4044	;# 
   186   000FCD                     T1CON           equ	4045	;# 
   187   000FCE                     TMR1            equ	4046	;# 
   188   000FCE                     TMR1L           equ	4046	;# 
   189   000FCF                     TMR1H           equ	4047	;# 
   190   000FD0                     RCON            equ	4048	;# 
   191   000FD1                     WDTCON          equ	4049	;# 
   192   000FD2                     HLVDCON         equ	4050	;# 
   193   000FD2                     LVDCON          equ	4050	;# 
   194   000FD3                     OSCCON          equ	4051	;# 
   195   000FD5                     T0CON           equ	4053	;# 
   196   000FD6                     TMR0            equ	4054	;# 
   197   000FD6                     TMR0L           equ	4054	;# 
   198   000FD7                     TMR0H           equ	4055	;# 
   199   000FD8                     STATUS          equ	4056	;# 
   200   000FD9                     FSR2            equ	4057	;# 
   201   000FD9                     FSR2L           equ	4057	;# 
   202   000FDA                     FSR2H           equ	4058	;# 
   203   000FDB                     PLUSW2          equ	4059	;# 
   204   000FDC                     PREINC2         equ	4060	;# 
   205   000FDD                     POSTDEC2        equ	4061	;# 
   206   000FDE                     POSTINC2        equ	4062	;# 
   207   000FDF                     INDF2           equ	4063	;# 
   208   000FE0                     BSR             equ	4064	;# 
   209   000FE1                     FSR1            equ	4065	;# 
   210   000FE1                     FSR1L           equ	4065	;# 
   211   000FE2                     FSR1H           equ	4066	;# 
   212   000FE3                     PLUSW1          equ	4067	;# 
   213   000FE4                     PREINC1         equ	4068	;# 
   214   000FE5                     POSTDEC1        equ	4069	;# 
   215   000FE6                     POSTINC1        equ	4070	;# 
   216   000FE7                     INDF1           equ	4071	;# 
   217   000FE8                     WREG            equ	4072	;# 
   218   000FE9                     FSR0            equ	4073	;# 
   219   000FE9                     FSR0L           equ	4073	;# 
   220   000FEA                     FSR0H           equ	4074	;# 
   221   000FEB                     PLUSW0          equ	4075	;# 
   222   000FEC                     PREINC0         equ	4076	;# 
   223   000FED                     POSTDEC0        equ	4077	;# 
   224   000FEE                     POSTINC0        equ	4078	;# 
   225   000FEF                     INDF0           equ	4079	;# 
   226   000FF0                     INTCON3         equ	4080	;# 
   227   000FF1                     INTCON2         equ	4081	;# 
   228   000FF2                     INTCON          equ	4082	;# 
   229   000FF3                     PROD            equ	4083	;# 
   230   000FF3                     PRODL           equ	4083	;# 
   231   000FF4                     PRODH           equ	4084	;# 
   232   000FF5                     TABLAT          equ	4085	;# 
   233   000FF6                     TBLPTR          equ	4086	;# 
   234   000FF6                     TBLPTRL         equ	4086	;# 
   235   000FF7                     TBLPTRH         equ	4087	;# 
   236   000FF8                     TBLPTRU         equ	4088	;# 
   237   000FF9                     PCLAT           equ	4089	;# 
   238   000FF9                     PC              equ	4089	;# 
   239   000FF9                     PCL             equ	4089	;# 
   240   000FFA                     PCLATH          equ	4090	;# 
   241   000FFB                     PCLATU          equ	4091	;# 
   242   000FFC                     STKPTR          equ	4092	;# 
   243   000FFD                     TOS             equ	4093	;# 
   244   000FFD                     TOSL            equ	4093	;# 
   245   000FFE                     TOSH            equ	4094	;# 
   246   000FFF                     TOSU            equ	4095	;# 
   247   000F80                     PORTA           equ	3968	;# 
   248   000F81                     PORTB           equ	3969	;# 
   249   000F82                     PORTC           equ	3970	;# 
   250   000F83                     PORTD           equ	3971	;# 
   251   000F84                     PORTE           equ	3972	;# 
   252   000F89                     LATA            equ	3977	;# 
   253   000F8A                     LATB            equ	3978	;# 
   254   000F8B                     LATC            equ	3979	;# 
   255   000F8C                     LATD            equ	3980	;# 
   256   000F8D                     LATE            equ	3981	;# 
   257   000F92                     TRISA           equ	3986	;# 
   258   000F92                     DDRA            equ	3986	;# 
   259   000F93                     TRISB           equ	3987	;# 
   260   000F93                     DDRB            equ	3987	;# 
   261   000F94                     TRISC           equ	3988	;# 
   262   000F94                     DDRC            equ	3988	;# 
   263   000F95                     TRISD           equ	3989	;# 
   264   000F95                     DDRD            equ	3989	;# 
   265   000F96                     TRISE           equ	3990	;# 
   266   000F96                     DDRE            equ	3990	;# 
   267   000F9B                     OSCTUNE         equ	3995	;# 
   268   000F9D                     PIE1            equ	3997	;# 
   269   000F9E                     PIR1            equ	3998	;# 
   270   000F9F                     IPR1            equ	3999	;# 
   271   000FA0                     PIE2            equ	4000	;# 
   272   000FA1                     PIR2            equ	4001	;# 
   273   000FA2                     IPR2            equ	4002	;# 
   274   000FA6                     EECON1          equ	4006	;# 
   275   000FA7                     EECON2          equ	4007	;# 
   276   000FA8                     EEDATA          equ	4008	;# 
   277   000FA9                     EEADR           equ	4009	;# 
   278   000FAA                     EEADRH          equ	4010	;# 
   279   000FAB                     RCSTA           equ	4011	;# 
   280   000FAB                     RCSTA1          equ	4011	;# 
   281   000FAC                     TXSTA           equ	4012	;# 
   282   000FAC                     TXSTA1          equ	4012	;# 
   283   000FAD                     TXREG           equ	4013	;# 
   284   000FAD                     TXREG1          equ	4013	;# 
   285   000FAE                     RCREG           equ	4014	;# 
   286   000FAE                     RCREG1          equ	4014	;# 
   287   000FAF                     SPBRG           equ	4015	;# 
   288   000FAF                     SPBRG1          equ	4015	;# 
   289   000FB0                     SPBRGH          equ	4016	;# 
   290   000FB1                     T3CON           equ	4017	;# 
   291   000FB2                     TMR3            equ	4018	;# 
   292   000FB2                     TMR3L           equ	4018	;# 
   293   000FB3                     TMR3H           equ	4019	;# 
   294   000FB4                     CMCON           equ	4020	;# 
   295   000FB5                     CVRCON          equ	4021	;# 
   296   000FB6                     ECCP1AS         equ	4022	;# 
   297   000FB7                     PWM1CON         equ	4023	;# 
   298   000FB8                     BAUDCON         equ	4024	;# 
   299   000FB8                     BAUDCTL         equ	4024	;# 
   300   000FBA                     CCP2CON         equ	4026	;# 
   301   000FBB                     CCPR2           equ	4027	;# 
   302   000FBB                     CCPR2L          equ	4027	;# 
   303   000FBC                     CCPR2H          equ	4028	;# 
   304   000FBD                     CCP1CON         equ	4029	;# 
   305   000FBE                     CCPR1           equ	4030	;# 
   306   000FBE                     CCPR1L          equ	4030	;# 
   307   000FBF                     CCPR1H          equ	4031	;# 
   308   000FC0                     ADCON2          equ	4032	;# 
   309   000FC1                     ADCON1          equ	4033	;# 
   310   000FC2                     ADCON0          equ	4034	;# 
   311   000FC3                     ADRES           equ	4035	;# 
   312   000FC3                     ADRESL          equ	4035	;# 
   313   000FC4                     ADRESH          equ	4036	;# 
   314   000FC5                     SSPCON2         equ	4037	;# 
   315   000FC6                     SSPCON1         equ	4038	;# 
   316   000FC7                     SSPSTAT         equ	4039	;# 
   317   000FC8                     SSPADD          equ	4040	;# 
   318   000FC9                     SSPBUF          equ	4041	;# 
   319   000FCA                     T2CON           equ	4042	;# 
   320   000FCB                     PR2             equ	4043	;# 
   321   000FCB                     MEMCON          equ	4043	;# 
   322   000FCC                     TMR2            equ	4044	;# 
   323   000FCD                     T1CON           equ	4045	;# 
   324   000FCE                     TMR1            equ	4046	;# 
   325   000FCE                     TMR1L           equ	4046	;# 
   326   000FCF                     TMR1H           equ	4047	;# 
   327   000FD0                     RCON            equ	4048	;# 
   328   000FD1                     WDTCON          equ	4049	;# 
   329   000FD2                     HLVDCON         equ	4050	;# 
   330   000FD2                     LVDCON          equ	4050	;# 
   331   000FD3                     OSCCON          equ	4051	;# 
   332   000FD5                     T0CON           equ	4053	;# 
   333   000FD6                     TMR0            equ	4054	;# 
   334   000FD6                     TMR0L           equ	4054	;# 
   335   000FD7                     TMR0H           equ	4055	;# 
   336   000FD8                     STATUS          equ	4056	;# 
   337   000FD9                     FSR2            equ	4057	;# 
   338   000FD9                     FSR2L           equ	4057	;# 
   339   000FDA                     FSR2H           equ	4058	;# 
   340   000FDB                     PLUSW2          equ	4059	;# 
   341   000FDC                     PREINC2         equ	4060	;# 
   342   000FDD                     POSTDEC2        equ	4061	;# 
   343   000FDE                     POSTINC2        equ	4062	;# 
   344   000FDF                     INDF2           equ	4063	;# 
   345   000FE0                     BSR             equ	4064	;# 
   346   000FE1                     FSR1            equ	4065	;# 
   347   000FE1                     FSR1L           equ	4065	;# 
   348   000FE2                     FSR1H           equ	4066	;# 
   349   000FE3                     PLUSW1          equ	4067	;# 
   350   000FE4                     PREINC1         equ	4068	;# 
   351   000FE5                     POSTDEC1        equ	4069	;# 
   352   000FE6                     POSTINC1        equ	4070	;# 
   353   000FE7                     INDF1           equ	4071	;# 
   354   000FE8                     WREG            equ	4072	;# 
   355   000FE9                     FSR0            equ	4073	;# 
   356   000FE9                     FSR0L           equ	4073	;# 
   357   000FEA                     FSR0H           equ	4074	;# 
   358   000FEB                     PLUSW0          equ	4075	;# 
   359   000FEC                     PREINC0         equ	4076	;# 
   360   000FED                     POSTDEC0        equ	4077	;# 
   361   000FEE                     POSTINC0        equ	4078	;# 
   362   000FEF                     INDF0           equ	4079	;# 
   363   000FF0                     INTCON3         equ	4080	;# 
   364   000FF1                     INTCON2         equ	4081	;# 
   365   000FF2                     INTCON          equ	4082	;# 
   366   000FF3                     PROD            equ	4083	;# 
   367   000FF3                     PRODL           equ	4083	;# 
   368   000FF4                     PRODH           equ	4084	;# 
   369   000FF5                     TABLAT          equ	4085	;# 
   370   000FF6                     TBLPTR          equ	4086	;# 
   371   000FF6                     TBLPTRL         equ	4086	;# 
   372   000FF7                     TBLPTRH         equ	4087	;# 
   373   000FF8                     TBLPTRU         equ	4088	;# 
   374   000FF9                     PCLAT           equ	4089	;# 
   375   000FF9                     PC              equ	4089	;# 
   376   000FF9                     PCL             equ	4089	;# 
   377   000FFA                     PCLATH          equ	4090	;# 
   378   000FFB                     PCLATU          equ	4091	;# 
   379   000FFC                     STKPTR          equ	4092	;# 
   380   000FFD                     TOS             equ	4093	;# 
   381   000FFD                     TOSL            equ	4093	;# 
   382   000FFE                     TOSH            equ	4094	;# 
   383   000FFF                     TOSU            equ	4095	;# 
   384   000F80                     PORTA           equ	3968	;# 
   385   000F81                     PORTB           equ	3969	;# 
   386   000F82                     PORTC           equ	3970	;# 
   387   000F83                     PORTD           equ	3971	;# 
   388   000F84                     PORTE           equ	3972	;# 
   389   000F89                     LATA            equ	3977	;# 
   390   000F8A                     LATB            equ	3978	;# 
   391   000F8B                     LATC            equ	3979	;# 
   392   000F8C                     LATD            equ	3980	;# 
   393   000F8D                     LATE            equ	3981	;# 
   394   000F92                     TRISA           equ	3986	;# 
   395   000F92                     DDRA            equ	3986	;# 
   396   000F93                     TRISB           equ	3987	;# 
   397   000F93                     DDRB            equ	3987	;# 
   398   000F94                     TRISC           equ	3988	;# 
   399   000F94                     DDRC            equ	3988	;# 
   400   000F95                     TRISD           equ	3989	;# 
   401   000F95                     DDRD            equ	3989	;# 
   402   000F96                     TRISE           equ	3990	;# 
   403   000F96                     DDRE            equ	3990	;# 
   404   000F9B                     OSCTUNE         equ	3995	;# 
   405   000F9D                     PIE1            equ	3997	;# 
   406   000F9E                     PIR1            equ	3998	;# 
   407   000F9F                     IPR1            equ	3999	;# 
   408   000FA0                     PIE2            equ	4000	;# 
   409   000FA1                     PIR2            equ	4001	;# 
   410   000FA2                     IPR2            equ	4002	;# 
   411   000FA6                     EECON1          equ	4006	;# 
   412   000FA7                     EECON2          equ	4007	;# 
   413   000FA8                     EEDATA          equ	4008	;# 
   414   000FA9                     EEADR           equ	4009	;# 
   415   000FAA                     EEADRH          equ	4010	;# 
   416   000FAB                     RCSTA           equ	4011	;# 
   417   000FAB                     RCSTA1          equ	4011	;# 
   418   000FAC                     TXSTA           equ	4012	;# 
   419   000FAC                     TXSTA1          equ	4012	;# 
   420   000FAD                     TXREG           equ	4013	;# 
   421   000FAD                     TXREG1          equ	4013	;# 
   422   000FAE                     RCREG           equ	4014	;# 
   423   000FAE                     RCREG1          equ	4014	;# 
   424   000FAF                     SPBRG           equ	4015	;# 
   425   000FAF                     SPBRG1          equ	4015	;# 
   426   000FB0                     SPBRGH          equ	4016	;# 
   427   000FB1                     T3CON           equ	4017	;# 
   428   000FB2                     TMR3            equ	4018	;# 
   429   000FB2                     TMR3L           equ	4018	;# 
   430   000FB3                     TMR3H           equ	4019	;# 
   431   000FB4                     CMCON           equ	4020	;# 
   432   000FB5                     CVRCON          equ	4021	;# 
   433   000FB6                     ECCP1AS         equ	4022	;# 
   434   000FB7                     PWM1CON         equ	4023	;# 
   435   000FB8                     BAUDCON         equ	4024	;# 
   436   000FB8                     BAUDCTL         equ	4024	;# 
   437   000FBA                     CCP2CON         equ	4026	;# 
   438   000FBB                     CCPR2           equ	4027	;# 
   439   000FBB                     CCPR2L          equ	4027	;# 
   440   000FBC                     CCPR2H          equ	4028	;# 
   441   000FBD                     CCP1CON         equ	4029	;# 
   442   000FBE                     CCPR1           equ	4030	;# 
   443   000FBE                     CCPR1L          equ	4030	;# 
   444   000FBF                     CCPR1H          equ	4031	;# 
   445   000FC0                     ADCON2          equ	4032	;# 
   446   000FC1                     ADCON1          equ	4033	;# 
   447   000FC2                     ADCON0          equ	4034	;# 
   448   000FC3                     ADRES           equ	4035	;# 
   449   000FC3                     ADRESL          equ	4035	;# 
   450   000FC4                     ADRESH          equ	4036	;# 
   451   000FC5                     SSPCON2         equ	4037	;# 
   452   000FC6                     SSPCON1         equ	4038	;# 
   453   000FC7                     SSPSTAT         equ	4039	;# 
   454   000FC8                     SSPADD          equ	4040	;# 
   455   000FC9                     SSPBUF          equ	4041	;# 
   456   000FCA                     T2CON           equ	4042	;# 
   457   000FCB                     PR2             equ	4043	;# 
   458   000FCB                     MEMCON          equ	4043	;# 
   459   000FCC                     TMR2            equ	4044	;# 
   460   000FCD                     T1CON           equ	4045	;# 
   461   000FCE                     TMR1            equ	4046	;# 
   462   000FCE                     TMR1L           equ	4046	;# 
   463   000FCF                     TMR1H           equ	4047	;# 
   464   000FD0                     RCON            equ	4048	;# 
   465   000FD1                     WDTCON          equ	4049	;# 
   466   000FD2                     HLVDCON         equ	4050	;# 
   467   000FD2                     LVDCON          equ	4050	;# 
   468   000FD3                     OSCCON          equ	4051	;# 
   469   000FD5                     T0CON           equ	4053	;# 
   470   000FD6                     TMR0            equ	4054	;# 
   471   000FD6                     TMR0L           equ	4054	;# 
   472   000FD7                     TMR0H           equ	4055	;# 
   473   000FD8                     STATUS          equ	4056	;# 
   474   000FD9                     FSR2            equ	4057	;# 
   475   000FD9                     FSR2L           equ	4057	;# 
   476   000FDA                     FSR2H           equ	4058	;# 
   477   000FDB                     PLUSW2          equ	4059	;# 
   478   000FDC                     PREINC2         equ	4060	;# 
   479   000FDD                     POSTDEC2        equ	4061	;# 
   480   000FDE                     POSTINC2        equ	4062	;# 
   481   000FDF                     INDF2           equ	4063	;# 
   482   000FE0                     BSR             equ	4064	;# 
   483   000FE1                     FSR1            equ	4065	;# 
   484   000FE1                     FSR1L           equ	4065	;# 
   485   000FE2                     FSR1H           equ	4066	;# 
   486   000FE3                     PLUSW1          equ	4067	;# 
   487   000FE4                     PREINC1         equ	4068	;# 
   488   000FE5                     POSTDEC1        equ	4069	;# 
   489   000FE6                     POSTINC1        equ	4070	;# 
   490   000FE7                     INDF1           equ	4071	;# 
   491   000FE8                     WREG            equ	4072	;# 
   492   000FE9                     FSR0            equ	4073	;# 
   493   000FE9                     FSR0L           equ	4073	;# 
   494   000FEA                     FSR0H           equ	4074	;# 
   495   000FEB                     PLUSW0          equ	4075	;# 
   496   000FEC                     PREINC0         equ	4076	;# 
   497   000FED                     POSTDEC0        equ	4077	;# 
   498   000FEE                     POSTINC0        equ	4078	;# 
   499   000FEF                     INDF0           equ	4079	;# 
   500   000FF0                     INTCON3         equ	4080	;# 
   501   000FF1                     INTCON2         equ	4081	;# 
   502   000FF2                     INTCON          equ	4082	;# 
   503   000FF3                     PROD            equ	4083	;# 
   504   000FF3                     PRODL           equ	4083	;# 
   505   000FF4                     PRODH           equ	4084	;# 
   506   000FF5                     TABLAT          equ	4085	;# 
   507   000FF6                     TBLPTR          equ	4086	;# 
   508   000FF6                     TBLPTRL         equ	4086	;# 
   509   000FF7                     TBLPTRH         equ	4087	;# 
   510   000FF8                     TBLPTRU         equ	4088	;# 
   511   000FF9                     PCLAT           equ	4089	;# 
   512   000FF9                     PC              equ	4089	;# 
   513   000FF9                     PCL             equ	4089	;# 
   514   000FFA                     PCLATH          equ	4090	;# 
   515   000FFB                     PCLATU          equ	4091	;# 
   516   000FFC                     STKPTR          equ	4092	;# 
   517   000FFD                     TOS             equ	4093	;# 
   518   000FFD                     TOSL            equ	4093	;# 
   519   000FFE                     TOSH            equ	4094	;# 
   520   000FFF                     TOSU            equ	4095	;# 
   521   000F80                     PORTA           equ	3968	;# 
   522   000F81                     PORTB           equ	3969	;# 
   523   000F82                     PORTC           equ	3970	;# 
   524   000F83                     PORTD           equ	3971	;# 
   525   000F84                     PORTE           equ	3972	;# 
   526   000F89                     LATA            equ	3977	;# 
   527   000F8A                     LATB            equ	3978	;# 
   528   000F8B                     LATC            equ	3979	;# 
   529   000F8C                     LATD            equ	3980	;# 
   530   000F8D                     LATE            equ	3981	;# 
   531   000F92                     TRISA           equ	3986	;# 
   532   000F92                     DDRA            equ	3986	;# 
   533   000F93                     TRISB           equ	3987	;# 
   534   000F93                     DDRB            equ	3987	;# 
   535   000F94                     TRISC           equ	3988	;# 
   536   000F94                     DDRC            equ	3988	;# 
   537   000F95                     TRISD           equ	3989	;# 
   538   000F95                     DDRD            equ	3989	;# 
   539   000F96                     TRISE           equ	3990	;# 
   540   000F96                     DDRE            equ	3990	;# 
   541   000F9B                     OSCTUNE         equ	3995	;# 
   542   000F9D                     PIE1            equ	3997	;# 
   543   000F9E                     PIR1            equ	3998	;# 
   544   000F9F                     IPR1            equ	3999	;# 
   545   000FA0                     PIE2            equ	4000	;# 
   546   000FA1                     PIR2            equ	4001	;# 
   547   000FA2                     IPR2            equ	4002	;# 
   548   000FA6                     EECON1          equ	4006	;# 
   549   000FA7                     EECON2          equ	4007	;# 
   550   000FA8                     EEDATA          equ	4008	;# 
   551   000FA9                     EEADR           equ	4009	;# 
   552   000FAA                     EEADRH          equ	4010	;# 
   553   000FAB                     RCSTA           equ	4011	;# 
   554   000FAB                     RCSTA1          equ	4011	;# 
   555   000FAC                     TXSTA           equ	4012	;# 
   556   000FAC                     TXSTA1          equ	4012	;# 
   557   000FAD                     TXREG           equ	4013	;# 
   558   000FAD                     TXREG1          equ	4013	;# 
   559   000FAE                     RCREG           equ	4014	;# 
   560   000FAE                     RCREG1          equ	4014	;# 
   561   000FAF                     SPBRG           equ	4015	;# 
   562   000FAF                     SPBRG1          equ	4015	;# 
   563   000FB0                     SPBRGH          equ	4016	;# 
   564   000FB1                     T3CON           equ	4017	;# 
   565   000FB2                     TMR3            equ	4018	;# 
   566   000FB2                     TMR3L           equ	4018	;# 
   567   000FB3                     TMR3H           equ	4019	;# 
   568   000FB4                     CMCON           equ	4020	;# 
   569   000FB5                     CVRCON          equ	4021	;# 
   570   000FB6                     ECCP1AS         equ	4022	;# 
   571   000FB7                     PWM1CON         equ	4023	;# 
   572   000FB8                     BAUDCON         equ	4024	;# 
   573   000FB8                     BAUDCTL         equ	4024	;# 
   574   000FBA                     CCP2CON         equ	4026	;# 
   575   000FBB                     CCPR2           equ	4027	;# 
   576   000FBB                     CCPR2L          equ	4027	;# 
   577   000FBC                     CCPR2H          equ	4028	;# 
   578   000FBD                     CCP1CON         equ	4029	;# 
   579   000FBE                     CCPR1           equ	4030	;# 
   580   000FBE                     CCPR1L          equ	4030	;# 
   581   000FBF                     CCPR1H          equ	4031	;# 
   582   000FC0                     ADCON2          equ	4032	;# 
   583   000FC1                     ADCON1          equ	4033	;# 
   584   000FC2                     ADCON0          equ	4034	;# 
   585   000FC3                     ADRES           equ	4035	;# 
   586   000FC3                     ADRESL          equ	4035	;# 
   587   000FC4                     ADRESH          equ	4036	;# 
   588   000FC5                     SSPCON2         equ	4037	;# 
   589   000FC6                     SSPCON1         equ	4038	;# 
   590   000FC7                     SSPSTAT         equ	4039	;# 
   591   000FC8                     SSPADD          equ	4040	;# 
   592   000FC9                     SSPBUF          equ	4041	;# 
   593   000FCA                     T2CON           equ	4042	;# 
   594   000FCB                     PR2             equ	4043	;# 
   595   000FCB                     MEMCON          equ	4043	;# 
   596   000FCC                     TMR2            equ	4044	;# 
   597   000FCD                     T1CON           equ	4045	;# 
   598   000FCE                     TMR1            equ	4046	;# 
   599   000FCE                     TMR1L           equ	4046	;# 
   600   000FCF                     TMR1H           equ	4047	;# 
   601   000FD0                     RCON            equ	4048	;# 
   602   000FD1                     WDTCON          equ	4049	;# 
   603   000FD2                     HLVDCON         equ	4050	;# 
   604   000FD2                     LVDCON          equ	4050	;# 
   605   000FD3                     OSCCON          equ	4051	;# 
   606   000FD5                     T0CON           equ	4053	;# 
   607   000FD6                     TMR0            equ	4054	;# 
   608   000FD6                     TMR0L           equ	4054	;# 
   609   000FD7                     TMR0H           equ	4055	;# 
   610   000FD8                     STATUS          equ	4056	;# 
   611   000FD9                     FSR2            equ	4057	;# 
   612   000FD9                     FSR2L           equ	4057	;# 
   613   000FDA                     FSR2H           equ	4058	;# 
   614   000FDB                     PLUSW2          equ	4059	;# 
   615   000FDC                     PREINC2         equ	4060	;# 
   616   000FDD                     POSTDEC2        equ	4061	;# 
   617   000FDE                     POSTINC2        equ	4062	;# 
   618   000FDF                     INDF2           equ	4063	;# 
   619   000FE0                     BSR             equ	4064	;# 
   620   000FE1                     FSR1            equ	4065	;# 
   621   000FE1                     FSR1L           equ	4065	;# 
   622   000FE2                     FSR1H           equ	4066	;# 
   623   000FE3                     PLUSW1          equ	4067	;# 
   624   000FE4                     PREINC1         equ	4068	;# 
   625   000FE5                     POSTDEC1        equ	4069	;# 
   626   000FE6                     POSTINC1        equ	4070	;# 
   627   000FE7                     INDF1           equ	4071	;# 
   628   000FE8                     WREG            equ	4072	;# 
   629   000FE9                     FSR0            equ	4073	;# 
   630   000FE9                     FSR0L           equ	4073	;# 
   631   000FEA                     FSR0H           equ	4074	;# 
   632   000FEB                     PLUSW0          equ	4075	;# 
   633   000FEC                     PREINC0         equ	4076	;# 
   634   000FED                     POSTDEC0        equ	4077	;# 
   635   000FEE                     POSTINC0        equ	4078	;# 
   636   000FEF                     INDF0           equ	4079	;# 
   637   000FF0                     INTCON3         equ	4080	;# 
   638   000FF1                     INTCON2         equ	4081	;# 
   639   000FF2                     INTCON          equ	4082	;# 
   640   000FF3                     PROD            equ	4083	;# 
   641   000FF3                     PRODL           equ	4083	;# 
   642   000FF4                     PRODH           equ	4084	;# 
   643   000FF5                     TABLAT          equ	4085	;# 
   644   000FF6                     TBLPTR          equ	4086	;# 
   645   000FF6                     TBLPTRL         equ	4086	;# 
   646   000FF7                     TBLPTRH         equ	4087	;# 
   647   000FF8                     TBLPTRU         equ	4088	;# 
   648   000FF9                     PCLAT           equ	4089	;# 
   649   000FF9                     PC              equ	4089	;# 
   650   000FF9                     PCL             equ	4089	;# 
   651   000FFA                     PCLATH          equ	4090	;# 
   652   000FFB                     PCLATU          equ	4091	;# 
   653   000FFC                     STKPTR          equ	4092	;# 
   654   000FFD                     TOS             equ	4093	;# 
   655   000FFD                     TOSL            equ	4093	;# 
   656   000FFE                     TOSH            equ	4094	;# 
   657   000FFF                     TOSU            equ	4095	;# 
   658   000F80                     PORTA           equ	3968	;# 
   659   000F81                     PORTB           equ	3969	;# 
   660   000F82                     PORTC           equ	3970	;# 
   661   000F83                     PORTD           equ	3971	;# 
   662   000F84                     PORTE           equ	3972	;# 
   663   000F89                     LATA            equ	3977	;# 
   664   000F8A                     LATB            equ	3978	;# 
   665   000F8B                     LATC            equ	3979	;# 
   666   000F8C                     LATD            equ	3980	;# 
   667   000F8D                     LATE            equ	3981	;# 
   668   000F92                     TRISA           equ	3986	;# 
   669   000F92                     DDRA            equ	3986	;# 
   670   000F93                     TRISB           equ	3987	;# 
   671   000F93                     DDRB            equ	3987	;# 
   672   000F94                     TRISC           equ	3988	;# 
   673   000F94                     DDRC            equ	3988	;# 
   674   000F95                     TRISD           equ	3989	;# 
   675   000F95                     DDRD            equ	3989	;# 
   676   000F96                     TRISE           equ	3990	;# 
   677   000F96                     DDRE            equ	3990	;# 
   678   000F9B                     OSCTUNE         equ	3995	;# 
   679   000F9D                     PIE1            equ	3997	;# 
   680   000F9E                     PIR1            equ	3998	;# 
   681   000F9F                     IPR1            equ	3999	;# 
   682   000FA0                     PIE2            equ	4000	;# 
   683   000FA1                     PIR2            equ	4001	;# 
   684   000FA2                     IPR2            equ	4002	;# 
   685   000FA6                     EECON1          equ	4006	;# 
   686   000FA7                     EECON2          equ	4007	;# 
   687   000FA8                     EEDATA          equ	4008	;# 
   688   000FA9                     EEADR           equ	4009	;# 
   689   000FAA                     EEADRH          equ	4010	;# 
   690   000FAB                     RCSTA           equ	4011	;# 
   691   000FAB                     RCSTA1          equ	4011	;# 
   692   000FAC                     TXSTA           equ	4012	;# 
   693   000FAC                     TXSTA1          equ	4012	;# 
   694   000FAD                     TXREG           equ	4013	;# 
   695   000FAD                     TXREG1          equ	4013	;# 
   696   000FAE                     RCREG           equ	4014	;# 
   697   000FAE                     RCREG1          equ	4014	;# 
   698   000FAF                     SPBRG           equ	4015	;# 
   699   000FAF                     SPBRG1          equ	4015	;# 
   700   000FB0                     SPBRGH          equ	4016	;# 
   701   000FB1                     T3CON           equ	4017	;# 
   702   000FB2                     TMR3            equ	4018	;# 
   703   000FB2                     TMR3L           equ	4018	;# 
   704   000FB3                     TMR3H           equ	4019	;# 
   705   000FB4                     CMCON           equ	4020	;# 
   706   000FB5                     CVRCON          equ	4021	;# 
   707   000FB6                     ECCP1AS         equ	4022	;# 
   708   000FB7                     PWM1CON         equ	4023	;# 
   709   000FB8                     BAUDCON         equ	4024	;# 
   710   000FB8                     BAUDCTL         equ	4024	;# 
   711   000FBA                     CCP2CON         equ	4026	;# 
   712   000FBB                     CCPR2           equ	4027	;# 
   713   000FBB                     CCPR2L          equ	4027	;# 
   714   000FBC                     CCPR2H          equ	4028	;# 
   715   000FBD                     CCP1CON         equ	4029	;# 
   716   000FBE                     CCPR1           equ	4030	;# 
   717   000FBE                     CCPR1L          equ	4030	;# 
   718   000FBF                     CCPR1H          equ	4031	;# 
   719   000FC0                     ADCON2          equ	4032	;# 
   720   000FC1                     ADCON1          equ	4033	;# 
   721   000FC2                     ADCON0          equ	4034	;# 
   722   000FC3                     ADRES           equ	4035	;# 
   723   000FC3                     ADRESL          equ	4035	;# 
   724   000FC4                     ADRESH          equ	4036	;# 
   725   000FC5                     SSPCON2         equ	4037	;# 
   726   000FC6                     SSPCON1         equ	4038	;# 
   727   000FC7                     SSPSTAT         equ	4039	;# 
   728   000FC8                     SSPADD          equ	4040	;# 
   729   000FC9                     SSPBUF          equ	4041	;# 
   730   000FCA                     T2CON           equ	4042	;# 
   731   000FCB                     PR2             equ	4043	;# 
   732   000FCB                     MEMCON          equ	4043	;# 
   733   000FCC                     TMR2            equ	4044	;# 
   734   000FCD                     T1CON           equ	4045	;# 
   735   000FCE                     TMR1            equ	4046	;# 
   736   000FCE                     TMR1L           equ	4046	;# 
   737   000FCF                     TMR1H           equ	4047	;# 
   738   000FD0                     RCON            equ	4048	;# 
   739   000FD1                     WDTCON          equ	4049	;# 
   740   000FD2                     HLVDCON         equ	4050	;# 
   741   000FD2                     LVDCON          equ	4050	;# 
   742   000FD3                     OSCCON          equ	4051	;# 
   743   000FD5                     T0CON           equ	4053	;# 
   744   000FD6                     TMR0            equ	4054	;# 
   745   000FD6                     TMR0L           equ	4054	;# 
   746   000FD7                     TMR0H           equ	4055	;# 
   747   000FD8                     STATUS          equ	4056	;# 
   748   000FD9                     FSR2            equ	4057	;# 
   749   000FD9                     FSR2L           equ	4057	;# 
   750   000FDA                     FSR2H           equ	4058	;# 
   751   000FDB                     PLUSW2          equ	4059	;# 
   752   000FDC                     PREINC2         equ	4060	;# 
   753   000FDD                     POSTDEC2        equ	4061	;# 
   754   000FDE                     POSTINC2        equ	4062	;# 
   755   000FDF                     INDF2           equ	4063	;# 
   756   000FE0                     BSR             equ	4064	;# 
   757   000FE1                     FSR1            equ	4065	;# 
   758   000FE1                     FSR1L           equ	4065	;# 
   759   000FE2                     FSR1H           equ	4066	;# 
   760   000FE3                     PLUSW1          equ	4067	;# 
   761   000FE4                     PREINC1         equ	4068	;# 
   762   000FE5                     POSTDEC1        equ	4069	;# 
   763   000FE6                     POSTINC1        equ	4070	;# 
   764   000FE7                     INDF1           equ	4071	;# 
   765   000FE8                     WREG            equ	4072	;# 
   766   000FE9                     FSR0            equ	4073	;# 
   767   000FE9                     FSR0L           equ	4073	;# 
   768   000FEA                     FSR0H           equ	4074	;# 
   769   000FEB                     PLUSW0          equ	4075	;# 
   770   000FEC                     PREINC0         equ	4076	;# 
   771   000FED                     POSTDEC0        equ	4077	;# 
   772   000FEE                     POSTINC0        equ	4078	;# 
   773   000FEF                     INDF0           equ	4079	;# 
   774   000FF0                     INTCON3         equ	4080	;# 
   775   000FF1                     INTCON2         equ	4081	;# 
   776   000FF2                     INTCON          equ	4082	;# 
   777   000FF3                     PROD            equ	4083	;# 
   778   000FF3                     PRODL           equ	4083	;# 
   779   000FF4                     PRODH           equ	4084	;# 
   780   000FF5                     TABLAT          equ	4085	;# 
   781   000FF6                     TBLPTR          equ	4086	;# 
   782   000FF6                     TBLPTRL         equ	4086	;# 
   783   000FF7                     TBLPTRH         equ	4087	;# 
   784   000FF8                     TBLPTRU         equ	4088	;# 
   785   000FF9                     PCLAT           equ	4089	;# 
   786   000FF9                     PC              equ	4089	;# 
   787   000FF9                     PCL             equ	4089	;# 
   788   000FFA                     PCLATH          equ	4090	;# 
   789   000FFB                     PCLATU          equ	4091	;# 
   790   000FFC                     STKPTR          equ	4092	;# 
   791   000FFD                     TOS             equ	4093	;# 
   792   000FFD                     TOSL            equ	4093	;# 
   793   000FFE                     TOSH            equ	4094	;# 
   794   000FFF                     TOSU            equ	4095	;# 
   795   000F80                     PORTA           equ	3968	;# 
   796   000F81                     PORTB           equ	3969	;# 
   797   000F82                     PORTC           equ	3970	;# 
   798   000F83                     PORTD           equ	3971	;# 
   799   000F84                     PORTE           equ	3972	;# 
   800   000F89                     LATA            equ	3977	;# 
   801   000F8A                     LATB            equ	3978	;# 
   802   000F8B                     LATC            equ	3979	;# 
   803   000F8C                     LATD            equ	3980	;# 
   804   000F8D                     LATE            equ	3981	;# 
   805   000F92                     TRISA           equ	3986	;# 
   806   000F92                     DDRA            equ	3986	;# 
   807   000F93                     TRISB           equ	3987	;# 
   808   000F93                     DDRB            equ	3987	;# 
   809   000F94                     TRISC           equ	3988	;# 
   810   000F94                     DDRC            equ	3988	;# 
   811   000F95                     TRISD           equ	3989	;# 
   812   000F95                     DDRD            equ	3989	;# 
   813   000F96                     TRISE           equ	3990	;# 
   814   000F96                     DDRE            equ	3990	;# 
   815   000F9B                     OSCTUNE         equ	3995	;# 
   816   000F9D                     PIE1            equ	3997	;# 
   817   000F9E                     PIR1            equ	3998	;# 
   818   000F9F                     IPR1            equ	3999	;# 
   819   000FA0                     PIE2            equ	4000	;# 
   820   000FA1                     PIR2            equ	4001	;# 
   821   000FA2                     IPR2            equ	4002	;# 
   822   000FA6                     EECON1          equ	4006	;# 
   823   000FA7                     EECON2          equ	4007	;# 
   824   000FA8                     EEDATA          equ	4008	;# 
   825   000FA9                     EEADR           equ	4009	;# 
   826   000FAA                     EEADRH          equ	4010	;# 
   827   000FAB                     RCSTA           equ	4011	;# 
   828   000FAB                     RCSTA1          equ	4011	;# 
   829   000FAC                     TXSTA           equ	4012	;# 
   830   000FAC                     TXSTA1          equ	4012	;# 
   831   000FAD                     TXREG           equ	4013	;# 
   832   000FAD                     TXREG1          equ	4013	;# 
   833   000FAE                     RCREG           equ	4014	;# 
   834   000FAE                     RCREG1          equ	4014	;# 
   835   000FAF                     SPBRG           equ	4015	;# 
   836   000FAF                     SPBRG1          equ	4015	;# 
   837   000FB0                     SPBRGH          equ	4016	;# 
   838   000FB1                     T3CON           equ	4017	;# 
   839   000FB2                     TMR3            equ	4018	;# 
   840   000FB2                     TMR3L           equ	4018	;# 
   841   000FB3                     TMR3H           equ	4019	;# 
   842   000FB4                     CMCON           equ	4020	;# 
   843   000FB5                     CVRCON          equ	4021	;# 
   844   000FB6                     ECCP1AS         equ	4022	;# 
   845   000FB7                     PWM1CON         equ	4023	;# 
   846   000FB8                     BAUDCON         equ	4024	;# 
   847   000FB8                     BAUDCTL         equ	4024	;# 
   848   000FBA                     CCP2CON         equ	4026	;# 
   849   000FBB                     CCPR2           equ	4027	;# 
   850   000FBB                     CCPR2L          equ	4027	;# 
   851   000FBC                     CCPR2H          equ	4028	;# 
   852   000FBD                     CCP1CON         equ	4029	;# 
   853   000FBE                     CCPR1           equ	4030	;# 
   854   000FBE                     CCPR1L          equ	4030	;# 
   855   000FBF                     CCPR1H          equ	4031	;# 
   856   000FC0                     ADCON2          equ	4032	;# 
   857   000FC1                     ADCON1          equ	4033	;# 
   858   000FC2                     ADCON0          equ	4034	;# 
   859   000FC3                     ADRES           equ	4035	;# 
   860   000FC3                     ADRESL          equ	4035	;# 
   861   000FC4                     ADRESH          equ	4036	;# 
   862   000FC5                     SSPCON2         equ	4037	;# 
   863   000FC6                     SSPCON1         equ	4038	;# 
   864   000FC7                     SSPSTAT         equ	4039	;# 
   865   000FC8                     SSPADD          equ	4040	;# 
   866   000FC9                     SSPBUF          equ	4041	;# 
   867   000FCA                     T2CON           equ	4042	;# 
   868   000FCB                     PR2             equ	4043	;# 
   869   000FCB                     MEMCON          equ	4043	;# 
   870   000FCC                     TMR2            equ	4044	;# 
   871   000FCD                     T1CON           equ	4045	;# 
   872   000FCE                     TMR1            equ	4046	;# 
   873   000FCE                     TMR1L           equ	4046	;# 
   874   000FCF                     TMR1H           equ	4047	;# 
   875   000FD0                     RCON            equ	4048	;# 
   876   000FD1                     WDTCON          equ	4049	;# 
   877   000FD2                     HLVDCON         equ	4050	;# 
   878   000FD2                     LVDCON          equ	4050	;# 
   879   000FD3                     OSCCON          equ	4051	;# 
   880   000FD5                     T0CON           equ	4053	;# 
   881   000FD6                     TMR0            equ	4054	;# 
   882   000FD6                     TMR0L           equ	4054	;# 
   883   000FD7                     TMR0H           equ	4055	;# 
   884   000FD8                     STATUS          equ	4056	;# 
   885   000FD9                     FSR2            equ	4057	;# 
   886   000FD9                     FSR2L           equ	4057	;# 
   887   000FDA                     FSR2H           equ	4058	;# 
   888   000FDB                     PLUSW2          equ	4059	;# 
   889   000FDC                     PREINC2         equ	4060	;# 
   890   000FDD                     POSTDEC2        equ	4061	;# 
   891   000FDE                     POSTINC2        equ	4062	;# 
   892   000FDF                     INDF2           equ	4063	;# 
   893   000FE0                     BSR             equ	4064	;# 
   894   000FE1                     FSR1            equ	4065	;# 
   895   000FE1                     FSR1L           equ	4065	;# 
   896   000FE2                     FSR1H           equ	4066	;# 
   897   000FE3                     PLUSW1          equ	4067	;# 
   898   000FE4                     PREINC1         equ	4068	;# 
   899   000FE5                     POSTDEC1        equ	4069	;# 
   900   000FE6                     POSTINC1        equ	4070	;# 
   901   000FE7                     INDF1           equ	4071	;# 
   902   000FE8                     WREG            equ	4072	;# 
   903   000FE9                     FSR0            equ	4073	;# 
   904   000FE9                     FSR0L           equ	4073	;# 
   905   000FEA                     FSR0H           equ	4074	;# 
   906   000FEB                     PLUSW0          equ	4075	;# 
   907   000FEC                     PREINC0         equ	4076	;# 
   908   000FED                     POSTDEC0        equ	4077	;# 
   909   000FEE                     POSTINC0        equ	4078	;# 
   910   000FEF                     INDF0           equ	4079	;# 
   911   000FF0                     INTCON3         equ	4080	;# 
   912   000FF1                     INTCON2         equ	4081	;# 
   913   000FF2                     INTCON          equ	4082	;# 
   914   000FF3                     PROD            equ	4083	;# 
   915   000FF3                     PRODL           equ	4083	;# 
   916   000FF4                     PRODH           equ	4084	;# 
   917   000FF5                     TABLAT          equ	4085	;# 
   918   000FF6                     TBLPTR          equ	4086	;# 
   919   000FF6                     TBLPTRL         equ	4086	;# 
   920   000FF7                     TBLPTRH         equ	4087	;# 
   921   000FF8                     TBLPTRU         equ	4088	;# 
   922   000FF9                     PCLAT           equ	4089	;# 
   923   000FF9                     PC              equ	4089	;# 
   924   000FF9                     PCL             equ	4089	;# 
   925   000FFA                     PCLATH          equ	4090	;# 
   926   000FFB                     PCLATU          equ	4091	;# 
   927   000FFC                     STKPTR          equ	4092	;# 
   928   000FFD                     TOS             equ	4093	;# 
   929   000FFD                     TOSL            equ	4093	;# 
   930   000FFE                     TOSH            equ	4094	;# 
   931   000FFF                     TOSU            equ	4095	;# 
   932   000F80                     PORTA           equ	3968	;# 
   933   000F81                     PORTB           equ	3969	;# 
   934   000F82                     PORTC           equ	3970	;# 
   935   000F83                     PORTD           equ	3971	;# 
   936   000F84                     PORTE           equ	3972	;# 
   937   000F89                     LATA            equ	3977	;# 
   938   000F8A                     LATB            equ	3978	;# 
   939   000F8B                     LATC            equ	3979	;# 
   940   000F8C                     LATD            equ	3980	;# 
   941   000F8D                     LATE            equ	3981	;# 
   942   000F92                     TRISA           equ	3986	;# 
   943   000F92                     DDRA            equ	3986	;# 
   944   000F93                     TRISB           equ	3987	;# 
   945   000F93                     DDRB            equ	3987	;# 
   946   000F94                     TRISC           equ	3988	;# 
   947   000F94                     DDRC            equ	3988	;# 
   948   000F95                     TRISD           equ	3989	;# 
   949   000F95                     DDRD            equ	3989	;# 
   950   000F96                     TRISE           equ	3990	;# 
   951   000F96                     DDRE            equ	3990	;# 
   952   000F9B                     OSCTUNE         equ	3995	;# 
   953   000F9D                     PIE1            equ	3997	;# 
   954   000F9E                     PIR1            equ	3998	;# 
   955   000F9F                     IPR1            equ	3999	;# 
   956   000FA0                     PIE2            equ	4000	;# 
   957   000FA1                     PIR2            equ	4001	;# 
   958   000FA2                     IPR2            equ	4002	;# 
   959   000FA6                     EECON1          equ	4006	;# 
   960   000FA7                     EECON2          equ	4007	;# 
   961   000FA8                     EEDATA          equ	4008	;# 
   962   000FA9                     EEADR           equ	4009	;# 
   963   000FAA                     EEADRH          equ	4010	;# 
   964   000FAB                     RCSTA           equ	4011	;# 
   965   000FAB                     RCSTA1          equ	4011	;# 
   966   000FAC                     TXSTA           equ	4012	;# 
   967   000FAC                     TXSTA1          equ	4012	;# 
   968   000FAD                     TXREG           equ	4013	;# 
   969   000FAD                     TXREG1          equ	4013	;# 
   970   000FAE                     RCREG           equ	4014	;# 
   971   000FAE                     RCREG1          equ	4014	;# 
   972   000FAF                     SPBRG           equ	4015	;# 
   973   000FAF                     SPBRG1          equ	4015	;# 
   974   000FB0                     SPBRGH          equ	4016	;# 
   975   000FB1                     T3CON           equ	4017	;# 
   976   000FB2                     TMR3            equ	4018	;# 
   977   000FB2                     TMR3L           equ	4018	;# 
   978   000FB3                     TMR3H           equ	4019	;# 
   979   000FB4                     CMCON           equ	4020	;# 
   980   000FB5                     CVRCON          equ	4021	;# 
   981   000FB6                     ECCP1AS         equ	4022	;# 
   982   000FB7                     PWM1CON         equ	4023	;# 
   983   000FB8                     BAUDCON         equ	4024	;# 
   984   000FB8                     BAUDCTL         equ	4024	;# 
   985   000FBA                     CCP2CON         equ	4026	;# 
   986   000FBB                     CCPR2           equ	4027	;# 
   987   000FBB                     CCPR2L          equ	4027	;# 
   988   000FBC                     CCPR2H          equ	4028	;# 
   989   000FBD                     CCP1CON         equ	4029	;# 
   990   000FBE                     CCPR1           equ	4030	;# 
   991   000FBE                     CCPR1L          equ	4030	;# 
   992   000FBF                     CCPR1H          equ	4031	;# 
   993   000FC0                     ADCON2          equ	4032	;# 
   994   000FC1                     ADCON1          equ	4033	;# 
   995   000FC2                     ADCON0          equ	4034	;# 
   996   000FC3                     ADRES           equ	4035	;# 
   997   000FC3                     ADRESL          equ	4035	;# 
   998   000FC4                     ADRESH          equ	4036	;# 
   999   000FC5                     SSPCON2         equ	4037	;# 
  1000   000FC6                     SSPCON1         equ	4038	;# 
  1001   000FC7                     SSPSTAT         equ	4039	;# 
  1002   000FC8                     SSPADD          equ	4040	;# 
  1003   000FC9                     SSPBUF          equ	4041	;# 
  1004   000FCA                     T2CON           equ	4042	;# 
  1005   000FCB                     PR2             equ	4043	;# 
  1006   000FCB                     MEMCON          equ	4043	;# 
  1007   000FCC                     TMR2            equ	4044	;# 
  1008   000FCD                     T1CON           equ	4045	;# 
  1009   000FCE                     TMR1            equ	4046	;# 
  1010   000FCE                     TMR1L           equ	4046	;# 
  1011   000FCF                     TMR1H           equ	4047	;# 
  1012   000FD0                     RCON            equ	4048	;# 
  1013   000FD1                     WDTCON          equ	4049	;# 
  1014   000FD2                     HLVDCON         equ	4050	;# 
  1015   000FD2                     LVDCON          equ	4050	;# 
  1016   000FD3                     OSCCON          equ	4051	;# 
  1017   000FD5                     T0CON           equ	4053	;# 
  1018   000FD6                     TMR0            equ	4054	;# 
  1019   000FD6                     TMR0L           equ	4054	;# 
  1020   000FD7                     TMR0H           equ	4055	;# 
  1021   000FD8                     STATUS          equ	4056	;# 
  1022   000FD9                     FSR2            equ	4057	;# 
  1023   000FD9                     FSR2L           equ	4057	;# 
  1024   000FDA                     FSR2H           equ	4058	;# 
  1025   000FDB                     PLUSW2          equ	4059	;# 
  1026   000FDC                     PREINC2         equ	4060	;# 
  1027   000FDD                     POSTDEC2        equ	4061	;# 
  1028   000FDE                     POSTINC2        equ	4062	;# 
  1029   000FDF                     INDF2           equ	4063	;# 
  1030   000FE0                     BSR             equ	4064	;# 
  1031   000FE1                     FSR1            equ	4065	;# 
  1032   000FE1                     FSR1L           equ	4065	;# 
  1033   000FE2                     FSR1H           equ	4066	;# 
  1034   000FE3                     PLUSW1          equ	4067	;# 
  1035   000FE4                     PREINC1         equ	4068	;# 
  1036   000FE5                     POSTDEC1        equ	4069	;# 
  1037   000FE6                     POSTINC1        equ	4070	;# 
  1038   000FE7                     INDF1           equ	4071	;# 
  1039   000FE8                     WREG            equ	4072	;# 
  1040   000FE9                     FSR0            equ	4073	;# 
  1041   000FE9                     FSR0L           equ	4073	;# 
  1042   000FEA                     FSR0H           equ	4074	;# 
  1043   000FEB                     PLUSW0          equ	4075	;# 
  1044   000FEC                     PREINC0         equ	4076	;# 
  1045   000FED                     POSTDEC0        equ	4077	;# 
  1046   000FEE                     POSTINC0        equ	4078	;# 
  1047   000FEF                     INDF0           equ	4079	;# 
  1048   000FF0                     INTCON3         equ	4080	;# 
  1049   000FF1                     INTCON2         equ	4081	;# 
  1050   000FF2                     INTCON          equ	4082	;# 
  1051   000FF3                     PROD            equ	4083	;# 
  1052   000FF3                     PRODL           equ	4083	;# 
  1053   000FF4                     PRODH           equ	4084	;# 
  1054   000FF5                     TABLAT          equ	4085	;# 
  1055   000FF6                     TBLPTR          equ	4086	;# 
  1056   000FF6                     TBLPTRL         equ	4086	;# 
  1057   000FF7                     TBLPTRH         equ	4087	;# 
  1058   000FF8                     TBLPTRU         equ	4088	;# 
  1059   000FF9                     PCLAT           equ	4089	;# 
  1060   000FF9                     PC              equ	4089	;# 
  1061   000FF9                     PCL             equ	4089	;# 
  1062   000FFA                     PCLATH          equ	4090	;# 
  1063   000FFB                     PCLATU          equ	4091	;# 
  1064   000FFC                     STKPTR          equ	4092	;# 
  1065   000FFD                     TOS             equ	4093	;# 
  1066   000FFD                     TOSL            equ	4093	;# 
  1067   000FFE                     TOSH            equ	4094	;# 
  1068   000FFF                     TOSU            equ	4095	;# 
  1069   000F80                     PORTA           equ	3968	;# 
  1070   000F81                     PORTB           equ	3969	;# 
  1071   000F82                     PORTC           equ	3970	;# 
  1072   000F83                     PORTD           equ	3971	;# 
  1073   000F84                     PORTE           equ	3972	;# 
  1074   000F89                     LATA            equ	3977	;# 
  1075   000F8A                     LATB            equ	3978	;# 
  1076   000F8B                     LATC            equ	3979	;# 
  1077   000F8C                     LATD            equ	3980	;# 
  1078   000F8D                     LATE            equ	3981	;# 
  1079   000F92                     TRISA           equ	3986	;# 
  1080   000F92                     DDRA            equ	3986	;# 
  1081   000F93                     TRISB           equ	3987	;# 
  1082   000F93                     DDRB            equ	3987	;# 
  1083   000F94                     TRISC           equ	3988	;# 
  1084   000F94                     DDRC            equ	3988	;# 
  1085   000F95                     TRISD           equ	3989	;# 
  1086   000F95                     DDRD            equ	3989	;# 
  1087   000F96                     TRISE           equ	3990	;# 
  1088   000F96                     DDRE            equ	3990	;# 
  1089   000F9B                     OSCTUNE         equ	3995	;# 
  1090   000F9D                     PIE1            equ	3997	;# 
  1091   000F9E                     PIR1            equ	3998	;# 
  1092   000F9F                     IPR1            equ	3999	;# 
  1093   000FA0                     PIE2            equ	4000	;# 
  1094   000FA1                     PIR2            equ	4001	;# 
  1095   000FA2                     IPR2            equ	4002	;# 
  1096   000FA6                     EECON1          equ	4006	;# 
  1097   000FA7                     EECON2          equ	4007	;# 
  1098   000FA8                     EEDATA          equ	4008	;# 
  1099   000FA9                     EEADR           equ	4009	;# 
  1100   000FAA                     EEADRH          equ	4010	;# 
  1101   000FAB                     RCSTA           equ	4011	;# 
  1102   000FAB                     RCSTA1          equ	4011	;# 
  1103   000FAC                     TXSTA           equ	4012	;# 
  1104   000FAC                     TXSTA1          equ	4012	;# 
  1105   000FAD                     TXREG           equ	4013	;# 
  1106   000FAD                     TXREG1          equ	4013	;# 
  1107   000FAE                     RCREG           equ	4014	;# 
  1108   000FAE                     RCREG1          equ	4014	;# 
  1109   000FAF                     SPBRG           equ	4015	;# 
  1110   000FAF                     SPBRG1          equ	4015	;# 
  1111   000FB0                     SPBRGH          equ	4016	;# 
  1112   000FB1                     T3CON           equ	4017	;# 
  1113   000FB2                     TMR3            equ	4018	;# 
  1114   000FB2                     TMR3L           equ	4018	;# 
  1115   000FB3                     TMR3H           equ	4019	;# 
  1116   000FB4                     CMCON           equ	4020	;# 
  1117   000FB5                     CVRCON          equ	4021	;# 
  1118   000FB6                     ECCP1AS         equ	4022	;# 
  1119   000FB7                     PWM1CON         equ	4023	;# 
  1120   000FB8                     BAUDCON         equ	4024	;# 
  1121   000FB8                     BAUDCTL         equ	4024	;# 
  1122   000FBA                     CCP2CON         equ	4026	;# 
  1123   000FBB                     CCPR2           equ	4027	;# 
  1124   000FBB                     CCPR2L          equ	4027	;# 
  1125   000FBC                     CCPR2H          equ	4028	;# 
  1126   000FBD                     CCP1CON         equ	4029	;# 
  1127   000FBE                     CCPR1           equ	4030	;# 
  1128   000FBE                     CCPR1L          equ	4030	;# 
  1129   000FBF                     CCPR1H          equ	4031	;# 
  1130   000FC0                     ADCON2          equ	4032	;# 
  1131   000FC1                     ADCON1          equ	4033	;# 
  1132   000FC2                     ADCON0          equ	4034	;# 
  1133   000FC3                     ADRES           equ	4035	;# 
  1134   000FC3                     ADRESL          equ	4035	;# 
  1135   000FC4                     ADRESH          equ	4036	;# 
  1136   000FC5                     SSPCON2         equ	4037	;# 
  1137   000FC6                     SSPCON1         equ	4038	;# 
  1138   000FC7                     SSPSTAT         equ	4039	;# 
  1139   000FC8                     SSPADD          equ	4040	;# 
  1140   000FC9                     SSPBUF          equ	4041	;# 
  1141   000FCA                     T2CON           equ	4042	;# 
  1142   000FCB                     PR2             equ	4043	;# 
  1143   000FCB                     MEMCON          equ	4043	;# 
  1144   000FCC                     TMR2            equ	4044	;# 
  1145   000FCD                     T1CON           equ	4045	;# 
  1146   000FCE                     TMR1            equ	4046	;# 
  1147   000FCE                     TMR1L           equ	4046	;# 
  1148   000FCF                     TMR1H           equ	4047	;# 
  1149   000FD0                     RCON            equ	4048	;# 
  1150   000FD1                     WDTCON          equ	4049	;# 
  1151   000FD2                     HLVDCON         equ	4050	;# 
  1152   000FD2                     LVDCON          equ	4050	;# 
  1153   000FD3                     OSCCON          equ	4051	;# 
  1154   000FD5                     T0CON           equ	4053	;# 
  1155   000FD6                     TMR0            equ	4054	;# 
  1156   000FD6                     TMR0L           equ	4054	;# 
  1157   000FD7                     TMR0H           equ	4055	;# 
  1158   000FD8                     STATUS          equ	4056	;# 
  1159   000FD9                     FSR2            equ	4057	;# 
  1160   000FD9                     FSR2L           equ	4057	;# 
  1161   000FDA                     FSR2H           equ	4058	;# 
  1162   000FDB                     PLUSW2          equ	4059	;# 
  1163   000FDC                     PREINC2         equ	4060	;# 
  1164   000FDD                     POSTDEC2        equ	4061	;# 
  1165   000FDE                     POSTINC2        equ	4062	;# 
  1166   000FDF                     INDF2           equ	4063	;# 
  1167   000FE0                     BSR             equ	4064	;# 
  1168   000FE1                     FSR1            equ	4065	;# 
  1169   000FE1                     FSR1L           equ	4065	;# 
  1170   000FE2                     FSR1H           equ	4066	;# 
  1171   000FE3                     PLUSW1          equ	4067	;# 
  1172   000FE4                     PREINC1         equ	4068	;# 
  1173   000FE5                     POSTDEC1        equ	4069	;# 
  1174   000FE6                     POSTINC1        equ	4070	;# 
  1175   000FE7                     INDF1           equ	4071	;# 
  1176   000FE8                     WREG            equ	4072	;# 
  1177   000FE9                     FSR0            equ	4073	;# 
  1178   000FE9                     FSR0L           equ	4073	;# 
  1179   000FEA                     FSR0H           equ	4074	;# 
  1180   000FEB                     PLUSW0          equ	4075	;# 
  1181   000FEC                     PREINC0         equ	4076	;# 
  1182   000FED                     POSTDEC0        equ	4077	;# 
  1183   000FEE                     POSTINC0        equ	4078	;# 
  1184   000FEF                     INDF0           equ	4079	;# 
  1185   000FF0                     INTCON3         equ	4080	;# 
  1186   000FF1                     INTCON2         equ	4081	;# 
  1187   000FF2                     INTCON          equ	4082	;# 
  1188   000FF3                     PROD            equ	4083	;# 
  1189   000FF3                     PRODL           equ	4083	;# 
  1190   000FF4                     PRODH           equ	4084	;# 
  1191   000FF5                     TABLAT          equ	4085	;# 
  1192   000FF6                     TBLPTR          equ	4086	;# 
  1193   000FF6                     TBLPTRL         equ	4086	;# 
  1194   000FF7                     TBLPTRH         equ	4087	;# 
  1195   000FF8                     TBLPTRU         equ	4088	;# 
  1196   000FF9                     PCLAT           equ	4089	;# 
  1197   000FF9                     PC              equ	4089	;# 
  1198   000FF9                     PCL             equ	4089	;# 
  1199   000FFA                     PCLATH          equ	4090	;# 
  1200   000FFB                     PCLATU          equ	4091	;# 
  1201   000FFC                     STKPTR          equ	4092	;# 
  1202   000FFD                     TOS             equ	4093	;# 
  1203   000FFD                     TOSL            equ	4093	;# 
  1204   000FFE                     TOSH            equ	4094	;# 
  1205   000FFF                     TOSU            equ	4095	;# 
  1206   000F80                     PORTA           equ	3968	;# 
  1207   000F81                     PORTB           equ	3969	;# 
  1208   000F82                     PORTC           equ	3970	;# 
  1209   000F83                     PORTD           equ	3971	;# 
  1210   000F84                     PORTE           equ	3972	;# 
  1211   000F89                     LATA            equ	3977	;# 
  1212   000F8A                     LATB            equ	3978	;# 
  1213   000F8B                     LATC            equ	3979	;# 
  1214   000F8C                     LATD            equ	3980	;# 
  1215   000F8D                     LATE            equ	3981	;# 
  1216   000F92                     TRISA           equ	3986	;# 
  1217   000F92                     DDRA            equ	3986	;# 
  1218   000F93                     TRISB           equ	3987	;# 
  1219   000F93                     DDRB            equ	3987	;# 
  1220   000F94                     TRISC           equ	3988	;# 
  1221   000F94                     DDRC            equ	3988	;# 
  1222   000F95                     TRISD           equ	3989	;# 
  1223   000F95                     DDRD            equ	3989	;# 
  1224   000F96                     TRISE           equ	3990	;# 
  1225   000F96                     DDRE            equ	3990	;# 
  1226   000F9B                     OSCTUNE         equ	3995	;# 
  1227   000F9D                     PIE1            equ	3997	;# 
  1228   000F9E                     PIR1            equ	3998	;# 
  1229   000F9F                     IPR1            equ	3999	;# 
  1230   000FA0                     PIE2            equ	4000	;# 
  1231   000FA1                     PIR2            equ	4001	;# 
  1232   000FA2                     IPR2            equ	4002	;# 
  1233   000FA6                     EECON1          equ	4006	;# 
  1234   000FA7                     EECON2          equ	4007	;# 
  1235   000FA8                     EEDATA          equ	4008	;# 
  1236   000FA9                     EEADR           equ	4009	;# 
  1237   000FAA                     EEADRH          equ	4010	;# 
  1238   000FAB                     RCSTA           equ	4011	;# 
  1239   000FAB                     RCSTA1          equ	4011	;# 
  1240   000FAC                     TXSTA           equ	4012	;# 
  1241   000FAC                     TXSTA1          equ	4012	;# 
  1242   000FAD                     TXREG           equ	4013	;# 
  1243   000FAD                     TXREG1          equ	4013	;# 
  1244   000FAE                     RCREG           equ	4014	;# 
  1245   000FAE                     RCREG1          equ	4014	;# 
  1246   000FAF                     SPBRG           equ	4015	;# 
  1247   000FAF                     SPBRG1          equ	4015	;# 
  1248   000FB0                     SPBRGH          equ	4016	;# 
  1249   000FB1                     T3CON           equ	4017	;# 
  1250   000FB2                     TMR3            equ	4018	;# 
  1251   000FB2                     TMR3L           equ	4018	;# 
  1252   000FB3                     TMR3H           equ	4019	;# 
  1253   000FB4                     CMCON           equ	4020	;# 
  1254   000FB5                     CVRCON          equ	4021	;# 
  1255   000FB6                     ECCP1AS         equ	4022	;# 
  1256   000FB7                     PWM1CON         equ	4023	;# 
  1257   000FB8                     BAUDCON         equ	4024	;# 
  1258   000FB8                     BAUDCTL         equ	4024	;# 
  1259   000FBA                     CCP2CON         equ	4026	;# 
  1260   000FBB                     CCPR2           equ	4027	;# 
  1261   000FBB                     CCPR2L          equ	4027	;# 
  1262   000FBC                     CCPR2H          equ	4028	;# 
  1263   000FBD                     CCP1CON         equ	4029	;# 
  1264   000FBE                     CCPR1           equ	4030	;# 
  1265   000FBE                     CCPR1L          equ	4030	;# 
  1266   000FBF                     CCPR1H          equ	4031	;# 
  1267   000FC0                     ADCON2          equ	4032	;# 
  1268   000FC1                     ADCON1          equ	4033	;# 
  1269   000FC2                     ADCON0          equ	4034	;# 
  1270   000FC3                     ADRES           equ	4035	;# 
  1271   000FC3                     ADRESL          equ	4035	;# 
  1272   000FC4                     ADRESH          equ	4036	;# 
  1273   000FC5                     SSPCON2         equ	4037	;# 
  1274   000FC6                     SSPCON1         equ	4038	;# 
  1275   000FC7                     SSPSTAT         equ	4039	;# 
  1276   000FC8                     SSPADD          equ	4040	;# 
  1277   000FC9                     SSPBUF          equ	4041	;# 
  1278   000FCA                     T2CON           equ	4042	;# 
  1279   000FCB                     PR2             equ	4043	;# 
  1280   000FCB                     MEMCON          equ	4043	;# 
  1281   000FCC                     TMR2            equ	4044	;# 
  1282   000FCD                     T1CON           equ	4045	;# 
  1283   000FCE                     TMR1            equ	4046	;# 
  1284   000FCE                     TMR1L           equ	4046	;# 
  1285   000FCF                     TMR1H           equ	4047	;# 
  1286   000FD0                     RCON            equ	4048	;# 
  1287   000FD1                     WDTCON          equ	4049	;# 
  1288   000FD2                     HLVDCON         equ	4050	;# 
  1289   000FD2                     LVDCON          equ	4050	;# 
  1290   000FD3                     OSCCON          equ	4051	;# 
  1291   000FD5                     T0CON           equ	4053	;# 
  1292   000FD6                     TMR0            equ	4054	;# 
  1293   000FD6                     TMR0L           equ	4054	;# 
  1294   000FD7                     TMR0H           equ	4055	;# 
  1295   000FD8                     STATUS          equ	4056	;# 
  1296   000FD9                     FSR2            equ	4057	;# 
  1297   000FD9                     FSR2L           equ	4057	;# 
  1298   000FDA                     FSR2H           equ	4058	;# 
  1299   000FDB                     PLUSW2          equ	4059	;# 
  1300   000FDC                     PREINC2         equ	4060	;# 
  1301   000FDD                     POSTDEC2        equ	4061	;# 
  1302   000FDE                     POSTINC2        equ	4062	;# 
  1303   000FDF                     INDF2           equ	4063	;# 
  1304   000FE0                     BSR             equ	4064	;# 
  1305   000FE1                     FSR1            equ	4065	;# 
  1306   000FE1                     FSR1L           equ	4065	;# 
  1307   000FE2                     FSR1H           equ	4066	;# 
  1308   000FE3                     PLUSW1          equ	4067	;# 
  1309   000FE4                     PREINC1         equ	4068	;# 
  1310   000FE5                     POSTDEC1        equ	4069	;# 
  1311   000FE6                     POSTINC1        equ	4070	;# 
  1312   000FE7                     INDF1           equ	4071	;# 
  1313   000FE8                     WREG            equ	4072	;# 
  1314   000FE9                     FSR0            equ	4073	;# 
  1315   000FE9                     FSR0L           equ	4073	;# 
  1316   000FEA                     FSR0H           equ	4074	;# 
  1317   000FEB                     PLUSW0          equ	4075	;# 
  1318   000FEC                     PREINC0         equ	4076	;# 
  1319   000FED                     POSTDEC0        equ	4077	;# 
  1320   000FEE                     POSTINC0        equ	4078	;# 
  1321   000FEF                     INDF0           equ	4079	;# 
  1322   000FF0                     INTCON3         equ	4080	;# 
  1323   000FF1                     INTCON2         equ	4081	;# 
  1324   000FF2                     INTCON          equ	4082	;# 
  1325   000FF3                     PROD            equ	4083	;# 
  1326   000FF3                     PRODL           equ	4083	;# 
  1327   000FF4                     PRODH           equ	4084	;# 
  1328   000FF5                     TABLAT          equ	4085	;# 
  1329   000FF6                     TBLPTR          equ	4086	;# 
  1330   000FF6                     TBLPTRL         equ	4086	;# 
  1331   000FF7                     TBLPTRH         equ	4087	;# 
  1332   000FF8                     TBLPTRU         equ	4088	;# 
  1333   000FF9                     PCLAT           equ	4089	;# 
  1334   000FF9                     PC              equ	4089	;# 
  1335   000FF9                     PCL             equ	4089	;# 
  1336   000FFA                     PCLATH          equ	4090	;# 
  1337   000FFB                     PCLATU          equ	4091	;# 
  1338   000FFC                     STKPTR          equ	4092	;# 
  1339   000FFD                     TOS             equ	4093	;# 
  1340   000FFD                     TOSL            equ	4093	;# 
  1341   000FFE                     TOSH            equ	4094	;# 
  1342   000FFF                     TOSU            equ	4095	;# 
  1343   000F80                     PORTA           equ	3968	;# 
  1344   000F81                     PORTB           equ	3969	;# 
  1345   000F82                     PORTC           equ	3970	;# 
  1346   000F83                     PORTD           equ	3971	;# 
  1347   000F84                     PORTE           equ	3972	;# 
  1348   000F89                     LATA            equ	3977	;# 
  1349   000F8A                     LATB            equ	3978	;# 
  1350   000F8B                     LATC            equ	3979	;# 
  1351   000F8C                     LATD            equ	3980	;# 
  1352   000F8D                     LATE            equ	3981	;# 
  1353   000F92                     TRISA           equ	3986	;# 
  1354   000F92                     DDRA            equ	3986	;# 
  1355   000F93                     TRISB           equ	3987	;# 
  1356   000F93                     DDRB            equ	3987	;# 
  1357   000F94                     TRISC           equ	3988	;# 
  1358   000F94                     DDRC            equ	3988	;# 
  1359   000F95                     TRISD           equ	3989	;# 
  1360   000F95                     DDRD            equ	3989	;# 
  1361   000F96                     TRISE           equ	3990	;# 
  1362   000F96                     DDRE            equ	3990	;# 
  1363   000F9B                     OSCTUNE         equ	3995	;# 
  1364   000F9D                     PIE1            equ	3997	;# 
  1365   000F9E                     PIR1            equ	3998	;# 
  1366   000F9F                     IPR1            equ	3999	;# 
  1367   000FA0                     PIE2            equ	4000	;# 
  1368   000FA1                     PIR2            equ	4001	;# 
  1369   000FA2                     IPR2            equ	4002	;# 
  1370   000FA6                     EECON1          equ	4006	;# 
  1371   000FA7                     EECON2          equ	4007	;# 
  1372   000FA8                     EEDATA          equ	4008	;# 
  1373   000FA9                     EEADR           equ	4009	;# 
  1374   000FAA                     EEADRH          equ	4010	;# 
  1375   000FAB                     RCSTA           equ	4011	;# 
  1376   000FAB                     RCSTA1          equ	4011	;# 
  1377   000FAC                     TXSTA           equ	4012	;# 
  1378   000FAC                     TXSTA1          equ	4012	;# 
  1379   000FAD                     TXREG           equ	4013	;# 
  1380   000FAD                     TXREG1          equ	4013	;# 
  1381   000FAE                     RCREG           equ	4014	;# 
  1382   000FAE                     RCREG1          equ	4014	;# 
  1383   000FAF                     SPBRG           equ	4015	;# 
  1384   000FAF                     SPBRG1          equ	4015	;# 
  1385   000FB0                     SPBRGH          equ	4016	;# 
  1386   000FB1                     T3CON           equ	4017	;# 
  1387   000FB2                     TMR3            equ	4018	;# 
  1388   000FB2                     TMR3L           equ	4018	;# 
  1389   000FB3                     TMR3H           equ	4019	;# 
  1390   000FB4                     CMCON           equ	4020	;# 
  1391   000FB5                     CVRCON          equ	4021	;# 
  1392   000FB6                     ECCP1AS         equ	4022	;# 
  1393   000FB7                     PWM1CON         equ	4023	;# 
  1394   000FB8                     BAUDCON         equ	4024	;# 
  1395   000FB8                     BAUDCTL         equ	4024	;# 
  1396   000FBA                     CCP2CON         equ	4026	;# 
  1397   000FBB                     CCPR2           equ	4027	;# 
  1398   000FBB                     CCPR2L          equ	4027	;# 
  1399   000FBC                     CCPR2H          equ	4028	;# 
  1400   000FBD                     CCP1CON         equ	4029	;# 
  1401   000FBE                     CCPR1           equ	4030	;# 
  1402   000FBE                     CCPR1L          equ	4030	;# 
  1403   000FBF                     CCPR1H          equ	4031	;# 
  1404   000FC0                     ADCON2          equ	4032	;# 
  1405   000FC1                     ADCON1          equ	4033	;# 
  1406   000FC2                     ADCON0          equ	4034	;# 
  1407   000FC3                     ADRES           equ	4035	;# 
  1408   000FC3                     ADRESL          equ	4035	;# 
  1409   000FC4                     ADRESH          equ	4036	;# 
  1410   000FC5                     SSPCON2         equ	4037	;# 
  1411   000FC6                     SSPCON1         equ	4038	;# 
  1412   000FC7                     SSPSTAT         equ	4039	;# 
  1413   000FC8                     SSPADD          equ	4040	;# 
  1414   000FC9                     SSPBUF          equ	4041	;# 
  1415   000FCA                     T2CON           equ	4042	;# 
  1416   000FCB                     PR2             equ	4043	;# 
  1417   000FCB                     MEMCON          equ	4043	;# 
  1418   000FCC                     TMR2            equ	4044	;# 
  1419   000FCD                     T1CON           equ	4045	;# 
  1420   000FCE                     TMR1            equ	4046	;# 
  1421   000FCE                     TMR1L           equ	4046	;# 
  1422   000FCF                     TMR1H           equ	4047	;# 
  1423   000FD0                     RCON            equ	4048	;# 
  1424   000FD1                     WDTCON          equ	4049	;# 
  1425   000FD2                     HLVDCON         equ	4050	;# 
  1426   000FD2                     LVDCON          equ	4050	;# 
  1427   000FD3                     OSCCON          equ	4051	;# 
  1428   000FD5                     T0CON           equ	4053	;# 
  1429   000FD6                     TMR0            equ	4054	;# 
  1430   000FD6                     TMR0L           equ	4054	;# 
  1431   000FD7                     TMR0H           equ	4055	;# 
  1432   000FD8                     STATUS          equ	4056	;# 
  1433   000FD9                     FSR2            equ	4057	;# 
  1434   000FD9                     FSR2L           equ	4057	;# 
  1435   000FDA                     FSR2H           equ	4058	;# 
  1436   000FDB                     PLUSW2          equ	4059	;# 
  1437   000FDC                     PREINC2         equ	4060	;# 
  1438   000FDD                     POSTDEC2        equ	4061	;# 
  1439   000FDE                     POSTINC2        equ	4062	;# 
  1440   000FDF                     INDF2           equ	4063	;# 
  1441   000FE0                     BSR             equ	4064	;# 
  1442   000FE1                     FSR1            equ	4065	;# 
  1443   000FE1                     FSR1L           equ	4065	;# 
  1444   000FE2                     FSR1H           equ	4066	;# 
  1445   000FE3                     PLUSW1          equ	4067	;# 
  1446   000FE4                     PREINC1         equ	4068	;# 
  1447   000FE5                     POSTDEC1        equ	4069	;# 
  1448   000FE6                     POSTINC1        equ	4070	;# 
  1449   000FE7                     INDF1           equ	4071	;# 
  1450   000FE8                     WREG            equ	4072	;# 
  1451   000FE9                     FSR0            equ	4073	;# 
  1452   000FE9                     FSR0L           equ	4073	;# 
  1453   000FEA                     FSR0H           equ	4074	;# 
  1454   000FEB                     PLUSW0          equ	4075	;# 
  1455   000FEC                     PREINC0         equ	4076	;# 
  1456   000FED                     POSTDEC0        equ	4077	;# 
  1457   000FEE                     POSTINC0        equ	4078	;# 
  1458   000FEF                     INDF0           equ	4079	;# 
  1459   000FF0                     INTCON3         equ	4080	;# 
  1460   000FF1                     INTCON2         equ	4081	;# 
  1461   000FF2                     INTCON          equ	4082	;# 
  1462   000FF3                     PROD            equ	4083	;# 
  1463   000FF3                     PRODL           equ	4083	;# 
  1464   000FF4                     PRODH           equ	4084	;# 
  1465   000FF5                     TABLAT          equ	4085	;# 
  1466   000FF6                     TBLPTR          equ	4086	;# 
  1467   000FF6                     TBLPTRL         equ	4086	;# 
  1468   000FF7                     TBLPTRH         equ	4087	;# 
  1469   000FF8                     TBLPTRU         equ	4088	;# 
  1470   000FF9                     PCLAT           equ	4089	;# 
  1471   000FF9                     PC              equ	4089	;# 
  1472   000FF9                     PCL             equ	4089	;# 
  1473   000FFA                     PCLATH          equ	4090	;# 
  1474   000FFB                     PCLATU          equ	4091	;# 
  1475   000FFC                     STKPTR          equ	4092	;# 
  1476   000FFD                     TOS             equ	4093	;# 
  1477   000FFD                     TOSL            equ	4093	;# 
  1478   000FFE                     TOSH            equ	4094	;# 
  1479   000FFF                     TOSU            equ	4095	;# 
  1480                           
  1481                           	psect	idataCOMRAM
  1482   001D62                     __pidataCOMRAM:
  1483                           	callstack 0
  1484                           
  1485                           ;initializer for _KeyPad1
  1486   001D62  42                 	db	66
  1487   001D63  4A                 	db	74
  1488   001D64  52                 	db	82
  1489   001D65  5A                 	db	90
  1490   001D66  22                 	db	34
  1491   001D67  2A                 	db	42
  1492   001D68  32                 	db	50
  1493   001D69  3A                 	db	58
  1494                           
  1495                           ;initializer for _LCD1_4Bit
  1496   001D6A  41                 	db	65
  1497   001D6B  49                 	db	73
  1498   001D6C  51                 	db	81
  1499   001D6D  59                 	db	89
  1500   001D6E  61                 	db	97
  1501   001D6F  69                 	db	105
  1502                           
  1503                           ;initializer for _Seg1
  1504   001D70  41                 	db	65
  1505   001D71  49                 	db	73
  1506   001D72  51                 	db	81
  1507   001D73  59                 	db	89
  1508   001D74  00                 	db	0
  1509                           
  1510                           ;initializer for _BTN1
  1511   001D75  01                 	db	1
  1512   001D76  01                 	db	1
  1513   001D77  00                 	db	0
  1514                           
  1515                           ;initializer for _Motor2
  1516   001D78  21                 	db	33
  1517   001D79  31                 	db	49
  1518                           
  1519                           ;initializer for _Motor1
  1520   001D7A  01                 	db	1
  1521   001D7B  11                 	db	17
  1522                           
  1523                           ;initializer for _Num
  1524   001D7C  14                 	db	20
  1525                           
  1526                           ;initializer for _LCD1_8Bit
  1527   001D7D  42                 	db	66
  1528   001D7E  4A                 	db	74
  1529   001D7F  43                 	db	67
  1530   001D80  4B                 	db	75
  1531   001D81  53                 	db	83
  1532   001D82  5B                 	db	91
  1533   001D83  63                 	db	99
  1534   001D84  6B                 	db	107
  1535   001D85  73                 	db	115
  1536   001D86  7B                 	db	123
  1537                           
  1538                           	psect	smallconst
  1539   001000                     __psmallconst:
  1540                           	callstack 0
  1541   001000  00                 	db	0
  1542   001001                     _btn_Value:
  1543                           	callstack 0
  1544   001001  07                 	db	7
  1545   001002  08                 	db	8
  1546   001003  09                 	db	9
  1547   001004  2F                 	db	47
  1548   001005  04                 	db	4
  1549   001006  05                 	db	5
  1550   001007  06                 	db	6
  1551   001008  2A                 	db	42
  1552   001009  01                 	db	1
  1553   00100A  02                 	db	2
  1554   00100B  03                 	db	3
  1555   00100C  2D                 	db	45
  1556   00100D  23                 	db	35
  1557   00100E  00                 	db	0
  1558   00100F  3D                 	db	61
  1559   001010  2B                 	db	43
  1560   001011                     __end_of_btn_Value:
  1561                           	callstack 0
  1562   000F84                     _PORTE          set	3972
  1563   000F83                     _PORTD          set	3971
  1564   000F82                     _PORTC          set	3970
  1565   000F81                     _PORTB          set	3969
  1566   000F80                     _PORTA          set	3968
  1567   000F8D                     _LATE           set	3981
  1568   000F8C                     _LATD           set	3980
  1569   000F8B                     _LATC           set	3979
  1570   000F8A                     _LATB           set	3978
  1571   000F89                     _LATA           set	3977
  1572   000F96                     _TRISE          set	3990
  1573   000F95                     _TRISD          set	3989
  1574   000F94                     _TRISC          set	3988
  1575   000F93                     _TRISB          set	3987
  1576   000F92                     _TRISA          set	3986
  1577   001011                     STR_1:
  1578   001011  25                 	db	37
  1579   001012  69                 	db	105	;'i'
  1580   001013  00                 	db	0
  1581   001011                     STR_2           equ	STR_1
  1582   001011                     STR_3           equ	STR_1
  1583   001014  00                 	db	0	; dummy byte at the end
  1584   000002                     __activetblptr  equ	2
  1585                           
  1586                           ; #config settings
  1587                           
  1588                           	psect	cinit
  1589   001B6A                     __pcinit:
  1590                           	callstack 0
  1591   001B6A                     start_initialization:
  1592                           	callstack 0
  1593   001B6A                     __initialization:
  1594                           	callstack 0
  1595                           
  1596                           ; Initialize objects allocated to COMRAM (37 bytes)
  1597                           ; load TBLPTR registers with __pidataCOMRAM
  1598   001B6A  0E62               	movlw	low __pidataCOMRAM
  1599   001B6C  6EF6               	movwf	tblptrl,c
  1600   001B6E  0E1D               	movlw	high __pidataCOMRAM
  1601   001B70  6EF7               	movwf	tblptrh,c
  1602   001B72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1603   001B74  6EF8               	movwf	tblptru,c
  1604   001B76  EE00  F02E         	lfsr	0,__pdataCOMRAM
  1605   001B7A  EE10 F025          	lfsr	1,37
  1606   001B7E                     copy_data0:
  1607   001B7E  0009               	tblrd		*+
  1608   001B80  CFF5 FFEE          	movff	tablat,postinc0
  1609   001B84  50E5               	movf	postdec1,w,c
  1610   001B86  50E1               	movf	fsr1l,w,c
  1611   001B88  E1FA               	bnz	copy_data0
  1612                           
  1613                           ; Clear objects allocated to BANK0 (32 bytes)
  1614   001B8A  EE00  F080         	lfsr	0,__pbssBANK0
  1615   001B8E  0E20               	movlw	32
  1616   001B90                     clear_0:
  1617   001B90  6AEE               	clrf	postinc0,c
  1618   001B92  06E8               	decf	wreg,f,c
  1619   001B94  E1FD               	bnz	clear_0
  1620                           
  1621                           ; Clear objects allocated to COMRAM (22 bytes)
  1622   001B96  EE00  F053         	lfsr	0,__pbssCOMRAM
  1623   001B9A  0E16               	movlw	22
  1624   001B9C                     clear_1:
  1625   001B9C  6AEE               	clrf	postinc0,c
  1626   001B9E  06E8               	decf	wreg,f,c
  1627   001BA0  E1FD               	bnz	clear_1
  1628   001BA2                     end_of_initialization:
  1629                           	callstack 0
  1630   001BA2                     __end_of__initialization:
  1631                           	callstack 0
  1632   001BA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1633   001BA4  6EF8               	movwf	tblptru,c
  1634   001BA6  0100               	movlb	0
  1635   001BA8  EF9E  F00E         	goto	_main	;jump to C main() function
  1636                           
  1637                           	psect	bssCOMRAM
  1638   000053                     __pbssCOMRAM:
  1639                           	callstack 0
  1640   000053                     _width:
  1641                           	callstack 0
  1642   000053                     	ds	2
  1643   000055                     _prec:
  1644                           	callstack 0
  1645   000055                     	ds	2
  1646   000057                     _RetValue_BTN:
  1647                           	callstack 0
  1648   000057                     	ds	2
  1649   000059                     _RetValue_KeyPad:
  1650                           	callstack 0
  1651   000059                     	ds	2
  1652   00005B                     _flags:
  1653                           	callstack 0
  1654   00005B                     	ds	1
  1655   00005C                     HALL_Relay_turnOFF@F3064:
  1656                           	callstack 0
  1657   00005C                     	ds	1
  1658   00005D                     HALL_Relay_turnON@F3059:
  1659                           	callstack 0
  1660   00005D                     	ds	1
  1661   00005E                     HALL_Relay_init@F3054:
  1662                           	callstack 0
  1663   00005E                     	ds	1
  1664   00005F                     HALL_Led_trunToggle@F3075:
  1665                           	callstack 0
  1666   00005F                     	ds	1
  1667   000060                     HALL_Led_trunOFF@F3070:
  1668                           	callstack 0
  1669   000060                     	ds	1
  1670   000061                     HALL_Led_trunON@F3065:
  1671                           	callstack 0
  1672   000061                     	ds	1
  1673   000062                     HALL_Led_init@F3060:
  1674                           	callstack 0
  1675   000062                     	ds	1
  1676   000063                     _NumArr:
  1677                           	callstack 0
  1678   000063                     	ds	4
  1679   000067                     _objPin_motor_2:
  1680                           	callstack 0
  1681   000067                     	ds	1
  1682   000068                     _objPin_motor_1:
  1683                           	callstack 0
  1684   000068                     	ds	1
  1685                           
  1686                           	psect	dataCOMRAM
  1687   00002E                     __pdataCOMRAM:
  1688                           	callstack 0
  1689   00002E                     _KeyPad1:
  1690                           	callstack 0
  1691   00002E                     	ds	8
  1692   000036                     _LCD1_4Bit:
  1693                           	callstack 0
  1694   000036                     	ds	6
  1695   00003C                     _Seg1:
  1696                           	callstack 0
  1697   00003C                     	ds	5
  1698   000041                     _BTN1:
  1699                           	callstack 0
  1700   000041                     	ds	3
  1701   000044                     _Motor2:
  1702                           	callstack 0
  1703   000044                     	ds	2
  1704   000046                     _Motor1:
  1705                           	callstack 0
  1706   000046                     	ds	2
  1707   000048                     _Num:
  1708                           	callstack 0
  1709   000048                     	ds	1
  1710   000049                     _LCD1_8Bit:
  1711                           	callstack 0
  1712   000049                     	ds	10
  1713                           
  1714                           	psect	bssBANK0
  1715   000080                     __pbssBANK0:
  1716                           	callstack 0
  1717   000080                     _dbuf:
  1718                           	callstack 0
  1719   000080                     	ds	32
  1720                           
  1721                           	psect	cstackCOMRAM
  1722   000001                     __pcstackCOMRAM:
  1723                           	callstack 0
  1724   000001                     ?___awdiv:
  1725                           	callstack 0
  1726   000001                     ?___awmod:
  1727                           	callstack 0
  1728   000001                     Mcal_GPIO_initPinDirection@copyPinCFG:
  1729                           	callstack 0
  1730   000001                     MCAL_GPIO_writePinStatus@copyPinCFG:
  1731                           	callstack 0
  1732   000001                     memset@dest:
  1733                           	callstack 0
  1734   000001                     ___awdiv@dividend:
  1735                           	callstack 0
  1736   000001                     ___awmod@dividend:
  1737                           	callstack 0
  1738   000001                     fputc@c:
  1739                           	callstack 0
  1740   000001                     
  1741                           ; 1 bytes @ 0x0
  1742   000001                     	ds	1
  1743   000002                     MCAL_GPIO_writePinStatus@copyStatusPin:
  1744                           	callstack 0
  1745   000002                     memset@c:
  1746                           	callstack 0
  1747   000002                     ??_Mcal_GPIO_initPinDirection:
  1748                           
  1749                           ; 1 bytes @ 0x1
  1750   000002                     	ds	1
  1751   000003                     fputc@fp:
  1752                           	callstack 0
  1753   000003                     ___awdiv@divisor:
  1754                           	callstack 0
  1755   000003                     ___awmod@divisor:
  1756                           	callstack 0
  1757   000003                     ??_MCAL_GPIO_writePinStatus:
  1758                           
  1759                           ; 1 bytes @ 0x2
  1760   000003                     	ds	1
  1761   000004                     Mcal_GPIO_initPinDirection@retVal:
  1762                           	callstack 0
  1763   000004                     memset@n:
  1764                           	callstack 0
  1765   000004                     ??_fputc:
  1766                           
  1767                           ; 1 bytes @ 0x3
  1768   000004                     	ds	1
  1769   000005                     MCAL_GPIO_writePinStatus@retVal:
  1770                           	callstack 0
  1771   000005                     ___awdiv@counter:
  1772                           	callstack 0
  1773   000005                     ___awmod@counter:
  1774                           	callstack 0
  1775   000005                     
  1776                           ; 1 bytes @ 0x4
  1777   000005                     	ds	1
  1778   000006                     MCAL_GPIO_init@copyPinCFG:
  1779                           	callstack 0
  1780   000006                     LCD_sendEnableSignal8Bits@copyLCD:
  1781                           	callstack 0
  1782   000006                     ___awdiv@sign:
  1783                           	callstack 0
  1784   000006                     ___awmod@sign:
  1785                           	callstack 0
  1786   000006                     memset@p:
  1787                           	callstack 0
  1788   000006                     
  1789                           ; 1 bytes @ 0x5
  1790   000006                     	ds	1
  1791   000007                     ?_abs:
  1792                           	callstack 0
  1793   000007                     MCAL_GPIO_init@retVal:
  1794                           	callstack 0
  1795   000007                     HALL_LCD_8bit_sendCMD@copyLCD:
  1796                           	callstack 0
  1797   000007                     HALL_LCD_8bit_sendChar@copyLCD:
  1798                           	callstack 0
  1799   000007                     ___awdiv@quotient:
  1800                           	callstack 0
  1801   000007                     abs@a:
  1802                           	callstack 0
  1803   000007                     
  1804                           ; 1 bytes @ 0x6
  1805   000007                     	ds	1
  1806   000008                     HALL_LCD_8bit_sendCMD@copyCMD:
  1807                           	callstack 0
  1808   000008                     HALL_LCD_8bit_sendChar@copyData:
  1809                           	callstack 0
  1810                           
  1811                           ; 1 bytes @ 0x7
  1812   000008                     	ds	1
  1813   000009                     ??_HALL_LCD_8bit_sendCMD:
  1814   000009                     ??_abs:
  1815   000009                     ??_HALL_LCD_8bit_sendChar:
  1816                           
  1817                           ; 1 bytes @ 0x8
  1818   000009                     	ds	2
  1819   00000B                     HALL_LCD_8bit_sendCMD@Counter:
  1820                           	callstack 0
  1821   00000B                     HALL_LCD_8bit_sendChar@Counter:
  1822                           	callstack 0
  1823   00000B                     vfpfcnvrt@fp:
  1824                           	callstack 0
  1825                           
  1826                           ; 1 bytes @ 0xA
  1827   00000B                     	ds	1
  1828   00000C                     HALL_LCD_8bit_init@copyLCD:
  1829                           	callstack 0
  1830   00000C                     HALL_LCD_8bit_sendSTR@copyLCD:
  1831                           	callstack 0
  1832   00000C                     vfpfcnvrt@fmt:
  1833                           	callstack 0
  1834                           
  1835                           ; 1 bytes @ 0xB
  1836   00000C                     	ds	1
  1837   00000D                     HALL_LCD_8bit_sendSTR@copyData:
  1838                           	callstack 0
  1839   00000D                     vfpfcnvrt@ap:
  1840                           	callstack 0
  1841   00000D                     ??_HALL_LCD_8bit_init:
  1842                           
  1843                           ; 1 bytes @ 0xC
  1844   00000D                     	ds	1
  1845   00000E                     HALL_LCD_8bit_init@Counter:
  1846                           	callstack 0
  1847   00000E                     ??_vfpfcnvrt:
  1848                           
  1849                           ; 1 bytes @ 0xD
  1850   00000E                     	ds	1
  1851   00000F                     vfpfcnvrt@done:
  1852                           	callstack 0
  1853                           
  1854                           ; 1 bytes @ 0xE
  1855   00000F                     	ds	1
  1856   000010                     vfpfcnvrt@cp:
  1857                           	callstack 0
  1858                           
  1859                           ; 1 bytes @ 0xF
  1860   000010                     	ds	1
  1861   000011                     vfpfcnvrt@convarg:
  1862                           	callstack 0
  1863                           
  1864                           ; 4 bytes @ 0x10
  1865   000011                     	ds	4
  1866   000015                     vfpfcnvrt@c:
  1867                           	callstack 0
  1868                           
  1869                           ; 1 bytes @ 0x14
  1870   000015                     	ds	1
  1871   000016                     ?_vfprintf:
  1872                           	callstack 0
  1873   000016                     vfprintf@fp:
  1874                           	callstack 0
  1875                           
  1876                           ; 1 bytes @ 0x15
  1877   000016                     	ds	1
  1878   000017                     vfprintf@fmt:
  1879                           	callstack 0
  1880                           
  1881                           ; 1 bytes @ 0x16
  1882   000017                     	ds	1
  1883   000018                     vfprintf@ap:
  1884                           	callstack 0
  1885                           
  1886                           ; 1 bytes @ 0x17
  1887   000018                     	ds	1
  1888   000019                     vfprintf@cfmt:
  1889                           	callstack 0
  1890   000019                     
  1891                           ; 1 bytes @ 0x18
  1892   000019                     	ds	1
  1893   00001A                     ?_sprintf:
  1894                           	callstack 0
  1895   00001A                     sprintf@s:
  1896                           	callstack 0
  1897                           
  1898                           ; 1 bytes @ 0x19
  1899   00001A                     	ds	1
  1900   00001B                     sprintf@fmt:
  1901                           	callstack 0
  1902                           
  1903                           ; 1 bytes @ 0x1A
  1904   00001B                     	ds	5
  1905   000020                     sprintf@ap:
  1906                           	callstack 0
  1907   000020                     
  1908                           ; 1 bytes @ 0x1F
  1909   000020                     	ds	1
  1910   000021                     sprintf@f:
  1911                           	callstack 0
  1912                           
  1913                           ; 11 bytes @ 0x20
  1914   000021                     	ds	11
  1915   00002C                     HALL_LCD_convertU8toSTR@copySTR:
  1916                           	callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x2B
  1919   00002C                     	ds	1
  1920   00002D                     HALL_LCD_convertU8toSTR@copyValue:
  1921                           	callstack 0
  1922   00002D                     
  1923                           ; 1 bytes @ 0x2C
  1924   00002D                     	ds	1
  1925   00002E                     
  1926                           ; 1 bytes @ 0x2D
  1927 ;;
  1928 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1929 ;;
  1930 ;; *************** function _main *****************
  1931 ;; Defined at:
  1932 ;;		line 12 in file "App/Main.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels required when called: 6
  1952 ;; This function calls:
  1953 ;;		_HALL_LCD_8bit_init
  1954 ;;		_HALL_LCD_8bit_sendSTR
  1955 ;;		_HALL_LCD_convertU8toSTR
  1956 ;; This function is called by:
  1957 ;;		Startup code after reset
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text0
  1962   001D3C                     __ptext0:
  1963                           	callstack 0
  1964   001D3C                     _main:
  1965                           	callstack 25
  1966   001D3C                     
  1967                           ;App/Main.c: 13:     HALL_LCD_8bit_init(&LCD1_8Bit);
  1968   001D3C  0E49               	movlw	low _LCD1_8Bit
  1969   001D3E  6E0C               	movwf	HALL_LCD_8bit_init@copyLCD^0,c
  1970   001D40  ECD4  F00B         	call	_HALL_LCD_8bit_init	;wreg free
  1971   001D44                     
  1972                           ;App/Main.c: 14:     HALL_LCD_convertU8toSTR(Num, NumArr);
  1973   001D44  0E63               	movlw	low _NumArr
  1974   001D46  6E2C               	movwf	HALL_LCD_convertU8toSTR@copySTR^0,c
  1975   001D48  0E14               	movlw	20
  1976   001D4A  ECD6  F00D         	call	_HALL_LCD_convertU8toSTR
  1977   001D4E                     
  1978                           ;App/Main.c: 15:     HALL_LCD_8bit_sendSTR(&LCD1_8Bit, NumArr);
  1979   001D4E  0E49               	movlw	low _LCD1_8Bit
  1980   001D50  6E0C               	movwf	HALL_LCD_8bit_sendSTR@copyLCD^0,c
  1981   001D52  0E63               	movlw	low _NumArr
  1982   001D54  6E0D               	movwf	HALL_LCD_8bit_sendSTR@copyData^0,c
  1983   001D56  ECF7  F00D         	call	_HALL_LCD_8bit_sendSTR	;wreg free
  1984   001D5A                     l33:
  1985   001D5A  EFAD  F00E         	goto	l33
  1986   001D5E  EF00  F000         	goto	start
  1987   001D62                     __end_of_main:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _HALL_LCD_convertU8toSTR *****************
  1991 ;; Defined at:
  1992 ;;		line 246 in file "Hall/LCD/Hall_lcd_prog.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  copyValue       1    wreg     unsigned char 
  1995 ;;  copySTR         1   43[COMRAM] PTR unsigned char 
  1996 ;;		 -> NumArr(4), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  copyValue       1   44[COMRAM] unsigned char 
  1999 ;;  RetValue        1    0        unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      unsigned char 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2009 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;Total ram usage:        2 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 5
  2016 ;; This function calls:
  2017 ;;		_memset
  2018 ;;		_sprintf
  2019 ;; This function is called by:
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text1
  2025   001BAC                     __ptext1:
  2026                           	callstack 0
  2027   001BAC                     _HALL_LCD_convertU8toSTR:
  2028                           	callstack 25
  2029                           
  2030                           ;incstack = 0
  2031                           ;HALL_LCD_convertU8toSTR@copyValue stored from wreg
  2032   001BAC  6E2D               	movwf	HALL_LCD_convertU8toSTR@copyValue^0,c
  2033   001BAE                     
  2034                           ;Hall/LCD/Hall_lcd_prog.c: 248:     if(copySTR == ((void*)0)) {
  2035   001BAE  502C               	movf	HALL_LCD_convertU8toSTR@copySTR^0,w,c
  2036   001BB0  A4D8               	btfss	status,2,c
  2037   001BB2  EFDD  F00D         	goto	u2341
  2038   001BB6  EFDF  F00D         	goto	u2340
  2039   001BBA                     u2341:
  2040   001BBA  EFE1  F00D         	goto	l3028
  2041   001BBE                     u2340:
  2042   001BBE                     
  2043                           ;Hall/LCD/Hall_lcd_prog.c: 250:     }
  2044   001BBE  EFF6  F00D         	goto	l560
  2045   001BC2                     l3028:
  2046                           
  2047                           ;Hall/LCD/Hall_lcd_prog.c: 252:         memset(copySTR, '\0', 4);
  2048   001BC2  C02C  F001         	movff	HALL_LCD_convertU8toSTR@copySTR,memset@dest
  2049   001BC6  0E00               	movlw	0
  2050   001BC8  6E03               	movwf	(memset@c+1)^0,c
  2051   001BCA  0E00               	movlw	0
  2052   001BCC  6E02               	movwf	memset@c^0,c
  2053   001BCE  0E00               	movlw	0
  2054   001BD0  6E05               	movwf	(memset@n+1)^0,c
  2055   001BD2  0E04               	movlw	4
  2056   001BD4  6E04               	movwf	memset@n^0,c
  2057   001BD6  EC86  F00E         	call	_memset	;wreg free
  2058   001BDA                     
  2059                           ;Hall/LCD/Hall_lcd_prog.c: 253:         sprintf(copySTR, "%i", copyValue);
  2060   001BDA  C02C  F01A         	movff	HALL_LCD_convertU8toSTR@copySTR,sprintf@s
  2061   001BDE  0E11               	movlw	low STR_1
  2062   001BE0  6E1B               	movwf	sprintf@fmt^0,c
  2063   001BE2  C02D  F01C         	movff	HALL_LCD_convertU8toSTR@copyValue,?_sprintf+2
  2064   001BE6  6A1D               	clrf	(?_sprintf+3)^0,c
  2065   001BE8  EC52  F00E         	call	_sprintf	;wreg free
  2066   001BEC                     l560:
  2067   001BEC  0012               	return		;funcret
  2068   001BEE                     __end_of_HALL_LCD_convertU8toSTR:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _sprintf *****************
  2072 ;; Defined at:
  2073 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  s               1   25[COMRAM] PTR unsigned char 
  2076 ;;		 -> NumArr(4), 
  2077 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  2078 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  f              11   32[COMRAM] struct _IO_FILE
  2081 ;;  ret             2    0        int 
  2082 ;;  ap              1   31[COMRAM] PTR void [1]
  2083 ;;		 -> ?_sprintf(2), 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2   25[COMRAM] int 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2093 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;Total ram usage:       18 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 4
  2100 ;; This function calls:
  2101 ;;		_vfprintf
  2102 ;; This function is called by:
  2103 ;;		_HALL_LCD_convertU8toSTR
  2104 ;;		_HALL_LCD_convertU16toSTR
  2105 ;;		_HALL_LCD_convertU32toSTR
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text2
  2110   001CA4                     __ptext2:
  2111                           	callstack 0
  2112   001CA4                     _sprintf:
  2113                           	callstack 25
  2114   001CA4  0E1C               	movlw	low (?_sprintf+2)
  2115   001CA6  6E20               	movwf	sprintf@ap^0,c
  2116   001CA8  C01A  F021         	movff	sprintf@s,sprintf@f
  2117   001CAC  0E00               	movlw	0
  2118   001CAE  6E24               	movwf	(sprintf@f+3)^0,c
  2119   001CB0  0E00               	movlw	0
  2120   001CB2  6E23               	movwf	(sprintf@f+2)^0,c
  2121   001CB4  0E00               	movlw	0
  2122   001CB6  6E2B               	movwf	(sprintf@f+10)^0,c
  2123   001CB8  0E00               	movlw	0
  2124   001CBA  6E2A               	movwf	(sprintf@f+9)^0,c
  2125   001CBC  0E21               	movlw	low sprintf@f
  2126   001CBE  6E16               	movwf	vfprintf@fp^0,c
  2127   001CC0  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  2128   001CC4  0E20               	movlw	low sprintf@ap
  2129   001CC6  6E18               	movwf	vfprintf@ap^0,c
  2130   001CC8  EC17  F00E         	call	_vfprintf	;wreg free
  2131   001CCC  501A               	movf	sprintf@s^0,w,c
  2132   001CCE  2423               	addwf	(sprintf@f+2)^0,w,c
  2133   001CD0  6ED9               	movwf	fsr2l,c
  2134   001CD2  6ADA               	clrf	fsr2h,c
  2135   001CD4  6ADF               	clrf	indf2,c
  2136   001CD6  0012               	return		;funcret
  2137   001CD8                     __end_of_sprintf:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _vfprintf *****************
  2141 ;; Defined at:
  2142 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  2145 ;;		 -> sprintf@f(11), 
  2146 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  2147 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2148 ;;  ap              1   23[COMRAM] PTR PTR void 
  2149 ;;		 -> sprintf@ap(1), 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  2152 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2   21[COMRAM] int 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2162 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;Total ram usage:        4 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 3
  2169 ;; This function calls:
  2170 ;;		_vfpfcnvrt
  2171 ;; This function is called by:
  2172 ;;		_sprintf
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text3
  2177   001C2E                     __ptext3:
  2178                           	callstack 0
  2179   001C2E                     _vfprintf:
  2180                           	callstack 25
  2181   001C2E                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2183   001C2E  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2186   001C32  EF23  F00E         	goto	l2890
  2187   001C36                     l2888:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2190   001C36  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2191   001C3A  0E19               	movlw	low vfprintf@cfmt
  2192   001C3C  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2193   001C3E  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2194   001C42  ECF8  F00A         	call	_vfpfcnvrt	;wreg free
  2195   001C46                     l2890:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2198   001C46  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  2199   001C4A                     	if	1	;There is more than 1 active tblptr byte
  2200   001C4A  0E10               	movlw	high __smallconst
  2201   001C4C  6EF7               	movwf	tblptrh,c
  2202   001C4E                     	endif
  2203   001C4E                     	if	0	;tblptru may be non-zero
  2204   001C4E                     	endif
  2205   001C4E                     	if	0	;tblptru may be non-zero
  2206   001C4E                     	endif
  2207   001C4E  0008               	tblrd		*
  2208   001C50  50F5               	movf	tablat,w,c
  2209   001C52  0900               	iorlw	0
  2210   001C54  A4D8               	btfss	status,2,c
  2211   001C56  EF2F  F00E         	goto	u2231
  2212   001C5A  EF31  F00E         	goto	u2230
  2213   001C5E                     u2231:
  2214   001C5E  EF1B  F00E         	goto	l2888
  2215   001C62                     u2230:
  2216   001C62                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2218   001C62  0E00               	movlw	0
  2219   001C64  6E17               	movwf	(?_vfprintf+1)^0,c
  2220   001C66  0E00               	movlw	0
  2221   001C68  6E16               	movwf	?_vfprintf^0,c
  2222   001C6A  0012               	return		;funcret
  2223   001C6C                     __end_of_vfprintf:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _vfpfcnvrt *****************
  2227 ;; Defined at:
  2228 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2231 ;;		 -> sprintf@f(11), 
  2232 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2233 ;;		 -> vfprintf@cfmt(1), 
  2234 ;;  ap              1   12[COMRAM] PTR PTR void 
  2235 ;;		 -> sprintf@ap(1), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  convarg         4   16[COMRAM] struct .
  2238 ;;  c               1   20[COMRAM] unsigned char 
  2239 ;;  cp              1   15[COMRAM] PTR unsigned char 
  2240 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2241 ;;  done            1   14[COMRAM] _Bool 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:       11 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 2
  2258 ;; This function calls:
  2259 ;;		___awdiv
  2260 ;;		___awmod
  2261 ;;		_abs
  2262 ;;		_fputc
  2263 ;; This function is called by:
  2264 ;;		_vfprintf
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text4
  2269   0015F0                     __ptext4:
  2270                           	callstack 0
  2271   0015F0                     _vfpfcnvrt:
  2272                           	callstack 25
  2273   0015F0                     
  2274                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2275   0015F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2276   0015F2  6ED9               	movwf	fsr2l,c
  2277   0015F4  6ADA               	clrf	fsr2h,c
  2278   0015F6  CFDF FFF6          	movff	indf2,tblptrl
  2279   0015FA                     	if	1	;There is more than 1 active tblptr byte
  2280   0015FA  0E10               	movlw	high __smallconst
  2281   0015FC  6EF7               	movwf	tblptrh,c
  2282   0015FE                     	endif
  2283   0015FE                     	if	0	;tblptru may be non-zero
  2284   0015FE                     	endif
  2285   0015FE                     	if	0	;tblptru may be non-zero
  2286   0015FE                     	endif
  2287   0015FE  0008               	tblrd		*
  2288   001600  50F5               	movf	tablat,w,c
  2289   001602  0A25               	xorlw	37
  2290   001604  A4D8               	btfss	status,2,c
  2291   001606  EF07  F00B         	goto	u1971
  2292   00160A  EF09  F00B         	goto	u1970
  2293   00160E                     u1971:
  2294   00160E  EFC2  F00B         	goto	l2818
  2295   001612                     u1970:
  2296   001612                     
  2297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2298   001612  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2299   001614  6ED9               	movwf	fsr2l,c
  2300   001616  6ADA               	clrf	fsr2h,c
  2301   001618  2ADF               	incf	indf2,f,c
  2302   00161A                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2304   00161A  0E00               	movlw	0
  2305   00161C  6E54               	movwf	(_width+1)^0,c
  2306   00161E  0E00               	movlw	0
  2307   001620  6E53               	movwf	_width^0,c
  2308   001622  C053  F05B         	movff	_width,_flags
  2309   001626                     
  2310                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2311   001626  6855               	setf	_prec^0,c
  2312   001628  6856               	setf	(_prec+1)^0,c
  2313   00162A                     
  2314                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2315   00162A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2316   00162C  6ED9               	movwf	fsr2l,c
  2317   00162E  6ADA               	clrf	fsr2h,c
  2318   001630  50DF               	movf	indf2,w,c
  2319   001632  6E10               	movwf	vfpfcnvrt@cp^0,c
  2320   001634                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2322   001634  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2323   001638                     	if	1	;There is more than 1 active tblptr byte
  2324   001638  0E10               	movlw	high __smallconst
  2325   00163A  6EF7               	movwf	tblptrh,c
  2326   00163C                     	endif
  2327   00163C                     	if	0	;tblptru may be non-zero
  2328   00163C                     	endif
  2329   00163C                     	if	0	;tblptru may be non-zero
  2330   00163C                     	endif
  2331   00163C  0008               	tblrd		*
  2332   00163E  50F5               	movf	tablat,w,c
  2333   001640  0A64               	xorlw	100
  2334   001642  B4D8               	btfsc	status,2,c
  2335   001644  EF26  F00B         	goto	u1981
  2336   001648  EF28  F00B         	goto	u1980
  2337   00164C                     u1981:
  2338   00164C  EF36  F00B         	goto	l2788
  2339   001650                     u1980:
  2340   001650  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2341   001654                     	if	1	;There is more than 1 active tblptr byte
  2342   001654  0E10               	movlw	high __smallconst
  2343   001656  6EF7               	movwf	tblptrh,c
  2344   001658                     	endif
  2345   001658                     	if	0	;tblptru may be non-zero
  2346   001658                     	endif
  2347   001658                     	if	0	;tblptru may be non-zero
  2348   001658                     	endif
  2349   001658  0008               	tblrd		*
  2350   00165A  50F5               	movf	tablat,w,c
  2351   00165C  0A69               	xorlw	105
  2352   00165E  A4D8               	btfss	status,2,c
  2353   001660  EF34  F00B         	goto	u1991
  2354   001664  EF36  F00B         	goto	u1990
  2355   001668                     u1991:
  2356   001668  EFBC  F00B         	goto	l2814
  2357   00166C                     u1990:
  2358   00166C                     l2788:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2361   00166C  500D               	movf	vfpfcnvrt@ap^0,w,c
  2362   00166E  6ED9               	movwf	fsr2l,c
  2363   001670  6ADA               	clrf	fsr2h,c
  2364   001672  0E02               	movlw	2
  2365   001674  26DF               	addwf	indf2,f,c
  2366   001676  5CDF               	subwf	indf2,w,c
  2367   001678  6ED9               	movwf	fsr2l,c
  2368   00167A  6ADA               	clrf	fsr2h,c
  2369   00167C  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  2370   001680  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  2371   001684                     
  2372                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2373   001684  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2374   001686  6ED9               	movwf	fsr2l,c
  2375   001688  6ADA               	clrf	fsr2h,c
  2376   00168A  2810               	incf	vfpfcnvrt@cp^0,w,c
  2377   00168C  6EDF               	movwf	indf2,c
  2378   00168E                     
  2379                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2380   00168E  0E20               	movlw	32
  2381   001690  6E15               	movwf	vfpfcnvrt@c^0,c
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2384   001692  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2385   001694  EF4E  F00B         	goto	u2001
  2386   001698  EF51  F00B         	goto	u2000
  2387   00169C                     u2001:
  2388   00169C  0E01               	movlw	1
  2389   00169E  EF52  F00B         	goto	u2010
  2390   0016A2                     u2000:
  2391   0016A2  0E00               	movlw	0
  2392   0016A4                     u2010:
  2393   0016A4  6E0F               	movwf	vfpfcnvrt@done^0,c
  2394   0016A6                     l2794:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2397   0016A6  0615               	decf	vfpfcnvrt@c^0,f,c
  2398   0016A8  5015               	movf	vfpfcnvrt@c^0,w,c
  2399   0016AA  0F80               	addlw	low _dbuf
  2400   0016AC  6ED9               	movwf	fsr2l,c
  2401   0016AE  6ADA               	clrf	fsr2h,c
  2402   0016B0  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2403   0016B4  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2404   0016B8  0E00               	movlw	0
  2405   0016BA  6E04               	movwf	(___awmod@divisor+1)^0,c
  2406   0016BC  0E0A               	movlw	10
  2407   0016BE  6E03               	movwf	___awmod@divisor^0,c
  2408   0016C0  ECA1  F00C         	call	___awmod	;wreg free
  2409   0016C4  C001  F007         	movff	?___awmod,abs@a
  2410   0016C8  C002  F008         	movff	?___awmod+1,abs@a+1
  2411   0016CC  EC6C  F00E         	call	_abs	;wreg free
  2412   0016D0  5007               	movf	?_abs^0,w,c
  2413   0016D2  0F30               	addlw	48
  2414   0016D4  6EDF               	movwf	indf2,c
  2415   0016D6                     
  2416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2417   0016D6  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2418   0016DA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2419   0016DE  0E00               	movlw	0
  2420   0016E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2421   0016E2  0E0A               	movlw	10
  2422   0016E4  6E03               	movwf	___awdiv@divisor^0,c
  2423   0016E6  EC40  F00C         	call	___awdiv	;wreg free
  2424   0016EA  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  2425   0016EE  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2426   0016F2                     
  2427                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2428   0016F2  5011               	movf	vfpfcnvrt@convarg^0,w,c
  2429   0016F4  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2430   0016F6  B4D8               	btfsc	status,2,c
  2431   0016F8  EF80  F00B         	goto	u2021
  2432   0016FC  EF82  F00B         	goto	u2020
  2433   001700                     u2021:
  2434   001700  EF8A  F00B         	goto	l2802
  2435   001704                     u2020:
  2436   001704  5015               	movf	vfpfcnvrt@c^0,w,c
  2437   001706  A4D8               	btfss	status,2,c
  2438   001708  EF88  F00B         	goto	u2031
  2439   00170C  EF8A  F00B         	goto	u2030
  2440   001710                     u2031:
  2441   001710  EF53  F00B         	goto	l2794
  2442   001714                     u2030:
  2443   001714                     l2802:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2446   001714  5015               	movf	vfpfcnvrt@c^0,w,c
  2447   001716  B4D8               	btfsc	status,2,c
  2448   001718  EF90  F00B         	goto	u2041
  2449   00171C  EF92  F00B         	goto	u2040
  2450   001720                     u2041:
  2451   001720  EFB1  F00B         	goto	l2812
  2452   001724                     u2040:
  2453   001724  500F               	movf	vfpfcnvrt@done^0,w,c
  2454   001726  B4D8               	btfsc	status,2,c
  2455   001728  EF98  F00B         	goto	u2051
  2456   00172C  EF9A  F00B         	goto	u2050
  2457   001730                     u2051:
  2458   001730  EFB1  F00B         	goto	l2812
  2459   001734                     u2050:
  2460   001734                     
  2461                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2462   001734  0615               	decf	vfpfcnvrt@c^0,f,c
  2463   001736  5015               	movf	vfpfcnvrt@c^0,w,c
  2464   001738  0F80               	addlw	low _dbuf
  2465   00173A  6ED9               	movwf	fsr2l,c
  2466   00173C  6ADA               	clrf	fsr2h,c
  2467   00173E  0E2D               	movlw	45
  2468   001740  6EDF               	movwf	indf2,c
  2469   001742  EFB1  F00B         	goto	l2812
  2470   001746                     l2808:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2473   001746  5015               	movf	vfpfcnvrt@c^0,w,c
  2474   001748  0F80               	addlw	low _dbuf
  2475   00174A  6ED9               	movwf	fsr2l,c
  2476   00174C  6ADA               	clrf	fsr2h,c
  2477   00174E  50DF               	movf	indf2,w,c
  2478   001750  6E0E               	movwf	??_vfpfcnvrt^0,c
  2479   001752  500E               	movf	??_vfpfcnvrt^0,w,c
  2480   001754  6E01               	movwf	fputc@c^0,c
  2481   001756  6A02               	clrf	(fputc@c+1)^0,c
  2482   001758  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2483   00175C  ECF8  F00C         	call	_fputc	;wreg free
  2484   001760  2A15               	incf	vfpfcnvrt@c^0,f,c
  2485   001762                     l2812:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2488   001762  0E20               	movlw	32
  2489   001764  1815               	xorwf	vfpfcnvrt@c^0,w,c
  2490   001766  A4D8               	btfss	status,2,c
  2491   001768  EFB8  F00B         	goto	u2061
  2492   00176C  EFBA  F00B         	goto	u2060
  2493   001770                     u2061:
  2494   001770  EFA3  F00B         	goto	l2808
  2495   001774                     u2060:
  2496   001774  EFD3  F00B         	goto	l1304
  2497   001778                     l2814:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2500   001778  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2501   00177A  6ED9               	movwf	fsr2l,c
  2502   00177C  6ADA               	clrf	fsr2h,c
  2503   00177E  2ADF               	incf	indf2,f,c
  2504   001780  EFD3  F00B         	goto	l1304
  2505   001784                     l2818:
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2508   001784  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2509   001786  6ED9               	movwf	fsr2l,c
  2510   001788  6ADA               	clrf	fsr2h,c
  2511   00178A  CFDF FFF6          	movff	indf2,tblptrl
  2512   00178E                     	if	1	;There is more than 1 active tblptr byte
  2513   00178E  0E10               	movlw	high __smallconst
  2514   001790  6EF7               	movwf	tblptrh,c
  2515   001792                     	endif
  2516   001792                     	if	0	;tblptru may be non-zero
  2517   001792                     	endif
  2518   001792                     	if	0	;tblptru may be non-zero
  2519   001792                     	endif
  2520   001792  0008               	tblrd		*
  2521   001794  50F5               	movf	tablat,w,c
  2522   001796  6E01               	movwf	fputc@c^0,c
  2523   001798  6A02               	clrf	(fputc@c+1)^0,c
  2524   00179A  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2525   00179E  ECF8  F00C         	call	_fputc	;wreg free
  2526   0017A2  EFBC  F00B         	goto	l2814
  2527   0017A6                     l1304:
  2528   0017A6  0012               	return		;funcret
  2529   0017A8                     __end_of_vfpfcnvrt:
  2530                           	callstack 0
  2531                           
  2532 ;; *************** function _fputc *****************
  2533 ;; Defined at:
  2534 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  c               2    0[COMRAM] int 
  2537 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2538 ;;		 -> sprintf@f(11), 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  2    0[COMRAM] int 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;Total ram usage:        8 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 1
  2557 ;; This function calls:
  2558 ;;		_putch
  2559 ;; This function is called by:
  2560 ;;		_vfpfcnvrt
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text5
  2565   0019F0                     __ptext5:
  2566                           	callstack 0
  2567   0019F0                     _fputc:
  2568                           	callstack 25
  2569   0019F0  5003               	movf	fputc@fp^0,w,c
  2570   0019F2  B4D8               	btfsc	status,2,c
  2571   0019F4  EFFE  F00C         	goto	u1811
  2572   0019F8  EF00  F00D         	goto	u1810
  2573   0019FC                     u1811:
  2574   0019FC  EF08  F00D         	goto	l2688
  2575   001A00                     u1810:
  2576   001A00  5003               	movf	fputc@fp^0,w,c
  2577   001A02  A4D8               	btfss	status,2,c
  2578   001A04  EF06  F00D         	goto	u1821
  2579   001A08  EF08  F00D         	goto	u1820
  2580   001A0C                     u1821:
  2581   001A0C  EF0D  F00D         	goto	l2690
  2582   001A10                     u1820:
  2583   001A10                     l2688:
  2584   001A10  5001               	movf	fputc@c^0,w,c
  2585   001A12  ECD4  F00E         	call	_putch
  2586   001A16  EF4C  F00D         	goto	l1329
  2587   001A1A                     l2690:
  2588   001A1A  5003               	movf	fputc@fp^0,w,c
  2589   001A1C  6ED9               	movwf	fsr2l,c
  2590   001A1E  6ADA               	clrf	fsr2h,c
  2591   001A20  0E09               	movlw	9
  2592   001A22  26D9               	addwf	fsr2l,f,c
  2593   001A24  50DE               	movf	postinc2,w,c
  2594   001A26  10DE               	iorwf	postinc2,w,c
  2595   001A28  B4D8               	btfsc	status,2,c
  2596   001A2A  EF19  F00D         	goto	u1831
  2597   001A2E  EF1B  F00D         	goto	u1830
  2598   001A32                     u1831:
  2599   001A32  EF34  F00D         	goto	l2694
  2600   001A36                     u1830:
  2601   001A36  5003               	movf	fputc@fp^0,w,c
  2602   001A38  6ED9               	movwf	fsr2l,c
  2603   001A3A  6ADA               	clrf	fsr2h,c
  2604   001A3C  0E09               	movlw	9
  2605   001A3E  26D9               	addwf	fsr2l,f,c
  2606   001A40  5003               	movf	fputc@fp^0,w,c
  2607   001A42  6EE1               	movwf	fsr1l,c
  2608   001A44  6AE2               	clrf	fsr1h,c
  2609   001A46  0E02               	movlw	2
  2610   001A48  26E1               	addwf	fsr1l,f,c
  2611   001A4A  50DE               	movf	postinc2,w,c
  2612   001A4C  5CE6               	subwf	postinc1,w,c
  2613   001A4E  50E6               	movf	postinc1,w,c
  2614   001A50  0A80               	xorlw	128
  2615   001A52  6E08               	movwf	(??_fputc+4)^0,c
  2616   001A54  50DE               	movf	postinc2,w,c
  2617   001A56  0A80               	xorlw	128
  2618   001A58  5808               	subwfb	(??_fputc+4)^0,w,c
  2619   001A5A  B0D8               	btfsc	status,0,c
  2620   001A5C  EF32  F00D         	goto	u1841
  2621   001A60  EF34  F00D         	goto	u1840
  2622   001A64                     u1841:
  2623   001A64  EF4C  F00D         	goto	l1329
  2624   001A68                     u1840:
  2625   001A68                     l2694:
  2626   001A68  5003               	movf	fputc@fp^0,w,c
  2627   001A6A  6ED9               	movwf	fsr2l,c
  2628   001A6C  6ADA               	clrf	fsr2h,c
  2629   001A6E  0E02               	movlw	2
  2630   001A70  26D9               	addwf	fsr2l,f,c
  2631   001A72  50DF               	movf	indf2,w,c
  2632   001A74  6E04               	movwf	??_fputc^0,c
  2633   001A76  5003               	movf	fputc@fp^0,w,c
  2634   001A78  6ED9               	movwf	fsr2l,c
  2635   001A7A  6ADA               	clrf	fsr2h,c
  2636   001A7C  50DF               	movf	indf2,w,c
  2637   001A7E  2404               	addwf	??_fputc^0,w,c
  2638   001A80  6ED9               	movwf	fsr2l,c
  2639   001A82  6ADA               	clrf	fsr2h,c
  2640   001A84  C001  FFDF         	movff	fputc@c,indf2
  2641   001A88  5003               	movf	fputc@fp^0,w,c
  2642   001A8A  6ED9               	movwf	fsr2l,c
  2643   001A8C  6ADA               	clrf	fsr2h,c
  2644   001A8E  0E02               	movlw	2
  2645   001A90  26D9               	addwf	fsr2l,f,c
  2646   001A92  2ADE               	incf	postinc2,f,c
  2647   001A94  0E00               	movlw	0
  2648   001A96  22DD               	addwfc	postdec2,f,c
  2649   001A98                     l1329:
  2650   001A98  0012               	return		;funcret
  2651   001A9A                     __end_of_fputc:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _putch *****************
  2655 ;; Defined at:
  2656 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  c               1    wreg     unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  c               1    0[COMRAM] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_fputc
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text6
  2684   001DA8                     __ptext6:
  2685                           	callstack 0
  2686   001DA8                     _putch:
  2687                           	callstack 25
  2688   001DA8  0012               	return		;funcret
  2689   001DAA                     __end_of_putch:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _abs *****************
  2693 ;; Defined at:
  2694 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  a               2    6[COMRAM] int 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  2    6[COMRAM] int 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;Total ram usage:        4 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_vfpfcnvrt
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text7
  2722   001CD8                     __ptext7:
  2723                           	callstack 0
  2724   001CD8                     _abs:
  2725                           	callstack 26
  2726   001CD8  BE08               	btfsc	(abs@a+1)^0,7,c
  2727   001CDA  EF71  F00E         	goto	u1851
  2728   001CDE  EF73  F00E         	goto	u1850
  2729   001CE2                     u1851:
  2730   001CE2  EF79  F00E         	goto	l1314
  2731   001CE6                     u1850:
  2732   001CE6  C007  F007         	movff	abs@a,?_abs
  2733   001CEA  C008  F008         	movff	abs@a+1,?_abs+1
  2734   001CEE  EF85  F00E         	goto	l1317
  2735   001CF2                     l1314:
  2736   001CF2  C007  F009         	movff	abs@a,??_abs
  2737   001CF6  C008  F00A         	movff	abs@a+1,??_abs+1
  2738   001CFA  1E09               	comf	??_abs^0,f,c
  2739   001CFC  1E0A               	comf	(??_abs+1)^0,f,c
  2740   001CFE  4A09               	infsnz	??_abs^0,f,c
  2741   001D00  2A0A               	incf	(??_abs+1)^0,f,c
  2742   001D02  C009  F007         	movff	??_abs,?_abs
  2743   001D06  C00A  F008         	movff	??_abs+1,?_abs+1
  2744   001D0A                     l1317:
  2745   001D0A  0012               	return		;funcret
  2746   001D0C                     __end_of_abs:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function ___awmod *****************
  2750 ;; Defined at:
  2751 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  dividend        2    0[COMRAM] int 
  2754 ;;  divisor         2    2[COMRAM] int 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  sign            1    5[COMRAM] unsigned char 
  2757 ;;  counter         1    4[COMRAM] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2    0[COMRAM] int 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;Total ram usage:        6 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_vfpfcnvrt
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text8
  2781   001942                     __ptext8:
  2782                           	callstack 0
  2783   001942                     ___awmod:
  2784                           	callstack 26
  2785   001942  6A06               	clrf	___awmod@sign^0,c
  2786   001944  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2787   001946  EFA9  F00C         	goto	u1750
  2788   00194A  EFA7  F00C         	goto	u1751
  2789   00194E                     u1751:
  2790   00194E  EFAF  F00C         	goto	l2656
  2791   001952                     u1750:
  2792   001952  6C01               	negf	___awmod@dividend^0,c
  2793   001954  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2794   001956  B0D8               	btfsc	status,0,c
  2795   001958  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2796   00195A  0E01               	movlw	1
  2797   00195C  6E06               	movwf	___awmod@sign^0,c
  2798   00195E                     l2656:
  2799   00195E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2800   001960  EFB6  F00C         	goto	u1760
  2801   001964  EFB4  F00C         	goto	u1761
  2802   001968                     u1761:
  2803   001968  EFBA  F00C         	goto	l2660
  2804   00196C                     u1760:
  2805   00196C  6C03               	negf	___awmod@divisor^0,c
  2806   00196E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2807   001970  B0D8               	btfsc	status,0,c
  2808   001972  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2809   001974                     l2660:
  2810   001974  5003               	movf	___awmod@divisor^0,w,c
  2811   001976  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2812   001978  B4D8               	btfsc	status,2,c
  2813   00197A  EFC1  F00C         	goto	u1771
  2814   00197E  EFC3  F00C         	goto	u1770
  2815   001982                     u1771:
  2816   001982  EFE7  F00C         	goto	l2676
  2817   001986                     u1770:
  2818   001986  0E01               	movlw	1
  2819   001988  6E05               	movwf	___awmod@counter^0,c
  2820   00198A  EFCB  F00C         	goto	l2666
  2821   00198E                     l2664:
  2822   00198E  90D8               	bcf	status,0,c
  2823   001990  3603               	rlcf	___awmod@divisor^0,f,c
  2824   001992  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2825   001994  2A05               	incf	___awmod@counter^0,f,c
  2826   001996                     l2666:
  2827   001996  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2828   001998  EFD0  F00C         	goto	u1781
  2829   00199C  EFD2  F00C         	goto	u1780
  2830   0019A0                     u1781:
  2831   0019A0  EFC7  F00C         	goto	l2664
  2832   0019A4                     u1780:
  2833   0019A4                     l2668:
  2834   0019A4  5003               	movf	___awmod@divisor^0,w,c
  2835   0019A6  5C01               	subwf	___awmod@dividend^0,w,c
  2836   0019A8  5004               	movf	(___awmod@divisor+1)^0,w,c
  2837   0019AA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2838   0019AC  A0D8               	btfss	status,0,c
  2839   0019AE  EFDB  F00C         	goto	u1791
  2840   0019B2  EFDD  F00C         	goto	u1790
  2841   0019B6                     u1791:
  2842   0019B6  EFE1  F00C         	goto	l2672
  2843   0019BA                     u1790:
  2844   0019BA  5003               	movf	___awmod@divisor^0,w,c
  2845   0019BC  5E01               	subwf	___awmod@dividend^0,f,c
  2846   0019BE  5004               	movf	(___awmod@divisor+1)^0,w,c
  2847   0019C0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2848   0019C2                     l2672:
  2849   0019C2  90D8               	bcf	status,0,c
  2850   0019C4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2851   0019C6  3203               	rrcf	___awmod@divisor^0,f,c
  2852   0019C8  2E05               	decfsz	___awmod@counter^0,f,c
  2853   0019CA  EFD2  F00C         	goto	l2668
  2854   0019CE                     l2676:
  2855   0019CE  5006               	movf	___awmod@sign^0,w,c
  2856   0019D0  B4D8               	btfsc	status,2,c
  2857   0019D2  EFED  F00C         	goto	u1801
  2858   0019D6  EFEF  F00C         	goto	u1800
  2859   0019DA                     u1801:
  2860   0019DA  EFF3  F00C         	goto	l2680
  2861   0019DE                     u1800:
  2862   0019DE  6C01               	negf	___awmod@dividend^0,c
  2863   0019E0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2864   0019E2  B0D8               	btfsc	status,0,c
  2865   0019E4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2866   0019E6                     l2680:
  2867   0019E6  C001  F001         	movff	___awmod@dividend,?___awmod
  2868   0019EA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2869   0019EE  0012               	return		;funcret
  2870   0019F0                     __end_of___awmod:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function ___awdiv *****************
  2874 ;; Defined at:
  2875 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  dividend        2    0[COMRAM] int 
  2878 ;;  divisor         2    2[COMRAM] int 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  quotient        2    6[COMRAM] int 
  2881 ;;  sign            1    5[COMRAM] unsigned char 
  2882 ;;  counter         1    4[COMRAM] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2    0[COMRAM] int 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:        8 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_vfpfcnvrt
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text9
  2906   001880                     __ptext9:
  2907                           	callstack 0
  2908   001880                     ___awdiv:
  2909                           	callstack 26
  2910   001880  6A06               	clrf	___awdiv@sign^0,c
  2911   001882  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2912   001884  EF48  F00C         	goto	u1690
  2913   001888  EF46  F00C         	goto	u1691
  2914   00188C                     u1691:
  2915   00188C  EF4E  F00C         	goto	l2612
  2916   001890                     u1690:
  2917   001890  6C03               	negf	___awdiv@divisor^0,c
  2918   001892  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2919   001894  B0D8               	btfsc	status,0,c
  2920   001896  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2921   001898  0E01               	movlw	1
  2922   00189A  6E06               	movwf	___awdiv@sign^0,c
  2923   00189C                     l2612:
  2924   00189C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2925   00189E  EF55  F00C         	goto	u1700
  2926   0018A2  EF53  F00C         	goto	u1701
  2927   0018A6                     u1701:
  2928   0018A6  EF5B  F00C         	goto	l2618
  2929   0018AA                     u1700:
  2930   0018AA  6C01               	negf	___awdiv@dividend^0,c
  2931   0018AC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2932   0018AE  B0D8               	btfsc	status,0,c
  2933   0018B0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2934   0018B2  0E01               	movlw	1
  2935   0018B4  1A06               	xorwf	___awdiv@sign^0,f,c
  2936   0018B6                     l2618:
  2937   0018B6  0E00               	movlw	0
  2938   0018B8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2939   0018BA  0E00               	movlw	0
  2940   0018BC  6E07               	movwf	___awdiv@quotient^0,c
  2941   0018BE  5003               	movf	___awdiv@divisor^0,w,c
  2942   0018C0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2943   0018C2  B4D8               	btfsc	status,2,c
  2944   0018C4  EF66  F00C         	goto	u1711
  2945   0018C8  EF68  F00C         	goto	u1710
  2946   0018CC                     u1711:
  2947   0018CC  EF90  F00C         	goto	l2640
  2948   0018D0                     u1710:
  2949   0018D0  0E01               	movlw	1
  2950   0018D2  6E05               	movwf	___awdiv@counter^0,c
  2951   0018D4  EF70  F00C         	goto	l2626
  2952   0018D8                     l2624:
  2953   0018D8  90D8               	bcf	status,0,c
  2954   0018DA  3603               	rlcf	___awdiv@divisor^0,f,c
  2955   0018DC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2956   0018DE  2A05               	incf	___awdiv@counter^0,f,c
  2957   0018E0                     l2626:
  2958   0018E0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2959   0018E2  EF75  F00C         	goto	u1721
  2960   0018E6  EF77  F00C         	goto	u1720
  2961   0018EA                     u1721:
  2962   0018EA  EF6C  F00C         	goto	l2624
  2963   0018EE                     u1720:
  2964   0018EE                     l2628:
  2965   0018EE  90D8               	bcf	status,0,c
  2966   0018F0  3607               	rlcf	___awdiv@quotient^0,f,c
  2967   0018F2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2968   0018F4  5003               	movf	___awdiv@divisor^0,w,c
  2969   0018F6  5C01               	subwf	___awdiv@dividend^0,w,c
  2970   0018F8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2971   0018FA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2972   0018FC  A0D8               	btfss	status,0,c
  2973   0018FE  EF83  F00C         	goto	u1731
  2974   001902  EF85  F00C         	goto	u1730
  2975   001906                     u1731:
  2976   001906  EF8A  F00C         	goto	l2636
  2977   00190A                     u1730:
  2978   00190A  5003               	movf	___awdiv@divisor^0,w,c
  2979   00190C  5E01               	subwf	___awdiv@dividend^0,f,c
  2980   00190E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2981   001910  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2982   001912  8007               	bsf	___awdiv@quotient^0,0,c
  2983   001914                     l2636:
  2984   001914  90D8               	bcf	status,0,c
  2985   001916  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2986   001918  3203               	rrcf	___awdiv@divisor^0,f,c
  2987   00191A  2E05               	decfsz	___awdiv@counter^0,f,c
  2988   00191C  EF77  F00C         	goto	l2628
  2989   001920                     l2640:
  2990   001920  5006               	movf	___awdiv@sign^0,w,c
  2991   001922  B4D8               	btfsc	status,2,c
  2992   001924  EF96  F00C         	goto	u1741
  2993   001928  EF98  F00C         	goto	u1740
  2994   00192C                     u1741:
  2995   00192C  EF9C  F00C         	goto	l2644
  2996   001930                     u1740:
  2997   001930  6C07               	negf	___awdiv@quotient^0,c
  2998   001932  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2999   001934  B0D8               	btfsc	status,0,c
  3000   001936  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3001   001938                     l2644:
  3002   001938  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3003   00193C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3004   001940  0012               	return		;funcret
  3005   001942                     __end_of___awdiv:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _memset *****************
  3009 ;; Defined at:
  3010 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  dest            1    0[COMRAM] PTR void 
  3013 ;;		 -> NumArr(4), 
  3014 ;;  c               2    1[COMRAM] int 
  3015 ;;  n               2    3[COMRAM] unsigned int 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  p               1    5[COMRAM] PTR unsigned char 
  3018 ;;		 -> NumArr(4), 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    0[COMRAM] PTR void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3028 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        6 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_HALL_LCD_convertU8toSTR
  3038 ;;		_HALL_LCD_convertU16toSTR
  3039 ;;		_HALL_LCD_convertU32toSTR
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text10
  3044   001D0C                     __ptext10:
  3045                           	callstack 0
  3046   001D0C                     _memset:
  3047                           	callstack 29
  3048   001D0C  C001  F006         	movff	memset@dest,memset@p
  3049   001D10  EF90  F00E         	goto	l2962
  3050   001D14                     l2958:
  3051   001D14  5006               	movf	memset@p^0,w,c
  3052   001D16  6ED9               	movwf	fsr2l,c
  3053   001D18  6ADA               	clrf	fsr2h,c
  3054   001D1A  C002  FFDF         	movff	memset@c,indf2
  3055   001D1E  2A06               	incf	memset@p^0,f,c
  3056   001D20                     l2962:
  3057   001D20  0604               	decf	memset@n^0,f,c
  3058   001D22  A0D8               	btfss	status,0,c
  3059   001D24  0605               	decf	(memset@n+1)^0,f,c
  3060   001D26  2804               	incf	memset@n^0,w,c
  3061   001D28  E106               	bnz	u2311
  3062   001D2A  2805               	incf	(memset@n+1)^0,w,c
  3063   001D2C  A4D8               	btfss	status,2,c
  3064   001D2E  EF9B  F00E         	goto	u2311
  3065   001D32  EF9D  F00E         	goto	u2310
  3066   001D36                     u2311:
  3067   001D36  EF8A  F00E         	goto	l2958
  3068   001D3A                     u2310:
  3069   001D3A  0012               	return		;funcret
  3070   001D3C                     __end_of_memset:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function _HALL_LCD_8bit_sendSTR *****************
  3074 ;; Defined at:
  3075 ;;		line 200 in file "Hall/LCD/Hall_lcd_prog.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  copyLCD         1   11[COMRAM] PTR const struct .
  3078 ;;		 -> LCD1_8Bit(10), 
  3079 ;;  copyData        1   12[COMRAM] PTR unsigned char 
  3080 ;;		 -> NumArr(4), 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  RetValue        1    0        unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      unsigned char 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 3
  3099 ;; This function calls:
  3100 ;;		_HALL_LCD_8bit_sendChar
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text11
  3107   001BEE                     __ptext11:
  3108                           	callstack 0
  3109   001BEE                     _HALL_LCD_8bit_sendSTR:
  3110                           	callstack 27
  3111   001BEE                     
  3112                           ;Hall/LCD/Hall_lcd_prog.c: 202:     if(copyLCD == ((void*)0)) {
  3113   001BEE  500C               	movf	HALL_LCD_8bit_sendSTR@copyLCD^0,w,c
  3114   001BF0  A4D8               	btfss	status,2,c
  3115   001BF2  EFFD  F00D         	goto	u2351
  3116   001BF6  EFFF  F00D         	goto	u2350
  3117   001BFA                     u2351:
  3118   001BFA  EF0B  F00E         	goto	l3046
  3119   001BFE                     u2350:
  3120   001BFE                     
  3121                           ;Hall/LCD/Hall_lcd_prog.c: 204:     }
  3122   001BFE  EF16  F00E         	goto	l535
  3123   001C02                     l3042:
  3124                           
  3125                           ;Hall/LCD/Hall_lcd_prog.c: 207:             HALL_LCD_8bit_sendChar(copyLCD, *copyData++)
      +                          ;
  3126   001C02  C00C  F007         	movff	HALL_LCD_8bit_sendSTR@copyLCD,HALL_LCD_8bit_sendChar@copyLCD
  3127   001C06  500D               	movf	HALL_LCD_8bit_sendSTR@copyData^0,w,c
  3128   001C08  6ED9               	movwf	fsr2l,c
  3129   001C0A  6ADA               	clrf	fsr2h,c
  3130   001C0C  50DF               	movf	indf2,w,c
  3131   001C0E  6E08               	movwf	HALL_LCD_8bit_sendChar@copyData^0,c
  3132   001C10  EC4D  F00D         	call	_HALL_LCD_8bit_sendChar	;wreg free
  3133   001C14  2A0D               	incf	HALL_LCD_8bit_sendSTR@copyData^0,f,c
  3134   001C16                     l3046:
  3135                           
  3136                           ;Hall/LCD/Hall_lcd_prog.c: 206:         while(*copyData) {
  3137   001C16  500D               	movf	HALL_LCD_8bit_sendSTR@copyData^0,w,c
  3138   001C18  6ED9               	movwf	fsr2l,c
  3139   001C1A  6ADA               	clrf	fsr2h,c
  3140   001C1C  50DF               	movf	indf2,w,c
  3141   001C1E  A4D8               	btfss	status,2,c
  3142   001C20  EF14  F00E         	goto	u2361
  3143   001C24  EF16  F00E         	goto	u2360
  3144   001C28                     u2361:
  3145   001C28  EF01  F00E         	goto	l3042
  3146   001C2C                     u2360:
  3147   001C2C                     l535:
  3148   001C2C  0012               	return		;funcret
  3149   001C2E                     __end_of_HALL_LCD_8bit_sendSTR:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _HALL_LCD_8bit_sendChar *****************
  3153 ;; Defined at:
  3154 ;;		line 173 in file "Hall/LCD/Hall_lcd_prog.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  copyLCD         1    6[COMRAM] PTR const struct .
  3157 ;;		 -> LCD1_8Bit(10), 
  3158 ;;  copyData        1    7[COMRAM] unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  Counter         1   10[COMRAM] unsigned char 
  3161 ;;  RetValue        1    0        unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      unsigned char 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        5 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 2
  3178 ;; This function calls:
  3179 ;;		_LCD_sendEnableSignal8Bits
  3180 ;;		_MCAL_GPIO_writePinStatus
  3181 ;; This function is called by:
  3182 ;;		_HALL_LCD_8bit_sendSTR
  3183 ;;		_HALL_LCD_8bit_sendCharPos
  3184 ;;		_HALL_LCD_8bit_sendSTRPos
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text12
  3189   001A9A                     __ptext12:
  3190                           	callstack 0
  3191   001A9A                     _HALL_LCD_8bit_sendChar:
  3192                           	callstack 27
  3193   001A9A                     
  3194                           ;Hall/LCD/Hall_lcd_prog.c: 175:     if(copyLCD == ((void*)0)) {
  3195   001A9A  5007               	movf	HALL_LCD_8bit_sendChar@copyLCD^0,w,c
  3196   001A9C  A4D8               	btfss	status,2,c
  3197   001A9E  EF53  F00D         	goto	u2281
  3198   001AA2  EF55  F00D         	goto	u2280
  3199   001AA6                     u2281:
  3200   001AA6  EF57  F00D         	goto	l2936
  3201   001AAA                     u2280:
  3202   001AAA                     
  3203                           ;Hall/LCD/Hall_lcd_prog.c: 177:     }
  3204   001AAA  EF80  F00D         	goto	l522
  3205   001AAE                     l2936:
  3206                           
  3207                           ;Hall/LCD/Hall_lcd_prog.c: 179:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO
      +                          _Status_High);
  3208   001AAE  C007  F001         	movff	HALL_LCD_8bit_sendChar@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  3209   001AB2  0E01               	movlw	1
  3210   001AB4  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3211   001AB6  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3212   001ABA                     
  3213                           ;Hall/LCD/Hall_lcd_prog.c: 180:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  3214   001ABA  6A0B               	clrf	HALL_LCD_8bit_sendChar@Counter^0,c
  3215   001ABC                     l2944:
  3216                           
  3217                           ;Hall/LCD/Hall_lcd_prog.c: 181:             MCAL_GPIO_writePinStatus(&(copyLCD->LCD_D[Co
      +                          unter]),(copyData >> Counter) & (uint8_t)0x01);
  3218   001ABC  5007               	movf	HALL_LCD_8bit_sendChar@copyLCD^0,w,c
  3219   001ABE  240B               	addwf	HALL_LCD_8bit_sendChar@Counter^0,w,c
  3220   001AC0  0F02               	addlw	2
  3221   001AC2  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  3222   001AC4  C00B  F009         	movff	HALL_LCD_8bit_sendChar@Counter,??_HALL_LCD_8bit_sendChar
  3223   001AC8  C008  F00A         	movff	HALL_LCD_8bit_sendChar@copyData,??_HALL_LCD_8bit_sendChar+1
  3224   001ACC  2A09               	incf	??_HALL_LCD_8bit_sendChar^0,f,c
  3225   001ACE  EF6B  F00D         	goto	u2294
  3226   001AD2                     u2295:
  3227   001AD2  90D8               	bcf	status,0,c
  3228   001AD4  320A               	rrcf	(??_HALL_LCD_8bit_sendChar+1)^0,f,c
  3229   001AD6                     u2294:
  3230   001AD6  2E09               	decfsz	??_HALL_LCD_8bit_sendChar^0,f,c
  3231   001AD8  EF69  F00D         	goto	u2295
  3232   001ADC  500A               	movf	(??_HALL_LCD_8bit_sendChar+1)^0,w,c
  3233   001ADE  0B01               	andlw	1
  3234   001AE0  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3235   001AE2  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3236   001AE6                     
  3237                           ;Hall/LCD/Hall_lcd_prog.c: 182:         }
  3238   001AE6  2A0B               	incf	HALL_LCD_8bit_sendChar@Counter^0,f,c
  3239   001AE8  0E07               	movlw	7
  3240   001AEA  640B               	cpfsgt	HALL_LCD_8bit_sendChar@Counter^0,c
  3241   001AEC  EF7A  F00D         	goto	u2301
  3242   001AF0  EF7C  F00D         	goto	u2300
  3243   001AF4                     u2301:
  3244   001AF4  EF5E  F00D         	goto	l2944
  3245   001AF8                     u2300:
  3246   001AF8                     
  3247                           ;Hall/LCD/Hall_lcd_prog.c: 183:         LCD_sendEnableSignal8Bits(copyLCD);
  3248   001AF8  C007  F006         	movff	HALL_LCD_8bit_sendChar@copyLCD,LCD_sendEnableSignal8Bits@copyLCD
  3249   001AFC  ECC4  F00E         	call	_LCD_sendEnableSignal8Bits	;wreg free
  3250   001B00                     l522:
  3251   001B00  0012               	return		;funcret
  3252   001B02                     __end_of_HALL_LCD_8bit_sendChar:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _HALL_LCD_8bit_init *****************
  3256 ;; Defined at:
  3257 ;;		line 130 in file "Hall/LCD/Hall_lcd_prog.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  copyLCD         1   11[COMRAM] PTR const struct .
  3260 ;;		 -> LCD1_8Bit(10), 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  Counter         1   13[COMRAM] unsigned char 
  3263 ;;  RetValue        1    0        unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        3 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 3
  3280 ;; This function calls:
  3281 ;;		_HALL_LCD_8bit_sendCMD
  3282 ;;		_MCAL_GPIO_init
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text13
  3289   0017A8                     __ptext13:
  3290                           	callstack 0
  3291   0017A8                     _HALL_LCD_8bit_init:
  3292                           	callstack 27
  3293   0017A8                     
  3294                           ;Hall/LCD/Hall_lcd_prog.c: 132:     if(copyLCD == ((void*)0)) {
  3295   0017A8  500C               	movf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3296   0017AA  A4D8               	btfss	status,2,c
  3297   0017AC  EFDA  F00B         	goto	u2321
  3298   0017B0  EFDC  F00B         	goto	u2320
  3299   0017B4                     u2321:
  3300   0017B4  EFDE  F00B         	goto	l2982
  3301   0017B8                     u2320:
  3302   0017B8                     
  3303                           ;Hall/LCD/Hall_lcd_prog.c: 134:     }
  3304   0017B8  EF3F  F00C         	goto	l508
  3305   0017BC                     l2982:
  3306                           
  3307                           ;Hall/LCD/Hall_lcd_prog.c: 136:         MCAL_GPIO_init(&(copyLCD->LCD_rs));
  3308   0017BC  C00C  F006         	movff	HALL_LCD_8bit_init@copyLCD,MCAL_GPIO_init@copyPinCFG
  3309   0017C0  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3310                           
  3311                           ;Hall/LCD/Hall_lcd_prog.c: 137:         MCAL_GPIO_init(&(copyLCD->LCD_en));
  3312   0017C4  280C               	incf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3313   0017C6  6E06               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  3314   0017C8  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3315   0017CC                     
  3316                           ;Hall/LCD/Hall_lcd_prog.c: 138:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  3317   0017CC  6A0E               	clrf	HALL_LCD_8bit_init@Counter^0,c
  3318   0017CE                     l2990:
  3319                           
  3320                           ;Hall/LCD/Hall_lcd_prog.c: 139:             MCAL_GPIO_init(&(copyLCD->LCD_D[Counter]));
  3321   0017CE  500C               	movf	HALL_LCD_8bit_init@copyLCD^0,w,c
  3322   0017D0  240E               	addwf	HALL_LCD_8bit_init@Counter^0,w,c
  3323   0017D2  0F02               	addlw	2
  3324   0017D4  6E06               	movwf	MCAL_GPIO_init@copyPinCFG^0,c
  3325   0017D6  EC36  F00E         	call	_MCAL_GPIO_init	;wreg free
  3326   0017DA                     
  3327                           ;Hall/LCD/Hall_lcd_prog.c: 140:         }
  3328   0017DA  2A0E               	incf	HALL_LCD_8bit_init@Counter^0,f,c
  3329   0017DC  0E07               	movlw	7
  3330   0017DE  640E               	cpfsgt	HALL_LCD_8bit_init@Counter^0,c
  3331   0017E0  EFF4  F00B         	goto	u2331
  3332   0017E4  EFF6  F00B         	goto	u2330
  3333   0017E8                     u2331:
  3334   0017E8  EFE7  F00B         	goto	l2990
  3335   0017EC                     u2330:
  3336   0017EC                     
  3337                           ;Hall/LCD/Hall_lcd_prog.c: 141:         _delay((unsigned long)((20)*(4000000U/4000.0)));
  3338   0017EC  0E1A               	movlw	26
  3339   0017EE  6E0D               	movwf	??_HALL_LCD_8bit_init^0,c
  3340   0017F0  0EF8               	movlw	248
  3341   0017F2                     u2887:
  3342   0017F2  2EE8               	decfsz	wreg,f,c
  3343   0017F4  D7FE               	bra	u2887
  3344   0017F6  2E0D               	decfsz	??_HALL_LCD_8bit_init^0,f,c
  3345   0017F8  D7FC               	bra	u2887
  3346   0017FA  D000               	nop2	
  3347   0017FC                     
  3348                           ;Hall/LCD/Hall_lcd_prog.c: 142:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3349   0017FC  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3350   001800  0E38               	movlw	56
  3351   001802  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3352   001804  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3353   001808                     
  3354                           ;Hall/LCD/Hall_lcd_prog.c: 143:         _delay((unsigned long)((5)*(4000000U/4000.0)));
  3355   001808  0E07               	movlw	7
  3356   00180A  6E0D               	movwf	??_HALL_LCD_8bit_init^0,c
  3357   00180C  0E7D               	movlw	125
  3358   00180E                     u2897:
  3359   00180E  2EE8               	decfsz	wreg,f,c
  3360   001810  D7FE               	bra	u2897
  3361   001812  2E0D               	decfsz	??_HALL_LCD_8bit_init^0,f,c
  3362   001814  D7FC               	bra	u2897
  3363   001816  0000               	nop	
  3364                           
  3365                           ;Hall/LCD/Hall_lcd_prog.c: 144:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3366   001818  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3367   00181C  0E38               	movlw	56
  3368   00181E  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3369   001820  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3370   001824                     
  3371                           ;Hall/LCD/Hall_lcd_prog.c: 145:         _delay((unsigned long)((150)*(4000000U/4000000.0
      +                          )));
  3372   001824  0E32               	movlw	50
  3373   001826                     u2907:
  3374   001826  2EE8               	decfsz	wreg,f,c
  3375   001828  D7FE               	bra	u2907
  3376   00182A                     
  3377                           ;Hall/LCD/Hall_lcd_prog.c: 146:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3378   00182A  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3379   00182E  0E38               	movlw	56
  3380   001830  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3381   001832  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3382   001836                     
  3383                           ;Hall/LCD/Hall_lcd_prog.c: 147:         HALL_LCD_8bit_sendCMD(copyLCD, 0x01);
  3384   001836  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3385   00183A  0E01               	movlw	1
  3386   00183C  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3387   00183E  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3388   001842                     
  3389                           ;Hall/LCD/Hall_lcd_prog.c: 148:         HALL_LCD_8bit_sendCMD(copyLCD, 0x02);
  3390   001842  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3391   001846  0E02               	movlw	2
  3392   001848  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3393   00184A  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3394   00184E                     
  3395                           ;Hall/LCD/Hall_lcd_prog.c: 149:         HALL_LCD_8bit_sendCMD(copyLCD, 0x06);
  3396   00184E  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3397   001852  0E06               	movlw	6
  3398   001854  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3399   001856  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3400   00185A                     
  3401                           ;Hall/LCD/Hall_lcd_prog.c: 150:         HALL_LCD_8bit_sendCMD(copyLCD, 0x0C);
  3402   00185A  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3403   00185E  0E0C               	movlw	12
  3404   001860  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3405   001862  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3406   001866                     
  3407                           ;Hall/LCD/Hall_lcd_prog.c: 151:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3408   001866  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3409   00186A  0E38               	movlw	56
  3410   00186C  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3411   00186E  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3412   001872                     
  3413                           ;Hall/LCD/Hall_lcd_prog.c: 152:         HALL_LCD_8bit_sendCMD(copyLCD, 0x38);
  3414   001872  C00C  F007         	movff	HALL_LCD_8bit_init@copyLCD,HALL_LCD_8bit_sendCMD@copyLCD
  3415   001876  0E38               	movlw	56
  3416   001878  6E08               	movwf	HALL_LCD_8bit_sendCMD@copyCMD^0,c
  3417   00187A  EC81  F00D         	call	_HALL_LCD_8bit_sendCMD	;wreg free
  3418   00187E                     l508:
  3419   00187E  0012               	return		;funcret
  3420   001880                     __end_of_HALL_LCD_8bit_init:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _MCAL_GPIO_init *****************
  3424 ;; Defined at:
  3425 ;;		line 274 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  copyPinCFG      1    5[COMRAM] PTR const struct .
  3428 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  3429 ;;		 -> objPin_motor_1(1), LCD1_8Bit(10), 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  retVal          1    6[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      unsigned char 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:        2 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 1
  3448 ;; This function calls:
  3449 ;;		_MCAL_GPIO_writePinStatus
  3450 ;;		_Mcal_GPIO_initPinDirection
  3451 ;; This function is called by:
  3452 ;;		_HALL_LCD_8bit_init
  3453 ;;		_HALL_DC_MOTOR_init
  3454 ;;		_HALL_Led_init
  3455 ;;		_HALL_Relay_init
  3456 ;;		_HALL_SEVEN_SEGEMENT_init
  3457 ;;		_HALL_KeyPad_init
  3458 ;;		_HALL_LCD_4bit_init
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text14
  3463   001C6C                     __ptext14:
  3464                           	callstack 0
  3465   001C6C                     _MCAL_GPIO_init:
  3466                           	callstack 28
  3467   001C6C                     
  3468                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 276:     if(copyPinCFG == ((void*)0)) {
  3469   001C6C  5006               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  3470   001C6E  A4D8               	btfss	status,2,c
  3471   001C70  EF3C  F00E         	goto	u2241
  3472   001C74  EF3E  F00E         	goto	u2240
  3473   001C78                     u2241:
  3474   001C78  EF40  F00E         	goto	l2900
  3475   001C7C                     u2240:
  3476   001C7C                     
  3477                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 278:     }
  3478   001C7C  EF51  F00E         	goto	l294
  3479   001C80                     l2900:
  3480                           
  3481                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 280:         retVal = Mcal_GPIO_initPinDirection(copyP
      +                          inCFG);
  3482   001C80  C006  F001         	movff	MCAL_GPIO_init@copyPinCFG,Mcal_GPIO_initPinDirection@copyPinCFG
  3483   001C84  EC0B  F008         	call	_Mcal_GPIO_initPinDirection	;wreg free
  3484   001C88  6E07               	movwf	MCAL_GPIO_init@retVal^0,c
  3485                           
  3486                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 281:         retVal = MCAL_GPIO_writePinStatus(copyPin
      +                          CFG,copyPinCFG->Status);
  3487   001C8A  C006  F001         	movff	MCAL_GPIO_init@copyPinCFG,MCAL_GPIO_writePinStatus@copyPinCFG
  3488   001C8E  5006               	movf	MCAL_GPIO_init@copyPinCFG^0,w,c
  3489   001C90  6ED9               	movwf	fsr2l,c
  3490   001C92  6ADA               	clrf	fsr2h,c
  3491   001C94  0E00               	movlw	0
  3492   001C96  BEDF               	btfsc	indf2,7,c
  3493   001C98  0E01               	movlw	1
  3494   001C9A  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  3495   001C9C  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  3496   001CA0  6E07               	movwf	MCAL_GPIO_init@retVal^0,c
  3497   001CA2                     l294:
  3498   001CA2  0012               	return		;funcret
  3499   001CA4                     __end_of_MCAL_GPIO_init:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function _Mcal_GPIO_initPinDirection *****************
  3503 ;; Defined at:
  3504 ;;		line 11 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  copyPinCFG      1    0[COMRAM] PTR const struct .
  3507 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_init@objPin(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  3508 ;;		 -> objPin_motor_1(1), HALL_BTN_init@copyBTN(2), LCD1_8Bit(10), 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  retVal          1    3[COMRAM] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      unsigned char 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        4 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_MCAL_GPIO_init
  3530 ;;		_HALL_BTN_init
  3531 ;;		_HALL_KeyPad_init
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text15
  3536   001016                     __ptext15:
  3537                           	callstack 0
  3538   001016                     _Mcal_GPIO_initPinDirection:
  3539                           	callstack 28
  3540   001016                     
  3541                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 13:     uint8_t retVal = (Std_Return)1;
  3542   001016  0E01               	movlw	1
  3543   001018  6E04               	movwf	Mcal_GPIO_initPinDirection@retVal^0,c
  3544                           
  3545                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 14:     if(copyPinCFG == ((void*)0)) {
  3546   00101A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3547   00101C  A4D8               	btfss	status,2,c
  3548   00101E  EF13  F008         	goto	u2071
  3549   001022  EF15  F008         	goto	u2070
  3550   001026                     u2071:
  3551   001026  EF67  F009         	goto	l2870
  3552   00102A                     u2070:
  3553   00102A                     l2826:
  3554                           
  3555                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 15:         retVal = (Std_Return)0;
  3556   00102A  6A04               	clrf	Mcal_GPIO_initPinDirection@retVal^0,c
  3557                           
  3558                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 16:     }
  3559   00102C  EF82  F009         	goto	l2872
  3560   001030                     l2828:
  3561                           
  3562                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 22:                         TRISA &= ~ (1 << copyPinCF
      +                          G->Pin);
  3563   001030  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3564   001032  6ED9               	movwf	fsr2l,c
  3565   001034  6ADA               	clrf	fsr2h,c
  3566   001036  30DF               	rrcf	223,w,c
  3567   001038  32E8               	rrcf	wreg,f,c
  3568   00103A  32E8               	rrcf	wreg,f,c
  3569   00103C  0B07               	andlw	7
  3570   00103E  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3571   001040  0E01               	movlw	1
  3572   001042  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3573   001044  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3574   001046  EF27  F008         	goto	u2084
  3575   00104A                     u2085:
  3576   00104A  90D8               	bcf	status,0,c
  3577   00104C  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3578   00104E                     u2084:
  3579   00104E  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3580   001050  EF25  F008         	goto	u2085
  3581   001054  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3582   001056  0AFF               	xorlw	255
  3583   001058  1692               	andwf	146,f,c	;volatile
  3584                           
  3585                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 23:                         break;
  3586   00105A  EF82  F009         	goto	l2872
  3587   00105E                     l2830:
  3588                           
  3589                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 25:                         TRISA |= (1 << copyPinCFG-
      +                          >Pin);
  3590   00105E  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3591   001060  6ED9               	movwf	fsr2l,c
  3592   001062  6ADA               	clrf	fsr2h,c
  3593   001064  30DF               	rrcf	223,w,c
  3594   001066  32E8               	rrcf	wreg,f,c
  3595   001068  32E8               	rrcf	wreg,f,c
  3596   00106A  0B07               	andlw	7
  3597   00106C  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3598   00106E  0E01               	movlw	1
  3599   001070  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3600   001072  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3601   001074  EF3E  F008         	goto	u2094
  3602   001078                     u2095:
  3603   001078  90D8               	bcf	status,0,c
  3604   00107A  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3605   00107C                     u2094:
  3606   00107C  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3607   00107E  EF3C  F008         	goto	u2095
  3608   001082  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3609   001084  1292               	iorwf	146,f,c	;volatile
  3610                           
  3611                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 26:                         break;
  3612   001086  EF82  F009         	goto	l2872
  3613   00108A                     l2834:
  3614   00108A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3615   00108C  6ED9               	movwf	fsr2l,c
  3616   00108E  6ADA               	clrf	fsr2h,c
  3617   001090  BCDF               	btfsc	indf2,6,c
  3618   001092  EF4D  F008         	goto	u2101
  3619   001096  EF50  F008         	goto	u2100
  3620   00109A                     u2101:
  3621   00109A  0E01               	movlw	1
  3622   00109C  EF51  F008         	goto	u2106
  3623   0010A0                     u2100:
  3624   0010A0  0E00               	movlw	0
  3625   0010A2                     u2106:
  3626                           
  3627                           ; Switch size 1, requested type "simple"
  3628                           ; Number of cases is 2, Range of values is 0 to 1
  3629                           ; switch strategies available:
  3630                           ; Name         Instructions Cycles
  3631                           ; simple_byte            7     4 (average)
  3632                           ;	Chosen strategy is simple_byte
  3633   0010A2  0A00               	xorlw	0	; case 0
  3634   0010A4  B4D8               	btfsc	status,2,c
  3635   0010A6  EF2F  F008         	goto	l2830
  3636   0010AA  0A01               	xorlw	1	; case 1
  3637   0010AC  B4D8               	btfsc	status,2,c
  3638   0010AE  EF18  F008         	goto	l2828
  3639   0010B2  EF82  F009         	goto	l2872
  3640   0010B6                     l2836:
  3641                           
  3642                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 33:                         TRISB &= ~ (1 << copyPinCF
      +                          G->Pin);
  3643   0010B6  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3644   0010B8  6ED9               	movwf	fsr2l,c
  3645   0010BA  6ADA               	clrf	fsr2h,c
  3646   0010BC  30DF               	rrcf	223,w,c
  3647   0010BE  32E8               	rrcf	wreg,f,c
  3648   0010C0  32E8               	rrcf	wreg,f,c
  3649   0010C2  0B07               	andlw	7
  3650   0010C4  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3651   0010C6  0E01               	movlw	1
  3652   0010C8  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3653   0010CA  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3654   0010CC  EF6A  F008         	goto	u2114
  3655   0010D0                     u2115:
  3656   0010D0  90D8               	bcf	status,0,c
  3657   0010D2  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3658   0010D4                     u2114:
  3659   0010D4  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3660   0010D6  EF68  F008         	goto	u2115
  3661   0010DA  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3662   0010DC  0AFF               	xorlw	255
  3663   0010DE  1693               	andwf	147,f,c	;volatile
  3664                           
  3665                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 34:                         break;
  3666   0010E0  EF82  F009         	goto	l2872
  3667   0010E4                     l2838:
  3668                           
  3669                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 36:                         TRISB |= (1 << copyPinCFG-
      +                          >Pin);
  3670   0010E4  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3671   0010E6  6ED9               	movwf	fsr2l,c
  3672   0010E8  6ADA               	clrf	fsr2h,c
  3673   0010EA  30DF               	rrcf	223,w,c
  3674   0010EC  32E8               	rrcf	wreg,f,c
  3675   0010EE  32E8               	rrcf	wreg,f,c
  3676   0010F0  0B07               	andlw	7
  3677   0010F2  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3678   0010F4  0E01               	movlw	1
  3679   0010F6  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3680   0010F8  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3681   0010FA  EF81  F008         	goto	u2124
  3682   0010FE                     u2125:
  3683   0010FE  90D8               	bcf	status,0,c
  3684   001100  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3685   001102                     u2124:
  3686   001102  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3687   001104  EF7F  F008         	goto	u2125
  3688   001108  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3689   00110A  1293               	iorwf	147,f,c	;volatile
  3690                           
  3691                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 37:                         break;
  3692   00110C  EF82  F009         	goto	l2872
  3693   001110                     l2842:
  3694   001110  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3695   001112  6ED9               	movwf	fsr2l,c
  3696   001114  6ADA               	clrf	fsr2h,c
  3697   001116  BCDF               	btfsc	indf2,6,c
  3698   001118  EF90  F008         	goto	u2131
  3699   00111C  EF93  F008         	goto	u2130
  3700   001120                     u2131:
  3701   001120  0E01               	movlw	1
  3702   001122  EF94  F008         	goto	u2136
  3703   001126                     u2130:
  3704   001126  0E00               	movlw	0
  3705   001128                     u2136:
  3706                           
  3707                           ; Switch size 1, requested type "simple"
  3708                           ; Number of cases is 2, Range of values is 0 to 1
  3709                           ; switch strategies available:
  3710                           ; Name         Instructions Cycles
  3711                           ; simple_byte            7     4 (average)
  3712                           ;	Chosen strategy is simple_byte
  3713   001128  0A00               	xorlw	0	; case 0
  3714   00112A  B4D8               	btfsc	status,2,c
  3715   00112C  EF72  F008         	goto	l2838
  3716   001130  0A01               	xorlw	1	; case 1
  3717   001132  B4D8               	btfsc	status,2,c
  3718   001134  EF5B  F008         	goto	l2836
  3719   001138  EF82  F009         	goto	l2872
  3720   00113C                     l2844:
  3721                           
  3722                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 44:                         TRISC &= ~ (1 << copyPinCF
      +                          G->Pin);
  3723   00113C  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3724   00113E  6ED9               	movwf	fsr2l,c
  3725   001140  6ADA               	clrf	fsr2h,c
  3726   001142  30DF               	rrcf	223,w,c
  3727   001144  32E8               	rrcf	wreg,f,c
  3728   001146  32E8               	rrcf	wreg,f,c
  3729   001148  0B07               	andlw	7
  3730   00114A  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3731   00114C  0E01               	movlw	1
  3732   00114E  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3733   001150  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3734   001152  EFAD  F008         	goto	u2144
  3735   001156                     u2145:
  3736   001156  90D8               	bcf	status,0,c
  3737   001158  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3738   00115A                     u2144:
  3739   00115A  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3740   00115C  EFAB  F008         	goto	u2145
  3741   001160  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3742   001162  0AFF               	xorlw	255
  3743   001164  1694               	andwf	148,f,c	;volatile
  3744                           
  3745                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 45:                         break;
  3746   001166  EF82  F009         	goto	l2872
  3747   00116A                     l2846:
  3748                           
  3749                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 47:                         TRISC |= (1 << copyPinCFG-
      +                          >Pin);
  3750   00116A  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3751   00116C  6ED9               	movwf	fsr2l,c
  3752   00116E  6ADA               	clrf	fsr2h,c
  3753   001170  30DF               	rrcf	223,w,c
  3754   001172  32E8               	rrcf	wreg,f,c
  3755   001174  32E8               	rrcf	wreg,f,c
  3756   001176  0B07               	andlw	7
  3757   001178  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3758   00117A  0E01               	movlw	1
  3759   00117C  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3760   00117E  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3761   001180  EFC4  F008         	goto	u2154
  3762   001184                     u2155:
  3763   001184  90D8               	bcf	status,0,c
  3764   001186  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3765   001188                     u2154:
  3766   001188  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3767   00118A  EFC2  F008         	goto	u2155
  3768   00118E  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3769   001190  1294               	iorwf	148,f,c	;volatile
  3770                           
  3771                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 48:                         break;
  3772   001192  EF82  F009         	goto	l2872
  3773   001196                     l2850:
  3774   001196  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3775   001198  6ED9               	movwf	fsr2l,c
  3776   00119A  6ADA               	clrf	fsr2h,c
  3777   00119C  BCDF               	btfsc	indf2,6,c
  3778   00119E  EFD3  F008         	goto	u2161
  3779   0011A2  EFD6  F008         	goto	u2160
  3780   0011A6                     u2161:
  3781   0011A6  0E01               	movlw	1
  3782   0011A8  EFD7  F008         	goto	u2166
  3783   0011AC                     u2160:
  3784   0011AC  0E00               	movlw	0
  3785   0011AE                     u2166:
  3786                           
  3787                           ; Switch size 1, requested type "simple"
  3788                           ; Number of cases is 2, Range of values is 0 to 1
  3789                           ; switch strategies available:
  3790                           ; Name         Instructions Cycles
  3791                           ; simple_byte            7     4 (average)
  3792                           ;	Chosen strategy is simple_byte
  3793   0011AE  0A00               	xorlw	0	; case 0
  3794   0011B0  B4D8               	btfsc	status,2,c
  3795   0011B2  EFB5  F008         	goto	l2846
  3796   0011B6  0A01               	xorlw	1	; case 1
  3797   0011B8  B4D8               	btfsc	status,2,c
  3798   0011BA  EF9E  F008         	goto	l2844
  3799   0011BE  EF82  F009         	goto	l2872
  3800   0011C2                     l2852:
  3801                           
  3802                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 55:                         TRISD &= ~ (1 << copyPinCF
      +                          G->Pin);
  3803   0011C2  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3804   0011C4  6ED9               	movwf	fsr2l,c
  3805   0011C6  6ADA               	clrf	fsr2h,c
  3806   0011C8  30DF               	rrcf	223,w,c
  3807   0011CA  32E8               	rrcf	wreg,f,c
  3808   0011CC  32E8               	rrcf	wreg,f,c
  3809   0011CE  0B07               	andlw	7
  3810   0011D0  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3811   0011D2  0E01               	movlw	1
  3812   0011D4  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3813   0011D6  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3814   0011D8  EFF0  F008         	goto	u2174
  3815   0011DC                     u2175:
  3816   0011DC  90D8               	bcf	status,0,c
  3817   0011DE  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3818   0011E0                     u2174:
  3819   0011E0  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3820   0011E2  EFEE  F008         	goto	u2175
  3821   0011E6  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3822   0011E8  0AFF               	xorlw	255
  3823   0011EA  1695               	andwf	149,f,c	;volatile
  3824                           
  3825                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 56:                         break;
  3826   0011EC  EF82  F009         	goto	l2872
  3827   0011F0                     l2854:
  3828                           
  3829                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 58:                         TRISD |= (1 << copyPinCFG-
      +                          >Pin);
  3830   0011F0  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3831   0011F2  6ED9               	movwf	fsr2l,c
  3832   0011F4  6ADA               	clrf	fsr2h,c
  3833   0011F6  30DF               	rrcf	223,w,c
  3834   0011F8  32E8               	rrcf	wreg,f,c
  3835   0011FA  32E8               	rrcf	wreg,f,c
  3836   0011FC  0B07               	andlw	7
  3837   0011FE  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3838   001200  0E01               	movlw	1
  3839   001202  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3840   001204  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3841   001206  EF07  F009         	goto	u2184
  3842   00120A                     u2185:
  3843   00120A  90D8               	bcf	status,0,c
  3844   00120C  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3845   00120E                     u2184:
  3846   00120E  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3847   001210  EF05  F009         	goto	u2185
  3848   001214  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3849   001216  1295               	iorwf	149,f,c	;volatile
  3850                           
  3851                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 59:                         break;
  3852   001218  EF82  F009         	goto	l2872
  3853   00121C                     l2858:
  3854   00121C  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3855   00121E  6ED9               	movwf	fsr2l,c
  3856   001220  6ADA               	clrf	fsr2h,c
  3857   001222  BCDF               	btfsc	indf2,6,c
  3858   001224  EF16  F009         	goto	u2191
  3859   001228  EF19  F009         	goto	u2190
  3860   00122C                     u2191:
  3861   00122C  0E01               	movlw	1
  3862   00122E  EF1A  F009         	goto	u2196
  3863   001232                     u2190:
  3864   001232  0E00               	movlw	0
  3865   001234                     u2196:
  3866                           
  3867                           ; Switch size 1, requested type "simple"
  3868                           ; Number of cases is 2, Range of values is 0 to 1
  3869                           ; switch strategies available:
  3870                           ; Name         Instructions Cycles
  3871                           ; simple_byte            7     4 (average)
  3872                           ;	Chosen strategy is simple_byte
  3873   001234  0A00               	xorlw	0	; case 0
  3874   001236  B4D8               	btfsc	status,2,c
  3875   001238  EFF8  F008         	goto	l2854
  3876   00123C  0A01               	xorlw	1	; case 1
  3877   00123E  B4D8               	btfsc	status,2,c
  3878   001240  EFE1  F008         	goto	l2852
  3879   001244  EF82  F009         	goto	l2872
  3880   001248                     l2860:
  3881                           
  3882                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 66:                         TRISE &= ~ (1 << copyPinCF
      +                          G->Pin);
  3883   001248  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3884   00124A  6ED9               	movwf	fsr2l,c
  3885   00124C  6ADA               	clrf	fsr2h,c
  3886   00124E  30DF               	rrcf	223,w,c
  3887   001250  32E8               	rrcf	wreg,f,c
  3888   001252  32E8               	rrcf	wreg,f,c
  3889   001254  0B07               	andlw	7
  3890   001256  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3891   001258  0E01               	movlw	1
  3892   00125A  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3893   00125C  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3894   00125E  EF33  F009         	goto	u2204
  3895   001262                     u2205:
  3896   001262  90D8               	bcf	status,0,c
  3897   001264  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3898   001266                     u2204:
  3899   001266  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3900   001268  EF31  F009         	goto	u2205
  3901   00126C  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3902   00126E  0AFF               	xorlw	255
  3903   001270  1696               	andwf	150,f,c	;volatile
  3904                           
  3905                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 67:                         break;
  3906   001272  EF82  F009         	goto	l2872
  3907   001276                     l2862:
  3908                           
  3909                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 69:                         TRISE |= (1 << copyPinCFG-
      +                          >Pin);
  3910   001276  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3911   001278  6ED9               	movwf	fsr2l,c
  3912   00127A  6ADA               	clrf	fsr2h,c
  3913   00127C  30DF               	rrcf	223,w,c
  3914   00127E  32E8               	rrcf	wreg,f,c
  3915   001280  32E8               	rrcf	wreg,f,c
  3916   001282  0B07               	andlw	7
  3917   001284  6E02               	movwf	??_Mcal_GPIO_initPinDirection^0,c
  3918   001286  0E01               	movlw	1
  3919   001288  6E03               	movwf	(??_Mcal_GPIO_initPinDirection+1)^0,c
  3920   00128A  2A02               	incf	??_Mcal_GPIO_initPinDirection^0,f,c
  3921   00128C  EF4A  F009         	goto	u2214
  3922   001290                     u2215:
  3923   001290  90D8               	bcf	status,0,c
  3924   001292  3603               	rlcf	(??_Mcal_GPIO_initPinDirection+1)^0,f,c
  3925   001294                     u2214:
  3926   001294  2E02               	decfsz	??_Mcal_GPIO_initPinDirection^0,f,c
  3927   001296  EF48  F009         	goto	u2215
  3928   00129A  5003               	movf	(??_Mcal_GPIO_initPinDirection+1)^0,w,c
  3929   00129C  1296               	iorwf	150,f,c	;volatile
  3930                           
  3931                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 70:                         break;
  3932   00129E  EF82  F009         	goto	l2872
  3933   0012A2                     l2866:
  3934   0012A2  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3935   0012A4  6ED9               	movwf	fsr2l,c
  3936   0012A6  6ADA               	clrf	fsr2h,c
  3937   0012A8  BCDF               	btfsc	indf2,6,c
  3938   0012AA  EF59  F009         	goto	u2221
  3939   0012AE  EF5C  F009         	goto	u2220
  3940   0012B2                     u2221:
  3941   0012B2  0E01               	movlw	1
  3942   0012B4  EF5D  F009         	goto	u2226
  3943   0012B8                     u2220:
  3944   0012B8  0E00               	movlw	0
  3945   0012BA                     u2226:
  3946                           
  3947                           ; Switch size 1, requested type "simple"
  3948                           ; Number of cases is 2, Range of values is 0 to 1
  3949                           ; switch strategies available:
  3950                           ; Name         Instructions Cycles
  3951                           ; simple_byte            7     4 (average)
  3952                           ;	Chosen strategy is simple_byte
  3953   0012BA  0A00               	xorlw	0	; case 0
  3954   0012BC  B4D8               	btfsc	status,2,c
  3955   0012BE  EF3B  F009         	goto	l2862
  3956   0012C2  0A01               	xorlw	1	; case 1
  3957   0012C4  B4D8               	btfsc	status,2,c
  3958   0012C6  EF24  F009         	goto	l2860
  3959   0012CA  EF82  F009         	goto	l2872
  3960   0012CE                     l2870:
  3961   0012CE  5001               	movf	Mcal_GPIO_initPinDirection@copyPinCFG^0,w,c
  3962   0012D0  6ED9               	movwf	fsr2l,c
  3963   0012D2  6ADA               	clrf	fsr2h,c
  3964   0012D4  50DF               	movf	223,w,c
  3965   0012D6  0B07               	andlw	7
  3966                           
  3967                           ; Switch size 1, requested type "simple"
  3968                           ; Number of cases is 5, Range of values is 0 to 4
  3969                           ; switch strategies available:
  3970                           ; Name         Instructions Cycles
  3971                           ; simple_byte           16     9 (average)
  3972                           ;	Chosen strategy is simple_byte
  3973   0012D8  0A00               	xorlw	0	; case 0
  3974   0012DA  B4D8               	btfsc	status,2,c
  3975   0012DC  EF45  F008         	goto	l2834
  3976   0012E0  0A01               	xorlw	1	; case 1
  3977   0012E2  B4D8               	btfsc	status,2,c
  3978   0012E4  EF88  F008         	goto	l2842
  3979   0012E8  0A03               	xorlw	3	; case 2
  3980   0012EA  B4D8               	btfsc	status,2,c
  3981   0012EC  EFCB  F008         	goto	l2850
  3982   0012F0  0A01               	xorlw	1	; case 3
  3983   0012F2  B4D8               	btfsc	status,2,c
  3984   0012F4  EF0E  F009         	goto	l2858
  3985   0012F8  0A07               	xorlw	7	; case 4
  3986   0012FA  B4D8               	btfsc	status,2,c
  3987   0012FC  EF51  F009         	goto	l2866
  3988   001300  EF15  F008         	goto	l2826
  3989   001304                     l2872:
  3990                           
  3991                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 78:     return retVal;
  3992   001304  5004               	movf	Mcal_GPIO_initPinDirection@retVal^0,w,c
  3993   001306  0012               	return		;funcret
  3994   001308                     __end_of_Mcal_GPIO_initPinDirection:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _HALL_LCD_8bit_sendCMD *****************
  3998 ;; Defined at:
  3999 ;;		line 158 in file "Hall/LCD/Hall_lcd_prog.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  copyLCD         1    6[COMRAM] PTR const struct .
  4002 ;;		 -> LCD1_8Bit(10), 
  4003 ;;  copyCMD         1    7[COMRAM] unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  Counter         1   10[COMRAM] unsigned char 
  4006 ;;  RetValue        1    0        unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      unsigned char 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;Total ram usage:        5 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 2
  4023 ;; This function calls:
  4024 ;;		_LCD_sendEnableSignal8Bits
  4025 ;;		_MCAL_GPIO_writePinStatus
  4026 ;; This function is called by:
  4027 ;;		_HALL_LCD_8bit_init
  4028 ;;		_HALL_LCD_8bit_goto
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text16
  4033   001B02                     __ptext16:
  4034                           	callstack 0
  4035   001B02                     _HALL_LCD_8bit_sendCMD:
  4036                           	callstack 27
  4037   001B02                     
  4038                           ;Hall/LCD/Hall_lcd_prog.c: 160:     if(copyLCD == ((void*)0)) {
  4039   001B02  5007               	movf	HALL_LCD_8bit_sendCMD@copyLCD^0,w,c
  4040   001B04  A4D8               	btfss	status,2,c
  4041   001B06  EF87  F00D         	goto	u2251
  4042   001B0A  EF89  F00D         	goto	u2250
  4043   001B0E                     u2251:
  4044   001B0E  EF8B  F00D         	goto	l2910
  4045   001B12                     u2250:
  4046   001B12                     
  4047                           ;Hall/LCD/Hall_lcd_prog.c: 162:     }
  4048   001B12  EFB4  F00D         	goto	l515
  4049   001B16                     l2910:
  4050                           
  4051                           ;Hall/LCD/Hall_lcd_prog.c: 164:         MCAL_GPIO_writePinStatus(&(copyLCD->LCD_rs),GPIO
      +                          _Status_Low);
  4052   001B16  C007  F001         	movff	HALL_LCD_8bit_sendCMD@copyLCD,MCAL_GPIO_writePinStatus@copyPinCFG
  4053   001B1A  0E00               	movlw	0
  4054   001B1C  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4055   001B1E  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4056   001B22                     
  4057                           ;Hall/LCD/Hall_lcd_prog.c: 165:         for(uint8_t Counter = 0; Counter < 8; Counter++)
      +                           {
  4058   001B22  6A0B               	clrf	HALL_LCD_8bit_sendCMD@Counter^0,c
  4059   001B24                     l2918:
  4060                           
  4061                           ;Hall/LCD/Hall_lcd_prog.c: 166:             MCAL_GPIO_writePinStatus(&(copyLCD->LCD_D[Co
      +                          unter]),(copyCMD >> Counter) & (uint8_t)0x01);
  4062   001B24  5007               	movf	HALL_LCD_8bit_sendCMD@copyLCD^0,w,c
  4063   001B26  240B               	addwf	HALL_LCD_8bit_sendCMD@Counter^0,w,c
  4064   001B28  0F02               	addlw	2
  4065   001B2A  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4066   001B2C  C00B  F009         	movff	HALL_LCD_8bit_sendCMD@Counter,??_HALL_LCD_8bit_sendCMD
  4067   001B30  C008  F00A         	movff	HALL_LCD_8bit_sendCMD@copyCMD,??_HALL_LCD_8bit_sendCMD+1
  4068   001B34  2A09               	incf	??_HALL_LCD_8bit_sendCMD^0,f,c
  4069   001B36  EF9F  F00D         	goto	u2264
  4070   001B3A                     u2265:
  4071   001B3A  90D8               	bcf	status,0,c
  4072   001B3C  320A               	rrcf	(??_HALL_LCD_8bit_sendCMD+1)^0,f,c
  4073   001B3E                     u2264:
  4074   001B3E  2E09               	decfsz	??_HALL_LCD_8bit_sendCMD^0,f,c
  4075   001B40  EF9D  F00D         	goto	u2265
  4076   001B44  500A               	movf	(??_HALL_LCD_8bit_sendCMD+1)^0,w,c
  4077   001B46  0B01               	andlw	1
  4078   001B48  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4079   001B4A  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4080   001B4E                     
  4081                           ;Hall/LCD/Hall_lcd_prog.c: 167:         }
  4082   001B4E  2A0B               	incf	HALL_LCD_8bit_sendCMD@Counter^0,f,c
  4083   001B50  0E07               	movlw	7
  4084   001B52  640B               	cpfsgt	HALL_LCD_8bit_sendCMD@Counter^0,c
  4085   001B54  EFAE  F00D         	goto	u2271
  4086   001B58  EFB0  F00D         	goto	u2270
  4087   001B5C                     u2271:
  4088   001B5C  EF92  F00D         	goto	l2918
  4089   001B60                     u2270:
  4090   001B60                     
  4091                           ;Hall/LCD/Hall_lcd_prog.c: 168:         LCD_sendEnableSignal8Bits(copyLCD);
  4092   001B60  C007  F006         	movff	HALL_LCD_8bit_sendCMD@copyLCD,LCD_sendEnableSignal8Bits@copyLCD
  4093   001B64  ECC4  F00E         	call	_LCD_sendEnableSignal8Bits	;wreg free
  4094   001B68                     l515:
  4095   001B68  0012               	return		;funcret
  4096   001B6A                     __end_of_HALL_LCD_8bit_sendCMD:
  4097                           	callstack 0
  4098                           
  4099 ;; *************** function _LCD_sendEnableSignal8Bits *****************
  4100 ;; Defined at:
  4101 ;;		line 299 in file "Hall/LCD/Hall_lcd_prog.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  copyLCD         1    5[COMRAM] PTR const struct .
  4104 ;;		 -> LCD1_8Bit(10), 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  RetValue        1    0        unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      unsigned char 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;Total ram usage:        1 bytes
  4121 ;; Hardware stack levels used: 1
  4122 ;; Hardware stack levels required when called: 1
  4123 ;; This function calls:
  4124 ;;		_MCAL_GPIO_writePinStatus
  4125 ;; This function is called by:
  4126 ;;		_HALL_LCD_8bit_sendCMD
  4127 ;;		_HALL_LCD_8bit_sendChar
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text17
  4132   001D88                     __ptext17:
  4133                           	callstack 0
  4134   001D88                     _LCD_sendEnableSignal8Bits:
  4135                           	callstack 27
  4136   001D88                     
  4137                           ;Hall/LCD/Hall_lcd_prog.c: 301:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_High);
  4138   001D88  2806               	incf	LCD_sendEnableSignal8Bits@copyLCD^0,w,c
  4139   001D8A  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4140   001D8C  0E01               	movlw	1
  4141   001D8E  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4142   001D90  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4143   001D94                     
  4144                           ;Hall/LCD/Hall_lcd_prog.c: 302:     _delay((unsigned long)((5)*(4000000U/4000000.0)));
  4145   001D94  D000               	nop2		;2 cycle nop
  4146   001D96  D000               	nop2		;2 cycle nop
  4147   001D98  0000               	nop	
  4148   001D9A                     
  4149                           ;Hall/LCD/Hall_lcd_prog.c: 303:     MCAL_GPIO_writePinStatus(&(copyLCD->LCD_en), GPIO_St
      +                          atus_Low);
  4150   001D9A  2806               	incf	LCD_sendEnableSignal8Bits@copyLCD^0,w,c
  4151   001D9C  6E01               	movwf	MCAL_GPIO_writePinStatus@copyPinCFG^0,c
  4152   001D9E  0E00               	movlw	0
  4153   001DA0  6E02               	movwf	MCAL_GPIO_writePinStatus@copyStatusPin^0,c
  4154   001DA2  EC84  F009         	call	_MCAL_GPIO_writePinStatus	;wreg free
  4155   001DA6  0012               	return		;funcret
  4156   001DA8                     __end_of_LCD_sendEnableSignal8Bits:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _MCAL_GPIO_writePinStatus *****************
  4160 ;; Defined at:
  4161 ;;		line 117 in file "Mcal/Mcal_GPIO/Mcal_GPIO_prog.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  copyPinCFG      1    0[COMRAM] PTR const struct .
  4164 ;;		 -> LCD1_8Bit$LCD_D(8), HALL_Relay_turnOFF@objPin(1), HALL_Relay_turnON@objPin(1), HALL_Relay_init@objPin(1), 
  4165 ;;		 -> HALL_Led_trunOFF@objLed(1), HALL_Led_trunON@objLed(1), HALL_Led_init@objLed(1), objPin_motor_2(1), 
  4166 ;;		 -> objPin_motor_1(1), LCD1_8Bit(10), 
  4167 ;;  copyStatusPi    1    1[COMRAM] enum E2982
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  retVal          1    4[COMRAM] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      unsigned char 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;Total ram usage:        5 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_MCAL_GPIO_init
  4189 ;;		_HALL_LCD_8bit_sendCMD
  4190 ;;		_HALL_LCD_8bit_sendChar
  4191 ;;		_LCD_sendEnableSignal8Bits
  4192 ;;		_HALL_DC_MOTOR_right
  4193 ;;		_HALL_DC_MOTOR_left
  4194 ;;		_HALL_DC_MOTOR_stop
  4195 ;;		_HALL_Led_trunON
  4196 ;;		_HALL_Led_trunOFF
  4197 ;;		_HALL_Relay_turnON
  4198 ;;		_HALL_Relay_turnOFF
  4199 ;;		_HALL_SEVEN_SEGEMENT_writeNumber
  4200 ;;		_HALL_KeyPad_getValue
  4201 ;;		_HALL_LCD_4bit_sendCMD
  4202 ;;		_HALL_LCD_4bit_sendChar
  4203 ;;		_LCD_send4Bits
  4204 ;;		_LCD_sendEnableSignal4Bits
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text18
  4209   001308                     __ptext18:
  4210                           	callstack 0
  4211   001308                     _MCAL_GPIO_writePinStatus:
  4212                           	callstack 28
  4213   001308                     
  4214                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 118:     uint8_t retVal = (Std_Return)1;
  4215   001308  0E01               	movlw	1
  4216   00130A  6E05               	movwf	MCAL_GPIO_writePinStatus@retVal^0,c
  4217                           
  4218                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 119:     if(copyPinCFG == ((void*)0)) {
  4219   00130C  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4220   00130E  A4D8               	btfss	status,2,c
  4221   001310  EF8C  F009         	goto	u1861
  4222   001314  EF8E  F009         	goto	u1860
  4223   001318                     u1861:
  4224   001318  EFDB  F00A         	goto	l2748
  4225   00131C                     u1860:
  4226   00131C                     l2704:
  4227                           
  4228                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 120:         retVal = (Std_Return)0;
  4229   00131C  6A05               	clrf	MCAL_GPIO_writePinStatus@retVal^0,c
  4230                           
  4231                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 121:     }
  4232   00131E  EFF6  F00A         	goto	l2750
  4233   001322                     l2706:
  4234                           
  4235                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 127:                         LATA |= (1 << copyPinCFG-
      +                          >Pin);
  4236   001322  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4237   001324  6ED9               	movwf	fsr2l,c
  4238   001326  6ADA               	clrf	fsr2h,c
  4239   001328  30DF               	rrcf	223,w,c
  4240   00132A  32E8               	rrcf	wreg,f,c
  4241   00132C  32E8               	rrcf	wreg,f,c
  4242   00132E  0B07               	andlw	7
  4243   001330  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4244   001332  0E01               	movlw	1
  4245   001334  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4246   001336  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4247   001338  EFA0  F009         	goto	u1874
  4248   00133C                     u1875:
  4249   00133C  90D8               	bcf	status,0,c
  4250   00133E  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4251   001340                     u1874:
  4252   001340  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4253   001342  EF9E  F009         	goto	u1875
  4254   001346  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4255   001348  1289               	iorwf	137,f,c	;volatile
  4256                           
  4257                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 128:                         break;
  4258   00134A  EFF6  F00A         	goto	l2750
  4259   00134E                     l2708:
  4260                           
  4261                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 130:                         LATA &= ~ (1 << copyPinCF
      +                          G->Pin);
  4262   00134E  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4263   001350  6ED9               	movwf	fsr2l,c
  4264   001352  6ADA               	clrf	fsr2h,c
  4265   001354  30DF               	rrcf	223,w,c
  4266   001356  32E8               	rrcf	wreg,f,c
  4267   001358  32E8               	rrcf	wreg,f,c
  4268   00135A  0B07               	andlw	7
  4269   00135C  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4270   00135E  0E01               	movlw	1
  4271   001360  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4272   001362  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4273   001364  EFB6  F009         	goto	u1884
  4274   001368                     u1885:
  4275   001368  90D8               	bcf	status,0,c
  4276   00136A  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4277   00136C                     u1884:
  4278   00136C  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4279   00136E  EFB4  F009         	goto	u1885
  4280   001372  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4281   001374  0AFF               	xorlw	255
  4282   001376  1689               	andwf	137,f,c	;volatile
  4283                           
  4284                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 131:                         break;
  4285   001378  EFF6  F00A         	goto	l2750
  4286   00137C                     l2712:
  4287   00137C  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4288   00137E  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4289   001380  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4290                           
  4291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4292                           ; Switch size 1, requested type "simple"
  4293                           ; Number of cases is 1, Range of values is 0 to 0
  4294                           ; switch strategies available:
  4295                           ; Name         Instructions Cycles
  4296                           ; simple_byte            4     3 (average)
  4297                           ;	Chosen strategy is simple_byte
  4298   001382  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4299   001384  0A00               	xorlw	0	; case 0
  4300   001386  B4D8               	btfsc	status,2,c
  4301   001388  EFC8  F009         	goto	l3652
  4302   00138C  EF8E  F009         	goto	l2704
  4303   001390                     l3652:
  4304                           
  4305                           ; Switch size 1, requested type "simple"
  4306                           ; Number of cases is 2, Range of values is 0 to 1
  4307                           ; switch strategies available:
  4308                           ; Name         Instructions Cycles
  4309                           ; simple_byte            7     4 (average)
  4310                           ;	Chosen strategy is simple_byte
  4311   001390  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4312   001392  0A00               	xorlw	0	; case 0
  4313   001394  B4D8               	btfsc	status,2,c
  4314   001396  EFA7  F009         	goto	l2708
  4315   00139A  0A01               	xorlw	1	; case 1
  4316   00139C  B4D8               	btfsc	status,2,c
  4317   00139E  EF91  F009         	goto	l2706
  4318   0013A2  EF8E  F009         	goto	l2704
  4319   0013A6                     l2714:
  4320                           
  4321                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 141:                         LATB |= (1 << copyPinCFG-
      +                          >Pin);
  4322   0013A6  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4323   0013A8  6ED9               	movwf	fsr2l,c
  4324   0013AA  6ADA               	clrf	fsr2h,c
  4325   0013AC  30DF               	rrcf	223,w,c
  4326   0013AE  32E8               	rrcf	wreg,f,c
  4327   0013B0  32E8               	rrcf	wreg,f,c
  4328   0013B2  0B07               	andlw	7
  4329   0013B4  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4330   0013B6  0E01               	movlw	1
  4331   0013B8  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4332   0013BA  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4333   0013BC  EFE2  F009         	goto	u1894
  4334   0013C0                     u1895:
  4335   0013C0  90D8               	bcf	status,0,c
  4336   0013C2  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4337   0013C4                     u1894:
  4338   0013C4  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4339   0013C6  EFE0  F009         	goto	u1895
  4340   0013CA  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4341   0013CC  128A               	iorwf	138,f,c	;volatile
  4342                           
  4343                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 142:                         break;
  4344   0013CE  EFF6  F00A         	goto	l2750
  4345   0013D2                     l2716:
  4346                           
  4347                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 144:                         LATB &= ~ (1 << copyPinCF
      +                          G->Pin);
  4348   0013D2  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4349   0013D4  6ED9               	movwf	fsr2l,c
  4350   0013D6  6ADA               	clrf	fsr2h,c
  4351   0013D8  30DF               	rrcf	223,w,c
  4352   0013DA  32E8               	rrcf	wreg,f,c
  4353   0013DC  32E8               	rrcf	wreg,f,c
  4354   0013DE  0B07               	andlw	7
  4355   0013E0  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4356   0013E2  0E01               	movlw	1
  4357   0013E4  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4358   0013E6  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4359   0013E8  EFF8  F009         	goto	u1904
  4360   0013EC                     u1905:
  4361   0013EC  90D8               	bcf	status,0,c
  4362   0013EE  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4363   0013F0                     u1904:
  4364   0013F0  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4365   0013F2  EFF6  F009         	goto	u1905
  4366   0013F6  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4367   0013F8  0AFF               	xorlw	255
  4368   0013FA  168A               	andwf	138,f,c	;volatile
  4369                           
  4370                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 145:                         break;
  4371   0013FC  EFF6  F00A         	goto	l2750
  4372   001400                     l2720:
  4373   001400  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4374   001402  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4375   001404  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4376                           
  4377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4378                           ; Switch size 1, requested type "simple"
  4379                           ; Number of cases is 1, Range of values is 0 to 0
  4380                           ; switch strategies available:
  4381                           ; Name         Instructions Cycles
  4382                           ; simple_byte            4     3 (average)
  4383                           ;	Chosen strategy is simple_byte
  4384   001406  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4385   001408  0A00               	xorlw	0	; case 0
  4386   00140A  B4D8               	btfsc	status,2,c
  4387   00140C  EF0A  F00A         	goto	l3654
  4388   001410  EF8E  F009         	goto	l2704
  4389   001414                     l3654:
  4390                           
  4391                           ; Switch size 1, requested type "simple"
  4392                           ; Number of cases is 2, Range of values is 0 to 1
  4393                           ; switch strategies available:
  4394                           ; Name         Instructions Cycles
  4395                           ; simple_byte            7     4 (average)
  4396                           ;	Chosen strategy is simple_byte
  4397   001414  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4398   001416  0A00               	xorlw	0	; case 0
  4399   001418  B4D8               	btfsc	status,2,c
  4400   00141A  EFE9  F009         	goto	l2716
  4401   00141E  0A01               	xorlw	1	; case 1
  4402   001420  B4D8               	btfsc	status,2,c
  4403   001422  EFD3  F009         	goto	l2714
  4404   001426  EF8E  F009         	goto	l2704
  4405   00142A                     l2722:
  4406                           
  4407                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 155:                         LATC |= (1 << copyPinCFG-
      +                          >Pin);
  4408   00142A  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4409   00142C  6ED9               	movwf	fsr2l,c
  4410   00142E  6ADA               	clrf	fsr2h,c
  4411   001430  30DF               	rrcf	223,w,c
  4412   001432  32E8               	rrcf	wreg,f,c
  4413   001434  32E8               	rrcf	wreg,f,c
  4414   001436  0B07               	andlw	7
  4415   001438  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4416   00143A  0E01               	movlw	1
  4417   00143C  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4418   00143E  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4419   001440  EF24  F00A         	goto	u1914
  4420   001444                     u1915:
  4421   001444  90D8               	bcf	status,0,c
  4422   001446  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4423   001448                     u1914:
  4424   001448  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4425   00144A  EF22  F00A         	goto	u1915
  4426   00144E  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4427   001450  128B               	iorwf	139,f,c	;volatile
  4428                           
  4429                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 156:                         break;
  4430   001452  EFF6  F00A         	goto	l2750
  4431   001456                     l2724:
  4432                           
  4433                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 158:                         LATC &= ~ (1 << copyPinCF
      +                          G->Pin);
  4434   001456  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4435   001458  6ED9               	movwf	fsr2l,c
  4436   00145A  6ADA               	clrf	fsr2h,c
  4437   00145C  30DF               	rrcf	223,w,c
  4438   00145E  32E8               	rrcf	wreg,f,c
  4439   001460  32E8               	rrcf	wreg,f,c
  4440   001462  0B07               	andlw	7
  4441   001464  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4442   001466  0E01               	movlw	1
  4443   001468  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4444   00146A  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4445   00146C  EF3A  F00A         	goto	u1924
  4446   001470                     u1925:
  4447   001470  90D8               	bcf	status,0,c
  4448   001472  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4449   001474                     u1924:
  4450   001474  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4451   001476  EF38  F00A         	goto	u1925
  4452   00147A  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4453   00147C  0AFF               	xorlw	255
  4454   00147E  168B               	andwf	139,f,c	;volatile
  4455                           
  4456                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 159:                         break;
  4457   001480  EFF6  F00A         	goto	l2750
  4458   001484                     l2728:
  4459   001484  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4460   001486  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4461   001488  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4462                           
  4463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4464                           ; Switch size 1, requested type "simple"
  4465                           ; Number of cases is 1, Range of values is 0 to 0
  4466                           ; switch strategies available:
  4467                           ; Name         Instructions Cycles
  4468                           ; simple_byte            4     3 (average)
  4469                           ;	Chosen strategy is simple_byte
  4470   00148A  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4471   00148C  0A00               	xorlw	0	; case 0
  4472   00148E  B4D8               	btfsc	status,2,c
  4473   001490  EF4C  F00A         	goto	l3656
  4474   001494  EF8E  F009         	goto	l2704
  4475   001498                     l3656:
  4476                           
  4477                           ; Switch size 1, requested type "simple"
  4478                           ; Number of cases is 2, Range of values is 0 to 1
  4479                           ; switch strategies available:
  4480                           ; Name         Instructions Cycles
  4481                           ; simple_byte            7     4 (average)
  4482                           ;	Chosen strategy is simple_byte
  4483   001498  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4484   00149A  0A00               	xorlw	0	; case 0
  4485   00149C  B4D8               	btfsc	status,2,c
  4486   00149E  EF2B  F00A         	goto	l2724
  4487   0014A2  0A01               	xorlw	1	; case 1
  4488   0014A4  B4D8               	btfsc	status,2,c
  4489   0014A6  EF15  F00A         	goto	l2722
  4490   0014AA  EF8E  F009         	goto	l2704
  4491   0014AE                     l2730:
  4492                           
  4493                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 170:                         LATD |= (1 << copyPinCFG-
      +                          >Pin);
  4494   0014AE  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4495   0014B0  6ED9               	movwf	fsr2l,c
  4496   0014B2  6ADA               	clrf	fsr2h,c
  4497   0014B4  30DF               	rrcf	223,w,c
  4498   0014B6  32E8               	rrcf	wreg,f,c
  4499   0014B8  32E8               	rrcf	wreg,f,c
  4500   0014BA  0B07               	andlw	7
  4501   0014BC  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4502   0014BE  0E01               	movlw	1
  4503   0014C0  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4504   0014C2  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4505   0014C4  EF66  F00A         	goto	u1934
  4506   0014C8                     u1935:
  4507   0014C8  90D8               	bcf	status,0,c
  4508   0014CA  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4509   0014CC                     u1934:
  4510   0014CC  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4511   0014CE  EF64  F00A         	goto	u1935
  4512   0014D2  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4513   0014D4  128C               	iorwf	140,f,c	;volatile
  4514                           
  4515                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 171:                         break;
  4516   0014D6  EFF6  F00A         	goto	l2750
  4517   0014DA                     l2732:
  4518                           
  4519                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 173:                         LATD &= ~ (1 << copyPinCF
      +                          G->Pin);
  4520   0014DA  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4521   0014DC  6ED9               	movwf	fsr2l,c
  4522   0014DE  6ADA               	clrf	fsr2h,c
  4523   0014E0  30DF               	rrcf	223,w,c
  4524   0014E2  32E8               	rrcf	wreg,f,c
  4525   0014E4  32E8               	rrcf	wreg,f,c
  4526   0014E6  0B07               	andlw	7
  4527   0014E8  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4528   0014EA  0E01               	movlw	1
  4529   0014EC  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4530   0014EE  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4531   0014F0  EF7C  F00A         	goto	u1944
  4532   0014F4                     u1945:
  4533   0014F4  90D8               	bcf	status,0,c
  4534   0014F6  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4535   0014F8                     u1944:
  4536   0014F8  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4537   0014FA  EF7A  F00A         	goto	u1945
  4538   0014FE  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4539   001500  0AFF               	xorlw	255
  4540   001502  168C               	andwf	140,f,c	;volatile
  4541                           
  4542                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 174:                         break;
  4543   001504  EFF6  F00A         	goto	l2750
  4544   001508                     l2736:
  4545   001508  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4546   00150A  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4547   00150C  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4548                           
  4549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4550                           ; Switch size 1, requested type "simple"
  4551                           ; Number of cases is 1, Range of values is 0 to 0
  4552                           ; switch strategies available:
  4553                           ; Name         Instructions Cycles
  4554                           ; simple_byte            4     3 (average)
  4555                           ;	Chosen strategy is simple_byte
  4556   00150E  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4557   001510  0A00               	xorlw	0	; case 0
  4558   001512  B4D8               	btfsc	status,2,c
  4559   001514  EF8E  F00A         	goto	l3658
  4560   001518  EF8E  F009         	goto	l2704
  4561   00151C                     l3658:
  4562                           
  4563                           ; Switch size 1, requested type "simple"
  4564                           ; Number of cases is 2, Range of values is 0 to 1
  4565                           ; switch strategies available:
  4566                           ; Name         Instructions Cycles
  4567                           ; simple_byte            7     4 (average)
  4568                           ;	Chosen strategy is simple_byte
  4569   00151C  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4570   00151E  0A00               	xorlw	0	; case 0
  4571   001520  B4D8               	btfsc	status,2,c
  4572   001522  EF6D  F00A         	goto	l2732
  4573   001526  0A01               	xorlw	1	; case 1
  4574   001528  B4D8               	btfsc	status,2,c
  4575   00152A  EF57  F00A         	goto	l2730
  4576   00152E  EF8E  F009         	goto	l2704
  4577   001532                     l2738:
  4578                           
  4579                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 185:                         LATE |= (1 << copyPinCFG-
      +                          >Pin);
  4580   001532  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4581   001534  6ED9               	movwf	fsr2l,c
  4582   001536  6ADA               	clrf	fsr2h,c
  4583   001538  30DF               	rrcf	223,w,c
  4584   00153A  32E8               	rrcf	wreg,f,c
  4585   00153C  32E8               	rrcf	wreg,f,c
  4586   00153E  0B07               	andlw	7
  4587   001540  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4588   001542  0E01               	movlw	1
  4589   001544  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4590   001546  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4591   001548  EFA8  F00A         	goto	u1954
  4592   00154C                     u1955:
  4593   00154C  90D8               	bcf	status,0,c
  4594   00154E  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4595   001550                     u1954:
  4596   001550  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4597   001552  EFA6  F00A         	goto	u1955
  4598   001556  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4599   001558  128D               	iorwf	141,f,c	;volatile
  4600                           
  4601                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 186:                         break;
  4602   00155A  EFF6  F00A         	goto	l2750
  4603   00155E                     l2740:
  4604                           
  4605                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 188:                         LATE &= ~ (1 << copyPinCF
      +                          G->Pin);
  4606   00155E  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4607   001560  6ED9               	movwf	fsr2l,c
  4608   001562  6ADA               	clrf	fsr2h,c
  4609   001564  30DF               	rrcf	223,w,c
  4610   001566  32E8               	rrcf	wreg,f,c
  4611   001568  32E8               	rrcf	wreg,f,c
  4612   00156A  0B07               	andlw	7
  4613   00156C  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4614   00156E  0E01               	movlw	1
  4615   001570  6E04               	movwf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4616   001572  2A03               	incf	??_MCAL_GPIO_writePinStatus^0,f,c
  4617   001574  EFBE  F00A         	goto	u1964
  4618   001578                     u1965:
  4619   001578  90D8               	bcf	status,0,c
  4620   00157A  3604               	rlcf	(??_MCAL_GPIO_writePinStatus+1)^0,f,c
  4621   00157C                     u1964:
  4622   00157C  2E03               	decfsz	??_MCAL_GPIO_writePinStatus^0,f,c
  4623   00157E  EFBC  F00A         	goto	u1965
  4624   001582  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4625   001584  0AFF               	xorlw	255
  4626   001586  168D               	andwf	141,f,c	;volatile
  4627                           
  4628                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 189:                         break;
  4629   001588  EFF6  F00A         	goto	l2750
  4630   00158C                     l2744:
  4631   00158C  5002               	movf	MCAL_GPIO_writePinStatus@copyStatusPin^0,w,c
  4632   00158E  6E03               	movwf	??_MCAL_GPIO_writePinStatus^0,c
  4633   001590  6A04               	clrf	(??_MCAL_GPIO_writePinStatus+1)^0,c
  4634                           
  4635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4636                           ; Switch size 1, requested type "simple"
  4637                           ; Number of cases is 1, Range of values is 0 to 0
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte            4     3 (average)
  4641                           ;	Chosen strategy is simple_byte
  4642   001592  5004               	movf	(??_MCAL_GPIO_writePinStatus+1)^0,w,c
  4643   001594  0A00               	xorlw	0	; case 0
  4644   001596  B4D8               	btfsc	status,2,c
  4645   001598  EFD0  F00A         	goto	l3660
  4646   00159C  EF8E  F009         	goto	l2704
  4647   0015A0                     l3660:
  4648                           
  4649                           ; Switch size 1, requested type "simple"
  4650                           ; Number of cases is 2, Range of values is 0 to 1
  4651                           ; switch strategies available:
  4652                           ; Name         Instructions Cycles
  4653                           ; simple_byte            7     4 (average)
  4654                           ;	Chosen strategy is simple_byte
  4655   0015A0  5003               	movf	??_MCAL_GPIO_writePinStatus^0,w,c
  4656   0015A2  0A00               	xorlw	0	; case 0
  4657   0015A4  B4D8               	btfsc	status,2,c
  4658   0015A6  EFAF  F00A         	goto	l2740
  4659   0015AA  0A01               	xorlw	1	; case 1
  4660   0015AC  B4D8               	btfsc	status,2,c
  4661   0015AE  EF99  F00A         	goto	l2738
  4662   0015B2  EF8E  F009         	goto	l2704
  4663   0015B6                     l2748:
  4664   0015B6  5001               	movf	MCAL_GPIO_writePinStatus@copyPinCFG^0,w,c
  4665   0015B8  6ED9               	movwf	fsr2l,c
  4666   0015BA  6ADA               	clrf	fsr2h,c
  4667   0015BC  50DF               	movf	223,w,c
  4668   0015BE  0B07               	andlw	7
  4669                           
  4670                           ; Switch size 1, requested type "simple"
  4671                           ; Number of cases is 5, Range of values is 0 to 4
  4672                           ; switch strategies available:
  4673                           ; Name         Instructions Cycles
  4674                           ; simple_byte           16     9 (average)
  4675                           ;	Chosen strategy is simple_byte
  4676   0015C0  0A00               	xorlw	0	; case 0
  4677   0015C2  B4D8               	btfsc	status,2,c
  4678   0015C4  EFBE  F009         	goto	l2712
  4679   0015C8  0A01               	xorlw	1	; case 1
  4680   0015CA  B4D8               	btfsc	status,2,c
  4681   0015CC  EF00  F00A         	goto	l2720
  4682   0015D0  0A03               	xorlw	3	; case 2
  4683   0015D2  B4D8               	btfsc	status,2,c
  4684   0015D4  EF42  F00A         	goto	l2728
  4685   0015D8  0A01               	xorlw	1	; case 3
  4686   0015DA  B4D8               	btfsc	status,2,c
  4687   0015DC  EF84  F00A         	goto	l2736
  4688   0015E0  0A07               	xorlw	7	; case 4
  4689   0015E2  B4D8               	btfsc	status,2,c
  4690   0015E4  EFC6  F00A         	goto	l2744
  4691   0015E8  EF8E  F009         	goto	l2704
  4692   0015EC                     l2750:
  4693                           
  4694                           ;Mcal/Mcal_GPIO/Mcal_GPIO_prog.c: 200:     return retVal;
  4695   0015EC  5005               	movf	MCAL_GPIO_writePinStatus@retVal^0,w,c
  4696   0015EE  0012               	return		;funcret
  4697   0015F0                     __end_of_MCAL_GPIO_writePinStatus:
  4698                           	callstack 0
  4699                           
  4700                           	psect	rparam
  4701   000001                     ___rparam_used  equ	1
  4702   000000                     ___param_bank   equ	0
  4703   000000                     __Lparam        equ	__Lrparam
  4704   000000                     __Hparam        equ	__Hrparam
  4705                           
  4706                           	psect	config
  4707                           
  4708                           ; Padding undefined space
  4709   300000                     	org	3145728
  4710   300000  FF                 	db	255
  4711                           
  4712                           ;Config register CONFIG1H @ 0x300001
  4713                           ;	Oscillator Selection bits
  4714                           ;	OSC = HS, HS oscillator
  4715                           ;	Fail-Safe Clock Monitor Enable bit
  4716                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4717                           ;	Internal/External Oscillator Switchover bit
  4718                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4719   300001                     	org	3145729
  4720   300001  02                 	db	2
  4721                           
  4722                           ;Config register CONFIG2L @ 0x300002
  4723                           ;	Power-up Timer Enable bit
  4724                           ;	PWRT = OFF, PWRT disabled
  4725                           ;	Brown-out Reset Enable bits
  4726                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4727                           ;	Brown Out Reset Voltage bits
  4728                           ;	BORV = 1, 
  4729   300002                     	org	3145730
  4730   300002  09                 	db	9
  4731                           
  4732                           ;Config register CONFIG2H @ 0x300003
  4733                           ;	Watchdog Timer Enable bit
  4734                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4735                           ;	Watchdog Timer Postscale Select bits
  4736                           ;	WDTPS = 32768, 1:32768
  4737   300003                     	org	3145731
  4738   300003  1E                 	db	30
  4739                           
  4740                           ; Padding undefined space
  4741   300004                     	org	3145732
  4742   300004  FF                 	db	255
  4743                           
  4744                           ;Config register CONFIG3H @ 0x300005
  4745                           ;	CCP2 MUX bit
  4746                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4747                           ;	PORTB A/D Enable bit
  4748                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4749                           ;	Low-Power Timer1 Oscillator Enable bit
  4750                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4751                           ;	MCLR Pin Enable bit
  4752                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4753   300005                     	org	3145733
  4754   300005  81                 	db	129
  4755                           
  4756                           ;Config register CONFIG4L @ 0x300006
  4757                           ;	Stack Full/Underflow Reset Enable bit
  4758                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4759                           ;	Single-Supply ICSP Enable bit
  4760                           ;	LVP = OFF, Single-Supply ICSP disabled
  4761                           ;	Extended Instruction Set Enable bit
  4762                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4763                           ;	Background Debugger Enable bit
  4764                           ;	DEBUG = 0x1, unprogrammed default
  4765   300006                     	org	3145734
  4766   300006  81                 	db	129
  4767                           
  4768                           ; Padding undefined space
  4769   300007                     	org	3145735
  4770   300007  FF                 	db	255
  4771                           
  4772                           ;Config register CONFIG5L @ 0x300008
  4773                           ;	Code Protection bit
  4774                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4775                           ;	Code Protection bit
  4776                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4777                           ;	Code Protection bit
  4778                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4779                           ;	Code Protection bit
  4780                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4781   300008                     	org	3145736
  4782   300008  0F                 	db	15
  4783                           
  4784                           ;Config register CONFIG5H @ 0x300009
  4785                           ;	Boot Block Code Protection bit
  4786                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4787                           ;	Data EEPROM Code Protection bit
  4788                           ;	CPD = OFF, Data EEPROM not code-protected
  4789   300009                     	org	3145737
  4790   300009  C0                 	db	192
  4791                           
  4792                           ;Config register CONFIG6L @ 0x30000A
  4793                           ;	Write Protection bit
  4794                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4795                           ;	Write Protection bit
  4796                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4797                           ;	Write Protection bit
  4798                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4799                           ;	Write Protection bit
  4800                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4801   30000A                     	org	3145738
  4802   30000A  0F                 	db	15
  4803                           
  4804                           ;Config register CONFIG6H @ 0x30000B
  4805                           ;	Configuration Register Write Protection bit
  4806                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4807                           ;	Boot Block Write Protection bit
  4808                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4809                           ;	Data EEPROM Write Protection bit
  4810                           ;	WRTD = OFF, Data EEPROM not write-protected
  4811   30000B                     	org	3145739
  4812   30000B  E0                 	db	224
  4813                           
  4814                           ;Config register CONFIG7L @ 0x30000C
  4815                           ;	Table Read Protection bit
  4816                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4817                           ;	Table Read Protection bit
  4818                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4819                           ;	Table Read Protection bit
  4820                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4821                           ;	Table Read Protection bit
  4822                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4823   30000C                     	org	3145740
  4824   30000C  0F                 	db	15
  4825                           
  4826                           ;Config register CONFIG7H @ 0x30000D
  4827                           ;	Boot Block Table Read Protection bit
  4828                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4829   30000D                     	org	3145741
  4830   30000D  40                 	db	64
  4831                           tosu	equ	0xFFF
  4832                           tosh	equ	0xFFE
  4833                           tosl	equ	0xFFD
  4834                           stkptr	equ	0xFFC
  4835                           pclatu	equ	0xFFB
  4836                           pclath	equ	0xFFA
  4837                           pcl	equ	0xFF9
  4838                           tblptru	equ	0xFF8
  4839                           tblptrh	equ	0xFF7
  4840                           tblptrl	equ	0xFF6
  4841                           tablat	equ	0xFF5
  4842                           prodh	equ	0xFF4
  4843                           prodl	equ	0xFF3
  4844                           indf0	equ	0xFEF
  4845                           postinc0	equ	0xFEE
  4846                           postdec0	equ	0xFED
  4847                           preinc0	equ	0xFEC
  4848                           plusw0	equ	0xFEB
  4849                           fsr0h	equ	0xFEA
  4850                           fsr0l	equ	0xFE9
  4851                           wreg	equ	0xFE8
  4852                           indf1	equ	0xFE7
  4853                           postinc1	equ	0xFE6
  4854                           postdec1	equ	0xFE5
  4855                           preinc1	equ	0xFE4
  4856                           plusw1	equ	0xFE3
  4857                           fsr1h	equ	0xFE2
  4858                           fsr1l	equ	0xFE1
  4859                           bsr	equ	0xFE0
  4860                           indf2	equ	0xFDF
  4861                           postinc2	equ	0xFDE
  4862                           postdec2	equ	0xFDD
  4863                           preinc2	equ	0xFDC
  4864                           plusw2	equ	0xFDB
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        37
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45     104
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    HALL_LCD_8bit_init@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendChar@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendCMD@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_8bit_sendSTR@copyData	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    HALL_LCD_8bit_sendSTR@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    HALL_LCD_convertU8toSTR@copySTR	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    LCD_sendEnableSignal8Bits@copyLCD	PTR const struct . size(1) Largest target is 10
		 -> LCD1_8Bit(COMRAM[10]), 

    MCAL_GPIO_init@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), LCD1_8Bit$LCD_D(COMRAM[8]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    Mcal_GPIO_initPinDirection@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_BTN_init@copyBTN(COMRAM[2]), HALL_Led_init@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), 
		 -> LCD1_8Bit$LCD_D(COMRAM[8]), objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    MCAL_GPIO_writePinStatus@copyPinCFG	PTR const struct . size(1) Largest target is 10
		 -> HALL_Led_init@objLed(COMRAM[1]), HALL_Led_trunOFF@objLed(COMRAM[1]), HALL_Led_trunON@objLed(COMRAM[1]), HALL_Relay_init@objPin(COMRAM[1]), 
		 -> HALL_Relay_turnOFF@objPin(COMRAM[1]), HALL_Relay_turnON@objPin(COMRAM[1]), LCD1_8Bit(COMRAM[10]), LCD1_8Bit$LCD_D(COMRAM[8]), 
		 -> objPin_motor_1(COMRAM[1]), objPin_motor_2(COMRAM[1]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    RetValue_BTN	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    RetValue_KeyPad	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1338$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    S1338$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> NumArr(COMRAM[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_HALL_LCD_convertU8toSTR
    _HALL_LCD_convertU8toSTR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _HALL_LCD_8bit_sendSTR->_HALL_LCD_8bit_sendChar
    _HALL_LCD_8bit_sendChar->_LCD_sendEnableSignal8Bits
    _HALL_LCD_8bit_init->_HALL_LCD_8bit_sendCMD
    _MCAL_GPIO_init->_MCAL_GPIO_writePinStatus
    _HALL_LCD_8bit_sendCMD->_LCD_sendEnableSignal8Bits
    _LCD_sendEnableSignal8Bits->_MCAL_GPIO_writePinStatus

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5839
                 _HALL_LCD_8bit_init
              _HALL_LCD_8bit_sendSTR
            _HALL_LCD_convertU8toSTR
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_convertU8toSTR                              3     2      1    1974
                                             43 COMRAM     2     1      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6    1764
                                             25 COMRAM    18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    1559
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    1434
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     230
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     105
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_8bit_sendSTR                                3     1      2    1300
                                             11 COMRAM     2     0      2
             _HALL_LCD_8bit_sendChar
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_8bit_sendChar                               6     4      2    1200
                                              6 COMRAM     5     3      2
          _LCD_sendEnableSignal8Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (1) _HALL_LCD_8bit_init                                   4     3      1    2565
                                             11 COMRAM     3     2      1
              _HALL_LCD_8bit_sendCMD
                     _MCAL_GPIO_init
 ---------------------------------------------------------------------------------
 (2) _MCAL_GPIO_init                                       2     1      1     981
                                              5 COMRAM     2     1      1
           _MCAL_GPIO_writePinStatus
         _Mcal_GPIO_initPinDirection
 ---------------------------------------------------------------------------------
 (3) _Mcal_GPIO_initPinDirection                           4     3      1     402
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _HALL_LCD_8bit_sendCMD                                6     4      2    1220
                                              6 COMRAM     5     3      2
          _LCD_sendEnableSignal8Bits
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _LCD_sendEnableSignal8Bits                            2     1      1     519
                                              5 COMRAM     1     0      1
           _MCAL_GPIO_writePinStatus
 ---------------------------------------------------------------------------------
 (3) _MCAL_GPIO_writePinStatus                             5     3      2     466
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HALL_LCD_8bit_init
     _HALL_LCD_8bit_sendCMD
       _LCD_sendEnableSignal8Bits
         _MCAL_GPIO_writePinStatus
       _MCAL_GPIO_writePinStatus
     _MCAL_GPIO_init
       _MCAL_GPIO_writePinStatus
       _Mcal_GPIO_initPinDirection
   _HALL_LCD_8bit_sendSTR
     _HALL_LCD_8bit_sendChar
       _LCD_sendEnableSignal8Bits
       _MCAL_GPIO_writePinStatus
   _HALL_LCD_convertU8toSTR
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0      32     25.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     45     104     81.9%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRl           4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     136      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Oct 24 01:40:56 2024

                     ??_MCAL_GPIO_init 0007                                     l33 1D5A  
                                   l34 1D5A                           ___awdiv@sign 0006  
                                  l210 1306                                    l261 15EE  
                                  l522 1B00                                    l515 1B68  
                                  l508 187E                                    l294 1CA2  
                                  l535 1C2C                                    l560 1BEC  
                                  l813 1940                                    l826 19EE  
                                  l579 1DA6                                    _Num 0048  
                                  _abs 1CD8                           ___awmod@sign 0006  
                                  wreg 0FE8           HALL_LCD_8bit_sendCMD@Counter 000B  
                                 ?_abs 0007                                   l1310 1C6A  
                                 l3000 1808                                   l1304 17A6  
                                 l3010 184E                                   l3002 1824  
                                 l1314 1CF2                                   l3012 185A  
                                 l3004 182A                                   l1340 1DA8  
                                 l1317 1D0A                                   l3014 1866  
                                 l3006 1836                                   l3030 1BDA  
                                 l3022 1BAE                                   l3016 1872  
                                 l3008 1842                                   l3040 1BFE  
                                 l3032 1BEC                                   l3024 1BAE  
                                 l1329 1A98                                   l3018 187E  
                                 l3042 1C02                                   l1266 1CD6  
                                 l3026 1BBE                                   l1259 1D3A  
                                 l3044 1C14                                   l3036 1BEE  
                                 l3028 1BC2                                   l3046 1C16  
                                 l3038 1BEE                                   l3048 1C2C  
                                 l3080 1D4E                                   l2610 1898  
                                 l2620 18BE                                   l2612 189C  
                                 l2604 1880                                   l2700 1CE6  
                                 l3076 1D3C                                   l2702 1308  
                                 l2630 18F4                                   l2622 18D0  
                                 l2614 18AA                                   l2606 1882  
                                 l3078 1D44                                   l2720 1400  
                                 l2712 137C                                   l2704 131C  
                                 l2632 190A                                   l2624 18D8  
                                 l2640 1920                                   l2616 18B2  
                                 l2608 1890                                   l2800 1704  
                                 l2730 14AE                                   l2722 142A  
                                 l2714 13A6                                   l2706 1322  
                                 l2642 1930                                   l2634 1912  
                                 l2626 18E0                                   l2618 18B6  
                                 l2650 1944                                   l2810 1760  
                                 l2802 1714                                   l2740 155E  
                                 l2732 14DA                                   l2724 1456  
                                 l2716 13D2                                   l2708 134E  
                                 l2900 1C80                                   l2644 1938  
                                 l2636 1914                                   l2628 18EE  
                                 l2660 1974                                   l2652 1952  
                                 l2804 1724                                   l2812 1762  
                                 l2750 15EC                                   l2910 1B16  
                                 l2830 105E                                   l2638 191A  
                                 l2670 19BA                                   l2662 1986  
                                 l2654 195A                                   l2806 1734  
                                 l2814 1778                                   l2744 158C  
                                 l2736 1508                                   l2728 1484  
                                 l2920 1B4E                                   l2912 1B22  
                                 l2904 1B02                                   l2824 1016  
                                 l2680 19E6                                   l2672 19C2  
                                 l2664 198E                                   l2656 195E  
                                 l2648 1942                                   l2808 1746  
                                 l2738 1532                                   l2922 1B50  
                                 l2906 1B02                                   l2850 1196  
                                 l2842 1110                                   l2834 108A  
                                 l2826 102A                                   l2930 1A9A  
                                 l2674 19C8                                   l2666 1996  
                                 l2658 196C                                   l2690 1A1A  
                                 l2818 1784                                   l3660 15A0  
                                 l3652 1390                                   l2748 15B6  
                                 l2924 1B60                                   l2908 1B12  
                                 l2860 1248                                   l2852 11C2  
                                 l2844 113C                                   l2836 10B6  
                                 l2828 1030                                   l2932 1A9A  
                                 l2668 19A4                                   l2676 19CE  
                                 l2692 1A36                                   l2684 19F0  
                                 l2780 1626                                   l3654 1414  
                                 l2926 1B68                                   l2918 1B24  
                                 l2862 1276                                   l2854 11F0  
                                 l2846 116A                                   l2838 10E4  
                                 l2870 12CE                                   l2950 1AF8  
                                 l2934 1AAA                                   l2678 19DE  
                                 l2694 1A68                                   l2686 1A00  
                                 l2790 1684                                   l2782 162A  
                                 l2774 15F0                                   l3656 1498  
                                 l2880 1D94                                   l2872 1304  
                                 l2952 1B00                                   l2944 1ABC  
                                 l2936 1AAE                                   l2960 1D1E  
                                 l2688 1A10                                   l2792 168E  
                                 l2784 1634                                   l2776 1612  
                                 l3658 151C                                   l2882 1D9A  
                                 l2866 12A2                                   l2858 121C  
                                 l2946 1AE6                                   l2938 1ABA  
                                 l2962 1D20                                   l2698 1CD8  
                                 l2794 16A6                                   l2786 1650  
                                 l2778 161A                                   l2890 1C46  
                                 l2970 1CBC                                   l2876 1D88  
                                 l2980 17B8                                   l2948 1AE8  
                                 l2956 1D0C                                   l2796 16D6  
                                 l2788 166C                                   l2892 1C62  
                                 l2972 1CCC                                   l2964 1CA4  
                                 l2878 1D88                                   l2990 17CE  
                                 l2982 17BC                                   l2958 1D14  
                                 l2798 16F2                                   l2886 1C2E  
                                 l2966 1CAC                                   l2896 1C6C  
                                 l2992 17DA                                   l2984 17CC  
                                 l2976 17A8                                   l2888 1C36  
                                 l2968 1CB4                                   l2898 1C7C  
                                 l2994 17DC                                   l2978 17A8  
                                 l2996 17EC                                   l2998 17FC  
                                 STR_1 1011                                   _BTN1 0041  
                                 u2000 16A2                                   u2001 169C  
                                 u2010 16A4                                   u2100 10A0  
                                 u2020 1704                                   u2101 109A  
                                 u2021 1700                                   u2030 1714  
                                 u2031 1710                                   u2040 1724  
                                 u2041 1720                                   u2130 1126  
                                 u2114 10D4                                   u2106 10A2  
                                 u2050 1734                                   u2131 1120  
                                 u2115 10D0                                   u2051 1730  
                                 u2220 12B8                                   u2204 1266  
                                 u2124 1102                                   u2300 1AF8  
                                 u2060 1774                                   u2221 12B2  
                                 u2205 1262                                   u2125 10FE  
                                 u2301 1AF4                                   u2061 1770  
                                 _LATA 0F89                                   u2214 1294  
                                 u2070 102A                                   u2310 1D3A  
                                 u2230 1C62                                   _LATB 0F8A  
                                 u2215 1290                                   u2071 1026  
                                 u2311 1D36                                   u2231 1C5E  
                                 _LATC 0F8B                                   u2160 11AC  
                                 u2144 115A                                   u2136 1128  
                                 u2240 1C7C                                   u2320 17B8  
                                 _LATD 0F8C                                   u2161 11A6  
                                 u2145 1156                                   u2241 1C78  
                                 u2321 17B4                                   _LATE 0F8D  
                                 u2250 1B12                                   u2226 12BA  
                                 u2154 1188                                   u2330 17EC  
                                 u2251 1B0E                                   u2155 1184  
                                 u2331 17E8                                   u2084 104E  
                                 u1700 18AA                                   u2340 1BBE  
                                 u2085 104A                                   u1701 18A6  
                                 u2341 1BBA                                   u2270 1B60  
                                 u2190 1232                                   u2174 11E0  
                                 u2166 11AE                                   u2094 107C  
                                 u2350 1BFE                                   u1710 18D0  
                                 u2271 1B5C                                   u2191 122C  
                                 u2175 11DC                                   u2095 1078  
                                 u2351 1BFA                                   u1711 18CC  
                                 u2264 1B3E                                   u2184 120E  
                                 u2280 1AAA                                   u2360 1C2C  
                                 u1720 18EE                                   u1800 19DE  
                                 u2265 1B3A                                   u2185 120A  
                                 u2281 1AA6                                   u2361 1C28  
                                 u1721 18EA                                   u1801 19DA  
                                 u1730 190A                                   u1810 1A00  
                                 u1731 1906                                   u1811 19FC  
                                 u2196 1234                                   u1740 1930  
                                 u1820 1A10                                   u1741 192C  
                                 u1821 1A0C                                   u2294 1AD6  
                                 u1750 1952                                   u1830 1A36  
                                 u2295 1AD2                                   u1751 194E  
                                 u1831 1A32                                   u1904 13F0  
                                 u1760 196C                                   u1840 1A68  
                                 u1905 13EC                                   u1761 1968  
                                 u1841 1A64                                   u1914 1448  
                                 u1690 1890                                   u1770 1986  
                                 u1850 1CE6                                   u1915 1444  
                                 u1691 188C                                   u1771 1982  
                                 u1851 1CE2                                   u1924 1474  
                                 u1860 131C                                   u1780 19A4  
                                 u1925 1470                                   u1861 1318  
                                 u1781 19A0                                   u1934 14CC  
                                 u1790 19BA                                   u1935 14C8  
                                 u1791 19B6                                   u1944 14F8  
                                 u1945 14F4                                   u1954 1550  
                                 u1874 1340                                   u1970 1612  
                                 u1955 154C                                   u1875 133C  
                                 u2907 1826                                   u1971 160E  
                                 u1964 157C                                   u1884 136C  
                                 u1980 1650                                   u1965 1578  
                                 u1885 1368                                   u1981 164C  
                                 u1894 13C4                                   u1990 166C  
                                 u1895 13C0                                   u1991 1668  
                                 u2887 17F2                                   u2897 180E  
                                 _Seg1 003C                                   abs@a 0007  
                                 _dbuf 0080                                   _main 1D3C  
                                 _prec 0055                                   fsr1h 0FE2  
                                 fsr2h 0FDA                                   indf2 0FDF  
                                 fsr1l 0FE1                                   fsr2l 0FD9  
                                 start 0000           HALL_LCD_8bit_sendCMD@copyCMD 0008  
         HALL_LCD_8bit_sendCMD@copyLCD 0007                  _HALL_LCD_8bit_sendCMD 1B02  
                         ___param_bank 0000                  _HALL_LCD_8bit_sendSTR 1BEE  
                                ??_abs 0009                                  ?_main 0001  
                      __end_of___awdiv 1942                        __end_of___awmod 19F0  
                      ___awdiv@divisor 0003                        ___awdiv@counter 0005  
                         vfpfcnvrt@fmt 000C                                  _PORTA 0F80  
                                _PORTB 0F81                                  _PORTC 0F82  
                                _PORTD 0F83                                  _PORTE 0F84  
                                _TRISA 0F92                                  _TRISB 0F93  
                                _TRISC 0F94                                  _TRISD 0F95  
                                _TRISE 0F96             ?_LCD_sendEnableSignal8Bits 0006  
                                _flags 005B                                  _fputc 19F0  
       HALL_LCD_convertU8toSTR@copySTR 002C                                  _width 0053  
                                _putch 1DA8                                  tablat 0FF5  
                                status 0FD8                        __end_of_sprintf 1CD8  
                       _objPin_motor_1 0068                         _objPin_motor_2 0067  
                      __initialization 1B6A                           __end_of_main 1D62  
               _HALL_LCD_8bit_sendChar 1A9A       __end_of_MCAL_GPIO_writePinStatus 15F0  
                               ??_main 002E                          __activetblptr 0002  
    __end_of_LCD_sendEnableSignal8Bits 1DA8                                 ?_fputc 0001  
                     ___awdiv@dividend 0001                                 ?_putch 0001  
                        vfpfcnvrt@done 000F   Mcal_GPIO_initPinDirection@copyPinCFG 0001  
               ?_HALL_LCD_8bit_sendCMD 0007                 ?_HALL_LCD_8bit_sendSTR 000C  
                               _NumArr 0063                                 _Motor1 0046  
                               _Motor2 0044                           vfprintf@cfmt 0019  
     HALL_LCD_convertU8toSTR@copyValue 002D                              ??___awdiv 0005  
                            ??___awmod 0005                                 _memset 1D0C  
                               clear_0 1B90                                 clear_1 1B9C  
                     ___awdiv@quotient 0007                        ___awmod@divisor 0003  
                               isa$std 0001                        ___awmod@counter 0005  
         ??_Mcal_GPIO_initPinDirection 0002                _HALL_LCD_convertU8toSTR 1BAC  
                               fputc@c 0001                           __pdataCOMRAM 002E  
              HALL_Relay_turnOFF@F3064 005C                           __mediumconst 0000  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                                 putch@c 0001  
                     __end_of_vfprintf 1C6C                              ??_sprintf 0020  
                           __accesstop 0080                __end_of__initialization 1BA2  
                        ___rparam_used 0001                         __pcstackCOMRAM 0001  
                        __end_of_fputc 1A9A                          __end_of_putch 1DAA  
             _MCAL_GPIO_writePinStatus 1308                                ??_fputc 0004  
                              ??_putch 0001                             __pbssBANK0 0080  
MCAL_GPIO_writePinStatus@copyStatusPin 0002     MCAL_GPIO_writePinStatus@copyPinCFG 0001  
                              ?_memset 0001              ??_HALL_LCD_convertU8toSTR 002D  
          ??_LCD_sendEnableSignal8Bits 0007         MCAL_GPIO_writePinStatus@retVal 0005  
                              _KeyPad1 002E                ?_HALL_LCD_8bit_sendChar 0007  
                              __Hparam 0000                                __Lparam 0000  
                    __end_of_btn_Value 1011                                ___awdiv 1880  
                              ___awmod 1942                              _LCD1_4Bit 0036  
                            _LCD1_8Bit 0049                              ?_vfprintf 0016  
                         __psmallconst 1000     __end_of_Mcal_GPIO_initPinDirection 1308  
           _Mcal_GPIO_initPinDirection 1016                                __pcinit 1B6A  
                              __ramtop 1000                                __ptext0 1D3C  
                              __ptext1 1BAC                                __ptext2 1CA4  
                              __ptext3 1C2E                                __ptext4 15F0  
                              __ptext5 19F0                                __ptext6 1DA8  
                              __ptext7 1CD8                                __ptext8 1942  
                              __ptext9 1880                       ___awmod@dividend 0001  
                              _sprintf 1CA4                   end_of_initialization 1BA2  
                 HALL_Led_trunON@F3065 0061                                fputc@fp 0003  
              ??_HALL_LCD_8bit_sendCMD 0009                                memset@c 0002  
                              memset@n 0004                                memset@p 0006  
                        __Lmediumconst 0000                ??_HALL_LCD_8bit_sendSTR 000E  
         HALL_LCD_8bit_sendSTR@copyLCD 000C         __end_of_HALL_LCD_8bit_sendChar 1B02  
            _LCD_sendEnableSignal8Bits 1D88             __end_of_HALL_LCD_8bit_init 1880  
                    __end_of_vfpfcnvrt 17A8                                postdec1 0FE5  
                              postdec2 0FDD                                postinc0 0FEE  
                              postinc1 0FE6                                postinc2 0FDE  
                     vfpfcnvrt@convarg 0011                             ??_vfprintf 0019  
        HALL_LCD_8bit_sendSTR@copyData 000D          HALL_LCD_8bit_sendChar@Counter 000B  
             HALL_Led_trunToggle@F3075 005F             ??_MCAL_GPIO_writePinStatus 0003  
                          vfpfcnvrt@ap 000D                            vfpfcnvrt@cp 0010  
                          vfpfcnvrt@fp 000B          HALL_LCD_8bit_sendChar@copyLCD 0007  
                        __pidataCOMRAM 1D62                         __end_of_memset 1D3C  
     Mcal_GPIO_initPinDirection@retVal 0004                    start_initialization 1B6A  
                          __end_of_abs 1D0C                        _RetValue_KeyPad 0059  
                          vfprintf@fmt 0017                               ??_memset 0006  
                           memset@dest 0001                 HALL_Relay_turnON@F3059 005D  
                       _MCAL_GPIO_init 1C6C                            __pbssCOMRAM 0053  
                             ?___awdiv 0001                               ?___awmod 0001  
                            _btn_Value 1001            ?_Mcal_GPIO_initPinDirection 0001  
               __end_of_MCAL_GPIO_init 1CA4         HALL_LCD_8bit_sendChar@copyData 0008  
                          __smallconst 1000                           _RetValue_BTN 0057  
                             ?_sprintf 001A       LCD_sendEnableSignal8Bits@copyLCD 0006  
        __end_of_HALL_LCD_8bit_sendCMD 1B6A          __end_of_HALL_LCD_8bit_sendSTR 1C2E  
             ?_HALL_LCD_convertU8toSTR 002C                              _vfpfcnvrt 15F0  
                      ?_MCAL_GPIO_init 0006                   HALL_Relay_init@F3054 005E  
                   _HALL_LCD_8bit_init 17A8                             vfpfcnvrt@c 0015  
                  ?_HALL_LCD_8bit_init 000C                              copy_data0 1B7E  
                             __Hrparam 0000                             vfprintf@ap 0018  
                             __Lrparam 0000                             vfprintf@fp 0016  
                 ??_HALL_LCD_8bit_init 000D                   MCAL_GPIO_init@retVal 0007  
                           ?_vfpfcnvrt 000B                             sprintf@fmt 001B  
                             __ptext10 1D0C                               __ptext11 1BEE  
                             __ptext12 1A9A                               __ptext13 17A8  
                             __ptext14 1C6C                               __ptext15 1016  
                             __ptext16 1B02                               __ptext17 1D88  
                             __ptext18 1308        __end_of_HALL_LCD_convertU8toSTR 1BEE  
            HALL_LCD_8bit_init@Counter 000E                               isa$xinst 0000  
                             _vfprintf 1C2E                  HALL_Led_trunOFF@F3070 0060  
            HALL_LCD_8bit_init@copyLCD 000C              ?_MCAL_GPIO_writePinStatus 0001  
             ??_HALL_LCD_8bit_sendChar 0009                              sprintf@ap 0020  
                          ??_vfpfcnvrt 000E               MCAL_GPIO_init@copyPinCFG 0006  
                             sprintf@f 0021                               sprintf@s 001A  
                   HALL_Led_init@F3060 0062  
